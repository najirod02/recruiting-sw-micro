ARM GAS  /tmp/ccACqZav.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/main.c"
  20              		.section	.text.__NVIC_SystemReset,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	__NVIC_SystemReset:
  27              	.LFB121:
  28              		.file 2 "Drivers/CMSIS/Include/core_cm4.h"
   1:Drivers/CMSIS/Include/core_cm4.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/core_cm4.h ****  * @file     core_cm4.h
   3:Drivers/CMSIS/Include/core_cm4.h ****  * @brief    CMSIS Cortex-M4 Core Peripheral Access Layer Header File
   4:Drivers/CMSIS/Include/core_cm4.h ****  * @version  V5.1.2
   5:Drivers/CMSIS/Include/core_cm4.h ****  * @date     04. June 2021
   6:Drivers/CMSIS/Include/core_cm4.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/core_cm4.h **** /*
   8:Drivers/CMSIS/Include/core_cm4.h ****  * Copyright (c) 2009-2020 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/core_cm4.h ****  *
  10:Drivers/CMSIS/Include/core_cm4.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/core_cm4.h ****  *
  12:Drivers/CMSIS/Include/core_cm4.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/core_cm4.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/core_cm4.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/core_cm4.h ****  *
  16:Drivers/CMSIS/Include/core_cm4.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/core_cm4.h ****  *
  18:Drivers/CMSIS/Include/core_cm4.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/core_cm4.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/core_cm4.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/core_cm4.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/core_cm4.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/core_cm4.h ****  */
  24:Drivers/CMSIS/Include/core_cm4.h **** 
  25:Drivers/CMSIS/Include/core_cm4.h **** #if   defined ( __ICCARM__ )
  26:Drivers/CMSIS/Include/core_cm4.h ****   #pragma system_include         /* treat file as system include file for MISRA check */
  27:Drivers/CMSIS/Include/core_cm4.h **** #elif defined (__clang__)
  28:Drivers/CMSIS/Include/core_cm4.h ****   #pragma clang system_header   /* treat file as system include file */
  29:Drivers/CMSIS/Include/core_cm4.h **** #endif
  30:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/ccACqZav.s 			page 2


  31:Drivers/CMSIS/Include/core_cm4.h **** #ifndef __CORE_CM4_H_GENERIC
  32:Drivers/CMSIS/Include/core_cm4.h **** #define __CORE_CM4_H_GENERIC
  33:Drivers/CMSIS/Include/core_cm4.h **** 
  34:Drivers/CMSIS/Include/core_cm4.h **** #include <stdint.h>
  35:Drivers/CMSIS/Include/core_cm4.h **** 
  36:Drivers/CMSIS/Include/core_cm4.h **** #ifdef __cplusplus
  37:Drivers/CMSIS/Include/core_cm4.h ****  extern "C" {
  38:Drivers/CMSIS/Include/core_cm4.h **** #endif
  39:Drivers/CMSIS/Include/core_cm4.h **** 
  40:Drivers/CMSIS/Include/core_cm4.h **** /**
  41:Drivers/CMSIS/Include/core_cm4.h ****   \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  42:Drivers/CMSIS/Include/core_cm4.h ****   CMSIS violates the following MISRA-C:2004 rules:
  43:Drivers/CMSIS/Include/core_cm4.h **** 
  44:Drivers/CMSIS/Include/core_cm4.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  45:Drivers/CMSIS/Include/core_cm4.h ****      Function definitions in header files are used to allow 'inlining'.
  46:Drivers/CMSIS/Include/core_cm4.h **** 
  47:Drivers/CMSIS/Include/core_cm4.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  48:Drivers/CMSIS/Include/core_cm4.h ****      Unions are used for effective representation of core registers.
  49:Drivers/CMSIS/Include/core_cm4.h **** 
  50:Drivers/CMSIS/Include/core_cm4.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  51:Drivers/CMSIS/Include/core_cm4.h ****      Function-like macros are used to allow more efficient code.
  52:Drivers/CMSIS/Include/core_cm4.h ****  */
  53:Drivers/CMSIS/Include/core_cm4.h **** 
  54:Drivers/CMSIS/Include/core_cm4.h **** 
  55:Drivers/CMSIS/Include/core_cm4.h **** /*******************************************************************************
  56:Drivers/CMSIS/Include/core_cm4.h ****  *                 CMSIS definitions
  57:Drivers/CMSIS/Include/core_cm4.h ****  ******************************************************************************/
  58:Drivers/CMSIS/Include/core_cm4.h **** /**
  59:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup Cortex_M4
  60:Drivers/CMSIS/Include/core_cm4.h ****   @{
  61:Drivers/CMSIS/Include/core_cm4.h ****  */
  62:Drivers/CMSIS/Include/core_cm4.h **** 
  63:Drivers/CMSIS/Include/core_cm4.h **** #include "cmsis_version.h"
  64:Drivers/CMSIS/Include/core_cm4.h **** 
  65:Drivers/CMSIS/Include/core_cm4.h **** /* CMSIS CM4 definitions */
  66:Drivers/CMSIS/Include/core_cm4.h **** #define __CM4_CMSIS_VERSION_MAIN  (__CM_CMSIS_VERSION_MAIN)              /*!< \deprecated [31:16] C
  67:Drivers/CMSIS/Include/core_cm4.h **** #define __CM4_CMSIS_VERSION_SUB   (__CM_CMSIS_VERSION_SUB)               /*!< \deprecated [15:0]  C
  68:Drivers/CMSIS/Include/core_cm4.h **** #define __CM4_CMSIS_VERSION       ((__CM4_CMSIS_VERSION_MAIN << 16U) | \
  69:Drivers/CMSIS/Include/core_cm4.h ****                                     __CM4_CMSIS_VERSION_SUB           )  /*!< \deprecated CMSIS HAL
  70:Drivers/CMSIS/Include/core_cm4.h **** 
  71:Drivers/CMSIS/Include/core_cm4.h **** #define __CORTEX_M                (4U)                                   /*!< Cortex-M Core */
  72:Drivers/CMSIS/Include/core_cm4.h **** 
  73:Drivers/CMSIS/Include/core_cm4.h **** /** __FPU_USED indicates whether an FPU is used or not.
  74:Drivers/CMSIS/Include/core_cm4.h ****     For this, __FPU_PRESENT has to be checked prior to making use of FPU specific registers and fun
  75:Drivers/CMSIS/Include/core_cm4.h **** */
  76:Drivers/CMSIS/Include/core_cm4.h **** #if defined ( __CC_ARM )
  77:Drivers/CMSIS/Include/core_cm4.h ****   #if defined __TARGET_FPU_VFP
  78:Drivers/CMSIS/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
  79:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
  80:Drivers/CMSIS/Include/core_cm4.h ****     #else
  81:Drivers/CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
  82:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
  83:Drivers/CMSIS/Include/core_cm4.h ****     #endif
  84:Drivers/CMSIS/Include/core_cm4.h ****   #else
  85:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
  86:Drivers/CMSIS/Include/core_cm4.h ****   #endif
  87:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/ccACqZav.s 			page 3


  88:Drivers/CMSIS/Include/core_cm4.h **** #elif defined (__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  89:Drivers/CMSIS/Include/core_cm4.h ****   #if defined __ARM_FP
  90:Drivers/CMSIS/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
  91:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
  92:Drivers/CMSIS/Include/core_cm4.h ****     #else
  93:Drivers/CMSIS/Include/core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
  94:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
  95:Drivers/CMSIS/Include/core_cm4.h ****     #endif
  96:Drivers/CMSIS/Include/core_cm4.h ****   #else
  97:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
  98:Drivers/CMSIS/Include/core_cm4.h ****   #endif
  99:Drivers/CMSIS/Include/core_cm4.h **** 
 100:Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __GNUC__ )
 101:Drivers/CMSIS/Include/core_cm4.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
 102:Drivers/CMSIS/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 103:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
 104:Drivers/CMSIS/Include/core_cm4.h ****     #else
 105:Drivers/CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 106:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
 107:Drivers/CMSIS/Include/core_cm4.h ****     #endif
 108:Drivers/CMSIS/Include/core_cm4.h ****   #else
 109:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
 110:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 111:Drivers/CMSIS/Include/core_cm4.h **** 
 112:Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __ICCARM__ )
 113:Drivers/CMSIS/Include/core_cm4.h ****   #if defined __ARMVFP__
 114:Drivers/CMSIS/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 115:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
 116:Drivers/CMSIS/Include/core_cm4.h ****     #else
 117:Drivers/CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 118:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
 119:Drivers/CMSIS/Include/core_cm4.h ****     #endif
 120:Drivers/CMSIS/Include/core_cm4.h ****   #else
 121:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
 122:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 123:Drivers/CMSIS/Include/core_cm4.h **** 
 124:Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __TI_ARM__ )
 125:Drivers/CMSIS/Include/core_cm4.h ****   #if defined __TI_VFP_SUPPORT__
 126:Drivers/CMSIS/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 127:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
 128:Drivers/CMSIS/Include/core_cm4.h ****     #else
 129:Drivers/CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 130:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
 131:Drivers/CMSIS/Include/core_cm4.h ****     #endif
 132:Drivers/CMSIS/Include/core_cm4.h ****   #else
 133:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
 134:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 135:Drivers/CMSIS/Include/core_cm4.h **** 
 136:Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __TASKING__ )
 137:Drivers/CMSIS/Include/core_cm4.h ****   #if defined __FPU_VFP__
 138:Drivers/CMSIS/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 139:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
 140:Drivers/CMSIS/Include/core_cm4.h ****     #else
 141:Drivers/CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 142:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
 143:Drivers/CMSIS/Include/core_cm4.h ****     #endif
 144:Drivers/CMSIS/Include/core_cm4.h ****   #else
ARM GAS  /tmp/ccACqZav.s 			page 4


 145:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
 146:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 147:Drivers/CMSIS/Include/core_cm4.h **** 
 148:Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __CSMC__ )
 149:Drivers/CMSIS/Include/core_cm4.h ****   #if ( __CSMC__ & 0x400U)
 150:Drivers/CMSIS/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 151:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
 152:Drivers/CMSIS/Include/core_cm4.h ****     #else
 153:Drivers/CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 154:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
 155:Drivers/CMSIS/Include/core_cm4.h ****     #endif
 156:Drivers/CMSIS/Include/core_cm4.h ****   #else
 157:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
 158:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 159:Drivers/CMSIS/Include/core_cm4.h **** 
 160:Drivers/CMSIS/Include/core_cm4.h **** #endif
 161:Drivers/CMSIS/Include/core_cm4.h **** 
 162:Drivers/CMSIS/Include/core_cm4.h **** #include "cmsis_compiler.h"               /* CMSIS compiler specific defines */
 163:Drivers/CMSIS/Include/core_cm4.h **** 
 164:Drivers/CMSIS/Include/core_cm4.h **** 
 165:Drivers/CMSIS/Include/core_cm4.h **** #ifdef __cplusplus
 166:Drivers/CMSIS/Include/core_cm4.h **** }
 167:Drivers/CMSIS/Include/core_cm4.h **** #endif
 168:Drivers/CMSIS/Include/core_cm4.h **** 
 169:Drivers/CMSIS/Include/core_cm4.h **** #endif /* __CORE_CM4_H_GENERIC */
 170:Drivers/CMSIS/Include/core_cm4.h **** 
 171:Drivers/CMSIS/Include/core_cm4.h **** #ifndef __CMSIS_GENERIC
 172:Drivers/CMSIS/Include/core_cm4.h **** 
 173:Drivers/CMSIS/Include/core_cm4.h **** #ifndef __CORE_CM4_H_DEPENDANT
 174:Drivers/CMSIS/Include/core_cm4.h **** #define __CORE_CM4_H_DEPENDANT
 175:Drivers/CMSIS/Include/core_cm4.h **** 
 176:Drivers/CMSIS/Include/core_cm4.h **** #ifdef __cplusplus
 177:Drivers/CMSIS/Include/core_cm4.h ****  extern "C" {
 178:Drivers/CMSIS/Include/core_cm4.h **** #endif
 179:Drivers/CMSIS/Include/core_cm4.h **** 
 180:Drivers/CMSIS/Include/core_cm4.h **** /* check device defines and use defaults */
 181:Drivers/CMSIS/Include/core_cm4.h **** #if defined __CHECK_DEVICE_DEFINES
 182:Drivers/CMSIS/Include/core_cm4.h ****   #ifndef __CM4_REV
 183:Drivers/CMSIS/Include/core_cm4.h ****     #define __CM4_REV               0x0000U
 184:Drivers/CMSIS/Include/core_cm4.h ****     #warning "__CM4_REV not defined in device header file; using default!"
 185:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 186:Drivers/CMSIS/Include/core_cm4.h **** 
 187:Drivers/CMSIS/Include/core_cm4.h ****   #ifndef __FPU_PRESENT
 188:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_PRESENT             0U
 189:Drivers/CMSIS/Include/core_cm4.h ****     #warning "__FPU_PRESENT not defined in device header file; using default!"
 190:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 191:Drivers/CMSIS/Include/core_cm4.h **** 
 192:Drivers/CMSIS/Include/core_cm4.h ****   #ifndef __MPU_PRESENT
 193:Drivers/CMSIS/Include/core_cm4.h ****     #define __MPU_PRESENT             0U
 194:Drivers/CMSIS/Include/core_cm4.h ****     #warning "__MPU_PRESENT not defined in device header file; using default!"
 195:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 196:Drivers/CMSIS/Include/core_cm4.h **** 
 197:Drivers/CMSIS/Include/core_cm4.h ****   #ifndef __VTOR_PRESENT
 198:Drivers/CMSIS/Include/core_cm4.h ****     #define __VTOR_PRESENT             1U
 199:Drivers/CMSIS/Include/core_cm4.h ****     #warning "__VTOR_PRESENT not defined in device header file; using default!"
 200:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 201:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/ccACqZav.s 			page 5


 202:Drivers/CMSIS/Include/core_cm4.h ****   #ifndef __NVIC_PRIO_BITS
 203:Drivers/CMSIS/Include/core_cm4.h ****     #define __NVIC_PRIO_BITS          3U
 204:Drivers/CMSIS/Include/core_cm4.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 205:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 206:Drivers/CMSIS/Include/core_cm4.h **** 
 207:Drivers/CMSIS/Include/core_cm4.h ****   #ifndef __Vendor_SysTickConfig
 208:Drivers/CMSIS/Include/core_cm4.h ****     #define __Vendor_SysTickConfig    0U
 209:Drivers/CMSIS/Include/core_cm4.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 210:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 211:Drivers/CMSIS/Include/core_cm4.h **** #endif
 212:Drivers/CMSIS/Include/core_cm4.h **** 
 213:Drivers/CMSIS/Include/core_cm4.h **** /* IO definitions (access restrictions to peripheral registers) */
 214:Drivers/CMSIS/Include/core_cm4.h **** /**
 215:Drivers/CMSIS/Include/core_cm4.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 216:Drivers/CMSIS/Include/core_cm4.h **** 
 217:Drivers/CMSIS/Include/core_cm4.h ****     <strong>IO Type Qualifiers</strong> are used
 218:Drivers/CMSIS/Include/core_cm4.h ****     \li to specify the access to peripheral variables.
 219:Drivers/CMSIS/Include/core_cm4.h ****     \li for automatic generation of peripheral register debug information.
 220:Drivers/CMSIS/Include/core_cm4.h **** */
 221:Drivers/CMSIS/Include/core_cm4.h **** #ifdef __cplusplus
 222:Drivers/CMSIS/Include/core_cm4.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions */
 223:Drivers/CMSIS/Include/core_cm4.h **** #else
 224:Drivers/CMSIS/Include/core_cm4.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions */
 225:Drivers/CMSIS/Include/core_cm4.h **** #endif
 226:Drivers/CMSIS/Include/core_cm4.h **** #define     __O     volatile             /*!< Defines 'write only' permissions */
 227:Drivers/CMSIS/Include/core_cm4.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions */
 228:Drivers/CMSIS/Include/core_cm4.h **** 
 229:Drivers/CMSIS/Include/core_cm4.h **** /* following defines should be used for structure members */
 230:Drivers/CMSIS/Include/core_cm4.h **** #define     __IM     volatile const      /*! Defines 'read only' structure member permissions */
 231:Drivers/CMSIS/Include/core_cm4.h **** #define     __OM     volatile            /*! Defines 'write only' structure member permissions */
 232:Drivers/CMSIS/Include/core_cm4.h **** #define     __IOM    volatile            /*! Defines 'read / write' structure member permissions */
 233:Drivers/CMSIS/Include/core_cm4.h **** 
 234:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group Cortex_M4 */
 235:Drivers/CMSIS/Include/core_cm4.h **** 
 236:Drivers/CMSIS/Include/core_cm4.h **** 
 237:Drivers/CMSIS/Include/core_cm4.h **** 
 238:Drivers/CMSIS/Include/core_cm4.h **** /*******************************************************************************
 239:Drivers/CMSIS/Include/core_cm4.h ****  *                 Register Abstraction
 240:Drivers/CMSIS/Include/core_cm4.h ****   Core Register contain:
 241:Drivers/CMSIS/Include/core_cm4.h ****   - Core Register
 242:Drivers/CMSIS/Include/core_cm4.h ****   - Core NVIC Register
 243:Drivers/CMSIS/Include/core_cm4.h ****   - Core SCB Register
 244:Drivers/CMSIS/Include/core_cm4.h ****   - Core SysTick Register
 245:Drivers/CMSIS/Include/core_cm4.h ****   - Core Debug Register
 246:Drivers/CMSIS/Include/core_cm4.h ****   - Core MPU Register
 247:Drivers/CMSIS/Include/core_cm4.h ****   - Core FPU Register
 248:Drivers/CMSIS/Include/core_cm4.h ****  ******************************************************************************/
 249:Drivers/CMSIS/Include/core_cm4.h **** /**
 250:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_core_register Defines and Type Definitions
 251:Drivers/CMSIS/Include/core_cm4.h ****   \brief Type definitions and defines for Cortex-M processor based devices.
 252:Drivers/CMSIS/Include/core_cm4.h **** */
 253:Drivers/CMSIS/Include/core_cm4.h **** 
 254:Drivers/CMSIS/Include/core_cm4.h **** /**
 255:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup    CMSIS_core_register
 256:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup   CMSIS_CORE  Status and Control Registers
 257:Drivers/CMSIS/Include/core_cm4.h ****   \brief      Core Register type definitions.
 258:Drivers/CMSIS/Include/core_cm4.h ****   @{
ARM GAS  /tmp/ccACqZav.s 			page 6


 259:Drivers/CMSIS/Include/core_cm4.h ****  */
 260:Drivers/CMSIS/Include/core_cm4.h **** 
 261:Drivers/CMSIS/Include/core_cm4.h **** /**
 262:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Union type to access the Application Program Status Register (APSR).
 263:Drivers/CMSIS/Include/core_cm4.h ****  */
 264:Drivers/CMSIS/Include/core_cm4.h **** typedef union
 265:Drivers/CMSIS/Include/core_cm4.h **** {
 266:Drivers/CMSIS/Include/core_cm4.h ****   struct
 267:Drivers/CMSIS/Include/core_cm4.h ****   {
 268:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved0:16;              /*!< bit:  0..15  Reserved */
 269:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 270:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved1:7;               /*!< bit: 20..26  Reserved */
 271:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 272:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 273:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 274:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 275:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 276:Drivers/CMSIS/Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 277:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 278:Drivers/CMSIS/Include/core_cm4.h **** } APSR_Type;
 279:Drivers/CMSIS/Include/core_cm4.h **** 
 280:Drivers/CMSIS/Include/core_cm4.h **** /* APSR Register Definitions */
 281:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_N_Pos                         31U                                            /*!< APSR
 282:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_N_Msk                         (1UL << APSR_N_Pos)                            /*!< APSR
 283:Drivers/CMSIS/Include/core_cm4.h **** 
 284:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_Z_Pos                         30U                                            /*!< APSR
 285:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_Z_Msk                         (1UL << APSR_Z_Pos)                            /*!< APSR
 286:Drivers/CMSIS/Include/core_cm4.h **** 
 287:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_C_Pos                         29U                                            /*!< APSR
 288:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_C_Msk                         (1UL << APSR_C_Pos)                            /*!< APSR
 289:Drivers/CMSIS/Include/core_cm4.h **** 
 290:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_V_Pos                         28U                                            /*!< APSR
 291:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_V_Msk                         (1UL << APSR_V_Pos)                            /*!< APSR
 292:Drivers/CMSIS/Include/core_cm4.h **** 
 293:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_Q_Pos                         27U                                            /*!< APSR
 294:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_Q_Msk                         (1UL << APSR_Q_Pos)                            /*!< APSR
 295:Drivers/CMSIS/Include/core_cm4.h **** 
 296:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_GE_Pos                        16U                                            /*!< APSR
 297:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_GE_Msk                        (0xFUL << APSR_GE_Pos)                         /*!< APSR
 298:Drivers/CMSIS/Include/core_cm4.h **** 
 299:Drivers/CMSIS/Include/core_cm4.h **** 
 300:Drivers/CMSIS/Include/core_cm4.h **** /**
 301:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Union type to access the Interrupt Program Status Register (IPSR).
 302:Drivers/CMSIS/Include/core_cm4.h ****  */
 303:Drivers/CMSIS/Include/core_cm4.h **** typedef union
 304:Drivers/CMSIS/Include/core_cm4.h **** {
 305:Drivers/CMSIS/Include/core_cm4.h ****   struct
 306:Drivers/CMSIS/Include/core_cm4.h ****   {
 307:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 308:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved */
 309:Drivers/CMSIS/Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 310:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 311:Drivers/CMSIS/Include/core_cm4.h **** } IPSR_Type;
 312:Drivers/CMSIS/Include/core_cm4.h **** 
 313:Drivers/CMSIS/Include/core_cm4.h **** /* IPSR Register Definitions */
 314:Drivers/CMSIS/Include/core_cm4.h **** #define IPSR_ISR_Pos                        0U                                            /*!< IPSR
 315:Drivers/CMSIS/Include/core_cm4.h **** #define IPSR_ISR_Msk                       (0x1FFUL /*<< IPSR_ISR_Pos*/)                  /*!< IPSR
ARM GAS  /tmp/ccACqZav.s 			page 7


 316:Drivers/CMSIS/Include/core_cm4.h **** 
 317:Drivers/CMSIS/Include/core_cm4.h **** 
 318:Drivers/CMSIS/Include/core_cm4.h **** /**
 319:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 320:Drivers/CMSIS/Include/core_cm4.h ****  */
 321:Drivers/CMSIS/Include/core_cm4.h **** typedef union
 322:Drivers/CMSIS/Include/core_cm4.h **** {
 323:Drivers/CMSIS/Include/core_cm4.h ****   struct
 324:Drivers/CMSIS/Include/core_cm4.h ****   {
 325:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 326:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved0:1;               /*!< bit:      9  Reserved */
 327:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t ICI_IT_1:6;                 /*!< bit: 10..15  ICI/IT part 1 */
 328:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 329:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved1:4;               /*!< bit: 20..23  Reserved */
 330:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit */
 331:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t ICI_IT_2:2;                 /*!< bit: 25..26  ICI/IT part 2 */
 332:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 333:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 334:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 335:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 336:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 337:Drivers/CMSIS/Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 338:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 339:Drivers/CMSIS/Include/core_cm4.h **** } xPSR_Type;
 340:Drivers/CMSIS/Include/core_cm4.h **** 
 341:Drivers/CMSIS/Include/core_cm4.h **** /* xPSR Register Definitions */
 342:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_N_Pos                         31U                                            /*!< xPSR
 343:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_N_Msk                         (1UL << xPSR_N_Pos)                            /*!< xPSR
 344:Drivers/CMSIS/Include/core_cm4.h **** 
 345:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_Z_Pos                         30U                                            /*!< xPSR
 346:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_Z_Msk                         (1UL << xPSR_Z_Pos)                            /*!< xPSR
 347:Drivers/CMSIS/Include/core_cm4.h **** 
 348:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_C_Pos                         29U                                            /*!< xPSR
 349:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_C_Msk                         (1UL << xPSR_C_Pos)                            /*!< xPSR
 350:Drivers/CMSIS/Include/core_cm4.h **** 
 351:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_V_Pos                         28U                                            /*!< xPSR
 352:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_V_Msk                         (1UL << xPSR_V_Pos)                            /*!< xPSR
 353:Drivers/CMSIS/Include/core_cm4.h **** 
 354:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_Q_Pos                         27U                                            /*!< xPSR
 355:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_Q_Msk                         (1UL << xPSR_Q_Pos)                            /*!< xPSR
 356:Drivers/CMSIS/Include/core_cm4.h **** 
 357:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_ICI_IT_2_Pos                  25U                                            /*!< xPSR
 358:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_ICI_IT_2_Msk                  (3UL << xPSR_ICI_IT_2_Pos)                     /*!< xPSR
 359:Drivers/CMSIS/Include/core_cm4.h **** 
 360:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_T_Pos                         24U                                            /*!< xPSR
 361:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_T_Msk                         (1UL << xPSR_T_Pos)                            /*!< xPSR
 362:Drivers/CMSIS/Include/core_cm4.h **** 
 363:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_GE_Pos                        16U                                            /*!< xPSR
 364:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_GE_Msk                        (0xFUL << xPSR_GE_Pos)                         /*!< xPSR
 365:Drivers/CMSIS/Include/core_cm4.h **** 
 366:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_ICI_IT_1_Pos                  10U                                            /*!< xPSR
 367:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_ICI_IT_1_Msk                  (0x3FUL << xPSR_ICI_IT_1_Pos)                  /*!< xPSR
 368:Drivers/CMSIS/Include/core_cm4.h **** 
 369:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_ISR_Pos                        0U                                            /*!< xPSR
 370:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_ISR_Msk                       (0x1FFUL /*<< xPSR_ISR_Pos*/)                  /*!< xPSR
 371:Drivers/CMSIS/Include/core_cm4.h **** 
 372:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/ccACqZav.s 			page 8


 373:Drivers/CMSIS/Include/core_cm4.h **** /**
 374:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Union type to access the Control Registers (CONTROL).
 375:Drivers/CMSIS/Include/core_cm4.h ****  */
 376:Drivers/CMSIS/Include/core_cm4.h **** typedef union
 377:Drivers/CMSIS/Include/core_cm4.h **** {
 378:Drivers/CMSIS/Include/core_cm4.h ****   struct
 379:Drivers/CMSIS/Include/core_cm4.h ****   {
 380:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t nPRIV:1;                    /*!< bit:      0  Execution privilege in Thread mode */
 381:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used */
 382:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t FPCA:1;                     /*!< bit:      2  FP extension active flag */
 383:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved0:29;              /*!< bit:  3..31  Reserved */
 384:Drivers/CMSIS/Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 385:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 386:Drivers/CMSIS/Include/core_cm4.h **** } CONTROL_Type;
 387:Drivers/CMSIS/Include/core_cm4.h **** 
 388:Drivers/CMSIS/Include/core_cm4.h **** /* CONTROL Register Definitions */
 389:Drivers/CMSIS/Include/core_cm4.h **** #define CONTROL_FPCA_Pos                    2U                                            /*!< CONT
 390:Drivers/CMSIS/Include/core_cm4.h **** #define CONTROL_FPCA_Msk                   (1UL << CONTROL_FPCA_Pos)                      /*!< CONT
 391:Drivers/CMSIS/Include/core_cm4.h **** 
 392:Drivers/CMSIS/Include/core_cm4.h **** #define CONTROL_SPSEL_Pos                   1U                                            /*!< CONT
 393:Drivers/CMSIS/Include/core_cm4.h **** #define CONTROL_SPSEL_Msk                  (1UL << CONTROL_SPSEL_Pos)                     /*!< CONT
 394:Drivers/CMSIS/Include/core_cm4.h **** 
 395:Drivers/CMSIS/Include/core_cm4.h **** #define CONTROL_nPRIV_Pos                   0U                                            /*!< CONT
 396:Drivers/CMSIS/Include/core_cm4.h **** #define CONTROL_nPRIV_Msk                  (1UL /*<< CONTROL_nPRIV_Pos*/)                 /*!< CONT
 397:Drivers/CMSIS/Include/core_cm4.h **** 
 398:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_CORE */
 399:Drivers/CMSIS/Include/core_cm4.h **** 
 400:Drivers/CMSIS/Include/core_cm4.h **** 
 401:Drivers/CMSIS/Include/core_cm4.h **** /**
 402:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup    CMSIS_core_register
 403:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 404:Drivers/CMSIS/Include/core_cm4.h ****   \brief      Type definitions for the NVIC Registers
 405:Drivers/CMSIS/Include/core_cm4.h ****   @{
 406:Drivers/CMSIS/Include/core_cm4.h ****  */
 407:Drivers/CMSIS/Include/core_cm4.h **** 
 408:Drivers/CMSIS/Include/core_cm4.h **** /**
 409:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 410:Drivers/CMSIS/Include/core_cm4.h ****  */
 411:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
 412:Drivers/CMSIS/Include/core_cm4.h **** {
 413:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ISER[8U];               /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register */
 414:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[24U];
 415:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ICER[8U];               /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 416:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED1[24U];
 417:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ISPR[8U];               /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register *
 418:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED2[24U];
 419:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ICPR[8U];               /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 420:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED3[24U];
 421:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t IABR[8U];               /*!< Offset: 0x200 (R/W)  Interrupt Active bit Register */
 422:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED4[56U];
 423:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint8_t  IP[240U];               /*!< Offset: 0x300 (R/W)  Interrupt Priority Register (8Bi
 424:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED5[644U];
 425:Drivers/CMSIS/Include/core_cm4.h ****   __OM  uint32_t STIR;                   /*!< Offset: 0xE00 ( /W)  Software Trigger Interrupt Regis
 426:Drivers/CMSIS/Include/core_cm4.h **** }  NVIC_Type;
 427:Drivers/CMSIS/Include/core_cm4.h **** 
 428:Drivers/CMSIS/Include/core_cm4.h **** /* Software Triggered Interrupt Register Definitions */
 429:Drivers/CMSIS/Include/core_cm4.h **** #define NVIC_STIR_INTID_Pos                 0U                                         /*!< STIR: I
ARM GAS  /tmp/ccACqZav.s 			page 9


 430:Drivers/CMSIS/Include/core_cm4.h **** #define NVIC_STIR_INTID_Msk                (0x1FFUL /*<< NVIC_STIR_INTID_Pos*/)        /*!< STIR: I
 431:Drivers/CMSIS/Include/core_cm4.h **** 
 432:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_NVIC */
 433:Drivers/CMSIS/Include/core_cm4.h **** 
 434:Drivers/CMSIS/Include/core_cm4.h **** 
 435:Drivers/CMSIS/Include/core_cm4.h **** /**
 436:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 437:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_SCB     System Control Block (SCB)
 438:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the System Control Block Registers
 439:Drivers/CMSIS/Include/core_cm4.h ****   @{
 440:Drivers/CMSIS/Include/core_cm4.h ****  */
 441:Drivers/CMSIS/Include/core_cm4.h **** 
 442:Drivers/CMSIS/Include/core_cm4.h **** /**
 443:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the System Control Block (SCB).
 444:Drivers/CMSIS/Include/core_cm4.h ****  */
 445:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
 446:Drivers/CMSIS/Include/core_cm4.h **** {
 447:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t CPUID;                  /*!< Offset: 0x000 (R/ )  CPUID Base Register */
 448:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ICSR;                   /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 449:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t VTOR;                   /*!< Offset: 0x008 (R/W)  Vector Table Offset Register */
 450:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t AIRCR;                  /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 451:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t SCR;                    /*!< Offset: 0x010 (R/W)  System Control Register */
 452:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CCR;                    /*!< Offset: 0x014 (R/W)  Configuration Control Register *
 453:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint8_t  SHP[12U];               /*!< Offset: 0x018 (R/W)  System Handlers Priority Registe
 454:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t SHCSR;                  /*!< Offset: 0x024 (R/W)  System Handler Control and State
 455:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CFSR;                   /*!< Offset: 0x028 (R/W)  Configurable Fault Status Regist
 456:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t HFSR;                   /*!< Offset: 0x02C (R/W)  HardFault Status Register */
 457:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t DFSR;                   /*!< Offset: 0x030 (R/W)  Debug Fault Status Register */
 458:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t MMFAR;                  /*!< Offset: 0x034 (R/W)  MemManage Fault Address Register
 459:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t BFAR;                   /*!< Offset: 0x038 (R/W)  BusFault Address Register */
 460:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t AFSR;                   /*!< Offset: 0x03C (R/W)  Auxiliary Fault Status Register 
 461:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PFR[2U];                /*!< Offset: 0x040 (R/ )  Processor Feature Register */
 462:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t DFR;                    /*!< Offset: 0x048 (R/ )  Debug Feature Register */
 463:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t ADR;                    /*!< Offset: 0x04C (R/ )  Auxiliary Feature Register */
 464:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t MMFR[4U];               /*!< Offset: 0x050 (R/ )  Memory Model Feature Register */
 465:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t ISAR[5U];               /*!< Offset: 0x060 (R/ )  Instruction Set Attributes Regis
 466:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[5U];
 467:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CPACR;                  /*!< Offset: 0x088 (R/W)  Coprocessor Access Control Regis
 468:Drivers/CMSIS/Include/core_cm4.h **** } SCB_Type;
 469:Drivers/CMSIS/Include/core_cm4.h **** 
 470:Drivers/CMSIS/Include/core_cm4.h **** /* SCB CPUID Register Definitions */
 471:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24U                                            /*!< SCB 
 472:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 473:Drivers/CMSIS/Include/core_cm4.h **** 
 474:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_VARIANT_Pos              20U                                            /*!< SCB 
 475:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 476:Drivers/CMSIS/Include/core_cm4.h **** 
 477:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16U                                            /*!< SCB 
 478:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 479:Drivers/CMSIS/Include/core_cm4.h **** 
 480:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_PARTNO_Pos                4U                                            /*!< SCB 
 481:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 482:Drivers/CMSIS/Include/core_cm4.h **** 
 483:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_REVISION_Pos              0U                                            /*!< SCB 
 484:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL /*<< SCB_CPUID_REVISION_Pos*/)          /*!< SCB 
 485:Drivers/CMSIS/Include/core_cm4.h **** 
 486:Drivers/CMSIS/Include/core_cm4.h **** /* SCB Interrupt Control State Register Definitions */
ARM GAS  /tmp/ccACqZav.s 			page 10


 487:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Pos            31U                                            /*!< SCB 
 488:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 489:Drivers/CMSIS/Include/core_cm4.h **** 
 490:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSVSET_Pos             28U                                            /*!< SCB 
 491:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 492:Drivers/CMSIS/Include/core_cm4.h **** 
 493:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Pos             27U                                            /*!< SCB 
 494:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 495:Drivers/CMSIS/Include/core_cm4.h **** 
 496:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSTSET_Pos             26U                                            /*!< SCB 
 497:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 498:Drivers/CMSIS/Include/core_cm4.h **** 
 499:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Pos             25U                                            /*!< SCB 
 500:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 501:Drivers/CMSIS/Include/core_cm4.h **** 
 502:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23U                                            /*!< SCB 
 503:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 504:Drivers/CMSIS/Include/core_cm4.h **** 
 505:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_ISRPENDING_Pos            22U                                            /*!< SCB 
 506:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 507:Drivers/CMSIS/Include/core_cm4.h **** 
 508:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_VECTPENDING_Pos           12U                                            /*!< SCB 
 509:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 510:Drivers/CMSIS/Include/core_cm4.h **** 
 511:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_RETTOBASE_Pos             11U                                            /*!< SCB 
 512:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_RETTOBASE_Msk             (1UL << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 513:Drivers/CMSIS/Include/core_cm4.h **** 
 514:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Pos             0U                                            /*!< SCB 
 515:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL /*<< SCB_ICSR_VECTACTIVE_Pos*/)       /*!< SCB 
 516:Drivers/CMSIS/Include/core_cm4.h **** 
 517:Drivers/CMSIS/Include/core_cm4.h **** /* SCB Vector Table Offset Register Definitions */
 518:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_VTOR_TBLOFF_Pos                 7U                                            /*!< SCB 
 519:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_VTOR_TBLOFF_Msk                (0x1FFFFFFUL << SCB_VTOR_TBLOFF_Pos)           /*!< SCB 
 520:Drivers/CMSIS/Include/core_cm4.h **** 
 521:Drivers/CMSIS/Include/core_cm4.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 522:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTKEY_Pos              16U                                            /*!< SCB 
 523:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 524:Drivers/CMSIS/Include/core_cm4.h **** 
 525:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16U                                            /*!< SCB 
 526:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 527:Drivers/CMSIS/Include/core_cm4.h **** 
 528:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Pos            15U                                            /*!< SCB 
 529:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 530:Drivers/CMSIS/Include/core_cm4.h **** 
 531:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Pos              8U                                            /*!< SCB 
 532:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7UL << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 533:Drivers/CMSIS/Include/core_cm4.h **** 
 534:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2U                                            /*!< SCB 
 535:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 536:Drivers/CMSIS/Include/core_cm4.h **** 
 537:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1U                                            /*!< SCB 
 538:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 539:Drivers/CMSIS/Include/core_cm4.h **** 
 540:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTRESET_Pos             0U                                            /*!< SCB 
 541:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTRESET_Msk            (1UL /*<< SCB_AIRCR_VECTRESET_Pos*/)           /*!< SCB 
 542:Drivers/CMSIS/Include/core_cm4.h **** 
 543:Drivers/CMSIS/Include/core_cm4.h **** /* SCB System Control Register Definitions */
ARM GAS  /tmp/ccACqZav.s 			page 11


 544:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SEVONPEND_Pos               4U                                            /*!< SCB 
 545:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 546:Drivers/CMSIS/Include/core_cm4.h **** 
 547:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Pos               2U                                            /*!< SCB 
 548:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 549:Drivers/CMSIS/Include/core_cm4.h **** 
 550:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1U                                            /*!< SCB 
 551:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 552:Drivers/CMSIS/Include/core_cm4.h **** 
 553:Drivers/CMSIS/Include/core_cm4.h **** /* SCB Configuration Control Register Definitions */
 554:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_STKALIGN_Pos                9U                                            /*!< SCB 
 555:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 556:Drivers/CMSIS/Include/core_cm4.h **** 
 557:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Pos               8U                                            /*!< SCB 
 558:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1UL << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 559:Drivers/CMSIS/Include/core_cm4.h **** 
 560:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Pos               4U                                            /*!< SCB 
 561:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1UL << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 562:Drivers/CMSIS/Include/core_cm4.h **** 
 563:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3U                                            /*!< SCB 
 564:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 565:Drivers/CMSIS/Include/core_cm4.h **** 
 566:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_USERSETMPEND_Pos            1U                                            /*!< SCB 
 567:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_USERSETMPEND_Msk           (1UL << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 568:Drivers/CMSIS/Include/core_cm4.h **** 
 569:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0U                                            /*!< SCB 
 570:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1UL /*<< SCB_CCR_NONBASETHRDENA_Pos*/)        /*!< SCB 
 571:Drivers/CMSIS/Include/core_cm4.h **** 
 572:Drivers/CMSIS/Include/core_cm4.h **** /* SCB System Handler Control and State Register Definitions */
 573:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18U                                            /*!< SCB 
 574:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1UL << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 575:Drivers/CMSIS/Include/core_cm4.h **** 
 576:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17U                                            /*!< SCB 
 577:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1UL << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 578:Drivers/CMSIS/Include/core_cm4.h **** 
 579:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16U                                            /*!< SCB 
 580:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1UL << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 581:Drivers/CMSIS/Include/core_cm4.h **** 
 582:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15U                                            /*!< SCB 
 583:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 584:Drivers/CMSIS/Include/core_cm4.h **** 
 585:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14U                                            /*!< SCB 
 586:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1UL << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 587:Drivers/CMSIS/Include/core_cm4.h **** 
 588:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13U                                            /*!< SCB 
 589:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1UL << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 590:Drivers/CMSIS/Include/core_cm4.h **** 
 591:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12U                                            /*!< SCB 
 592:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1UL << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 593:Drivers/CMSIS/Include/core_cm4.h **** 
 594:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11U                                            /*!< SCB 
 595:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1UL << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 596:Drivers/CMSIS/Include/core_cm4.h **** 
 597:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Pos            10U                                            /*!< SCB 
 598:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1UL << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 599:Drivers/CMSIS/Include/core_cm4.h **** 
 600:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MONITORACT_Pos            8U                                            /*!< SCB 
ARM GAS  /tmp/ccACqZav.s 			page 12


 601:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MONITORACT_Msk           (1UL << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 602:Drivers/CMSIS/Include/core_cm4.h **** 
 603:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Pos             7U                                            /*!< SCB 
 604:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1UL << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 605:Drivers/CMSIS/Include/core_cm4.h **** 
 606:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3U                                            /*!< SCB 
 607:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1UL << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 608:Drivers/CMSIS/Include/core_cm4.h **** 
 609:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1U                                            /*!< SCB 
 610:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1UL << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 611:Drivers/CMSIS/Include/core_cm4.h **** 
 612:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0U                                            /*!< SCB 
 613:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1UL /*<< SCB_SHCSR_MEMFAULTACT_Pos*/)         /*!< SCB 
 614:Drivers/CMSIS/Include/core_cm4.h **** 
 615:Drivers/CMSIS/Include/core_cm4.h **** /* SCB Configurable Fault Status Register Definitions */
 616:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Pos            16U                                            /*!< SCB 
 617:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFUL << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 618:Drivers/CMSIS/Include/core_cm4.h **** 
 619:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8U                                            /*!< SCB 
 620:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFUL << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 621:Drivers/CMSIS/Include/core_cm4.h **** 
 622:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0U                                            /*!< SCB 
 623:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFUL /*<< SCB_CFSR_MEMFAULTSR_Pos*/)        /*!< SCB 
 624:Drivers/CMSIS/Include/core_cm4.h **** 
 625:Drivers/CMSIS/Include/core_cm4.h **** /* MemManage Fault Status Register (part of SCB Configurable Fault Status Register) */
 626:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MMARVALID_Pos             (SCB_CFSR_MEMFAULTSR_Pos + 7U)                 /*!< SCB 
 627:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MMARVALID_Msk             (1UL << SCB_CFSR_MMARVALID_Pos)                /*!< SCB 
 628:Drivers/CMSIS/Include/core_cm4.h **** 
 629:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MLSPERR_Pos               (SCB_CFSR_MEMFAULTSR_Pos + 5U)                 /*!< SCB 
 630:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MLSPERR_Msk               (1UL << SCB_CFSR_MLSPERR_Pos)                  /*!< SCB 
 631:Drivers/CMSIS/Include/core_cm4.h **** 
 632:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MSTKERR_Pos               (SCB_CFSR_MEMFAULTSR_Pos + 4U)                 /*!< SCB 
 633:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MSTKERR_Msk               (1UL << SCB_CFSR_MSTKERR_Pos)                  /*!< SCB 
 634:Drivers/CMSIS/Include/core_cm4.h **** 
 635:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MUNSTKERR_Pos             (SCB_CFSR_MEMFAULTSR_Pos + 3U)                 /*!< SCB 
 636:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MUNSTKERR_Msk             (1UL << SCB_CFSR_MUNSTKERR_Pos)                /*!< SCB 
 637:Drivers/CMSIS/Include/core_cm4.h **** 
 638:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_DACCVIOL_Pos              (SCB_CFSR_MEMFAULTSR_Pos + 1U)                 /*!< SCB 
 639:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_DACCVIOL_Msk              (1UL << SCB_CFSR_DACCVIOL_Pos)                 /*!< SCB 
 640:Drivers/CMSIS/Include/core_cm4.h **** 
 641:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_IACCVIOL_Pos              (SCB_CFSR_MEMFAULTSR_Pos + 0U)                 /*!< SCB 
 642:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_IACCVIOL_Msk              (1UL /*<< SCB_CFSR_IACCVIOL_Pos*/)             /*!< SCB 
 643:Drivers/CMSIS/Include/core_cm4.h **** 
 644:Drivers/CMSIS/Include/core_cm4.h **** /* BusFault Status Register (part of SCB Configurable Fault Status Register) */
 645:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_BFARVALID_Pos            (SCB_CFSR_BUSFAULTSR_Pos + 7U)                  /*!< SCB 
 646:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_BFARVALID_Msk            (1UL << SCB_CFSR_BFARVALID_Pos)                 /*!< SCB 
 647:Drivers/CMSIS/Include/core_cm4.h **** 
 648:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_LSPERR_Pos               (SCB_CFSR_BUSFAULTSR_Pos + 5U)                  /*!< SCB 
 649:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_LSPERR_Msk               (1UL << SCB_CFSR_LSPERR_Pos)                    /*!< SCB 
 650:Drivers/CMSIS/Include/core_cm4.h **** 
 651:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_STKERR_Pos               (SCB_CFSR_BUSFAULTSR_Pos + 4U)                  /*!< SCB 
 652:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_STKERR_Msk               (1UL << SCB_CFSR_STKERR_Pos)                    /*!< SCB 
 653:Drivers/CMSIS/Include/core_cm4.h **** 
 654:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_UNSTKERR_Pos             (SCB_CFSR_BUSFAULTSR_Pos + 3U)                  /*!< SCB 
 655:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_UNSTKERR_Msk             (1UL << SCB_CFSR_UNSTKERR_Pos)                  /*!< SCB 
 656:Drivers/CMSIS/Include/core_cm4.h **** 
 657:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_IMPRECISERR_Pos          (SCB_CFSR_BUSFAULTSR_Pos + 2U)                  /*!< SCB 
ARM GAS  /tmp/ccACqZav.s 			page 13


 658:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_IMPRECISERR_Msk          (1UL << SCB_CFSR_IMPRECISERR_Pos)               /*!< SCB 
 659:Drivers/CMSIS/Include/core_cm4.h **** 
 660:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_PRECISERR_Pos            (SCB_CFSR_BUSFAULTSR_Pos + 1U)                  /*!< SCB 
 661:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_PRECISERR_Msk            (1UL << SCB_CFSR_PRECISERR_Pos)                 /*!< SCB 
 662:Drivers/CMSIS/Include/core_cm4.h **** 
 663:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_IBUSERR_Pos              (SCB_CFSR_BUSFAULTSR_Pos + 0U)                  /*!< SCB 
 664:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_IBUSERR_Msk              (1UL << SCB_CFSR_IBUSERR_Pos)                   /*!< SCB 
 665:Drivers/CMSIS/Include/core_cm4.h **** 
 666:Drivers/CMSIS/Include/core_cm4.h **** /* UsageFault Status Register (part of SCB Configurable Fault Status Register) */
 667:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_DIVBYZERO_Pos            (SCB_CFSR_USGFAULTSR_Pos + 9U)                  /*!< SCB 
 668:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_DIVBYZERO_Msk            (1UL << SCB_CFSR_DIVBYZERO_Pos)                 /*!< SCB 
 669:Drivers/CMSIS/Include/core_cm4.h **** 
 670:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_UNALIGNED_Pos            (SCB_CFSR_USGFAULTSR_Pos + 8U)                  /*!< SCB 
 671:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_UNALIGNED_Msk            (1UL << SCB_CFSR_UNALIGNED_Pos)                 /*!< SCB 
 672:Drivers/CMSIS/Include/core_cm4.h **** 
 673:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_NOCP_Pos                 (SCB_CFSR_USGFAULTSR_Pos + 3U)                  /*!< SCB 
 674:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_NOCP_Msk                 (1UL << SCB_CFSR_NOCP_Pos)                      /*!< SCB 
 675:Drivers/CMSIS/Include/core_cm4.h **** 
 676:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_INVPC_Pos                (SCB_CFSR_USGFAULTSR_Pos + 2U)                  /*!< SCB 
 677:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_INVPC_Msk                (1UL << SCB_CFSR_INVPC_Pos)                     /*!< SCB 
 678:Drivers/CMSIS/Include/core_cm4.h **** 
 679:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_INVSTATE_Pos             (SCB_CFSR_USGFAULTSR_Pos + 1U)                  /*!< SCB 
 680:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_INVSTATE_Msk             (1UL << SCB_CFSR_INVSTATE_Pos)                  /*!< SCB 
 681:Drivers/CMSIS/Include/core_cm4.h **** 
 682:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_UNDEFINSTR_Pos           (SCB_CFSR_USGFAULTSR_Pos + 0U)                  /*!< SCB 
 683:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_UNDEFINSTR_Msk           (1UL << SCB_CFSR_UNDEFINSTR_Pos)                /*!< SCB 
 684:Drivers/CMSIS/Include/core_cm4.h **** 
 685:Drivers/CMSIS/Include/core_cm4.h **** /* SCB Hard Fault Status Register Definitions */
 686:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Pos              31U                                            /*!< SCB 
 687:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1UL << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 688:Drivers/CMSIS/Include/core_cm4.h **** 
 689:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_FORCED_Pos                30U                                            /*!< SCB 
 690:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_FORCED_Msk                (1UL << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 691:Drivers/CMSIS/Include/core_cm4.h **** 
 692:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_VECTTBL_Pos                1U                                            /*!< SCB 
 693:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_VECTTBL_Msk               (1UL << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 694:Drivers/CMSIS/Include/core_cm4.h **** 
 695:Drivers/CMSIS/Include/core_cm4.h **** /* SCB Debug Fault Status Register Definitions */
 696:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_EXTERNAL_Pos               4U                                            /*!< SCB 
 697:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_EXTERNAL_Msk              (1UL << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 698:Drivers/CMSIS/Include/core_cm4.h **** 
 699:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_VCATCH_Pos                 3U                                            /*!< SCB 
 700:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_VCATCH_Msk                (1UL << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 701:Drivers/CMSIS/Include/core_cm4.h **** 
 702:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_DWTTRAP_Pos                2U                                            /*!< SCB 
 703:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_DWTTRAP_Msk               (1UL << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 704:Drivers/CMSIS/Include/core_cm4.h **** 
 705:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_BKPT_Pos                   1U                                            /*!< SCB 
 706:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_BKPT_Msk                  (1UL << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 707:Drivers/CMSIS/Include/core_cm4.h **** 
 708:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_HALTED_Pos                 0U                                            /*!< SCB 
 709:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_HALTED_Msk                (1UL /*<< SCB_DFSR_HALTED_Pos*/)               /*!< SCB 
 710:Drivers/CMSIS/Include/core_cm4.h **** 
 711:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_SCB */
 712:Drivers/CMSIS/Include/core_cm4.h **** 
 713:Drivers/CMSIS/Include/core_cm4.h **** 
 714:Drivers/CMSIS/Include/core_cm4.h **** /**
ARM GAS  /tmp/ccACqZav.s 			page 14


 715:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 716:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_SCnSCB System Controls not in SCB (SCnSCB)
 717:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the System Control and ID Register not in the SCB
 718:Drivers/CMSIS/Include/core_cm4.h ****   @{
 719:Drivers/CMSIS/Include/core_cm4.h ****  */
 720:Drivers/CMSIS/Include/core_cm4.h **** 
 721:Drivers/CMSIS/Include/core_cm4.h **** /**
 722:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the System Control and ID Register not in the SCB.
 723:Drivers/CMSIS/Include/core_cm4.h ****  */
 724:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
 725:Drivers/CMSIS/Include/core_cm4.h **** {
 726:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[1U];
 727:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t ICTR;                   /*!< Offset: 0x004 (R/ )  Interrupt Controller Type Regist
 728:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ACTLR;                  /*!< Offset: 0x008 (R/W)  Auxiliary Control Register */
 729:Drivers/CMSIS/Include/core_cm4.h **** } SCnSCB_Type;
 730:Drivers/CMSIS/Include/core_cm4.h **** 
 731:Drivers/CMSIS/Include/core_cm4.h **** /* Interrupt Controller Type Register Definitions */
 732:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Pos         0U                                         /*!< ICTR: I
 733:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Msk        (0xFUL /*<< SCnSCB_ICTR_INTLINESNUM_Pos*/)  /*!< ICTR: I
 734:Drivers/CMSIS/Include/core_cm4.h **** 
 735:Drivers/CMSIS/Include/core_cm4.h **** /* Auxiliary Control Register Definitions */
 736:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Pos            9U                                         /*!< ACTLR: 
 737:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Msk           (1UL << SCnSCB_ACTLR_DISOOFP_Pos)           /*!< ACTLR: 
 738:Drivers/CMSIS/Include/core_cm4.h **** 
 739:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Pos            8U                                         /*!< ACTLR: 
 740:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Msk           (1UL << SCnSCB_ACTLR_DISFPCA_Pos)           /*!< ACTLR: 
 741:Drivers/CMSIS/Include/core_cm4.h **** 
 742:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Pos            2U                                         /*!< ACTLR: 
 743:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Msk           (1UL << SCnSCB_ACTLR_DISFOLD_Pos)           /*!< ACTLR: 
 744:Drivers/CMSIS/Include/core_cm4.h **** 
 745:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Pos         1U                                         /*!< ACTLR: 
 746:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Msk        (1UL << SCnSCB_ACTLR_DISDEFWBUF_Pos)        /*!< ACTLR: 
 747:Drivers/CMSIS/Include/core_cm4.h **** 
 748:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Pos         0U                                         /*!< ACTLR: 
 749:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Msk        (1UL /*<< SCnSCB_ACTLR_DISMCYCINT_Pos*/)    /*!< ACTLR: 
 750:Drivers/CMSIS/Include/core_cm4.h **** 
 751:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_SCnotSCB */
 752:Drivers/CMSIS/Include/core_cm4.h **** 
 753:Drivers/CMSIS/Include/core_cm4.h **** 
 754:Drivers/CMSIS/Include/core_cm4.h **** /**
 755:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 756:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 757:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the System Timer Registers.
 758:Drivers/CMSIS/Include/core_cm4.h ****   @{
 759:Drivers/CMSIS/Include/core_cm4.h ****  */
 760:Drivers/CMSIS/Include/core_cm4.h **** 
 761:Drivers/CMSIS/Include/core_cm4.h **** /**
 762:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the System Timer (SysTick).
 763:Drivers/CMSIS/Include/core_cm4.h ****  */
 764:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
 765:Drivers/CMSIS/Include/core_cm4.h **** {
 766:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 767:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t LOAD;                   /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register */
 768:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t VAL;                    /*!< Offset: 0x008 (R/W)  SysTick Current Value Register *
 769:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t CALIB;                  /*!< Offset: 0x00C (R/ )  SysTick Calibration Register */
 770:Drivers/CMSIS/Include/core_cm4.h **** } SysTick_Type;
 771:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/ccACqZav.s 			page 15


 772:Drivers/CMSIS/Include/core_cm4.h **** /* SysTick Control / Status Register Definitions */
 773:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16U                                            /*!< SysT
 774:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 775:Drivers/CMSIS/Include/core_cm4.h **** 
 776:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2U                                            /*!< SysT
 777:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 778:Drivers/CMSIS/Include/core_cm4.h **** 
 779:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_TICKINT_Pos            1U                                            /*!< SysT
 780:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 781:Drivers/CMSIS/Include/core_cm4.h **** 
 782:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_ENABLE_Pos             0U                                            /*!< SysT
 783:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL /*<< SysTick_CTRL_ENABLE_Pos*/)           /*!< SysT
 784:Drivers/CMSIS/Include/core_cm4.h **** 
 785:Drivers/CMSIS/Include/core_cm4.h **** /* SysTick Reload Register Definitions */
 786:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_LOAD_RELOAD_Pos             0U                                            /*!< SysT
 787:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL /*<< SysTick_LOAD_RELOAD_Pos*/)    /*!< SysT
 788:Drivers/CMSIS/Include/core_cm4.h **** 
 789:Drivers/CMSIS/Include/core_cm4.h **** /* SysTick Current Register Definitions */
 790:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_VAL_CURRENT_Pos             0U                                            /*!< SysT
 791:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL /*<< SysTick_VAL_CURRENT_Pos*/)    /*!< SysT
 792:Drivers/CMSIS/Include/core_cm4.h **** 
 793:Drivers/CMSIS/Include/core_cm4.h **** /* SysTick Calibration Register Definitions */
 794:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_NOREF_Pos            31U                                            /*!< SysT
 795:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 796:Drivers/CMSIS/Include/core_cm4.h **** 
 797:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_SKEW_Pos             30U                                            /*!< SysT
 798:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 799:Drivers/CMSIS/Include/core_cm4.h **** 
 800:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_TENMS_Pos             0U                                            /*!< SysT
 801:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL /*<< SysTick_CALIB_TENMS_Pos*/)    /*!< SysT
 802:Drivers/CMSIS/Include/core_cm4.h **** 
 803:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_SysTick */
 804:Drivers/CMSIS/Include/core_cm4.h **** 
 805:Drivers/CMSIS/Include/core_cm4.h **** 
 806:Drivers/CMSIS/Include/core_cm4.h **** /**
 807:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 808:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_ITM     Instrumentation Trace Macrocell (ITM)
 809:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Instrumentation Trace Macrocell (ITM)
 810:Drivers/CMSIS/Include/core_cm4.h ****   @{
 811:Drivers/CMSIS/Include/core_cm4.h ****  */
 812:Drivers/CMSIS/Include/core_cm4.h **** 
 813:Drivers/CMSIS/Include/core_cm4.h **** /**
 814:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Instrumentation Trace Macrocell Register (ITM).
 815:Drivers/CMSIS/Include/core_cm4.h ****  */
 816:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
 817:Drivers/CMSIS/Include/core_cm4.h **** {
 818:Drivers/CMSIS/Include/core_cm4.h ****   __OM  union
 819:Drivers/CMSIS/Include/core_cm4.h ****   {
 820:Drivers/CMSIS/Include/core_cm4.h ****     __OM  uint8_t    u8;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 8-bit */
 821:Drivers/CMSIS/Include/core_cm4.h ****     __OM  uint16_t   u16;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 16-bit */
 822:Drivers/CMSIS/Include/core_cm4.h ****     __OM  uint32_t   u32;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 32-bit */
 823:Drivers/CMSIS/Include/core_cm4.h ****   }  PORT [32U];                         /*!< Offset: 0x000 ( /W)  ITM Stimulus Port Registers */
 824:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[864U];
 825:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t TER;                    /*!< Offset: 0xE00 (R/W)  ITM Trace Enable Register */
 826:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED1[15U];
 827:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t TPR;                    /*!< Offset: 0xE40 (R/W)  ITM Trace Privilege Register */
 828:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED2[15U];
ARM GAS  /tmp/ccACqZav.s 			page 16


 829:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t TCR;                    /*!< Offset: 0xE80 (R/W)  ITM Trace Control Register */
 830:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED3[32U];
 831:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED4[43U];
 832:Drivers/CMSIS/Include/core_cm4.h ****   __OM  uint32_t LAR;                    /*!< Offset: 0xFB0 ( /W)  ITM Lock Access Register */
 833:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t LSR;                    /*!< Offset: 0xFB4 (R/ )  ITM Lock Status Register */
 834:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED5[6U];
 835:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID4;                   /*!< Offset: 0xFD0 (R/ )  ITM Peripheral Identification Re
 836:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID5;                   /*!< Offset: 0xFD4 (R/ )  ITM Peripheral Identification Re
 837:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID6;                   /*!< Offset: 0xFD8 (R/ )  ITM Peripheral Identification Re
 838:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID7;                   /*!< Offset: 0xFDC (R/ )  ITM Peripheral Identification Re
 839:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID0;                   /*!< Offset: 0xFE0 (R/ )  ITM Peripheral Identification Re
 840:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID1;                   /*!< Offset: 0xFE4 (R/ )  ITM Peripheral Identification Re
 841:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID2;                   /*!< Offset: 0xFE8 (R/ )  ITM Peripheral Identification Re
 842:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID3;                   /*!< Offset: 0xFEC (R/ )  ITM Peripheral Identification Re
 843:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t CID0;                   /*!< Offset: 0xFF0 (R/ )  ITM Component  Identification Re
 844:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t CID1;                   /*!< Offset: 0xFF4 (R/ )  ITM Component  Identification Re
 845:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t CID2;                   /*!< Offset: 0xFF8 (R/ )  ITM Component  Identification Re
 846:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t CID3;                   /*!< Offset: 0xFFC (R/ )  ITM Component  Identification Re
 847:Drivers/CMSIS/Include/core_cm4.h **** } ITM_Type;
 848:Drivers/CMSIS/Include/core_cm4.h **** 
 849:Drivers/CMSIS/Include/core_cm4.h **** /* ITM Trace Privilege Register Definitions */
 850:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TPR_PRIVMASK_Pos                0U                                            /*!< ITM 
 851:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFFFFFFFFUL /*<< ITM_TPR_PRIVMASK_Pos*/)     /*!< ITM 
 852:Drivers/CMSIS/Include/core_cm4.h **** 
 853:Drivers/CMSIS/Include/core_cm4.h **** /* ITM Trace Control Register Definitions */
 854:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_BUSY_Pos                   23U                                            /*!< ITM 
 855:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_BUSY_Msk                   (1UL << ITM_TCR_BUSY_Pos)                      /*!< ITM 
 856:Drivers/CMSIS/Include/core_cm4.h **** 
 857:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TraceBusID_Pos             16U                                            /*!< ITM 
 858:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TraceBusID_Msk             (0x7FUL << ITM_TCR_TraceBusID_Pos)             /*!< ITM 
 859:Drivers/CMSIS/Include/core_cm4.h **** 
 860:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_GTSFREQ_Pos                10U                                            /*!< ITM 
 861:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_GTSFREQ_Msk                (3UL << ITM_TCR_GTSFREQ_Pos)                   /*!< ITM 
 862:Drivers/CMSIS/Include/core_cm4.h **** 
 863:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TSPrescale_Pos              8U                                            /*!< ITM 
 864:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TSPrescale_Msk             (3UL << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
 865:Drivers/CMSIS/Include/core_cm4.h **** 
 866:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_SWOENA_Pos                  4U                                            /*!< ITM 
 867:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_SWOENA_Msk                 (1UL << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
 868:Drivers/CMSIS/Include/core_cm4.h **** 
 869:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_DWTENA_Pos                  3U                                            /*!< ITM 
 870:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_DWTENA_Msk                 (1UL << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
 871:Drivers/CMSIS/Include/core_cm4.h **** 
 872:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_SYNCENA_Pos                 2U                                            /*!< ITM 
 873:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_SYNCENA_Msk                (1UL << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
 874:Drivers/CMSIS/Include/core_cm4.h **** 
 875:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TSENA_Pos                   1U                                            /*!< ITM 
 876:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TSENA_Msk                  (1UL << ITM_TCR_TSENA_Pos)                     /*!< ITM 
 877:Drivers/CMSIS/Include/core_cm4.h **** 
 878:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_ITMENA_Pos                  0U                                            /*!< ITM 
 879:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_ITMENA_Msk                 (1UL /*<< ITM_TCR_ITMENA_Pos*/)                /*!< ITM 
 880:Drivers/CMSIS/Include/core_cm4.h **** 
 881:Drivers/CMSIS/Include/core_cm4.h **** /* ITM Lock Status Register Definitions */
 882:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_LSR_ByteAcc_Pos                 2U                                            /*!< ITM 
 883:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_LSR_ByteAcc_Msk                (1UL << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
 884:Drivers/CMSIS/Include/core_cm4.h **** 
 885:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_LSR_Access_Pos                  1U                                            /*!< ITM 
ARM GAS  /tmp/ccACqZav.s 			page 17


 886:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_LSR_Access_Msk                 (1UL << ITM_LSR_Access_Pos)                    /*!< ITM 
 887:Drivers/CMSIS/Include/core_cm4.h **** 
 888:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_LSR_Present_Pos                 0U                                            /*!< ITM 
 889:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_LSR_Present_Msk                (1UL /*<< ITM_LSR_Present_Pos*/)               /*!< ITM 
 890:Drivers/CMSIS/Include/core_cm4.h **** 
 891:Drivers/CMSIS/Include/core_cm4.h **** /*@}*/ /* end of group CMSIS_ITM */
 892:Drivers/CMSIS/Include/core_cm4.h **** 
 893:Drivers/CMSIS/Include/core_cm4.h **** 
 894:Drivers/CMSIS/Include/core_cm4.h **** /**
 895:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 896:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_DWT     Data Watchpoint and Trace (DWT)
 897:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Data Watchpoint and Trace (DWT)
 898:Drivers/CMSIS/Include/core_cm4.h ****   @{
 899:Drivers/CMSIS/Include/core_cm4.h ****  */
 900:Drivers/CMSIS/Include/core_cm4.h **** 
 901:Drivers/CMSIS/Include/core_cm4.h **** /**
 902:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Data Watchpoint and Trace Register (DWT).
 903:Drivers/CMSIS/Include/core_cm4.h ****  */
 904:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
 905:Drivers/CMSIS/Include/core_cm4.h **** {
 906:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  Control Register */
 907:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CYCCNT;                 /*!< Offset: 0x004 (R/W)  Cycle Count Register */
 908:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CPICNT;                 /*!< Offset: 0x008 (R/W)  CPI Count Register */
 909:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t EXCCNT;                 /*!< Offset: 0x00C (R/W)  Exception Overhead Count Registe
 910:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t SLEEPCNT;               /*!< Offset: 0x010 (R/W)  Sleep Count Register */
 911:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t LSUCNT;                 /*!< Offset: 0x014 (R/W)  LSU Count Register */
 912:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FOLDCNT;                /*!< Offset: 0x018 (R/W)  Folded-instruction Count Registe
 913:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PCSR;                   /*!< Offset: 0x01C (R/ )  Program Counter Sample Register 
 914:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t COMP0;                  /*!< Offset: 0x020 (R/W)  Comparator Register 0 */
 915:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t MASK0;                  /*!< Offset: 0x024 (R/W)  Mask Register 0 */
 916:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FUNCTION0;              /*!< Offset: 0x028 (R/W)  Function Register 0 */
 917:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[1U];
 918:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t COMP1;                  /*!< Offset: 0x030 (R/W)  Comparator Register 1 */
 919:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t MASK1;                  /*!< Offset: 0x034 (R/W)  Mask Register 1 */
 920:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FUNCTION1;              /*!< Offset: 0x038 (R/W)  Function Register 1 */
 921:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED1[1U];
 922:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t COMP2;                  /*!< Offset: 0x040 (R/W)  Comparator Register 2 */
 923:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t MASK2;                  /*!< Offset: 0x044 (R/W)  Mask Register 2 */
 924:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FUNCTION2;              /*!< Offset: 0x048 (R/W)  Function Register 2 */
 925:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED2[1U];
 926:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t COMP3;                  /*!< Offset: 0x050 (R/W)  Comparator Register 3 */
 927:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t MASK3;                  /*!< Offset: 0x054 (R/W)  Mask Register 3 */
 928:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FUNCTION3;              /*!< Offset: 0x058 (R/W)  Function Register 3 */
 929:Drivers/CMSIS/Include/core_cm4.h **** } DWT_Type;
 930:Drivers/CMSIS/Include/core_cm4.h **** 
 931:Drivers/CMSIS/Include/core_cm4.h **** /* DWT Control Register Definitions */
 932:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NUMCOMP_Pos               28U                                         /*!< DWT CTR
 933:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NUMCOMP_Msk               (0xFUL << DWT_CTRL_NUMCOMP_Pos)             /*!< DWT CTR
 934:Drivers/CMSIS/Include/core_cm4.h **** 
 935:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Pos              27U                                         /*!< DWT CTR
 936:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Msk              (0x1UL << DWT_CTRL_NOTRCPKT_Pos)            /*!< DWT CTR
 937:Drivers/CMSIS/Include/core_cm4.h **** 
 938:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Pos             26U                                         /*!< DWT CTR
 939:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Msk             (0x1UL << DWT_CTRL_NOEXTTRIG_Pos)           /*!< DWT CTR
 940:Drivers/CMSIS/Include/core_cm4.h **** 
 941:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Pos              25U                                         /*!< DWT CTR
 942:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Msk              (0x1UL << DWT_CTRL_NOCYCCNT_Pos)            /*!< DWT CTR
ARM GAS  /tmp/ccACqZav.s 			page 18


 943:Drivers/CMSIS/Include/core_cm4.h **** 
 944:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Pos              24U                                         /*!< DWT CTR
 945:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Msk              (0x1UL << DWT_CTRL_NOPRFCNT_Pos)            /*!< DWT CTR
 946:Drivers/CMSIS/Include/core_cm4.h **** 
 947:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Pos             22U                                         /*!< DWT CTR
 948:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Msk             (0x1UL << DWT_CTRL_CYCEVTENA_Pos)           /*!< DWT CTR
 949:Drivers/CMSIS/Include/core_cm4.h **** 
 950:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Pos            21U                                         /*!< DWT CTR
 951:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Msk            (0x1UL << DWT_CTRL_FOLDEVTENA_Pos)          /*!< DWT CTR
 952:Drivers/CMSIS/Include/core_cm4.h **** 
 953:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Pos             20U                                         /*!< DWT CTR
 954:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Msk             (0x1UL << DWT_CTRL_LSUEVTENA_Pos)           /*!< DWT CTR
 955:Drivers/CMSIS/Include/core_cm4.h **** 
 956:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Pos           19U                                         /*!< DWT CTR
 957:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Msk           (0x1UL << DWT_CTRL_SLEEPEVTENA_Pos)         /*!< DWT CTR
 958:Drivers/CMSIS/Include/core_cm4.h **** 
 959:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Pos             18U                                         /*!< DWT CTR
 960:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Msk             (0x1UL << DWT_CTRL_EXCEVTENA_Pos)           /*!< DWT CTR
 961:Drivers/CMSIS/Include/core_cm4.h **** 
 962:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Pos             17U                                         /*!< DWT CTR
 963:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Msk             (0x1UL << DWT_CTRL_CPIEVTENA_Pos)           /*!< DWT CTR
 964:Drivers/CMSIS/Include/core_cm4.h **** 
 965:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Pos             16U                                         /*!< DWT CTR
 966:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Msk             (0x1UL << DWT_CTRL_EXCTRCENA_Pos)           /*!< DWT CTR
 967:Drivers/CMSIS/Include/core_cm4.h **** 
 968:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Pos            12U                                         /*!< DWT CTR
 969:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Msk            (0x1UL << DWT_CTRL_PCSAMPLENA_Pos)          /*!< DWT CTR
 970:Drivers/CMSIS/Include/core_cm4.h **** 
 971:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_SYNCTAP_Pos               10U                                         /*!< DWT CTR
 972:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_SYNCTAP_Msk               (0x3UL << DWT_CTRL_SYNCTAP_Pos)             /*!< DWT CTR
 973:Drivers/CMSIS/Include/core_cm4.h **** 
 974:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCTAP_Pos                 9U                                         /*!< DWT CTR
 975:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCTAP_Msk                (0x1UL << DWT_CTRL_CYCTAP_Pos)              /*!< DWT CTR
 976:Drivers/CMSIS/Include/core_cm4.h **** 
 977:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_POSTINIT_Pos               5U                                         /*!< DWT CTR
 978:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_POSTINIT_Msk              (0xFUL << DWT_CTRL_POSTINIT_Pos)            /*!< DWT CTR
 979:Drivers/CMSIS/Include/core_cm4.h **** 
 980:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_POSTPRESET_Pos             1U                                         /*!< DWT CTR
 981:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_POSTPRESET_Msk            (0xFUL << DWT_CTRL_POSTPRESET_Pos)          /*!< DWT CTR
 982:Drivers/CMSIS/Include/core_cm4.h **** 
 983:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Pos              0U                                         /*!< DWT CTR
 984:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Msk             (0x1UL /*<< DWT_CTRL_CYCCNTENA_Pos*/)       /*!< DWT CTR
 985:Drivers/CMSIS/Include/core_cm4.h **** 
 986:Drivers/CMSIS/Include/core_cm4.h **** /* DWT CPI Count Register Definitions */
 987:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CPICNT_CPICNT_Pos               0U                                         /*!< DWT CPI
 988:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CPICNT_CPICNT_Msk              (0xFFUL /*<< DWT_CPICNT_CPICNT_Pos*/)       /*!< DWT CPI
 989:Drivers/CMSIS/Include/core_cm4.h **** 
 990:Drivers/CMSIS/Include/core_cm4.h **** /* DWT Exception Overhead Count Register Definitions */
 991:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Pos               0U                                         /*!< DWT EXC
 992:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Msk              (0xFFUL /*<< DWT_EXCCNT_EXCCNT_Pos*/)       /*!< DWT EXC
 993:Drivers/CMSIS/Include/core_cm4.h **** 
 994:Drivers/CMSIS/Include/core_cm4.h **** /* DWT Sleep Count Register Definitions */
 995:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Pos           0U                                         /*!< DWT SLE
 996:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Msk          (0xFFUL /*<< DWT_SLEEPCNT_SLEEPCNT_Pos*/)   /*!< DWT SLE
 997:Drivers/CMSIS/Include/core_cm4.h **** 
 998:Drivers/CMSIS/Include/core_cm4.h **** /* DWT LSU Count Register Definitions */
 999:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Pos               0U                                         /*!< DWT LSU
ARM GAS  /tmp/ccACqZav.s 			page 19


1000:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Msk              (0xFFUL /*<< DWT_LSUCNT_LSUCNT_Pos*/)       /*!< DWT LSU
1001:Drivers/CMSIS/Include/core_cm4.h **** 
1002:Drivers/CMSIS/Include/core_cm4.h **** /* DWT Folded-instruction Count Register Definitions */
1003:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Pos             0U                                         /*!< DWT FOL
1004:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Msk            (0xFFUL /*<< DWT_FOLDCNT_FOLDCNT_Pos*/)     /*!< DWT FOL
1005:Drivers/CMSIS/Include/core_cm4.h **** 
1006:Drivers/CMSIS/Include/core_cm4.h **** /* DWT Comparator Mask Register Definitions */
1007:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_MASK_MASK_Pos                   0U                                         /*!< DWT MAS
1008:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_MASK_MASK_Msk                  (0x1FUL /*<< DWT_MASK_MASK_Pos*/)           /*!< DWT MAS
1009:Drivers/CMSIS/Include/core_cm4.h **** 
1010:Drivers/CMSIS/Include/core_cm4.h **** /* DWT Comparator Function Register Definitions */
1011:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_MATCHED_Pos           24U                                         /*!< DWT FUN
1012:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_MATCHED_Msk           (0x1UL << DWT_FUNCTION_MATCHED_Pos)         /*!< DWT FUN
1013:Drivers/CMSIS/Include/core_cm4.h **** 
1014:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Pos        16U                                         /*!< DWT FUN
1015:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR1_Pos)      /*!< DWT FUN
1016:Drivers/CMSIS/Include/core_cm4.h **** 
1017:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Pos        12U                                         /*!< DWT FUN
1018:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR0_Pos)      /*!< DWT FUN
1019:Drivers/CMSIS/Include/core_cm4.h **** 
1020:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Pos         10U                                         /*!< DWT FUN
1021:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Msk         (0x3UL << DWT_FUNCTION_DATAVSIZE_Pos)       /*!< DWT FUN
1022:Drivers/CMSIS/Include/core_cm4.h **** 
1023:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Pos            9U                                         /*!< DWT FUN
1024:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Msk           (0x1UL << DWT_FUNCTION_LNK1ENA_Pos)         /*!< DWT FUN
1025:Drivers/CMSIS/Include/core_cm4.h **** 
1026:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Pos         8U                                         /*!< DWT FUN
1027:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Msk        (0x1UL << DWT_FUNCTION_DATAVMATCH_Pos)      /*!< DWT FUN
1028:Drivers/CMSIS/Include/core_cm4.h **** 
1029:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Pos           7U                                         /*!< DWT FUN
1030:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Msk          (0x1UL << DWT_FUNCTION_CYCMATCH_Pos)        /*!< DWT FUN
1031:Drivers/CMSIS/Include/core_cm4.h **** 
1032:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Pos          5U                                         /*!< DWT FUN
1033:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Msk         (0x1UL << DWT_FUNCTION_EMITRANGE_Pos)       /*!< DWT FUN
1034:Drivers/CMSIS/Include/core_cm4.h **** 
1035:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Pos           0U                                         /*!< DWT FUN
1036:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Msk          (0xFUL /*<< DWT_FUNCTION_FUNCTION_Pos*/)    /*!< DWT FUN
1037:Drivers/CMSIS/Include/core_cm4.h **** 
1038:Drivers/CMSIS/Include/core_cm4.h **** /*@}*/ /* end of group CMSIS_DWT */
1039:Drivers/CMSIS/Include/core_cm4.h **** 
1040:Drivers/CMSIS/Include/core_cm4.h **** 
1041:Drivers/CMSIS/Include/core_cm4.h **** /**
1042:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
1043:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_TPI     Trace Port Interface (TPI)
1044:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Trace Port Interface (TPI)
1045:Drivers/CMSIS/Include/core_cm4.h ****   @{
1046:Drivers/CMSIS/Include/core_cm4.h ****  */
1047:Drivers/CMSIS/Include/core_cm4.h **** 
1048:Drivers/CMSIS/Include/core_cm4.h **** /**
1049:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Trace Port Interface Register (TPI).
1050:Drivers/CMSIS/Include/core_cm4.h ****  */
1051:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
1052:Drivers/CMSIS/Include/core_cm4.h **** {
1053:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t SSPSR;                  /*!< Offset: 0x000 (R/ )  Supported Parallel Port Size Reg
1054:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CSPSR;                  /*!< Offset: 0x004 (R/W)  Current Parallel Port Size Regis
1055:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[2U];
1056:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ACPR;                   /*!< Offset: 0x010 (R/W)  Asynchronous Clock Prescaler Reg
ARM GAS  /tmp/ccACqZav.s 			page 20


1057:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED1[55U];
1058:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t SPPR;                   /*!< Offset: 0x0F0 (R/W)  Selected Pin Protocol Register *
1059:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED2[131U];
1060:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t FFSR;                   /*!< Offset: 0x300 (R/ )  Formatter and Flush Status Regis
1061:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FFCR;                   /*!< Offset: 0x304 (R/W)  Formatter and Flush Control Regi
1062:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t FSCR;                   /*!< Offset: 0x308 (R/ )  Formatter Synchronization Counte
1063:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED3[759U];
1064:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t TRIGGER;                /*!< Offset: 0xEE8 (R/ )  TRIGGER Register */
1065:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t FIFO0;                  /*!< Offset: 0xEEC (R/ )  Integration ETM Data */
1066:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t ITATBCTR2;              /*!< Offset: 0xEF0 (R/ )  ITATBCTR2 */
1067:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED4[1U];
1068:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t ITATBCTR0;              /*!< Offset: 0xEF8 (R/ )  ITATBCTR0 */
1069:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t FIFO1;                  /*!< Offset: 0xEFC (R/ )  Integration ITM Data */
1070:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ITCTRL;                 /*!< Offset: 0xF00 (R/W)  Integration Mode Control */
1071:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED5[39U];
1072:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CLAIMSET;               /*!< Offset: 0xFA0 (R/W)  Claim tag set */
1073:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CLAIMCLR;               /*!< Offset: 0xFA4 (R/W)  Claim tag clear */
1074:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED7[8U];
1075:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t DEVID;                  /*!< Offset: 0xFC8 (R/ )  TPIU_DEVID */
1076:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t DEVTYPE;                /*!< Offset: 0xFCC (R/ )  TPIU_DEVTYPE */
1077:Drivers/CMSIS/Include/core_cm4.h **** } TPI_Type;
1078:Drivers/CMSIS/Include/core_cm4.h **** 
1079:Drivers/CMSIS/Include/core_cm4.h **** /* TPI Asynchronous Clock Prescaler Register Definitions */
1080:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ACPR_PRESCALER_Pos              0U                                         /*!< TPI ACP
1081:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ACPR_PRESCALER_Msk             (0x1FFFUL /*<< TPI_ACPR_PRESCALER_Pos*/)    /*!< TPI ACP
1082:Drivers/CMSIS/Include/core_cm4.h **** 
1083:Drivers/CMSIS/Include/core_cm4.h **** /* TPI Selected Pin Protocol Register Definitions */
1084:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_SPPR_TXMODE_Pos                 0U                                         /*!< TPI SPP
1085:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_SPPR_TXMODE_Msk                (0x3UL /*<< TPI_SPPR_TXMODE_Pos*/)          /*!< TPI SPP
1086:Drivers/CMSIS/Include/core_cm4.h **** 
1087:Drivers/CMSIS/Include/core_cm4.h **** /* TPI Formatter and Flush Status Register Definitions */
1088:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FtNonStop_Pos              3U                                         /*!< TPI FFS
1089:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FtNonStop_Msk             (0x1UL << TPI_FFSR_FtNonStop_Pos)           /*!< TPI FFS
1090:Drivers/CMSIS/Include/core_cm4.h **** 
1091:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_TCPresent_Pos              2U                                         /*!< TPI FFS
1092:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_TCPresent_Msk             (0x1UL << TPI_FFSR_TCPresent_Pos)           /*!< TPI FFS
1093:Drivers/CMSIS/Include/core_cm4.h **** 
1094:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FtStopped_Pos              1U                                         /*!< TPI FFS
1095:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FtStopped_Msk             (0x1UL << TPI_FFSR_FtStopped_Pos)           /*!< TPI FFS
1096:Drivers/CMSIS/Include/core_cm4.h **** 
1097:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FlInProg_Pos               0U                                         /*!< TPI FFS
1098:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FlInProg_Msk              (0x1UL /*<< TPI_FFSR_FlInProg_Pos*/)        /*!< TPI FFS
1099:Drivers/CMSIS/Include/core_cm4.h **** 
1100:Drivers/CMSIS/Include/core_cm4.h **** /* TPI Formatter and Flush Control Register Definitions */
1101:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFCR_TrigIn_Pos                 8U                                         /*!< TPI FFC
1102:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFCR_TrigIn_Msk                (0x1UL << TPI_FFCR_TrigIn_Pos)              /*!< TPI FFC
1103:Drivers/CMSIS/Include/core_cm4.h **** 
1104:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFCR_EnFCont_Pos                1U                                         /*!< TPI FFC
1105:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFCR_EnFCont_Msk               (0x1UL << TPI_FFCR_EnFCont_Pos)             /*!< TPI FFC
1106:Drivers/CMSIS/Include/core_cm4.h **** 
1107:Drivers/CMSIS/Include/core_cm4.h **** /* TPI TRIGGER Register Definitions */
1108:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Pos             0U                                         /*!< TPI TRI
1109:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Msk            (0x1UL /*<< TPI_TRIGGER_TRIGGER_Pos*/)      /*!< TPI TRI
1110:Drivers/CMSIS/Include/core_cm4.h **** 
1111:Drivers/CMSIS/Include/core_cm4.h **** /* TPI Integration ETM Data Register Definitions (FIFO0) */
1112:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1113:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Msk          (0x1UL << TPI_FIFO0_ITM_ATVALID_Pos)        /*!< TPI FIF
ARM GAS  /tmp/ccACqZav.s 			page 21


1114:Drivers/CMSIS/Include/core_cm4.h **** 
1115:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1116:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Msk        (0x3UL << TPI_FIFO0_ITM_bytecount_Pos)      /*!< TPI FIF
1117:Drivers/CMSIS/Include/core_cm4.h **** 
1118:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1119:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Msk          (0x1UL << TPI_FIFO0_ETM_ATVALID_Pos)        /*!< TPI FIF
1120:Drivers/CMSIS/Include/core_cm4.h **** 
1121:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1122:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Msk        (0x3UL << TPI_FIFO0_ETM_bytecount_Pos)      /*!< TPI FIF
1123:Drivers/CMSIS/Include/core_cm4.h **** 
1124:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM2_Pos                 16U                                         /*!< TPI FIF
1125:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM2_Msk                 (0xFFUL << TPI_FIFO0_ETM2_Pos)              /*!< TPI FIF
1126:Drivers/CMSIS/Include/core_cm4.h **** 
1127:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM1_Pos                  8U                                         /*!< TPI FIF
1128:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM1_Msk                 (0xFFUL << TPI_FIFO0_ETM1_Pos)              /*!< TPI FIF
1129:Drivers/CMSIS/Include/core_cm4.h **** 
1130:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM0_Pos                  0U                                         /*!< TPI FIF
1131:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM0_Msk                 (0xFFUL /*<< TPI_FIFO0_ETM0_Pos*/)          /*!< TPI FIF
1132:Drivers/CMSIS/Include/core_cm4.h **** 
1133:Drivers/CMSIS/Include/core_cm4.h **** /* TPI ITATBCTR2 Register Definitions */
1134:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY2_Pos          0U                                         /*!< TPI ITA
1135:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY2_Msk         (0x1UL /*<< TPI_ITATBCTR2_ATREADY2_Pos*/)   /*!< TPI ITA
1136:Drivers/CMSIS/Include/core_cm4.h **** 
1137:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY1_Pos          0U                                         /*!< TPI ITA
1138:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY1_Msk         (0x1UL /*<< TPI_ITATBCTR2_ATREADY1_Pos*/)   /*!< TPI ITA
1139:Drivers/CMSIS/Include/core_cm4.h **** 
1140:Drivers/CMSIS/Include/core_cm4.h **** /* TPI Integration ITM Data Register Definitions (FIFO1) */
1141:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1142:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Msk          (0x1UL << TPI_FIFO1_ITM_ATVALID_Pos)        /*!< TPI FIF
1143:Drivers/CMSIS/Include/core_cm4.h **** 
1144:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1145:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Msk        (0x3UL << TPI_FIFO1_ITM_bytecount_Pos)      /*!< TPI FIF
1146:Drivers/CMSIS/Include/core_cm4.h **** 
1147:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1148:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Msk          (0x1UL << TPI_FIFO1_ETM_ATVALID_Pos)        /*!< TPI FIF
1149:Drivers/CMSIS/Include/core_cm4.h **** 
1150:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1151:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Msk        (0x3UL << TPI_FIFO1_ETM_bytecount_Pos)      /*!< TPI FIF
1152:Drivers/CMSIS/Include/core_cm4.h **** 
1153:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM2_Pos                 16U                                         /*!< TPI FIF
1154:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM2_Msk                 (0xFFUL << TPI_FIFO1_ITM2_Pos)              /*!< TPI FIF
1155:Drivers/CMSIS/Include/core_cm4.h **** 
1156:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM1_Pos                  8U                                         /*!< TPI FIF
1157:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM1_Msk                 (0xFFUL << TPI_FIFO1_ITM1_Pos)              /*!< TPI FIF
1158:Drivers/CMSIS/Include/core_cm4.h **** 
1159:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM0_Pos                  0U                                         /*!< TPI FIF
1160:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM0_Msk                 (0xFFUL /*<< TPI_FIFO1_ITM0_Pos*/)          /*!< TPI FIF
1161:Drivers/CMSIS/Include/core_cm4.h **** 
1162:Drivers/CMSIS/Include/core_cm4.h **** /* TPI ITATBCTR0 Register Definitions */
1163:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY2_Pos          0U                                         /*!< TPI ITA
1164:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY2_Msk         (0x1UL /*<< TPI_ITATBCTR0_ATREADY2_Pos*/)   /*!< TPI ITA
1165:Drivers/CMSIS/Include/core_cm4.h **** 
1166:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY1_Pos          0U                                         /*!< TPI ITA
1167:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY1_Msk         (0x1UL /*<< TPI_ITATBCTR0_ATREADY1_Pos*/)   /*!< TPI ITA
1168:Drivers/CMSIS/Include/core_cm4.h **** 
1169:Drivers/CMSIS/Include/core_cm4.h **** /* TPI Integration Mode Control Register Definitions */
1170:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITCTRL_Mode_Pos                 0U                                         /*!< TPI ITC
ARM GAS  /tmp/ccACqZav.s 			page 22


1171:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITCTRL_Mode_Msk                (0x3UL /*<< TPI_ITCTRL_Mode_Pos*/)          /*!< TPI ITC
1172:Drivers/CMSIS/Include/core_cm4.h **** 
1173:Drivers/CMSIS/Include/core_cm4.h **** /* TPI DEVID Register Definitions */
1174:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_NRZVALID_Pos             11U                                         /*!< TPI DEV
1175:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_NRZVALID_Msk             (0x1UL << TPI_DEVID_NRZVALID_Pos)           /*!< TPI DEV
1176:Drivers/CMSIS/Include/core_cm4.h **** 
1177:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_MANCVALID_Pos            10U                                         /*!< TPI DEV
1178:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_MANCVALID_Msk            (0x1UL << TPI_DEVID_MANCVALID_Pos)          /*!< TPI DEV
1179:Drivers/CMSIS/Include/core_cm4.h **** 
1180:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_PTINVALID_Pos             9U                                         /*!< TPI DEV
1181:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_PTINVALID_Msk            (0x1UL << TPI_DEVID_PTINVALID_Pos)          /*!< TPI DEV
1182:Drivers/CMSIS/Include/core_cm4.h **** 
1183:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_MinBufSz_Pos              6U                                         /*!< TPI DEV
1184:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_MinBufSz_Msk             (0x7UL << TPI_DEVID_MinBufSz_Pos)           /*!< TPI DEV
1185:Drivers/CMSIS/Include/core_cm4.h **** 
1186:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_AsynClkIn_Pos             5U                                         /*!< TPI DEV
1187:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_AsynClkIn_Msk            (0x1UL << TPI_DEVID_AsynClkIn_Pos)          /*!< TPI DEV
1188:Drivers/CMSIS/Include/core_cm4.h **** 
1189:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_NrTraceInput_Pos          0U                                         /*!< TPI DEV
1190:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_NrTraceInput_Msk         (0x1FUL /*<< TPI_DEVID_NrTraceInput_Pos*/)  /*!< TPI DEV
1191:Drivers/CMSIS/Include/core_cm4.h **** 
1192:Drivers/CMSIS/Include/core_cm4.h **** /* TPI DEVTYPE Register Definitions */
1193:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVTYPE_SubType_Pos             4U                                         /*!< TPI DEV
1194:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVTYPE_SubType_Msk            (0xFUL /*<< TPI_DEVTYPE_SubType_Pos*/)      /*!< TPI DEV
1195:Drivers/CMSIS/Include/core_cm4.h **** 
1196:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVTYPE_MajorType_Pos           0U                                         /*!< TPI DEV
1197:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVTYPE_MajorType_Msk          (0xFUL << TPI_DEVTYPE_MajorType_Pos)        /*!< TPI DEV
1198:Drivers/CMSIS/Include/core_cm4.h **** 
1199:Drivers/CMSIS/Include/core_cm4.h **** /*@}*/ /* end of group CMSIS_TPI */
1200:Drivers/CMSIS/Include/core_cm4.h **** 
1201:Drivers/CMSIS/Include/core_cm4.h **** 
1202:Drivers/CMSIS/Include/core_cm4.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1203:Drivers/CMSIS/Include/core_cm4.h **** /**
1204:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
1205:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_MPU     Memory Protection Unit (MPU)
1206:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Memory Protection Unit (MPU)
1207:Drivers/CMSIS/Include/core_cm4.h ****   @{
1208:Drivers/CMSIS/Include/core_cm4.h ****  */
1209:Drivers/CMSIS/Include/core_cm4.h **** 
1210:Drivers/CMSIS/Include/core_cm4.h **** /**
1211:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Memory Protection Unit (MPU).
1212:Drivers/CMSIS/Include/core_cm4.h ****  */
1213:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
1214:Drivers/CMSIS/Include/core_cm4.h **** {
1215:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t TYPE;                   /*!< Offset: 0x000 (R/ )  MPU Type Register */
1216:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x004 (R/W)  MPU Control Register */
1217:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RNR;                    /*!< Offset: 0x008 (R/W)  MPU Region RNRber Register */
1218:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RBAR;                   /*!< Offset: 0x00C (R/W)  MPU Region Base Address Register
1219:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RASR;                   /*!< Offset: 0x010 (R/W)  MPU Region Attribute and Size Re
1220:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RBAR_A1;                /*!< Offset: 0x014 (R/W)  MPU Alias 1 Region Base Address 
1221:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RASR_A1;                /*!< Offset: 0x018 (R/W)  MPU Alias 1 Region Attribute and
1222:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RBAR_A2;                /*!< Offset: 0x01C (R/W)  MPU Alias 2 Region Base Address 
1223:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RASR_A2;                /*!< Offset: 0x020 (R/W)  MPU Alias 2 Region Attribute and
1224:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RBAR_A3;                /*!< Offset: 0x024 (R/W)  MPU Alias 3 Region Base Address 
1225:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RASR_A3;                /*!< Offset: 0x028 (R/W)  MPU Alias 3 Region Attribute and
1226:Drivers/CMSIS/Include/core_cm4.h **** } MPU_Type;
1227:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/ccACqZav.s 			page 23


1228:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_RALIASES                  4U
1229:Drivers/CMSIS/Include/core_cm4.h **** 
1230:Drivers/CMSIS/Include/core_cm4.h **** /* MPU Type Register Definitions */
1231:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_IREGION_Pos               16U                                            /*!< MPU 
1232:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_IREGION_Msk               (0xFFUL << MPU_TYPE_IREGION_Pos)               /*!< MPU 
1233:Drivers/CMSIS/Include/core_cm4.h **** 
1234:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_DREGION_Pos                8U                                            /*!< MPU 
1235:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_DREGION_Msk               (0xFFUL << MPU_TYPE_DREGION_Pos)               /*!< MPU 
1236:Drivers/CMSIS/Include/core_cm4.h **** 
1237:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_SEPARATE_Pos               0U                                            /*!< MPU 
1238:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_SEPARATE_Msk              (1UL /*<< MPU_TYPE_SEPARATE_Pos*/)             /*!< MPU 
1239:Drivers/CMSIS/Include/core_cm4.h **** 
1240:Drivers/CMSIS/Include/core_cm4.h **** /* MPU Control Register Definitions */
1241:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2U                                            /*!< MPU 
1242:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1UL << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
1243:Drivers/CMSIS/Include/core_cm4.h **** 
1244:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_HFNMIENA_Pos               1U                                            /*!< MPU 
1245:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_HFNMIENA_Msk              (1UL << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
1246:Drivers/CMSIS/Include/core_cm4.h **** 
1247:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_ENABLE_Pos                 0U                                            /*!< MPU 
1248:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_ENABLE_Msk                (1UL /*<< MPU_CTRL_ENABLE_Pos*/)               /*!< MPU 
1249:Drivers/CMSIS/Include/core_cm4.h **** 
1250:Drivers/CMSIS/Include/core_cm4.h **** /* MPU Region Number Register Definitions */
1251:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RNR_REGION_Pos                  0U                                            /*!< MPU 
1252:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RNR_REGION_Msk                 (0xFFUL /*<< MPU_RNR_REGION_Pos*/)             /*!< MPU 
1253:Drivers/CMSIS/Include/core_cm4.h **** 
1254:Drivers/CMSIS/Include/core_cm4.h **** /* MPU Region Base Address Register Definitions */
1255:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_ADDR_Pos                   5U                                            /*!< MPU 
1256:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFUL << MPU_RBAR_ADDR_Pos)             /*!< MPU 
1257:Drivers/CMSIS/Include/core_cm4.h **** 
1258:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_VALID_Pos                  4U                                            /*!< MPU 
1259:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_VALID_Msk                 (1UL << MPU_RBAR_VALID_Pos)                    /*!< MPU 
1260:Drivers/CMSIS/Include/core_cm4.h **** 
1261:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_REGION_Pos                 0U                                            /*!< MPU 
1262:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_REGION_Msk                (0xFUL /*<< MPU_RBAR_REGION_Pos*/)             /*!< MPU 
1263:Drivers/CMSIS/Include/core_cm4.h **** 
1264:Drivers/CMSIS/Include/core_cm4.h **** /* MPU Region Attribute and Size Register Definitions */
1265:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_ATTRS_Pos                 16U                                            /*!< MPU 
1266:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_ATTRS_Msk                 (0xFFFFUL << MPU_RASR_ATTRS_Pos)               /*!< MPU 
1267:Drivers/CMSIS/Include/core_cm4.h **** 
1268:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_XN_Pos                    28U                                            /*!< MPU 
1269:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_XN_Msk                    (1UL << MPU_RASR_XN_Pos)                       /*!< MPU 
1270:Drivers/CMSIS/Include/core_cm4.h **** 
1271:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_AP_Pos                    24U                                            /*!< MPU 
1272:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_AP_Msk                    (0x7UL << MPU_RASR_AP_Pos)                     /*!< MPU 
1273:Drivers/CMSIS/Include/core_cm4.h **** 
1274:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_TEX_Pos                   19U                                            /*!< MPU 
1275:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_TEX_Msk                   (0x7UL << MPU_RASR_TEX_Pos)                    /*!< MPU 
1276:Drivers/CMSIS/Include/core_cm4.h **** 
1277:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_S_Pos                     18U                                            /*!< MPU 
1278:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_S_Msk                     (1UL << MPU_RASR_S_Pos)                        /*!< MPU 
1279:Drivers/CMSIS/Include/core_cm4.h **** 
1280:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_C_Pos                     17U                                            /*!< MPU 
1281:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_C_Msk                     (1UL << MPU_RASR_C_Pos)                        /*!< MPU 
1282:Drivers/CMSIS/Include/core_cm4.h **** 
1283:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_B_Pos                     16U                                            /*!< MPU 
1284:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_B_Msk                     (1UL << MPU_RASR_B_Pos)                        /*!< MPU 
ARM GAS  /tmp/ccACqZav.s 			page 24


1285:Drivers/CMSIS/Include/core_cm4.h **** 
1286:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_SRD_Pos                    8U                                            /*!< MPU 
1287:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_SRD_Msk                   (0xFFUL << MPU_RASR_SRD_Pos)                   /*!< MPU 
1288:Drivers/CMSIS/Include/core_cm4.h **** 
1289:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_SIZE_Pos                   1U                                            /*!< MPU 
1290:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_SIZE_Msk                  (0x1FUL << MPU_RASR_SIZE_Pos)                  /*!< MPU 
1291:Drivers/CMSIS/Include/core_cm4.h **** 
1292:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_ENABLE_Pos                 0U                                            /*!< MPU 
1293:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_ENABLE_Msk                (1UL /*<< MPU_RASR_ENABLE_Pos*/)               /*!< MPU 
1294:Drivers/CMSIS/Include/core_cm4.h **** 
1295:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_MPU */
1296:Drivers/CMSIS/Include/core_cm4.h **** #endif /* defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U) */
1297:Drivers/CMSIS/Include/core_cm4.h **** 
1298:Drivers/CMSIS/Include/core_cm4.h **** 
1299:Drivers/CMSIS/Include/core_cm4.h **** /**
1300:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
1301:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_FPU     Floating Point Unit (FPU)
1302:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Floating Point Unit (FPU)
1303:Drivers/CMSIS/Include/core_cm4.h ****   @{
1304:Drivers/CMSIS/Include/core_cm4.h ****  */
1305:Drivers/CMSIS/Include/core_cm4.h **** 
1306:Drivers/CMSIS/Include/core_cm4.h **** /**
1307:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Floating Point Unit (FPU).
1308:Drivers/CMSIS/Include/core_cm4.h ****  */
1309:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
1310:Drivers/CMSIS/Include/core_cm4.h **** {
1311:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[1U];
1312:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FPCCR;                  /*!< Offset: 0x004 (R/W)  Floating-Point Context Control R
1313:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FPCAR;                  /*!< Offset: 0x008 (R/W)  Floating-Point Context Address R
1314:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FPDSCR;                 /*!< Offset: 0x00C (R/W)  Floating-Point Default Status Co
1315:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t MVFR0;                  /*!< Offset: 0x010 (R/ )  Media and FP Feature Register 0 
1316:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t MVFR1;                  /*!< Offset: 0x014 (R/ )  Media and FP Feature Register 1 
1317:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t MVFR2;                  /*!< Offset: 0x018 (R/ )  Media and FP Feature Register 2 
1318:Drivers/CMSIS/Include/core_cm4.h **** } FPU_Type;
1319:Drivers/CMSIS/Include/core_cm4.h **** 
1320:Drivers/CMSIS/Include/core_cm4.h **** /* Floating-Point Context Control Register Definitions */
1321:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_ASPEN_Pos                31U                                            /*!< FPCC
1322:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_ASPEN_Msk                (1UL << FPU_FPCCR_ASPEN_Pos)                   /*!< FPCC
1323:Drivers/CMSIS/Include/core_cm4.h **** 
1324:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_LSPEN_Pos                30U                                            /*!< FPCC
1325:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_LSPEN_Msk                (1UL << FPU_FPCCR_LSPEN_Pos)                   /*!< FPCC
1326:Drivers/CMSIS/Include/core_cm4.h **** 
1327:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_MONRDY_Pos                8U                                            /*!< FPCC
1328:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_MONRDY_Msk               (1UL << FPU_FPCCR_MONRDY_Pos)                  /*!< FPCC
1329:Drivers/CMSIS/Include/core_cm4.h **** 
1330:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_BFRDY_Pos                 6U                                            /*!< FPCC
1331:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_BFRDY_Msk                (1UL << FPU_FPCCR_BFRDY_Pos)                   /*!< FPCC
1332:Drivers/CMSIS/Include/core_cm4.h **** 
1333:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_MMRDY_Pos                 5U                                            /*!< FPCC
1334:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_MMRDY_Msk                (1UL << FPU_FPCCR_MMRDY_Pos)                   /*!< FPCC
1335:Drivers/CMSIS/Include/core_cm4.h **** 
1336:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_HFRDY_Pos                 4U                                            /*!< FPCC
1337:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_HFRDY_Msk                (1UL << FPU_FPCCR_HFRDY_Pos)                   /*!< FPCC
1338:Drivers/CMSIS/Include/core_cm4.h **** 
1339:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_THREAD_Pos                3U                                            /*!< FPCC
1340:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_THREAD_Msk               (1UL << FPU_FPCCR_THREAD_Pos)                  /*!< FPCC
1341:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/ccACqZav.s 			page 25


1342:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_USER_Pos                  1U                                            /*!< FPCC
1343:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_USER_Msk                 (1UL << FPU_FPCCR_USER_Pos)                    /*!< FPCC
1344:Drivers/CMSIS/Include/core_cm4.h **** 
1345:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_LSPACT_Pos                0U                                            /*!< FPCC
1346:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_LSPACT_Msk               (1UL /*<< FPU_FPCCR_LSPACT_Pos*/)              /*!< FPCC
1347:Drivers/CMSIS/Include/core_cm4.h **** 
1348:Drivers/CMSIS/Include/core_cm4.h **** /* Floating-Point Context Address Register Definitions */
1349:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCAR_ADDRESS_Pos               3U                                            /*!< FPCA
1350:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCAR_ADDRESS_Msk              (0x1FFFFFFFUL << FPU_FPCAR_ADDRESS_Pos)        /*!< FPCA
1351:Drivers/CMSIS/Include/core_cm4.h **** 
1352:Drivers/CMSIS/Include/core_cm4.h **** /* Floating-Point Default Status Control Register Definitions */
1353:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_AHP_Pos                 26U                                            /*!< FPDS
1354:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_AHP_Msk                 (1UL << FPU_FPDSCR_AHP_Pos)                    /*!< FPDS
1355:Drivers/CMSIS/Include/core_cm4.h **** 
1356:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_DN_Pos                  25U                                            /*!< FPDS
1357:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_DN_Msk                  (1UL << FPU_FPDSCR_DN_Pos)                     /*!< FPDS
1358:Drivers/CMSIS/Include/core_cm4.h **** 
1359:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_FZ_Pos                  24U                                            /*!< FPDS
1360:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_FZ_Msk                  (1UL << FPU_FPDSCR_FZ_Pos)                     /*!< FPDS
1361:Drivers/CMSIS/Include/core_cm4.h **** 
1362:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_RMode_Pos               22U                                            /*!< FPDS
1363:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_RMode_Msk               (3UL << FPU_FPDSCR_RMode_Pos)                  /*!< FPDS
1364:Drivers/CMSIS/Include/core_cm4.h **** 
1365:Drivers/CMSIS/Include/core_cm4.h **** /* Media and FP Feature Register 0 Definitions */
1366:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Pos    28U                                            /*!< MVFR
1367:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Msk    (0xFUL << FPU_MVFR0_FP_rounding_modes_Pos)     /*!< MVFR
1368:Drivers/CMSIS/Include/core_cm4.h **** 
1369:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Short_vectors_Pos        24U                                            /*!< MVFR
1370:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Short_vectors_Msk        (0xFUL << FPU_MVFR0_Short_vectors_Pos)         /*!< MVFR
1371:Drivers/CMSIS/Include/core_cm4.h **** 
1372:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Square_root_Pos          20U                                            /*!< MVFR
1373:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Square_root_Msk          (0xFUL << FPU_MVFR0_Square_root_Pos)           /*!< MVFR
1374:Drivers/CMSIS/Include/core_cm4.h **** 
1375:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Divide_Pos               16U                                            /*!< MVFR
1376:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Divide_Msk               (0xFUL << FPU_MVFR0_Divide_Pos)                /*!< MVFR
1377:Drivers/CMSIS/Include/core_cm4.h **** 
1378:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Pos    12U                                            /*!< MVFR
1379:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Msk    (0xFUL << FPU_MVFR0_FP_excep_trapping_Pos)     /*!< MVFR
1380:Drivers/CMSIS/Include/core_cm4.h **** 
1381:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Double_precision_Pos      8U                                            /*!< MVFR
1382:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Double_precision_Msk     (0xFUL << FPU_MVFR0_Double_precision_Pos)      /*!< MVFR
1383:Drivers/CMSIS/Include/core_cm4.h **** 
1384:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Single_precision_Pos      4U                                            /*!< MVFR
1385:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Single_precision_Msk     (0xFUL << FPU_MVFR0_Single_precision_Pos)      /*!< MVFR
1386:Drivers/CMSIS/Include/core_cm4.h **** 
1387:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Pos      0U                                            /*!< MVFR
1388:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Msk     (0xFUL /*<< FPU_MVFR0_A_SIMD_registers_Pos*/)  /*!< MVFR
1389:Drivers/CMSIS/Include/core_cm4.h **** 
1390:Drivers/CMSIS/Include/core_cm4.h **** /* Media and FP Feature Register 1 Definitions */
1391:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Pos         28U                                            /*!< MVFR
1392:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Msk         (0xFUL << FPU_MVFR1_FP_fused_MAC_Pos)          /*!< MVFR
1393:Drivers/CMSIS/Include/core_cm4.h **** 
1394:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Pos              24U                                            /*!< MVFR
1395:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Msk              (0xFUL << FPU_MVFR1_FP_HPFP_Pos)               /*!< MVFR
1396:Drivers/CMSIS/Include/core_cm4.h **** 
1397:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Pos            4U                                            /*!< MVFR
1398:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Msk           (0xFUL << FPU_MVFR1_D_NaN_mode_Pos)            /*!< MVFR
ARM GAS  /tmp/ccACqZav.s 			page 26


1399:Drivers/CMSIS/Include/core_cm4.h **** 
1400:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Pos              0U                                            /*!< MVFR
1401:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Msk             (0xFUL /*<< FPU_MVFR1_FtZ_mode_Pos*/)          /*!< MVFR
1402:Drivers/CMSIS/Include/core_cm4.h **** 
1403:Drivers/CMSIS/Include/core_cm4.h **** /* Media and FP Feature Register 2 Definitions */
1404:Drivers/CMSIS/Include/core_cm4.h **** 
1405:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR2_VFP_Misc_Pos              4U                                            /*!< MVFR
1406:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR2_VFP_Misc_Msk             (0xFUL << FPU_MVFR2_VFP_Misc_Pos)              /*!< MVFR
1407:Drivers/CMSIS/Include/core_cm4.h **** 
1408:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_FPU */
1409:Drivers/CMSIS/Include/core_cm4.h **** 
1410:Drivers/CMSIS/Include/core_cm4.h **** 
1411:Drivers/CMSIS/Include/core_cm4.h **** /**
1412:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
1413:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
1414:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Core Debug Registers
1415:Drivers/CMSIS/Include/core_cm4.h ****   @{
1416:Drivers/CMSIS/Include/core_cm4.h ****  */
1417:Drivers/CMSIS/Include/core_cm4.h **** 
1418:Drivers/CMSIS/Include/core_cm4.h **** /**
1419:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Core Debug Register (CoreDebug).
1420:Drivers/CMSIS/Include/core_cm4.h ****  */
1421:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
1422:Drivers/CMSIS/Include/core_cm4.h **** {
1423:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t DHCSR;                  /*!< Offset: 0x000 (R/W)  Debug Halting Control and Status
1424:Drivers/CMSIS/Include/core_cm4.h ****   __OM  uint32_t DCRSR;                  /*!< Offset: 0x004 ( /W)  Debug Core Register Selector Reg
1425:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t DCRDR;                  /*!< Offset: 0x008 (R/W)  Debug Core Register Data Registe
1426:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t DEMCR;                  /*!< Offset: 0x00C (R/W)  Debug Exception and Monitor Cont
1427:Drivers/CMSIS/Include/core_cm4.h **** } CoreDebug_Type;
1428:Drivers/CMSIS/Include/core_cm4.h **** 
1429:Drivers/CMSIS/Include/core_cm4.h **** /* Debug Halting Control and Status Register Definitions */
1430:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16U                                            /*!< Core
1431:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFUL << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
1432:Drivers/CMSIS/Include/core_cm4.h **** 
1433:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25U                                            /*!< Core
1434:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1UL << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
1435:Drivers/CMSIS/Include/core_cm4.h **** 
1436:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24U                                            /*!< Core
1437:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1UL << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
1438:Drivers/CMSIS/Include/core_cm4.h **** 
1439:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19U                                            /*!< Core
1440:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1UL << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
1441:Drivers/CMSIS/Include/core_cm4.h **** 
1442:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18U                                            /*!< Core
1443:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1UL << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
1444:Drivers/CMSIS/Include/core_cm4.h **** 
1445:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17U                                            /*!< Core
1446:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1UL << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
1447:Drivers/CMSIS/Include/core_cm4.h **** 
1448:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16U                                            /*!< Core
1449:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1UL << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
1450:Drivers/CMSIS/Include/core_cm4.h **** 
1451:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5U                                            /*!< Core
1452:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1UL << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
1453:Drivers/CMSIS/Include/core_cm4.h **** 
1454:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3U                                            /*!< Core
1455:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1UL << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
ARM GAS  /tmp/ccACqZav.s 			page 27


1456:Drivers/CMSIS/Include/core_cm4.h **** 
1457:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2U                                            /*!< Core
1458:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1UL << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
1459:Drivers/CMSIS/Include/core_cm4.h **** 
1460:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1U                                            /*!< Core
1461:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1UL << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
1462:Drivers/CMSIS/Include/core_cm4.h **** 
1463:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0U                                            /*!< Core
1464:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1UL /*<< CoreDebug_DHCSR_C_DEBUGEN_Pos*/)     /*!< Core
1465:Drivers/CMSIS/Include/core_cm4.h **** 
1466:Drivers/CMSIS/Include/core_cm4.h **** /* Debug Core Register Selector Register Definitions */
1467:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16U                                            /*!< Core
1468:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1UL << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
1469:Drivers/CMSIS/Include/core_cm4.h **** 
1470:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0U                                            /*!< Core
1471:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1FUL /*<< CoreDebug_DCRSR_REGSEL_Pos*/)     /*!< Core
1472:Drivers/CMSIS/Include/core_cm4.h **** 
1473:Drivers/CMSIS/Include/core_cm4.h **** /* Debug Exception and Monitor Control Register Definitions */
1474:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24U                                            /*!< Core
1475:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1UL << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
1476:Drivers/CMSIS/Include/core_cm4.h **** 
1477:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19U                                            /*!< Core
1478:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1UL << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
1479:Drivers/CMSIS/Include/core_cm4.h **** 
1480:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18U                                            /*!< Core
1481:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1UL << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
1482:Drivers/CMSIS/Include/core_cm4.h **** 
1483:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17U                                            /*!< Core
1484:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1UL << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
1485:Drivers/CMSIS/Include/core_cm4.h **** 
1486:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16U                                            /*!< Core
1487:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1UL << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
1488:Drivers/CMSIS/Include/core_cm4.h **** 
1489:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10U                                            /*!< Core
1490:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1UL << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
1491:Drivers/CMSIS/Include/core_cm4.h **** 
1492:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9U                                            /*!< Core
1493:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1UL << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
1494:Drivers/CMSIS/Include/core_cm4.h **** 
1495:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8U                                            /*!< Core
1496:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1UL << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
1497:Drivers/CMSIS/Include/core_cm4.h **** 
1498:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7U                                            /*!< Core
1499:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1UL << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
1500:Drivers/CMSIS/Include/core_cm4.h **** 
1501:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6U                                            /*!< Core
1502:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1UL << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
1503:Drivers/CMSIS/Include/core_cm4.h **** 
1504:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5U                                            /*!< Core
1505:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1UL << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
1506:Drivers/CMSIS/Include/core_cm4.h **** 
1507:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4U                                            /*!< Core
1508:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1UL << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
1509:Drivers/CMSIS/Include/core_cm4.h **** 
1510:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0U                                            /*!< Core
1511:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1UL /*<< CoreDebug_DEMCR_VC_CORERESET_Pos*/)  /*!< Core
1512:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/ccACqZav.s 			page 28


1513:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_CoreDebug */
1514:Drivers/CMSIS/Include/core_cm4.h **** 
1515:Drivers/CMSIS/Include/core_cm4.h **** 
1516:Drivers/CMSIS/Include/core_cm4.h **** /**
1517:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup    CMSIS_core_register
1518:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup   CMSIS_core_bitfield     Core register bit field macros
1519:Drivers/CMSIS/Include/core_cm4.h ****   \brief      Macros for use with bit field definitions (xxx_Pos, xxx_Msk).
1520:Drivers/CMSIS/Include/core_cm4.h ****   @{
1521:Drivers/CMSIS/Include/core_cm4.h ****  */
1522:Drivers/CMSIS/Include/core_cm4.h **** 
1523:Drivers/CMSIS/Include/core_cm4.h **** /**
1524:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Mask and shift a bit field value for use in a register bit range.
1525:Drivers/CMSIS/Include/core_cm4.h ****   \param[in] field  Name of the register bit field.
1526:Drivers/CMSIS/Include/core_cm4.h ****   \param[in] value  Value of the bit field. This parameter is interpreted as an uint32_t type.
1527:Drivers/CMSIS/Include/core_cm4.h ****   \return           Masked and shifted value.
1528:Drivers/CMSIS/Include/core_cm4.h **** */
1529:Drivers/CMSIS/Include/core_cm4.h **** #define _VAL2FLD(field, value)    (((uint32_t)(value) << field ## _Pos) & field ## _Msk)
1530:Drivers/CMSIS/Include/core_cm4.h **** 
1531:Drivers/CMSIS/Include/core_cm4.h **** /**
1532:Drivers/CMSIS/Include/core_cm4.h ****   \brief     Mask and shift a register value to extract a bit filed value.
1533:Drivers/CMSIS/Include/core_cm4.h ****   \param[in] field  Name of the register bit field.
1534:Drivers/CMSIS/Include/core_cm4.h ****   \param[in] value  Value of register. This parameter is interpreted as an uint32_t type.
1535:Drivers/CMSIS/Include/core_cm4.h ****   \return           Masked and shifted bit field value.
1536:Drivers/CMSIS/Include/core_cm4.h **** */
1537:Drivers/CMSIS/Include/core_cm4.h **** #define _FLD2VAL(field, value)    (((uint32_t)(value) & field ## _Msk) >> field ## _Pos)
1538:Drivers/CMSIS/Include/core_cm4.h **** 
1539:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_core_bitfield */
1540:Drivers/CMSIS/Include/core_cm4.h **** 
1541:Drivers/CMSIS/Include/core_cm4.h **** 
1542:Drivers/CMSIS/Include/core_cm4.h **** /**
1543:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup    CMSIS_core_register
1544:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup   CMSIS_core_base     Core Definitions
1545:Drivers/CMSIS/Include/core_cm4.h ****   \brief      Definitions for base addresses, unions, and structures.
1546:Drivers/CMSIS/Include/core_cm4.h ****   @{
1547:Drivers/CMSIS/Include/core_cm4.h ****  */
1548:Drivers/CMSIS/Include/core_cm4.h **** 
1549:Drivers/CMSIS/Include/core_cm4.h **** /* Memory mapping of Core Hardware */
1550:Drivers/CMSIS/Include/core_cm4.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
1551:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_BASE            (0xE0000000UL)                            /*!< ITM Base Address */
1552:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_BASE            (0xE0001000UL)                            /*!< DWT Base Address */
1553:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_BASE            (0xE0040000UL)                            /*!< TPI Base Address */
1554:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_BASE      (0xE000EDF0UL)                            /*!< Core Debug Base Address 
1555:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address */
1556:Drivers/CMSIS/Include/core_cm4.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address */
1557:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
1558:Drivers/CMSIS/Include/core_cm4.h **** 
1559:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB              ((SCnSCB_Type    *)     SCS_BASE      )   /*!< System control Register 
1560:Drivers/CMSIS/Include/core_cm4.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
1561:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
1562:Drivers/CMSIS/Include/core_cm4.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
1563:Drivers/CMSIS/Include/core_cm4.h **** #define ITM                 ((ITM_Type       *)     ITM_BASE      )   /*!< ITM configuration struct
1564:Drivers/CMSIS/Include/core_cm4.h **** #define DWT                 ((DWT_Type       *)     DWT_BASE      )   /*!< DWT configuration struct
1565:Drivers/CMSIS/Include/core_cm4.h **** #define TPI                 ((TPI_Type       *)     TPI_BASE      )   /*!< TPI configuration struct
1566:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
1567:Drivers/CMSIS/Include/core_cm4.h **** 
1568:Drivers/CMSIS/Include/core_cm4.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1569:Drivers/CMSIS/Include/core_cm4.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90UL)                    /*!< Memory Protection Unit *
ARM GAS  /tmp/ccACqZav.s 			page 29


1570:Drivers/CMSIS/Include/core_cm4.h ****   #define MPU               ((MPU_Type       *)     MPU_BASE      )   /*!< Memory Protection Unit *
1571:Drivers/CMSIS/Include/core_cm4.h **** #endif
1572:Drivers/CMSIS/Include/core_cm4.h **** 
1573:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_BASE            (SCS_BASE +  0x0F30UL)                    /*!< Floating Point Unit */
1574:Drivers/CMSIS/Include/core_cm4.h **** #define FPU                 ((FPU_Type       *)     FPU_BASE      )   /*!< Floating Point Unit */
1575:Drivers/CMSIS/Include/core_cm4.h **** 
1576:Drivers/CMSIS/Include/core_cm4.h **** /*@} */
1577:Drivers/CMSIS/Include/core_cm4.h **** 
1578:Drivers/CMSIS/Include/core_cm4.h **** 
1579:Drivers/CMSIS/Include/core_cm4.h **** 
1580:Drivers/CMSIS/Include/core_cm4.h **** /*******************************************************************************
1581:Drivers/CMSIS/Include/core_cm4.h ****  *                Hardware Abstraction Layer
1582:Drivers/CMSIS/Include/core_cm4.h ****   Core Function Interface contains:
1583:Drivers/CMSIS/Include/core_cm4.h ****   - Core NVIC Functions
1584:Drivers/CMSIS/Include/core_cm4.h ****   - Core SysTick Functions
1585:Drivers/CMSIS/Include/core_cm4.h ****   - Core Debug Functions
1586:Drivers/CMSIS/Include/core_cm4.h ****   - Core Register Access Functions
1587:Drivers/CMSIS/Include/core_cm4.h ****  ******************************************************************************/
1588:Drivers/CMSIS/Include/core_cm4.h **** /**
1589:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
1590:Drivers/CMSIS/Include/core_cm4.h **** */
1591:Drivers/CMSIS/Include/core_cm4.h **** 
1592:Drivers/CMSIS/Include/core_cm4.h **** 
1593:Drivers/CMSIS/Include/core_cm4.h **** 
1594:Drivers/CMSIS/Include/core_cm4.h **** /* ##########################   NVIC functions  #################################### */
1595:Drivers/CMSIS/Include/core_cm4.h **** /**
1596:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_Core_FunctionInterface
1597:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_Core_NVICFunctions NVIC Functions
1598:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Functions that manage interrupts and exceptions via the NVIC.
1599:Drivers/CMSIS/Include/core_cm4.h ****   @{
1600:Drivers/CMSIS/Include/core_cm4.h ****  */
1601:Drivers/CMSIS/Include/core_cm4.h **** 
1602:Drivers/CMSIS/Include/core_cm4.h **** #ifdef CMSIS_NVIC_VIRTUAL
1603:Drivers/CMSIS/Include/core_cm4.h ****   #ifndef CMSIS_NVIC_VIRTUAL_HEADER_FILE
1604:Drivers/CMSIS/Include/core_cm4.h ****     #define CMSIS_NVIC_VIRTUAL_HEADER_FILE "cmsis_nvic_virtual.h"
1605:Drivers/CMSIS/Include/core_cm4.h ****   #endif
1606:Drivers/CMSIS/Include/core_cm4.h ****   #include CMSIS_NVIC_VIRTUAL_HEADER_FILE
1607:Drivers/CMSIS/Include/core_cm4.h **** #else
1608:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_SetPriorityGrouping    __NVIC_SetPriorityGrouping
1609:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_GetPriorityGrouping    __NVIC_GetPriorityGrouping
1610:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_EnableIRQ              __NVIC_EnableIRQ
1611:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_GetEnableIRQ           __NVIC_GetEnableIRQ
1612:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_DisableIRQ             __NVIC_DisableIRQ
1613:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_GetPendingIRQ          __NVIC_GetPendingIRQ
1614:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_SetPendingIRQ          __NVIC_SetPendingIRQ
1615:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_ClearPendingIRQ        __NVIC_ClearPendingIRQ
1616:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_GetActive              __NVIC_GetActive
1617:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_SetPriority            __NVIC_SetPriority
1618:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_GetPriority            __NVIC_GetPriority
1619:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_SystemReset            __NVIC_SystemReset
1620:Drivers/CMSIS/Include/core_cm4.h **** #endif /* CMSIS_NVIC_VIRTUAL */
1621:Drivers/CMSIS/Include/core_cm4.h **** 
1622:Drivers/CMSIS/Include/core_cm4.h **** #ifdef CMSIS_VECTAB_VIRTUAL
1623:Drivers/CMSIS/Include/core_cm4.h ****   #ifndef CMSIS_VECTAB_VIRTUAL_HEADER_FILE
1624:Drivers/CMSIS/Include/core_cm4.h ****     #define CMSIS_VECTAB_VIRTUAL_HEADER_FILE "cmsis_vectab_virtual.h"
1625:Drivers/CMSIS/Include/core_cm4.h ****   #endif
1626:Drivers/CMSIS/Include/core_cm4.h ****   #include CMSIS_VECTAB_VIRTUAL_HEADER_FILE
ARM GAS  /tmp/ccACqZav.s 			page 30


1627:Drivers/CMSIS/Include/core_cm4.h **** #else
1628:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_SetVector              __NVIC_SetVector
1629:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_GetVector              __NVIC_GetVector
1630:Drivers/CMSIS/Include/core_cm4.h **** #endif  /* (CMSIS_VECTAB_VIRTUAL) */
1631:Drivers/CMSIS/Include/core_cm4.h **** 
1632:Drivers/CMSIS/Include/core_cm4.h **** #define NVIC_USER_IRQ_OFFSET          16
1633:Drivers/CMSIS/Include/core_cm4.h **** 
1634:Drivers/CMSIS/Include/core_cm4.h **** 
1635:Drivers/CMSIS/Include/core_cm4.h **** /* The following EXC_RETURN values are saved the LR on exception entry */
1636:Drivers/CMSIS/Include/core_cm4.h **** #define EXC_RETURN_HANDLER         (0xFFFFFFF1UL)     /* return to Handler mode, uses MSP after ret
1637:Drivers/CMSIS/Include/core_cm4.h **** #define EXC_RETURN_THREAD_MSP      (0xFFFFFFF9UL)     /* return to Thread mode, uses MSP after retu
1638:Drivers/CMSIS/Include/core_cm4.h **** #define EXC_RETURN_THREAD_PSP      (0xFFFFFFFDUL)     /* return to Thread mode, uses PSP after retu
1639:Drivers/CMSIS/Include/core_cm4.h **** #define EXC_RETURN_HANDLER_FPU     (0xFFFFFFE1UL)     /* return to Handler mode, uses MSP after ret
1640:Drivers/CMSIS/Include/core_cm4.h **** #define EXC_RETURN_THREAD_MSP_FPU  (0xFFFFFFE9UL)     /* return to Thread mode, uses MSP after retu
1641:Drivers/CMSIS/Include/core_cm4.h **** #define EXC_RETURN_THREAD_PSP_FPU  (0xFFFFFFEDUL)     /* return to Thread mode, uses PSP after retu
1642:Drivers/CMSIS/Include/core_cm4.h **** 
1643:Drivers/CMSIS/Include/core_cm4.h **** 
1644:Drivers/CMSIS/Include/core_cm4.h **** /**
1645:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Set Priority Grouping
1646:Drivers/CMSIS/Include/core_cm4.h ****   \details Sets the priority grouping field using the required unlock sequence.
1647:Drivers/CMSIS/Include/core_cm4.h ****            The parameter PriorityGroup is assigned to the field SCB->AIRCR [10:8] PRIGROUP field.
1648:Drivers/CMSIS/Include/core_cm4.h ****            Only values from 0..7 are used.
1649:Drivers/CMSIS/Include/core_cm4.h ****            In case of a conflict between priority grouping and available
1650:Drivers/CMSIS/Include/core_cm4.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1651:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      PriorityGroup  Priority grouping field.
1652:Drivers/CMSIS/Include/core_cm4.h ****  */
1653:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1654:Drivers/CMSIS/Include/core_cm4.h **** {
1655:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t reg_value;
1656:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 a
1657:Drivers/CMSIS/Include/core_cm4.h **** 
1658:Drivers/CMSIS/Include/core_cm4.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
1659:Drivers/CMSIS/Include/core_cm4.h ****   reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to chan
1660:Drivers/CMSIS/Include/core_cm4.h ****   reg_value  =  (reg_value                                   |
1661:Drivers/CMSIS/Include/core_cm4.h ****                 ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
1662:Drivers/CMSIS/Include/core_cm4.h ****                 (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key a
1663:Drivers/CMSIS/Include/core_cm4.h ****   SCB->AIRCR =  reg_value;
1664:Drivers/CMSIS/Include/core_cm4.h **** }
1665:Drivers/CMSIS/Include/core_cm4.h **** 
1666:Drivers/CMSIS/Include/core_cm4.h **** 
1667:Drivers/CMSIS/Include/core_cm4.h **** /**
1668:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Get Priority Grouping
1669:Drivers/CMSIS/Include/core_cm4.h ****   \details Reads the priority grouping field from the NVIC Interrupt Controller.
1670:Drivers/CMSIS/Include/core_cm4.h ****   \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
1671:Drivers/CMSIS/Include/core_cm4.h ****  */
1672:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
1673:Drivers/CMSIS/Include/core_cm4.h **** {
1674:Drivers/CMSIS/Include/core_cm4.h ****   return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
1675:Drivers/CMSIS/Include/core_cm4.h **** }
1676:Drivers/CMSIS/Include/core_cm4.h **** 
1677:Drivers/CMSIS/Include/core_cm4.h **** 
1678:Drivers/CMSIS/Include/core_cm4.h **** /**
1679:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Enable Interrupt
1680:Drivers/CMSIS/Include/core_cm4.h ****   \details Enables a device specific interrupt in the NVIC interrupt controller.
1681:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1682:Drivers/CMSIS/Include/core_cm4.h ****   \note    IRQn must not be negative.
1683:Drivers/CMSIS/Include/core_cm4.h ****  */
ARM GAS  /tmp/ccACqZav.s 			page 31


1684:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
1685:Drivers/CMSIS/Include/core_cm4.h **** {
1686:Drivers/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1687:Drivers/CMSIS/Include/core_cm4.h ****   {
1688:Drivers/CMSIS/Include/core_cm4.h ****     __COMPILER_BARRIER();
1689:Drivers/CMSIS/Include/core_cm4.h ****     NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1690:Drivers/CMSIS/Include/core_cm4.h ****     __COMPILER_BARRIER();
1691:Drivers/CMSIS/Include/core_cm4.h ****   }
1692:Drivers/CMSIS/Include/core_cm4.h **** }
1693:Drivers/CMSIS/Include/core_cm4.h **** 
1694:Drivers/CMSIS/Include/core_cm4.h **** 
1695:Drivers/CMSIS/Include/core_cm4.h **** /**
1696:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Get Interrupt Enable status
1697:Drivers/CMSIS/Include/core_cm4.h ****   \details Returns a device specific interrupt enable status from the NVIC interrupt controller.
1698:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1699:Drivers/CMSIS/Include/core_cm4.h ****   \return             0  Interrupt is not enabled.
1700:Drivers/CMSIS/Include/core_cm4.h ****   \return             1  Interrupt is enabled.
1701:Drivers/CMSIS/Include/core_cm4.h ****   \note    IRQn must not be negative.
1702:Drivers/CMSIS/Include/core_cm4.h ****  */
1703:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetEnableIRQ(IRQn_Type IRQn)
1704:Drivers/CMSIS/Include/core_cm4.h **** {
1705:Drivers/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1706:Drivers/CMSIS/Include/core_cm4.h ****   {
1707:Drivers/CMSIS/Include/core_cm4.h ****     return((uint32_t)(((NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1708:Drivers/CMSIS/Include/core_cm4.h ****   }
1709:Drivers/CMSIS/Include/core_cm4.h ****   else
1710:Drivers/CMSIS/Include/core_cm4.h ****   {
1711:Drivers/CMSIS/Include/core_cm4.h ****     return(0U);
1712:Drivers/CMSIS/Include/core_cm4.h ****   }
1713:Drivers/CMSIS/Include/core_cm4.h **** }
1714:Drivers/CMSIS/Include/core_cm4.h **** 
1715:Drivers/CMSIS/Include/core_cm4.h **** 
1716:Drivers/CMSIS/Include/core_cm4.h **** /**
1717:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Disable Interrupt
1718:Drivers/CMSIS/Include/core_cm4.h ****   \details Disables a device specific interrupt in the NVIC interrupt controller.
1719:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1720:Drivers/CMSIS/Include/core_cm4.h ****   \note    IRQn must not be negative.
1721:Drivers/CMSIS/Include/core_cm4.h ****  */
1722:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
1723:Drivers/CMSIS/Include/core_cm4.h **** {
1724:Drivers/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1725:Drivers/CMSIS/Include/core_cm4.h ****   {
1726:Drivers/CMSIS/Include/core_cm4.h ****     NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1727:Drivers/CMSIS/Include/core_cm4.h ****     __DSB();
1728:Drivers/CMSIS/Include/core_cm4.h ****     __ISB();
1729:Drivers/CMSIS/Include/core_cm4.h ****   }
1730:Drivers/CMSIS/Include/core_cm4.h **** }
1731:Drivers/CMSIS/Include/core_cm4.h **** 
1732:Drivers/CMSIS/Include/core_cm4.h **** 
1733:Drivers/CMSIS/Include/core_cm4.h **** /**
1734:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Get Pending Interrupt
1735:Drivers/CMSIS/Include/core_cm4.h ****   \details Reads the NVIC pending register and returns the pending bit for the specified device spe
1736:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1737:Drivers/CMSIS/Include/core_cm4.h ****   \return             0  Interrupt status is not pending.
1738:Drivers/CMSIS/Include/core_cm4.h ****   \return             1  Interrupt status is pending.
1739:Drivers/CMSIS/Include/core_cm4.h ****   \note    IRQn must not be negative.
1740:Drivers/CMSIS/Include/core_cm4.h ****  */
ARM GAS  /tmp/ccACqZav.s 			page 32


1741:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetPendingIRQ(IRQn_Type IRQn)
1742:Drivers/CMSIS/Include/core_cm4.h **** {
1743:Drivers/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1744:Drivers/CMSIS/Include/core_cm4.h ****   {
1745:Drivers/CMSIS/Include/core_cm4.h ****     return((uint32_t)(((NVIC->ISPR[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1746:Drivers/CMSIS/Include/core_cm4.h ****   }
1747:Drivers/CMSIS/Include/core_cm4.h ****   else
1748:Drivers/CMSIS/Include/core_cm4.h ****   {
1749:Drivers/CMSIS/Include/core_cm4.h ****     return(0U);
1750:Drivers/CMSIS/Include/core_cm4.h ****   }
1751:Drivers/CMSIS/Include/core_cm4.h **** }
1752:Drivers/CMSIS/Include/core_cm4.h **** 
1753:Drivers/CMSIS/Include/core_cm4.h **** 
1754:Drivers/CMSIS/Include/core_cm4.h **** /**
1755:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Set Pending Interrupt
1756:Drivers/CMSIS/Include/core_cm4.h ****   \details Sets the pending bit of a device specific interrupt in the NVIC pending register.
1757:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1758:Drivers/CMSIS/Include/core_cm4.h ****   \note    IRQn must not be negative.
1759:Drivers/CMSIS/Include/core_cm4.h ****  */
1760:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void __NVIC_SetPendingIRQ(IRQn_Type IRQn)
1761:Drivers/CMSIS/Include/core_cm4.h **** {
1762:Drivers/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1763:Drivers/CMSIS/Include/core_cm4.h ****   {
1764:Drivers/CMSIS/Include/core_cm4.h ****     NVIC->ISPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1765:Drivers/CMSIS/Include/core_cm4.h ****   }
1766:Drivers/CMSIS/Include/core_cm4.h **** }
1767:Drivers/CMSIS/Include/core_cm4.h **** 
1768:Drivers/CMSIS/Include/core_cm4.h **** 
1769:Drivers/CMSIS/Include/core_cm4.h **** /**
1770:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Clear Pending Interrupt
1771:Drivers/CMSIS/Include/core_cm4.h ****   \details Clears the pending bit of a device specific interrupt in the NVIC pending register.
1772:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1773:Drivers/CMSIS/Include/core_cm4.h ****   \note    IRQn must not be negative.
1774:Drivers/CMSIS/Include/core_cm4.h ****  */
1775:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void __NVIC_ClearPendingIRQ(IRQn_Type IRQn)
1776:Drivers/CMSIS/Include/core_cm4.h **** {
1777:Drivers/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1778:Drivers/CMSIS/Include/core_cm4.h ****   {
1779:Drivers/CMSIS/Include/core_cm4.h ****     NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1780:Drivers/CMSIS/Include/core_cm4.h ****   }
1781:Drivers/CMSIS/Include/core_cm4.h **** }
1782:Drivers/CMSIS/Include/core_cm4.h **** 
1783:Drivers/CMSIS/Include/core_cm4.h **** 
1784:Drivers/CMSIS/Include/core_cm4.h **** /**
1785:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Get Active Interrupt
1786:Drivers/CMSIS/Include/core_cm4.h ****   \details Reads the active register in the NVIC and returns the active bit for the device specific
1787:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1788:Drivers/CMSIS/Include/core_cm4.h ****   \return             0  Interrupt status is not active.
1789:Drivers/CMSIS/Include/core_cm4.h ****   \return             1  Interrupt status is active.
1790:Drivers/CMSIS/Include/core_cm4.h ****   \note    IRQn must not be negative.
1791:Drivers/CMSIS/Include/core_cm4.h ****  */
1792:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetActive(IRQn_Type IRQn)
1793:Drivers/CMSIS/Include/core_cm4.h **** {
1794:Drivers/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1795:Drivers/CMSIS/Include/core_cm4.h ****   {
1796:Drivers/CMSIS/Include/core_cm4.h ****     return((uint32_t)(((NVIC->IABR[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1797:Drivers/CMSIS/Include/core_cm4.h ****   }
ARM GAS  /tmp/ccACqZav.s 			page 33


1798:Drivers/CMSIS/Include/core_cm4.h ****   else
1799:Drivers/CMSIS/Include/core_cm4.h ****   {
1800:Drivers/CMSIS/Include/core_cm4.h ****     return(0U);
1801:Drivers/CMSIS/Include/core_cm4.h ****   }
1802:Drivers/CMSIS/Include/core_cm4.h **** }
1803:Drivers/CMSIS/Include/core_cm4.h **** 
1804:Drivers/CMSIS/Include/core_cm4.h **** 
1805:Drivers/CMSIS/Include/core_cm4.h **** /**
1806:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Set Interrupt Priority
1807:Drivers/CMSIS/Include/core_cm4.h ****   \details Sets the priority of a device specific interrupt or a processor exception.
1808:Drivers/CMSIS/Include/core_cm4.h ****            The interrupt number can be positive to specify a device specific interrupt,
1809:Drivers/CMSIS/Include/core_cm4.h ****            or negative to specify a processor exception.
1810:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Interrupt number.
1811:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]  priority  Priority to set.
1812:Drivers/CMSIS/Include/core_cm4.h ****   \note    The priority cannot be set for every processor exception.
1813:Drivers/CMSIS/Include/core_cm4.h ****  */
1814:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
1815:Drivers/CMSIS/Include/core_cm4.h **** {
1816:Drivers/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1817:Drivers/CMSIS/Include/core_cm4.h ****   {
1818:Drivers/CMSIS/Include/core_cm4.h ****     NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (u
1819:Drivers/CMSIS/Include/core_cm4.h ****   }
1820:Drivers/CMSIS/Include/core_cm4.h ****   else
1821:Drivers/CMSIS/Include/core_cm4.h ****   {
1822:Drivers/CMSIS/Include/core_cm4.h ****     SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (u
1823:Drivers/CMSIS/Include/core_cm4.h ****   }
1824:Drivers/CMSIS/Include/core_cm4.h **** }
1825:Drivers/CMSIS/Include/core_cm4.h **** 
1826:Drivers/CMSIS/Include/core_cm4.h **** 
1827:Drivers/CMSIS/Include/core_cm4.h **** /**
1828:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Get Interrupt Priority
1829:Drivers/CMSIS/Include/core_cm4.h ****   \details Reads the priority of a device specific interrupt or a processor exception.
1830:Drivers/CMSIS/Include/core_cm4.h ****            The interrupt number can be positive to specify a device specific interrupt,
1831:Drivers/CMSIS/Include/core_cm4.h ****            or negative to specify a processor exception.
1832:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]   IRQn  Interrupt number.
1833:Drivers/CMSIS/Include/core_cm4.h ****   \return             Interrupt Priority.
1834:Drivers/CMSIS/Include/core_cm4.h ****                       Value is aligned automatically to the implemented priority bits of the microc
1835:Drivers/CMSIS/Include/core_cm4.h ****  */
1836:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetPriority(IRQn_Type IRQn)
1837:Drivers/CMSIS/Include/core_cm4.h **** {
1838:Drivers/CMSIS/Include/core_cm4.h **** 
1839:Drivers/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1840:Drivers/CMSIS/Include/core_cm4.h ****   {
1841:Drivers/CMSIS/Include/core_cm4.h ****     return(((uint32_t)NVIC->IP[((uint32_t)IRQn)]               >> (8U - __NVIC_PRIO_BITS)));
1842:Drivers/CMSIS/Include/core_cm4.h ****   }
1843:Drivers/CMSIS/Include/core_cm4.h ****   else
1844:Drivers/CMSIS/Include/core_cm4.h ****   {
1845:Drivers/CMSIS/Include/core_cm4.h ****     return(((uint32_t)SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] >> (8U - __NVIC_PRIO_BITS)));
1846:Drivers/CMSIS/Include/core_cm4.h ****   }
1847:Drivers/CMSIS/Include/core_cm4.h **** }
1848:Drivers/CMSIS/Include/core_cm4.h **** 
1849:Drivers/CMSIS/Include/core_cm4.h **** 
1850:Drivers/CMSIS/Include/core_cm4.h **** /**
1851:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Encode Priority
1852:Drivers/CMSIS/Include/core_cm4.h ****   \details Encodes the priority for an interrupt with the given priority group,
1853:Drivers/CMSIS/Include/core_cm4.h ****            preemptive priority value, and subpriority value.
1854:Drivers/CMSIS/Include/core_cm4.h ****            In case of a conflict between priority grouping and available
ARM GAS  /tmp/ccACqZav.s 			page 34


1855:Drivers/CMSIS/Include/core_cm4.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1856:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]     PriorityGroup  Used priority group.
1857:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
1858:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]       SubPriority  Subpriority value (starting from 0).
1859:Drivers/CMSIS/Include/core_cm4.h ****   \return                        Encoded priority. Value can be used in the function \ref NVIC_SetP
1860:Drivers/CMSIS/Include/core_cm4.h ****  */
1861:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uin
1862:Drivers/CMSIS/Include/core_cm4.h **** {
1863:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
1864:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t PreemptPriorityBits;
1865:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t SubPriorityBits;
1866:Drivers/CMSIS/Include/core_cm4.h **** 
1867:Drivers/CMSIS/Include/core_cm4.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
1868:Drivers/CMSIS/Include/core_cm4.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
1869:Drivers/CMSIS/Include/core_cm4.h **** 
1870:Drivers/CMSIS/Include/core_cm4.h ****   return (
1871:Drivers/CMSIS/Include/core_cm4.h ****            ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits
1872:Drivers/CMSIS/Include/core_cm4.h ****            ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
1873:Drivers/CMSIS/Include/core_cm4.h ****          );
1874:Drivers/CMSIS/Include/core_cm4.h **** }
1875:Drivers/CMSIS/Include/core_cm4.h **** 
1876:Drivers/CMSIS/Include/core_cm4.h **** 
1877:Drivers/CMSIS/Include/core_cm4.h **** /**
1878:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Decode Priority
1879:Drivers/CMSIS/Include/core_cm4.h ****   \details Decodes an interrupt priority value with a given priority group to
1880:Drivers/CMSIS/Include/core_cm4.h ****            preemptive priority value and subpriority value.
1881:Drivers/CMSIS/Include/core_cm4.h ****            In case of a conflict between priority grouping and available
1882:Drivers/CMSIS/Include/core_cm4.h ****            priority bits (__NVIC_PRIO_BITS) the smallest possible priority group is set.
1883:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]         Priority   Priority value, which can be retrieved with the function \ref NVIC
1884:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]     PriorityGroup  Used priority group.
1885:Drivers/CMSIS/Include/core_cm4.h ****   \param [out] pPreemptPriority  Preemptive priority value (starting from 0).
1886:Drivers/CMSIS/Include/core_cm4.h ****   \param [out]     pSubPriority  Subpriority value (starting from 0).
1887:Drivers/CMSIS/Include/core_cm4.h ****  */
1888:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void NVIC_DecodePriority (uint32_t Priority, uint32_t PriorityGroup, uint32_t* cons
1889:Drivers/CMSIS/Include/core_cm4.h **** {
1890:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
1891:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t PreemptPriorityBits;
1892:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t SubPriorityBits;
1893:Drivers/CMSIS/Include/core_cm4.h **** 
1894:Drivers/CMSIS/Include/core_cm4.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
1895:Drivers/CMSIS/Include/core_cm4.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
1896:Drivers/CMSIS/Include/core_cm4.h **** 
1897:Drivers/CMSIS/Include/core_cm4.h ****   *pPreemptPriority = (Priority >> SubPriorityBits) & (uint32_t)((1UL << (PreemptPriorityBits)) - 1
1898:Drivers/CMSIS/Include/core_cm4.h ****   *pSubPriority     = (Priority                   ) & (uint32_t)((1UL << (SubPriorityBits    )) - 1
1899:Drivers/CMSIS/Include/core_cm4.h **** }
1900:Drivers/CMSIS/Include/core_cm4.h **** 
1901:Drivers/CMSIS/Include/core_cm4.h **** 
1902:Drivers/CMSIS/Include/core_cm4.h **** /**
1903:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Set Interrupt Vector
1904:Drivers/CMSIS/Include/core_cm4.h ****   \details Sets an interrupt vector in SRAM based interrupt vector table.
1905:Drivers/CMSIS/Include/core_cm4.h ****            The interrupt number can be positive to specify a device specific interrupt,
1906:Drivers/CMSIS/Include/core_cm4.h ****            or negative to specify a processor exception.
1907:Drivers/CMSIS/Include/core_cm4.h ****            VTOR must been relocated to SRAM before.
1908:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]   IRQn      Interrupt number
1909:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]   vector    Address of interrupt handler function
1910:Drivers/CMSIS/Include/core_cm4.h ****  */
1911:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void __NVIC_SetVector(IRQn_Type IRQn, uint32_t vector)
ARM GAS  /tmp/ccACqZav.s 			page 35


1912:Drivers/CMSIS/Include/core_cm4.h **** {
1913:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t *vectors = (uint32_t *)SCB->VTOR;
1914:Drivers/CMSIS/Include/core_cm4.h ****   vectors[(int32_t)IRQn + NVIC_USER_IRQ_OFFSET] = vector;
1915:Drivers/CMSIS/Include/core_cm4.h ****   /* ARM Application Note 321 states that the M4 does not require the architectural barrier */
1916:Drivers/CMSIS/Include/core_cm4.h **** }
1917:Drivers/CMSIS/Include/core_cm4.h **** 
1918:Drivers/CMSIS/Include/core_cm4.h **** 
1919:Drivers/CMSIS/Include/core_cm4.h **** /**
1920:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Get Interrupt Vector
1921:Drivers/CMSIS/Include/core_cm4.h ****   \details Reads an interrupt vector from interrupt vector table.
1922:Drivers/CMSIS/Include/core_cm4.h ****            The interrupt number can be positive to specify a device specific interrupt,
1923:Drivers/CMSIS/Include/core_cm4.h ****            or negative to specify a processor exception.
1924:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]   IRQn      Interrupt number.
1925:Drivers/CMSIS/Include/core_cm4.h ****   \return                 Address of interrupt handler function
1926:Drivers/CMSIS/Include/core_cm4.h ****  */
1927:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetVector(IRQn_Type IRQn)
1928:Drivers/CMSIS/Include/core_cm4.h **** {
1929:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t *vectors = (uint32_t *)SCB->VTOR;
1930:Drivers/CMSIS/Include/core_cm4.h ****   return vectors[(int32_t)IRQn + NVIC_USER_IRQ_OFFSET];
1931:Drivers/CMSIS/Include/core_cm4.h **** }
1932:Drivers/CMSIS/Include/core_cm4.h **** 
1933:Drivers/CMSIS/Include/core_cm4.h **** 
1934:Drivers/CMSIS/Include/core_cm4.h **** /**
1935:Drivers/CMSIS/Include/core_cm4.h ****   \brief   System Reset
1936:Drivers/CMSIS/Include/core_cm4.h ****   \details Initiates a system reset request to reset the MCU.
1937:Drivers/CMSIS/Include/core_cm4.h ****  */
1938:Drivers/CMSIS/Include/core_cm4.h **** __NO_RETURN __STATIC_INLINE void __NVIC_SystemReset(void)
1939:Drivers/CMSIS/Include/core_cm4.h **** {
  29              		.loc 2 1939 1 view -0
  30              		.cfi_startproc
  31              		@ Volatile: function does not return.
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
1940:Drivers/CMSIS/Include/core_cm4.h ****   __DSB();                                                          /* Ensure all outstanding memor
  35              		.loc 2 1940 3 view .LVU1
  36              	.LBB6:
  37              	.LBI6:
  38              		.file 3 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.4.1
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     27. May 2021
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2021 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
ARM GAS  /tmp/ccACqZav.s 			page 36


  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
ARM GAS  /tmp/ccACqZav.s 			page 37


  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  /tmp/ccACqZav.s 			page 38


 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute__((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_SEAL
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_SEAL              __StackSeal
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 189:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccACqZav.s 			page 39


 190:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_SIZE
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_SIZE      8U
 192:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_VALUE
 195:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_VALUE     0xFEF5EDA5FEF5EDA5ULL
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_STACKSEAL_S (uint32_t* stackTop) {
 200:Drivers/CMSIS/Include/cmsis_gcc.h ****   *((uint64_t *)stackTop) = __TZ_STACK_SEAL_VALUE;
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 203:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 204:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 208:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 209:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 212:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 213:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 215:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 216:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 217:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 223:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 225:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 226:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 227:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 229:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 230:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 233:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi":::"memory")
 235:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 239:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 240:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 241:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe":::"memory")
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 244:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 245:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
ARM GAS  /tmp/ccACqZav.s 			page 40


 247:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 248:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 253:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 254:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 255:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 258:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 259:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 265:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
  39              		.loc 3 269 27 view .LVU2
  40              	.LBB7:
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
  41              		.loc 3 271 3 view .LVU3
  42              		.syntax unified
  43              	@ 271 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
  44 0000 BFF34F8F 		dsb 0xF
  45              	@ 0 "" 2
  46              		.thumb
  47              		.syntax unified
  48              	.LBE7:
  49              	.LBE6:
1941:Drivers/CMSIS/Include/core_cm4.h ****                                                                        buffered write are completed
1942:Drivers/CMSIS/Include/core_cm4.h ****   SCB->AIRCR  = (uint32_t)((0x5FAUL << SCB_AIRCR_VECTKEY_Pos)    |
  50              		.loc 2 1942 3 view .LVU4
1943:Drivers/CMSIS/Include/core_cm4.h ****                            (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
  51              		.loc 2 1943 32 is_stmt 0 view .LVU5
  52 0004 0549     		ldr	r1, .L3
  53 0006 CA68     		ldr	r2, [r1, #12]
  54              		.loc 2 1943 40 view .LVU6
  55 0008 02F4E062 		and	r2, r2, #1792
1942:Drivers/CMSIS/Include/core_cm4.h ****                            (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
  56              		.loc 2 1942 17 view .LVU7
  57 000c 044B     		ldr	r3, .L3+4
  58 000e 1343     		orrs	r3, r3, r2
1942:Drivers/CMSIS/Include/core_cm4.h ****                            (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
  59              		.loc 2 1942 15 view .LVU8
  60 0010 CB60     		str	r3, [r1, #12]
1944:Drivers/CMSIS/Include/core_cm4.h ****                             SCB_AIRCR_SYSRESETREQ_Msk    );         /* Keep priority group unchange
1945:Drivers/CMSIS/Include/core_cm4.h ****   __DSB();                                                          /* Ensure completion of memory 
  61              		.loc 2 1945 3 is_stmt 1 view .LVU9
  62              	.LBB8:
  63              	.LBI8:
ARM GAS  /tmp/ccACqZav.s 			page 41


 269:Drivers/CMSIS/Include/cmsis_gcc.h **** {
  64              		.loc 3 269 27 view .LVU10
  65              	.LBB9:
  66              		.loc 3 271 3 view .LVU11
  67              		.syntax unified
  68              	@ 271 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
  69 0012 BFF34F8F 		dsb 0xF
  70              	@ 0 "" 2
  71              		.thumb
  72              		.syntax unified
  73              	.L2:
  74              	.LBE9:
  75              	.LBE8:
1946:Drivers/CMSIS/Include/core_cm4.h **** 
1947:Drivers/CMSIS/Include/core_cm4.h ****   for(;;)                                                           /* wait until reset */
  76              		.loc 2 1947 3 view .LVU12
1948:Drivers/CMSIS/Include/core_cm4.h ****   {
1949:Drivers/CMSIS/Include/core_cm4.h ****     __NOP();
  77              		.loc 2 1949 5 discriminator 1 view .LVU13
  78              		.syntax unified
  79              	@ 1949 "Drivers/CMSIS/Include/core_cm4.h" 1
  80 0016 00BF     		nop
  81              	@ 0 "" 2
1947:Drivers/CMSIS/Include/core_cm4.h ****   {
  82              		.loc 2 1947 3 view .LVU14
  83              		.thumb
  84              		.syntax unified
  85 0018 FDE7     		b	.L2
  86              	.L4:
  87 001a 00BF     		.align	2
  88              	.L3:
  89 001c 00ED00E0 		.word	-536810240
  90 0020 0400FA05 		.word	100270084
  91              		.cfi_endproc
  92              	.LFE121:
  94              		.section	.rodata.do_error.str1.4,"aMS",%progbits,1
  95              		.align	2
  96              	.LC0:
  97 0000 4552524F 		.ascii	"ERROR CFSR: %lu\011HFSR: %lu\015\012\000"
  97      52204346 
  97      53523A20 
  97      256C7509 
  97      48465352 
  98              		.section	.text.do_error,"ax",%progbits
  99              		.align	1
 100              		.global	do_error
 101              		.syntax unified
 102              		.thumb
 103              		.thumb_func
 105              	do_error:
 106              	.LVL0:
 107              	.LFB237:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
ARM GAS  /tmp/ccACqZav.s 			page 42


   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2024 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** #include "scheme.h"
  25:Core/Src/main.c **** #include <string.h>
  26:Core/Src/main.c **** #include <stdio.h>
  27:Core/Src/main.c **** #include <time.h> //for random values
  28:Core/Src/main.c **** #include <stdlib.h>
  29:Core/Src/main.c **** /* USER CODE END Includes */
  30:Core/Src/main.c **** 
  31:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  32:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  33:Core/Src/main.c **** typedef enum {
  34:Core/Src/main.c ****     RAW,
  35:Core/Src/main.c ****     MOVING_AVERAGE,
  36:Core/Src/main.c ****     RANDOM_NOISE
  37:Core/Src/main.c **** } FilterMode;
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* USER CODE END PTD */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  42:Core/Src/main.c **** /* USER CODE BEGIN PD */
  43:Core/Src/main.c **** #define ADC_BUFFER_SIZE 300
  44:Core/Src/main.c **** #define MOVING_AVG_SIZE 150
  45:Core/Src/main.c **** #define BUFFER_SIZE 70
  46:Core/Src/main.c **** #define CLI_BUFFER_SIZE 15
  47:Core/Src/main.c **** #define RANDOM_RANGE 300
  48:Core/Src/main.c **** #define DEBOUNCE_TIME_MS 50
  49:Core/Src/main.c **** /* USER CODE END PD */
  50:Core/Src/main.c **** 
  51:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  52:Core/Src/main.c **** /* USER CODE BEGIN PM */
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** /* USER CODE END PM */
  55:Core/Src/main.c **** 
  56:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  57:Core/Src/main.c **** ADC_HandleTypeDef hadc1;
  58:Core/Src/main.c **** DMA_HandleTypeDef hdma_adc1;
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** TIM_HandleTypeDef htim3;
  61:Core/Src/main.c **** TIM_HandleTypeDef htim4;
  62:Core/Src/main.c **** 
ARM GAS  /tmp/ccACqZav.s 			page 43


  63:Core/Src/main.c **** UART_HandleTypeDef huart2;
  64:Core/Src/main.c **** 
  65:Core/Src/main.c **** /* USER CODE BEGIN PV */
  66:Core/Src/main.c **** //digital and analog variables
  67:Core/Src/main.c **** uint16_t lastAnalogValue = 0; 
  68:Core/Src/main.c **** uint16_t lastDigitalValue = 0;
  69:Core/Src/main.c **** 
  70:Core/Src/main.c **** uint16_t last_index = 0;//position of last written element on buffer
  71:Core/Src/main.c **** uint32_t adcBuffer[ADC_BUFFER_SIZE];//dma data structure
  72:Core/Src/main.c **** 
  73:Core/Src/main.c **** //moving average variables
  74:Core/Src/main.c **** uint16_t adc_moving_average[MOVING_AVG_SIZE];
  75:Core/Src/main.c **** uint16_t buffer_index = 0;
  76:Core/Src/main.c **** uint32_t sum = 0;
  77:Core/Src/main.c **** 
  78:Core/Src/main.c **** //millis for warning state
  79:Core/Src/main.c **** uint32_t lastTimer = 0;
  80:Core/Src/main.c **** uint32_t lastButtonPress = 0; //to avoid debouncing
  81:Core/Src/main.c **** 
  82:Core/Src/main.c **** //filter mode for data variables
  83:Core/Src/main.c **** FilterMode currentFilterMode = RAW;
  84:Core/Src/main.c **** char cli_command[CLI_BUFFER_SIZE];
  85:Core/Src/main.c **** uint8_t is_request_sended = 0;
  86:Core/Src/main.c **** 
  87:Core/Src/main.c **** //debug/info variables
  88:Core/Src/main.c **** char msg_buffer[BUFFER_SIZE];//buffer for serial msg
  89:Core/Src/main.c **** 
  90:Core/Src/main.c **** //state machine variables
  91:Core/Src/main.c **** // State human-readable names
  92:Core/Src/main.c **** const char *state_names[] = {"init", "wait_request", "error", "listening", "warning", "pause"};
  93:Core/Src/main.c **** 
  94:Core/Src/main.c **** // List of state functions
  95:Core/Src/main.c **** state_func_t *const state_table[NUM_STATES] = {
  96:Core/Src/main.c ****   do_init,         // in state init
  97:Core/Src/main.c ****   do_wait_request, // in state wait_request
  98:Core/Src/main.c ****   do_error,        // in state error
  99:Core/Src/main.c ****   do_listening,    // in state listening
 100:Core/Src/main.c ****   do_warning,      // in state warning
 101:Core/Src/main.c ****   do_pause,        // in state pause
 102:Core/Src/main.c **** };
 103:Core/Src/main.c **** 
 104:Core/Src/main.c **** HAL_StatusTypeDef halStatus = HAL_OK;
 105:Core/Src/main.c **** state_t current_state = STATE_INIT;
 106:Core/Src/main.c **** state_t next_state = STATE_WAIT_REQUEST;
 107:Core/Src/main.c **** uint8_t is_running_error_timer = 0;
 108:Core/Src/main.c **** 
 109:Core/Src/main.c **** /* USER CODE END PV */
 110:Core/Src/main.c **** 
 111:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
 112:Core/Src/main.c **** void SystemClock_Config(void);
 113:Core/Src/main.c **** static void MX_GPIO_Init(void);
 114:Core/Src/main.c **** static void MX_DMA_Init(void);
 115:Core/Src/main.c **** static void MX_USART2_UART_Init(void);
 116:Core/Src/main.c **** static void MX_ADC1_Init(void);
 117:Core/Src/main.c **** static void MX_TIM3_Init(void);
 118:Core/Src/main.c **** static void MX_TIM4_Init(void);
 119:Core/Src/main.c **** /* USER CODE BEGIN PFP */
ARM GAS  /tmp/ccACqZav.s 			page 44


 120:Core/Src/main.c **** 
 121:Core/Src/main.c **** /* USER CODE END PFP */
 122:Core/Src/main.c **** 
 123:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
 124:Core/Src/main.c **** /* USER CODE BEGIN 0 */
 125:Core/Src/main.c **** 
 126:Core/Src/main.c **** /**
 127:Core/Src/main.c ****  * timers interrupt
 128:Core/Src/main.c ****  */
 129:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef* htim){
 130:Core/Src/main.c ****   if(htim->Instance == TIM3){
 131:Core/Src/main.c ****     //toggle pause state led
 132:Core/Src/main.c ****     HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_5);
 133:Core/Src/main.c ****   } else if(htim->Instance == TIM4){
 134:Core/Src/main.c ****     //toggle error state led
 135:Core/Src/main.c ****     HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_5);
 136:Core/Src/main.c ****   }
 137:Core/Src/main.c **** }
 138:Core/Src/main.c **** 
 139:Core/Src/main.c **** /**
 140:Core/Src/main.c ****  * Callback function for gpio digital input
 141:Core/Src/main.c ****  */
 142:Core/Src/main.c **** void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin){
 143:Core/Src/main.c ****   if(GPIO_Pin == GPIO_PIN_2){
 144:Core/Src/main.c ****     //DIGITAL VALUE SENSOR
 145:Core/Src/main.c ****     lastDigitalValue = HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_2);
 146:Core/Src/main.c ****   }
 147:Core/Src/main.c ****   else if(GPIO_Pin == GPIO_PIN_13){
 148:Core/Src/main.c ****     //USER BUTTON
 149:Core/Src/main.c ****     uint32_t currentTime = HAL_GetTick();
 150:Core/Src/main.c **** 
 151:Core/Src/main.c ****     //check for debouncing
 152:Core/Src/main.c ****     if (lastButtonPress != 0 && (currentTime - lastButtonPress) < DEBOUNCE_TIME_MS){
 153:Core/Src/main.c ****       return;//ignore interupt
 154:Core/Src/main.c ****     }
 155:Core/Src/main.c ****     lastButtonPress = currentTime;
 156:Core/Src/main.c **** 
 157:Core/Src/main.c ****     if(current_state == STATE_WAIT_REQUEST || current_state == STATE_PAUSE){
 158:Core/Src/main.c ****       //change state to listening and restore dma
 159:Core/Src/main.c ****       current_state = next_state = STATE_LISTENING;
 160:Core/Src/main.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, GPIO_PIN_SET);
 161:Core/Src/main.c ****       HAL_UART_AbortReceive_IT(&huart2);
 162:Core/Src/main.c ****       lastTimer = HAL_GetTick();
 163:Core/Src/main.c **** 
 164:Core/Src/main.c ****       //stop all timers
 165:Core/Src/main.c ****       HAL_TIM_Base_Stop_IT(&htim3);
 166:Core/Src/main.c ****       HAL_TIM_Base_Stop_IT(&htim4);
 167:Core/Src/main.c ****     }else if(current_state == STATE_LISTENING){
 168:Core/Src/main.c ****       //change state to pause
 169:Core/Src/main.c ****       current_state = next_state = STATE_PAUSE;
 170:Core/Src/main.c ****       //start timer
 171:Core/Src/main.c ****       HAL_TIM_Base_Start_IT(&htim3);
 172:Core/Src/main.c ****     }else if(current_state == STATE_WARNING){
 173:Core/Src/main.c ****       //change state to wait request
 174:Core/Src/main.c ****       current_state = next_state = STATE_WAIT_REQUEST;
 175:Core/Src/main.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, GPIO_PIN_RESET);
 176:Core/Src/main.c ****       //stop all timers
ARM GAS  /tmp/ccACqZav.s 			page 45


 177:Core/Src/main.c ****       HAL_TIM_Base_Stop_IT(&htim3);
 178:Core/Src/main.c ****       HAL_TIM_Base_Stop_IT(&htim4);
 179:Core/Src/main.c ****     }else if(current_state == STATE_ERROR){
 180:Core/Src/main.c ****       //reset the board
 181:Core/Src/main.c ****       is_running_error_timer = 0;
 182:Core/Src/main.c ****       NVIC_SystemReset();
 183:Core/Src/main.c ****     }
 184:Core/Src/main.c **** 
 185:Core/Src/main.c ****     is_request_sended = 0;
 186:Core/Src/main.c ****     lastTimer = HAL_GetTick();//reset timer
 187:Core/Src/main.c ****   }
 188:Core/Src/main.c **** }
 189:Core/Src/main.c **** 
 190:Core/Src/main.c **** /*
 191:Core/Src/main.c **** void HAL_ADC_ConvHalfCpltCallback(ADC_HandleTypeDef* hadc){
 192:Core/Src/main.c **** }
 193:Core/Src/main.c **** */
 194:Core/Src/main.c **** 
 195:Core/Src/main.c **** /**
 196:Core/Src/main.c **** Based on the user input, change the filter mode.
 197:Core/Src/main.c **** If the comand is unknown, the current filter is not changed but
 198:Core/Src/main.c **** a falsse value is returned
 199:Core/Src/main.c **** */
 200:Core/Src/main.c **** u_int8_t handle_cli_command() {
 201:Core/Src/main.c ****     if (strcmp(cli_command, "raw") == 0) {
 202:Core/Src/main.c ****         currentFilterMode = RAW;
 203:Core/Src/main.c ****     } else if (strcmp(cli_command, "moving average") == 0) {
 204:Core/Src/main.c ****         currentFilterMode = MOVING_AVERAGE;
 205:Core/Src/main.c ****     } else if (strcmp(cli_command, "random noise") == 0) {
 206:Core/Src/main.c ****         currentFilterMode = RANDOM_NOISE;
 207:Core/Src/main.c ****     } else {
 208:Core/Src/main.c ****         //comand not recognized
 209:Core/Src/main.c ****         memset(cli_command, '\0', sizeof(cli_command)); 
 210:Core/Src/main.c ****         return 1;
 211:Core/Src/main.c ****     }
 212:Core/Src/main.c ****     //clear buffer
 213:Core/Src/main.c ****     memset(cli_command, '\0', sizeof(cli_command)); 
 214:Core/Src/main.c ****     return 0;
 215:Core/Src/main.c **** }
 216:Core/Src/main.c **** 
 217:Core/Src/main.c **** /**
 218:Core/Src/main.c ****  * Callback function to handle the receiving of a comand from the user
 219:Core/Src/main.c ****  * if the command is unknown, restart sending data anyway
 220:Core/Src/main.c ****  */
 221:Core/Src/main.c **** void HAL_UARTEx_RxEventCallback(UART_HandleTypeDef *huart, uint16_t Size)
 222:Core/Src/main.c **** {
 223:Core/Src/main.c ****   //if we are not in pause or wait request state, ignore the comand received
 224:Core/Src/main.c ****   //wait for next input
 225:Core/Src/main.c ****   if(current_state!= STATE_PAUSE && current_state != STATE_WAIT_REQUEST){
 226:Core/Src/main.c ****     memset(cli_command, '\0', sizeof(cli_command)); 
 227:Core/Src/main.c ****     return;
 228:Core/Src/main.c ****   }
 229:Core/Src/main.c **** 
 230:Core/Src/main.c ****   uint8_t unknownComand = handle_cli_command();
 231:Core/Src/main.c **** 
 232:Core/Src/main.c ****   if(unknownComand){
 233:Core/Src/main.c ****     sprintf(msg_buffer, "Command not valid. No change to filter mode.\r\n");
ARM GAS  /tmp/ccACqZav.s 			page 46


 234:Core/Src/main.c ****     HAL_UART_Transmit(&huart2, (uint8_t *)msg_buffer, strlen(msg_buffer), HAL_MAX_DELAY);
 235:Core/Src/main.c ****   }
 236:Core/Src/main.c ****   else{
 237:Core/Src/main.c ****     sprintf(msg_buffer, "Filter mode modified!\r\n");
 238:Core/Src/main.c ****     HAL_UART_Transmit(&huart2, (uint8_t *)msg_buffer, strlen(msg_buffer), HAL_MAX_DELAY);
 239:Core/Src/main.c ****   }
 240:Core/Src/main.c **** 
 241:Core/Src/main.c ****   //wait for next input
 242:Core/Src/main.c ****   halStatus = HAL_UARTEx_ReceiveToIdle_IT(&huart2, (uint8_t *)cli_command, BUFFER_SIZE);
 243:Core/Src/main.c ****   if(halStatus != HAL_OK){
 244:Core/Src/main.c ****     next_state = STATE_ERROR;
 245:Core/Src/main.c ****   }
 246:Core/Src/main.c **** }
 247:Core/Src/main.c **** 
 248:Core/Src/main.c **** /* USER CODE END 0 */
 249:Core/Src/main.c **** 
 250:Core/Src/main.c **** /**
 251:Core/Src/main.c ****   * @brief  The application entry point.
 252:Core/Src/main.c ****   * @retval int
 253:Core/Src/main.c ****   */
 254:Core/Src/main.c **** int main(void)
 255:Core/Src/main.c **** {
 256:Core/Src/main.c **** 
 257:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 258:Core/Src/main.c **** 
 259:Core/Src/main.c ****   /* USER CODE END 1 */
 260:Core/Src/main.c **** 
 261:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 262:Core/Src/main.c **** 
 263:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 264:Core/Src/main.c **** 
 265:Core/Src/main.c ****   /* USER CODE END Init */
 266:Core/Src/main.c **** 
 267:Core/Src/main.c **** 
 268:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 269:Core/Src/main.c **** 
 270:Core/Src/main.c ****   /* USER CODE END SysInit */
 271:Core/Src/main.c **** 
 272:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 273:Core/Src/main.c **** 
 274:Core/Src/main.c ****   /* USER CODE END 2 */
 275:Core/Src/main.c **** 
 276:Core/Src/main.c ****   /* Infinite loop */
 277:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 278:Core/Src/main.c ****   while (1)
 279:Core/Src/main.c ****   {
 280:Core/Src/main.c ****     /* USER CODE END WHILE */
 281:Core/Src/main.c **** 
 282:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 283:Core/Src/main.c ****     current_state = run_state(NULL);
 284:Core/Src/main.c ****   }
 285:Core/Src/main.c ****   /* USER CODE END 3 */
 286:Core/Src/main.c **** }
 287:Core/Src/main.c **** 
 288:Core/Src/main.c **** /**
 289:Core/Src/main.c ****   * @brief System Clock Configuration
 290:Core/Src/main.c ****   * @retval None
ARM GAS  /tmp/ccACqZav.s 			page 47


 291:Core/Src/main.c ****   */
 292:Core/Src/main.c **** void SystemClock_Config(void)
 293:Core/Src/main.c **** {
 294:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 295:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 296:Core/Src/main.c **** 
 297:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 298:Core/Src/main.c ****   */
 299:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 300:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 301:Core/Src/main.c **** 
 302:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 303:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 304:Core/Src/main.c ****   */
 305:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 306:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 307:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 308:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 309:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 310:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 16;
 311:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 336;
 312:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 313:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 314:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 315:Core/Src/main.c ****   {
 316:Core/Src/main.c ****     Error_Handler();
 317:Core/Src/main.c ****   }
 318:Core/Src/main.c **** 
 319:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 320:Core/Src/main.c ****   */
 321:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 322:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 323:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 324:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 325:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 326:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 327:Core/Src/main.c **** 
 328:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 329:Core/Src/main.c ****   {
 330:Core/Src/main.c ****     Error_Handler();
 331:Core/Src/main.c ****   }
 332:Core/Src/main.c **** }
 333:Core/Src/main.c **** 
 334:Core/Src/main.c **** /**
 335:Core/Src/main.c ****   * @brief ADC1 Initialization Function
 336:Core/Src/main.c ****   * @param None
 337:Core/Src/main.c ****   * @retval None
 338:Core/Src/main.c ****   */
 339:Core/Src/main.c **** static void MX_ADC1_Init(void)
 340:Core/Src/main.c **** {
 341:Core/Src/main.c **** 
 342:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 0 */
 343:Core/Src/main.c **** 
 344:Core/Src/main.c ****   /* USER CODE END ADC1_Init 0 */
 345:Core/Src/main.c **** 
 346:Core/Src/main.c ****   ADC_ChannelConfTypeDef sConfig = {0};
 347:Core/Src/main.c **** 
ARM GAS  /tmp/ccACqZav.s 			page 48


 348:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 1 */
 349:Core/Src/main.c **** 
 350:Core/Src/main.c ****   /* USER CODE END ADC1_Init 1 */
 351:Core/Src/main.c **** 
 352:Core/Src/main.c ****   /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of con
 353:Core/Src/main.c ****   */
 354:Core/Src/main.c ****   hadc1.Instance = ADC1;
 355:Core/Src/main.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 356:Core/Src/main.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 357:Core/Src/main.c ****   hadc1.Init.ScanConvMode = DISABLE;
 358:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = ENABLE;
 359:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 360:Core/Src/main.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 361:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 362:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 363:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 1;
 364:Core/Src/main.c ****   hadc1.Init.DMAContinuousRequests = ENABLE;
 365:Core/Src/main.c ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 366:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 367:Core/Src/main.c ****   {
 368:Core/Src/main.c ****     Error_Handler();
 369:Core/Src/main.c ****   }
 370:Core/Src/main.c **** 
 371:Core/Src/main.c ****   /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and it
 372:Core/Src/main.c ****   */
 373:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_0;
 374:Core/Src/main.c ****   sConfig.Rank = 1;
 375:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 376:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 377:Core/Src/main.c ****   {
 378:Core/Src/main.c ****     Error_Handler();
 379:Core/Src/main.c ****   }
 380:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 2 */
 381:Core/Src/main.c **** 
 382:Core/Src/main.c ****   /* USER CODE END ADC1_Init 2 */
 383:Core/Src/main.c **** 
 384:Core/Src/main.c **** }
 385:Core/Src/main.c **** 
 386:Core/Src/main.c **** /**
 387:Core/Src/main.c ****   * @brief TIM3 Initialization Function
 388:Core/Src/main.c ****   * @param None
 389:Core/Src/main.c ****   * @retval None
 390:Core/Src/main.c ****   */
 391:Core/Src/main.c **** static void MX_TIM3_Init(void)
 392:Core/Src/main.c **** {
 393:Core/Src/main.c **** 
 394:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 0 */
 395:Core/Src/main.c **** 
 396:Core/Src/main.c ****   /* USER CODE END TIM3_Init 0 */
 397:Core/Src/main.c **** 
 398:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 399:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 400:Core/Src/main.c **** 
 401:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 1 */
 402:Core/Src/main.c **** 
 403:Core/Src/main.c ****   /* USER CODE END TIM3_Init 1 */
 404:Core/Src/main.c ****   htim3.Instance = TIM3;
ARM GAS  /tmp/ccACqZav.s 			page 49


 405:Core/Src/main.c ****   htim3.Init.Prescaler = 9999;
 406:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 407:Core/Src/main.c ****   htim3.Init.Period = 7199;
 408:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 409:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 410:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 411:Core/Src/main.c ****   {
 412:Core/Src/main.c ****     Error_Handler();
 413:Core/Src/main.c ****   }
 414:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 415:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 416:Core/Src/main.c ****   {
 417:Core/Src/main.c ****     Error_Handler();
 418:Core/Src/main.c ****   }
 419:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 420:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 421:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 422:Core/Src/main.c ****   {
 423:Core/Src/main.c ****     Error_Handler();
 424:Core/Src/main.c ****   }
 425:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 2 */
 426:Core/Src/main.c **** 
 427:Core/Src/main.c ****   /* USER CODE END TIM3_Init 2 */
 428:Core/Src/main.c **** 
 429:Core/Src/main.c **** }
 430:Core/Src/main.c **** 
 431:Core/Src/main.c **** /**
 432:Core/Src/main.c ****   * @brief TIM4 Initialization Function
 433:Core/Src/main.c ****   * @param None
 434:Core/Src/main.c ****   * @retval None
 435:Core/Src/main.c ****   */
 436:Core/Src/main.c **** static void MX_TIM4_Init(void)
 437:Core/Src/main.c **** {
 438:Core/Src/main.c **** 
 439:Core/Src/main.c ****   /* USER CODE BEGIN TIM4_Init 0 */
 440:Core/Src/main.c **** 
 441:Core/Src/main.c ****   /* USER CODE END TIM4_Init 0 */
 442:Core/Src/main.c **** 
 443:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 444:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 445:Core/Src/main.c **** 
 446:Core/Src/main.c ****   /* USER CODE BEGIN TIM4_Init 1 */
 447:Core/Src/main.c **** 
 448:Core/Src/main.c ****   /* USER CODE END TIM4_Init 1 */
 449:Core/Src/main.c ****   htim4.Instance = TIM4;
 450:Core/Src/main.c ****   htim4.Init.Prescaler = 9999;
 451:Core/Src/main.c ****   htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 452:Core/Src/main.c ****   htim4.Init.Period = 1679;
 453:Core/Src/main.c ****   htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 454:Core/Src/main.c ****   htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 455:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim4) != HAL_OK)
 456:Core/Src/main.c ****   {
 457:Core/Src/main.c ****     Error_Handler();
 458:Core/Src/main.c ****   }
 459:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 460:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim4, &sClockSourceConfig) != HAL_OK)
 461:Core/Src/main.c ****   {
ARM GAS  /tmp/ccACqZav.s 			page 50


 462:Core/Src/main.c ****     Error_Handler();
 463:Core/Src/main.c ****   }
 464:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 465:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 466:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 467:Core/Src/main.c ****   {
 468:Core/Src/main.c ****     Error_Handler();
 469:Core/Src/main.c ****   }
 470:Core/Src/main.c ****   /* USER CODE BEGIN TIM4_Init 2 */
 471:Core/Src/main.c **** 
 472:Core/Src/main.c ****   /* USER CODE END TIM4_Init 2 */
 473:Core/Src/main.c **** 
 474:Core/Src/main.c **** }
 475:Core/Src/main.c **** 
 476:Core/Src/main.c **** /**
 477:Core/Src/main.c ****   * @brief USART2 Initialization Function
 478:Core/Src/main.c ****   * @param None
 479:Core/Src/main.c ****   * @retval None
 480:Core/Src/main.c ****   */
 481:Core/Src/main.c **** static void MX_USART2_UART_Init(void)
 482:Core/Src/main.c **** {
 483:Core/Src/main.c **** 
 484:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 0 */
 485:Core/Src/main.c **** 
 486:Core/Src/main.c ****   /* USER CODE END USART2_Init 0 */
 487:Core/Src/main.c **** 
 488:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 1 */
 489:Core/Src/main.c **** 
 490:Core/Src/main.c ****   /* USER CODE END USART2_Init 1 */
 491:Core/Src/main.c ****   huart2.Instance = USART2;
 492:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 493:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 494:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 495:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 496:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 497:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 498:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 499:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 500:Core/Src/main.c ****   {
 501:Core/Src/main.c ****     Error_Handler();
 502:Core/Src/main.c ****   }
 503:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 2 */
 504:Core/Src/main.c **** 
 505:Core/Src/main.c ****   /* USER CODE END USART2_Init 2 */
 506:Core/Src/main.c **** 
 507:Core/Src/main.c **** }
 508:Core/Src/main.c **** 
 509:Core/Src/main.c **** /**
 510:Core/Src/main.c ****   * Enable DMA controller clock
 511:Core/Src/main.c ****   */
 512:Core/Src/main.c **** static void MX_DMA_Init(void)
 513:Core/Src/main.c **** {
 514:Core/Src/main.c **** 
 515:Core/Src/main.c ****   /* DMA controller clock enable */
 516:Core/Src/main.c ****   __HAL_RCC_DMA2_CLK_ENABLE();
 517:Core/Src/main.c **** 
 518:Core/Src/main.c ****   /* DMA interrupt init */
ARM GAS  /tmp/ccACqZav.s 			page 51


 519:Core/Src/main.c ****   /* DMA2_Stream0_IRQn interrupt configuration */
 520:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA2_Stream0_IRQn, 0, 0);
 521:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA2_Stream0_IRQn);
 522:Core/Src/main.c **** 
 523:Core/Src/main.c **** }
 524:Core/Src/main.c **** 
 525:Core/Src/main.c **** /**
 526:Core/Src/main.c ****   * @brief GPIO Initialization Function
 527:Core/Src/main.c ****   * @param None
 528:Core/Src/main.c ****   * @retval None
 529:Core/Src/main.c ****   */
 530:Core/Src/main.c **** static void MX_GPIO_Init(void)
 531:Core/Src/main.c **** {
 532:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 533:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 534:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
 535:Core/Src/main.c **** 
 536:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 537:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
 538:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 539:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 540:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 541:Core/Src/main.c **** 
 542:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 543:Core/Src/main.c ****   HAL_GPIO_WritePin(LD2_GPIO_Port, LD2_Pin, GPIO_PIN_RESET);
 544:Core/Src/main.c **** 
 545:Core/Src/main.c ****   /*Configure GPIO pin : B1_Pin */
 546:Core/Src/main.c ****   GPIO_InitStruct.Pin = B1_Pin;
 547:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 548:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 549:Core/Src/main.c ****   HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 550:Core/Src/main.c **** 
 551:Core/Src/main.c ****   /*Configure GPIO pin : PC2 */
 552:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_2;
 553:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING_FALLING;
 554:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 555:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 556:Core/Src/main.c **** 
 557:Core/Src/main.c ****   /*Configure GPIO pin : LD2_Pin */
 558:Core/Src/main.c ****   GPIO_InitStruct.Pin = LD2_Pin;
 559:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 560:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 561:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 562:Core/Src/main.c ****   HAL_GPIO_Init(LD2_GPIO_Port, &GPIO_InitStruct);
 563:Core/Src/main.c **** 
 564:Core/Src/main.c ****   /* EXTI interrupt init*/
 565:Core/Src/main.c ****   HAL_NVIC_SetPriority(EXTI2_IRQn, 0, 0);
 566:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI2_IRQn);
 567:Core/Src/main.c **** 
 568:Core/Src/main.c ****   HAL_NVIC_SetPriority(EXTI15_10_IRQn, 0, 0);
 569:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI15_10_IRQn);
 570:Core/Src/main.c **** 
 571:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 572:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
 573:Core/Src/main.c **** }
 574:Core/Src/main.c **** 
 575:Core/Src/main.c **** /* USER CODE BEGIN 4 */
ARM GAS  /tmp/ccACqZav.s 			page 52


 576:Core/Src/main.c **** 
 577:Core/Src/main.c **** // No transition functions
 578:Core/Src/main.c **** 
 579:Core/Src/main.c **** /*  ____  _        _       
 580:Core/Src/main.c ****  * / ___|| |_ __ _| |_ ___ 
 581:Core/Src/main.c ****  * \___ \| __/ _` | __/ _ \
 582:Core/Src/main.c ****  *  ___) | || (_| | ||  __/
 583:Core/Src/main.c ****  * |____/ \__\__,_|\__\___|
 584:Core/Src/main.c ****  *                         
 585:Core/Src/main.c ****  *   __                  _   _                 
 586:Core/Src/main.c ****  *  / _|_   _ _ __   ___| |_(_) ___  _ __  ___ 
 587:Core/Src/main.c ****  * | |_| | | | '_ \ / __| __| |/ _ \| '_ \/ __|
 588:Core/Src/main.c ****  * |  _| |_| | | | | (__| |_| | (_) | | | \__ \
 589:Core/Src/main.c ****  * |_|  \__,_|_| |_|\___|\__|_|\___/|_| |_|___/
 590:Core/Src/main.c ****  */                                             
 591:Core/Src/main.c **** 
 592:Core/Src/main.c **** // Function to be executed in state init
 593:Core/Src/main.c **** // valid return states: STATE_WAIT_REQUEST, STATE_ERROR
 594:Core/Src/main.c **** state_t do_init(state_data_t *data) {
 595:Core/Src/main.c ****   next_state = STATE_WAIT_REQUEST;
 596:Core/Src/main.c ****   
 597:Core/Src/main.c ****   //syslog(LOG_INFO, "[FSM] In state init");
 598:Core/Src/main.c ****   /* Your Code Here */
 599:Core/Src/main.c ****   srand(time(NULL)); //set seed for random number generator
 600:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 601:Core/Src/main.c ****   halStatus = HAL_Init();
 602:Core/Src/main.c **** 
 603:Core/Src/main.c ****   if(halStatus != HAL_OK){
 604:Core/Src/main.c ****     next_state  = STATE_ERROR;
 605:Core/Src/main.c ****     return next_state;
 606:Core/Src/main.c ****   }
 607:Core/Src/main.c **** 
 608:Core/Src/main.c ****   /* Configure the system clock */
 609:Core/Src/main.c ****   SystemClock_Config();
 610:Core/Src/main.c **** 
 611:Core/Src/main.c ****   /* Initialize all configured peripherals */
 612:Core/Src/main.c ****   MX_GPIO_Init();
 613:Core/Src/main.c ****   MX_DMA_Init();
 614:Core/Src/main.c ****   MX_USART2_UART_Init();
 615:Core/Src/main.c ****   MX_ADC1_Init();
 616:Core/Src/main.c ****   MX_TIM3_Init();
 617:Core/Src/main.c ****   MX_TIM4_Init();
 618:Core/Src/main.c **** 
 619:Core/Src/main.c ****   // Initialize the DMA conversion
 620:Core/Src/main.c ****   halStatus = HAL_ADC_Start_DMA(&hadc1, adcBuffer, ADC_BUFFER_SIZE);
 621:Core/Src/main.c ****   if(halStatus != HAL_OK){
 622:Core/Src/main.c ****     next_state  = STATE_ERROR;
 623:Core/Src/main.c ****     return next_state;
 624:Core/Src/main.c ****   }
 625:Core/Src/main.c **** 
 626:Core/Src/main.c ****   /*
 627:Core/Src/main.c ****   halStatus = HAL_UARTEx_ReceiveToIdle_IT(&huart2, (u_int8_t *)cli_command, BUFFER_SIZE);
 628:Core/Src/main.c ****   if(halStatus != HAL_OK){
 629:Core/Src/main.c ****     next_state  = STATE_ERROR;
 630:Core/Src/main.c ****     return next_state;
 631:Core/Src/main.c ****   }*/
 632:Core/Src/main.c **** 
ARM GAS  /tmp/ccACqZav.s 			page 53


 633:Core/Src/main.c ****   lastTimer = HAL_GetTick();//start time of MCU
 634:Core/Src/main.c ****   next_state = STATE_WAIT_REQUEST;
 635:Core/Src/main.c ****   return next_state;
 636:Core/Src/main.c **** }
 637:Core/Src/main.c **** 
 638:Core/Src/main.c **** 
 639:Core/Src/main.c **** // Function to be executed in state wait_request
 640:Core/Src/main.c **** // valid return states: STATE_ERROR, STATE_LISTENING
 641:Core/Src/main.c **** state_t do_wait_request(state_data_t *data) {
 642:Core/Src/main.c ****   next_state = NO_CHANGE;
 643:Core/Src/main.c ****   
 644:Core/Src/main.c ****   //syslog(LOG_INFO, "[FSM] In state wait_request");
 645:Core/Src/main.c ****   /* Your Code Here */
 646:Core/Src/main.c ****   if(!is_request_sended){
 647:Core/Src/main.c ****     sprintf(msg_buffer, "C:\r\n");//send comand request to user
 648:Core/Src/main.c ****     halStatus = HAL_UART_Transmit(&huart2, (uint8_t *)msg_buffer, strlen(msg_buffer), HAL_MAX_DELAY
 649:Core/Src/main.c ****     if(halStatus != HAL_OK){
 650:Core/Src/main.c ****       next_state  = STATE_ERROR;
 651:Core/Src/main.c ****       return next_state;
 652:Core/Src/main.c ****     }
 653:Core/Src/main.c **** 
 654:Core/Src/main.c ****     halStatus = HAL_UARTEx_ReceiveToIdle_IT(&huart2, (u_int8_t *)cli_command, BUFFER_SIZE);
 655:Core/Src/main.c ****     is_request_sended = 1;
 656:Core/Src/main.c ****   }
 657:Core/Src/main.c ****   
 658:Core/Src/main.c ****   return next_state;
 659:Core/Src/main.c **** }
 660:Core/Src/main.c **** 
 661:Core/Src/main.c **** 
 662:Core/Src/main.c **** // Function to be executed in state error
 663:Core/Src/main.c **** // valid return states: NO_CHANGE
 664:Core/Src/main.c **** state_t do_error(state_data_t *data) {
 108              		.loc 1 664 38 view -0
 109              		.cfi_startproc
 110              		@ args = 0, pretend = 0, frame = 0
 111              		@ frame_needed = 0, uses_anonymous_args = 0
 112              		.loc 1 664 38 is_stmt 0 view .LVU16
 113 0000 10B5     		push	{r4, lr}
 114              		.cfi_def_cfa_offset 8
 115              		.cfi_offset 4, -8
 116              		.cfi_offset 14, -4
 665:Core/Src/main.c ****   next_state = NO_CHANGE;
 117              		.loc 1 665 3 is_stmt 1 view .LVU17
 118              		.loc 1 665 14 is_stmt 0 view .LVU18
 119 0002 154B     		ldr	r3, .L11
 120 0004 0722     		movs	r2, #7
 121 0006 1A70     		strb	r2, [r3]
 666:Core/Src/main.c ****   
 667:Core/Src/main.c ****   //syslog(LOG_INFO, "[FSM] In state error");
 668:Core/Src/main.c ****   /* Your Code Here */
 669:Core/Src/main.c ****   if(!is_running_error_timer){
 122              		.loc 1 669 3 is_stmt 1 view .LVU19
 123              		.loc 1 669 6 is_stmt 0 view .LVU20
 124 0008 144B     		ldr	r3, .L11+4
 125 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 126              		.loc 1 669 5 view .LVU21
 127 000c CBB1     		cbz	r3, .L9
ARM GAS  /tmp/ccACqZav.s 			page 54


 128              	.LVL1:
 129              	.L6:
 670:Core/Src/main.c ****     HAL_TIM_Base_Start_IT(&htim4);
 671:Core/Src/main.c ****     is_running_error_timer = 1;
 672:Core/Src/main.c ****   }
 673:Core/Src/main.c **** 
 674:Core/Src/main.c ****   if(is_request_sended){
 130              		.loc 1 674 3 is_stmt 1 view .LVU22
 131              		.loc 1 674 6 is_stmt 0 view .LVU23
 132 000e 144B     		ldr	r3, .L11+8
 133 0010 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 134              		.loc 1 674 5 view .LVU24
 135 0012 EBB9     		cbnz	r3, .L10
 136              	.L7:
 675:Core/Src/main.c ****     HAL_UART_AbortReceive_IT(&huart2);
 676:Core/Src/main.c ****   }
 677:Core/Src/main.c **** 
 678:Core/Src/main.c ****   //retrieve last errors raised
 679:Core/Src/main.c ****   //CFSR (Configurable Fault Status Register)
 680:Core/Src/main.c ****   uint32_t cfsr = SCB->CFSR;
 137              		.loc 1 680 3 is_stmt 1 view .LVU25
 138              		.loc 1 680 12 is_stmt 0 view .LVU26
 139 0014 134B     		ldr	r3, .L11+12
 140 0016 9A6A     		ldr	r2, [r3, #40]
 141              	.LVL2:
 681:Core/Src/main.c ****   //HFSR (HardFault Status Register)
 682:Core/Src/main.c ****   uint32_t hfsr = SCB->HFSR;
 142              		.loc 1 682 3 is_stmt 1 view .LVU27
 143              		.loc 1 682 12 is_stmt 0 view .LVU28
 144 0018 DB6A     		ldr	r3, [r3, #44]
 145              	.LVL3:
 683:Core/Src/main.c ****   sprintf(msg_buffer, "ERROR CFSR: %lu\tHFSR: %lu\r\n", cfsr, hfsr);
 146              		.loc 1 683 3 is_stmt 1 view .LVU29
 147 001a 134C     		ldr	r4, .L11+16
 148 001c 1349     		ldr	r1, .L11+20
 149 001e 2046     		mov	r0, r4
 150 0020 FFF7FEFF 		bl	sprintf
 151              	.LVL4:
 684:Core/Src/main.c ****   halStatus = HAL_UART_Transmit(&huart2, (uint8_t *)msg_buffer, strlen(msg_buffer), HAL_MAX_DELAY);
 152              		.loc 1 684 3 view .LVU30
 153              		.loc 1 684 65 is_stmt 0 view .LVU31
 154 0024 2046     		mov	r0, r4
 155 0026 FFF7FEFF 		bl	strlen
 156              	.LVL5:
 157              		.loc 1 684 15 discriminator 1 view .LVU32
 158 002a 4FF0FF33 		mov	r3, #-1
 159 002e 82B2     		uxth	r2, r0
 160 0030 2146     		mov	r1, r4
 161 0032 0F48     		ldr	r0, .L11+24
 162 0034 FFF7FEFF 		bl	HAL_UART_Transmit
 163              	.LVL6:
 164              		.loc 1 684 13 discriminator 2 view .LVU33
 165 0038 0E4B     		ldr	r3, .L11+28
 166 003a 1870     		strb	r0, [r3]
 685:Core/Src/main.c **** 
 686:Core/Src/main.c ****   return next_state;
 167              		.loc 1 686 3 is_stmt 1 view .LVU34
ARM GAS  /tmp/ccACqZav.s 			page 55


 687:Core/Src/main.c **** }
 168              		.loc 1 687 1 is_stmt 0 view .LVU35
 169 003c 064B     		ldr	r3, .L11
 170 003e 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 171 0040 10BD     		pop	{r4, pc}
 172              	.LVL7:
 173              	.L9:
 670:Core/Src/main.c ****     is_running_error_timer = 1;
 174              		.loc 1 670 5 is_stmt 1 view .LVU36
 175 0042 0D48     		ldr	r0, .L11+32
 176              	.LVL8:
 670:Core/Src/main.c ****     is_running_error_timer = 1;
 177              		.loc 1 670 5 is_stmt 0 view .LVU37
 178 0044 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 179              	.LVL9:
 671:Core/Src/main.c ****   }
 180              		.loc 1 671 5 is_stmt 1 view .LVU38
 671:Core/Src/main.c ****   }
 181              		.loc 1 671 28 is_stmt 0 view .LVU39
 182 0048 044B     		ldr	r3, .L11+4
 183 004a 0122     		movs	r2, #1
 184 004c 1A70     		strb	r2, [r3]
 185 004e DEE7     		b	.L6
 186              	.L10:
 675:Core/Src/main.c ****   }
 187              		.loc 1 675 5 is_stmt 1 view .LVU40
 188 0050 0748     		ldr	r0, .L11+24
 189 0052 FFF7FEFF 		bl	HAL_UART_AbortReceive_IT
 190              	.LVL10:
 191 0056 DDE7     		b	.L7
 192              	.L12:
 193              		.align	2
 194              	.L11:
 195 0058 00000000 		.word	next_state
 196 005c 00000000 		.word	is_running_error_timer
 197 0060 00000000 		.word	is_request_sended
 198 0064 00ED00E0 		.word	-536810240
 199 0068 00000000 		.word	msg_buffer
 200 006c 00000000 		.word	.LC0
 201 0070 00000000 		.word	huart2
 202 0074 00000000 		.word	halStatus
 203 0078 00000000 		.word	htim4
 204              		.cfi_endproc
 205              	.LFE237:
 207              		.section	.rodata.do_warning.str1.4,"aMS",%progbits,1
 208              		.align	2
 209              	.LC1:
 210 0000 5741524E 		.ascii	"WARNING\015\012\000"
 210      494E470D 
 210      0A00
 211              		.section	.text.do_warning,"ax",%progbits
 212              		.align	1
 213              		.global	do_warning
 214              		.syntax unified
 215              		.thumb
 216              		.thumb_func
 218              	do_warning:
ARM GAS  /tmp/ccACqZav.s 			page 56


 219              	.LVL11:
 220              	.LFB239:
 688:Core/Src/main.c **** 
 689:Core/Src/main.c **** 
 690:Core/Src/main.c **** // Function to be executed in state listening
 691:Core/Src/main.c **** // valid return states: STATE_ERROR, STATE_WARNING, STATE_PAUSE
 692:Core/Src/main.c **** state_t do_listening(state_data_t *data) {
 693:Core/Src/main.c ****   next_state = NO_CHANGE;
 694:Core/Src/main.c ****   
 695:Core/Src/main.c ****   //syslog(LOG_INFO, "[FSM] In state listening");
 696:Core/Src/main.c ****   /* Your Code Here */
 697:Core/Src/main.c ****   last_index = (BUFFER_SIZE - __HAL_DMA_GET_COUNTER(&hdma_adc1)) % BUFFER_SIZE;
 698:Core/Src/main.c ****   lastAnalogValue = adcBuffer[last_index];
 699:Core/Src/main.c ****   //update moving average if in MOVING_AVERAGE mode
 700:Core/Src/main.c ****   if (currentFilterMode == MOVING_AVERAGE) {
 701:Core/Src/main.c ****     sum -= adc_moving_average[buffer_index];
 702:Core/Src/main.c ****     adc_moving_average[buffer_index] = lastAnalogValue;
 703:Core/Src/main.c ****     sum += lastAnalogValue;
 704:Core/Src/main.c ****     buffer_index = (buffer_index + 1) % MOVING_AVG_SIZE;
 705:Core/Src/main.c ****   }
 706:Core/Src/main.c **** 
 707:Core/Src/main.c ****   //print analog data
 708:Core/Src/main.c ****   switch (currentFilterMode)
 709:Core/Src/main.c ****   {
 710:Core/Src/main.c ****   case RAW:
 711:Core/Src/main.c ****     sprintf(msg_buffer, "A:%hu\r\n", (u_int16_t)lastAnalogValue);
 712:Core/Src/main.c ****     break;
 713:Core/Src/main.c ****   
 714:Core/Src/main.c ****   case MOVING_AVERAGE:
 715:Core/Src/main.c ****     float moving_avg = (float)sum / MOVING_AVG_SIZE;
 716:Core/Src/main.c ****     sprintf(msg_buffer, "A: %.3f\r\n", moving_avg);
 717:Core/Src/main.c ****     break;
 718:Core/Src/main.c **** 
 719:Core/Src/main.c ****   case RANDOM_NOISE:
 720:Core/Src/main.c ****     sprintf(msg_buffer, "A: %hu\r\n", (u_int16_t)(adcBuffer[0] + rand() % RANDOM_RANGE));
 721:Core/Src/main.c ****     break;
 722:Core/Src/main.c **** 
 723:Core/Src/main.c ****   default:
 724:Core/Src/main.c ****     break;
 725:Core/Src/main.c ****   }
 726:Core/Src/main.c ****   halStatus = HAL_UART_Transmit(&huart2, (uint8_t *)msg_buffer, strlen(msg_buffer), HAL_MAX_DELAY);
 727:Core/Src/main.c ****   if(halStatus != HAL_OK){
 728:Core/Src/main.c ****     next_state  = STATE_ERROR;
 729:Core/Src/main.c ****     return next_state;
 730:Core/Src/main.c ****   }
 731:Core/Src/main.c **** 
 732:Core/Src/main.c ****   //print digital data
 733:Core/Src/main.c ****   sprintf(msg_buffer, "D: %hu\r\n", lastDigitalValue);
 734:Core/Src/main.c ****   halStatus = HAL_UART_Transmit(&huart2, (uint8_t *)msg_buffer, strlen(msg_buffer), HAL_MAX_DELAY);
 735:Core/Src/main.c ****   if(halStatus != HAL_OK){
 736:Core/Src/main.c ****     next_state  = STATE_ERROR;
 737:Core/Src/main.c ****     return next_state;
 738:Core/Src/main.c ****   }
 739:Core/Src/main.c **** 
 740:Core/Src/main.c ****   if(lastDigitalValue){
 741:Core/Src/main.c ****     //check if is high for 5 seconds
 742:Core/Src/main.c ****     if(HAL_GetTick() - lastTimer >= 5000){
ARM GAS  /tmp/ccACqZav.s 			page 57


 743:Core/Src/main.c ****       //warning state
 744:Core/Src/main.c ****       next_state = STATE_WARNING;
 745:Core/Src/main.c ****       HAL_UART_AbortReceive_IT(&huart2);
 746:Core/Src/main.c ****     }
 747:Core/Src/main.c ****   }else{
 748:Core/Src/main.c ****     //reset timer
 749:Core/Src/main.c ****     lastTimer = HAL_GetTick();
 750:Core/Src/main.c ****   }
 751:Core/Src/main.c **** 
 752:Core/Src/main.c ****   return next_state;
 753:Core/Src/main.c **** }
 754:Core/Src/main.c **** 
 755:Core/Src/main.c **** 
 756:Core/Src/main.c **** // Function to be executed in state warning
 757:Core/Src/main.c **** // valid return states: STATE_WAIT_REQUEST, STATE_ERROR
 758:Core/Src/main.c **** state_t do_warning(state_data_t *data) {
 221              		.loc 1 758 40 view -0
 222              		.cfi_startproc
 223              		@ args = 0, pretend = 0, frame = 0
 224              		@ frame_needed = 0, uses_anonymous_args = 0
 225              		.loc 1 758 40 is_stmt 0 view .LVU42
 226 0000 10B5     		push	{r4, lr}
 227              		.cfi_def_cfa_offset 8
 228              		.cfi_offset 4, -8
 229              		.cfi_offset 14, -4
 759:Core/Src/main.c ****   next_state = NO_CHANGE;
 230              		.loc 1 759 3 is_stmt 1 view .LVU43
 231              		.loc 1 759 14 is_stmt 0 view .LVU44
 232 0002 114B     		ldr	r3, .L18
 233 0004 0722     		movs	r2, #7
 234 0006 1A70     		strb	r2, [r3]
 760:Core/Src/main.c ****   
 761:Core/Src/main.c ****   //syslog(LOG_INFO, "[FSM] In state warning");
 762:Core/Src/main.c ****   /* Your Code Here */
 763:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, GPIO_PIN_RESET);
 235              		.loc 1 763 3 is_stmt 1 view .LVU45
 236 0008 0022     		movs	r2, #0
 237 000a 2021     		movs	r1, #32
 238 000c 0F48     		ldr	r0, .L18+4
 239              	.LVL12:
 240              		.loc 1 763 3 is_stmt 0 view .LVU46
 241 000e FFF7FEFF 		bl	HAL_GPIO_WritePin
 242              	.LVL13:
 764:Core/Src/main.c ****   sprintf(msg_buffer, "WARNING\r\n");
 243              		.loc 1 764 3 is_stmt 1 view .LVU47
 244 0012 0F4C     		ldr	r4, .L18+8
 245 0014 0F4A     		ldr	r2, .L18+12
 246 0016 2346     		mov	r3, r4
 247 0018 07CA     		ldm	r2, {r0, r1, r2}
 248 001a 03C3     		stmia	r3!, {r0, r1}
 249 001c 1A80     		strh	r2, [r3]	@ movhi
 765:Core/Src/main.c ****   halStatus = HAL_UART_Transmit(&huart2, (uint8_t *)msg_buffer, strlen(msg_buffer), HAL_MAX_DELAY);
 250              		.loc 1 765 3 view .LVU48
 251              		.loc 1 765 65 is_stmt 0 view .LVU49
 252 001e 2046     		mov	r0, r4
 253 0020 FFF7FEFF 		bl	strlen
 254              	.LVL14:
ARM GAS  /tmp/ccACqZav.s 			page 58


 255              		.loc 1 765 15 discriminator 1 view .LVU50
 256 0024 4FF0FF33 		mov	r3, #-1
 257 0028 82B2     		uxth	r2, r0
 258 002a 2146     		mov	r1, r4
 259 002c 0A48     		ldr	r0, .L18+16
 260 002e FFF7FEFF 		bl	HAL_UART_Transmit
 261              	.LVL15:
 262              		.loc 1 765 13 discriminator 2 view .LVU51
 263 0032 0A4B     		ldr	r3, .L18+20
 264 0034 1870     		strb	r0, [r3]
 766:Core/Src/main.c ****   if(halStatus != HAL_OK){
 265              		.loc 1 766 3 is_stmt 1 view .LVU52
 266              		.loc 1 766 5 is_stmt 0 view .LVU53
 267 0036 10B9     		cbnz	r0, .L17
 767:Core/Src/main.c ****     next_state = STATE_ERROR;
 768:Core/Src/main.c ****     return next_state;
 769:Core/Src/main.c ****   }
 770:Core/Src/main.c **** 
 771:Core/Src/main.c ****   return next_state;
 268              		.loc 1 771 3 is_stmt 1 view .LVU54
 269              		.loc 1 771 10 is_stmt 0 view .LVU55
 270 0038 034B     		ldr	r3, .L18
 271 003a 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 272              	.L15:
 772:Core/Src/main.c **** }
 273              		.loc 1 772 1 view .LVU56
 274 003c 10BD     		pop	{r4, pc}
 275              	.L17:
 767:Core/Src/main.c ****     next_state = STATE_ERROR;
 276              		.loc 1 767 5 is_stmt 1 view .LVU57
 767:Core/Src/main.c ****     next_state = STATE_ERROR;
 277              		.loc 1 767 16 is_stmt 0 view .LVU58
 278 003e 0220     		movs	r0, #2
 279 0040 014B     		ldr	r3, .L18
 280 0042 1870     		strb	r0, [r3]
 768:Core/Src/main.c ****   }
 281              		.loc 1 768 5 is_stmt 1 view .LVU59
 768:Core/Src/main.c ****   }
 282              		.loc 1 768 12 is_stmt 0 view .LVU60
 283 0044 FAE7     		b	.L15
 284              	.L19:
 285 0046 00BF     		.align	2
 286              	.L18:
 287 0048 00000000 		.word	next_state
 288 004c 00000240 		.word	1073872896
 289 0050 00000000 		.word	msg_buffer
 290 0054 00000000 		.word	.LC1
 291 0058 00000000 		.word	huart2
 292 005c 00000000 		.word	halStatus
 293              		.cfi_endproc
 294              	.LFE239:
 296              		.section	.rodata.do_wait_request.str1.4,"aMS",%progbits,1
 297              		.align	2
 298              	.LC2:
 299 0000 433A0D0A 		.ascii	"C:\015\012\000"
 299      00
 300              		.section	.text.do_wait_request,"ax",%progbits
ARM GAS  /tmp/ccACqZav.s 			page 59


 301              		.align	1
 302              		.global	do_wait_request
 303              		.syntax unified
 304              		.thumb
 305              		.thumb_func
 307              	do_wait_request:
 308              	.LVL16:
 309              	.LFB236:
 641:Core/Src/main.c ****   next_state = NO_CHANGE;
 310              		.loc 1 641 45 is_stmt 1 view -0
 311              		.cfi_startproc
 312              		@ args = 0, pretend = 0, frame = 0
 313              		@ frame_needed = 0, uses_anonymous_args = 0
 642:Core/Src/main.c ****   
 314              		.loc 1 642 3 view .LVU62
 642:Core/Src/main.c ****   
 315              		.loc 1 642 14 is_stmt 0 view .LVU63
 316 0000 164B     		ldr	r3, .L31
 317 0002 0722     		movs	r2, #7
 318 0004 1A70     		strb	r2, [r3]
 646:Core/Src/main.c ****     sprintf(msg_buffer, "C:\r\n");//send comand request to user
 319              		.loc 1 646 3 is_stmt 1 view .LVU64
 646:Core/Src/main.c ****     sprintf(msg_buffer, "C:\r\n");//send comand request to user
 320              		.loc 1 646 6 is_stmt 0 view .LVU65
 321 0006 164B     		ldr	r3, .L31+4
 322 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 646:Core/Src/main.c ****     sprintf(msg_buffer, "C:\r\n");//send comand request to user
 323              		.loc 1 646 5 view .LVU66
 324 000a 13B1     		cbz	r3, .L29
 658:Core/Src/main.c **** }
 325              		.loc 1 658 3 is_stmt 1 view .LVU67
 658:Core/Src/main.c **** }
 326              		.loc 1 658 10 is_stmt 0 view .LVU68
 327 000c 134B     		ldr	r3, .L31
 328 000e 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 329              	.LVL17:
 659:Core/Src/main.c **** 
 330              		.loc 1 659 1 view .LVU69
 331 0010 7047     		bx	lr
 332              	.LVL18:
 333              	.L29:
 641:Core/Src/main.c ****   next_state = NO_CHANGE;
 334              		.loc 1 641 45 view .LVU70
 335 0012 10B5     		push	{r4, lr}
 336              		.cfi_def_cfa_offset 8
 337              		.cfi_offset 4, -8
 338              		.cfi_offset 14, -4
 647:Core/Src/main.c ****     halStatus = HAL_UART_Transmit(&huart2, (uint8_t *)msg_buffer, strlen(msg_buffer), HAL_MAX_DELAY
 339              		.loc 1 647 5 is_stmt 1 view .LVU71
 340 0014 134C     		ldr	r4, .L31+8
 341 0016 144B     		ldr	r3, .L31+12
 342 0018 93E80300 		ldm	r3, {r0, r1}
 343              	.LVL19:
 647:Core/Src/main.c ****     halStatus = HAL_UART_Transmit(&huart2, (uint8_t *)msg_buffer, strlen(msg_buffer), HAL_MAX_DELAY
 344              		.loc 1 647 5 is_stmt 0 view .LVU72
 345 001c 2060     		str	r0, [r4]
 346 001e 2171     		strb	r1, [r4, #4]
ARM GAS  /tmp/ccACqZav.s 			page 60


 648:Core/Src/main.c ****     if(halStatus != HAL_OK){
 347              		.loc 1 648 5 is_stmt 1 view .LVU73
 648:Core/Src/main.c ****     if(halStatus != HAL_OK){
 348              		.loc 1 648 67 is_stmt 0 view .LVU74
 349 0020 2046     		mov	r0, r4
 350 0022 FFF7FEFF 		bl	strlen
 351              	.LVL20:
 648:Core/Src/main.c ****     if(halStatus != HAL_OK){
 352              		.loc 1 648 17 discriminator 1 view .LVU75
 353 0026 4FF0FF33 		mov	r3, #-1
 354 002a 82B2     		uxth	r2, r0
 355 002c 2146     		mov	r1, r4
 356 002e 0F48     		ldr	r0, .L31+16
 357 0030 FFF7FEFF 		bl	HAL_UART_Transmit
 358              	.LVL21:
 648:Core/Src/main.c ****     if(halStatus != HAL_OK){
 359              		.loc 1 648 15 discriminator 2 view .LVU76
 360 0034 0E4B     		ldr	r3, .L31+20
 361 0036 1870     		strb	r0, [r3]
 649:Core/Src/main.c ****       next_state  = STATE_ERROR;
 362              		.loc 1 649 5 is_stmt 1 view .LVU77
 649:Core/Src/main.c ****       next_state  = STATE_ERROR;
 363              		.loc 1 649 7 is_stmt 0 view .LVU78
 364 0038 60B9     		cbnz	r0, .L30
 654:Core/Src/main.c ****     is_request_sended = 1;
 365              		.loc 1 654 5 is_stmt 1 view .LVU79
 654:Core/Src/main.c ****     is_request_sended = 1;
 366              		.loc 1 654 17 is_stmt 0 view .LVU80
 367 003a 4622     		movs	r2, #70
 368 003c 0D49     		ldr	r1, .L31+24
 369 003e 0B48     		ldr	r0, .L31+16
 370 0040 FFF7FEFF 		bl	HAL_UARTEx_ReceiveToIdle_IT
 371              	.LVL22:
 654:Core/Src/main.c ****     is_request_sended = 1;
 372              		.loc 1 654 15 discriminator 1 view .LVU81
 373 0044 0A4B     		ldr	r3, .L31+20
 374 0046 1870     		strb	r0, [r3]
 655:Core/Src/main.c ****   }
 375              		.loc 1 655 5 is_stmt 1 view .LVU82
 655:Core/Src/main.c ****   }
 376              		.loc 1 655 23 is_stmt 0 view .LVU83
 377 0048 054B     		ldr	r3, .L31+4
 378 004a 0122     		movs	r2, #1
 379 004c 1A70     		strb	r2, [r3]
 658:Core/Src/main.c **** }
 380              		.loc 1 658 3 is_stmt 1 view .LVU84
 658:Core/Src/main.c **** }
 381              		.loc 1 658 10 is_stmt 0 view .LVU85
 382 004e 034B     		ldr	r3, .L31
 383 0050 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 384              	.L23:
 659:Core/Src/main.c **** 
 385              		.loc 1 659 1 view .LVU86
 386 0052 10BD     		pop	{r4, pc}
 387              	.L30:
 650:Core/Src/main.c ****       return next_state;
 388              		.loc 1 650 7 is_stmt 1 view .LVU87
ARM GAS  /tmp/ccACqZav.s 			page 61


 650:Core/Src/main.c ****       return next_state;
 389              		.loc 1 650 19 is_stmt 0 view .LVU88
 390 0054 0220     		movs	r0, #2
 391 0056 014B     		ldr	r3, .L31
 392 0058 1870     		strb	r0, [r3]
 651:Core/Src/main.c ****     }
 393              		.loc 1 651 7 is_stmt 1 view .LVU89
 651:Core/Src/main.c ****     }
 394              		.loc 1 651 14 is_stmt 0 view .LVU90
 395 005a FAE7     		b	.L23
 396              	.L32:
 397              		.align	2
 398              	.L31:
 399 005c 00000000 		.word	next_state
 400 0060 00000000 		.word	is_request_sended
 401 0064 00000000 		.word	msg_buffer
 402 0068 00000000 		.word	.LC2
 403 006c 00000000 		.word	huart2
 404 0070 00000000 		.word	halStatus
 405 0074 00000000 		.word	cli_command
 406              		.cfi_endproc
 407              	.LFE236:
 409              		.section	.text.do_pause,"ax",%progbits
 410              		.align	1
 411              		.global	do_pause
 412              		.syntax unified
 413              		.thumb
 414              		.thumb_func
 416              	do_pause:
 417              	.LVL23:
 418              	.LFB240:
 773:Core/Src/main.c **** 
 774:Core/Src/main.c **** 
 775:Core/Src/main.c **** // Function to be executed in state pause
 776:Core/Src/main.c **** // valid return states: STATE_ERROR, STATE_LISTENING
 777:Core/Src/main.c **** state_t do_pause(state_data_t *data) {
 419              		.loc 1 777 38 is_stmt 1 view -0
 420              		.cfi_startproc
 421              		@ args = 0, pretend = 0, frame = 0
 422              		@ frame_needed = 0, uses_anonymous_args = 0
 778:Core/Src/main.c ****   next_state = NO_CHANGE;
 423              		.loc 1 778 3 view .LVU92
 424              		.loc 1 778 14 is_stmt 0 view .LVU93
 425 0000 164B     		ldr	r3, .L44
 426 0002 0722     		movs	r2, #7
 427 0004 1A70     		strb	r2, [r3]
 779:Core/Src/main.c ****   
 780:Core/Src/main.c ****   //syslog(LOG_INFO, "[FSM] In state pause");
 781:Core/Src/main.c ****   /* Your Code Here */
 782:Core/Src/main.c ****   if(!is_request_sended){
 428              		.loc 1 782 3 is_stmt 1 view .LVU94
 429              		.loc 1 782 6 is_stmt 0 view .LVU95
 430 0006 164B     		ldr	r3, .L44+4
 431 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 432              		.loc 1 782 5 view .LVU96
 433 000a 13B1     		cbz	r3, .L42
 783:Core/Src/main.c ****     sprintf(msg_buffer, "C:\r\n");//send comand request to user
ARM GAS  /tmp/ccACqZav.s 			page 62


 784:Core/Src/main.c ****     halStatus = HAL_UART_Transmit(&huart2, (uint8_t *)msg_buffer, strlen(msg_buffer), HAL_MAX_DELAY
 785:Core/Src/main.c ****     if(halStatus != HAL_OK){
 786:Core/Src/main.c ****       next_state  = STATE_ERROR;
 787:Core/Src/main.c ****       return next_state;
 788:Core/Src/main.c ****     }
 789:Core/Src/main.c **** 
 790:Core/Src/main.c ****     halStatus = HAL_UARTEx_ReceiveToIdle_IT(&huart2, (u_int8_t *)cli_command, BUFFER_SIZE);
 791:Core/Src/main.c ****     is_request_sended = 1;
 792:Core/Src/main.c ****   }
 793:Core/Src/main.c **** 
 794:Core/Src/main.c ****   return next_state;
 434              		.loc 1 794 3 is_stmt 1 view .LVU97
 435              		.loc 1 794 10 is_stmt 0 view .LVU98
 436 000c 134B     		ldr	r3, .L44
 437 000e 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 438              	.LVL24:
 795:Core/Src/main.c **** }
 439              		.loc 1 795 1 view .LVU99
 440 0010 7047     		bx	lr
 441              	.LVL25:
 442              	.L42:
 777:Core/Src/main.c ****   next_state = NO_CHANGE;
 443              		.loc 1 777 38 view .LVU100
 444 0012 10B5     		push	{r4, lr}
 445              		.cfi_def_cfa_offset 8
 446              		.cfi_offset 4, -8
 447              		.cfi_offset 14, -4
 783:Core/Src/main.c ****     sprintf(msg_buffer, "C:\r\n");//send comand request to user
 448              		.loc 1 783 5 is_stmt 1 view .LVU101
 449 0014 134C     		ldr	r4, .L44+8
 450 0016 144B     		ldr	r3, .L44+12
 451 0018 93E80300 		ldm	r3, {r0, r1}
 452              	.LVL26:
 783:Core/Src/main.c ****     sprintf(msg_buffer, "C:\r\n");//send comand request to user
 453              		.loc 1 783 5 is_stmt 0 view .LVU102
 454 001c 2060     		str	r0, [r4]
 455 001e 2171     		strb	r1, [r4, #4]
 784:Core/Src/main.c ****     if(halStatus != HAL_OK){
 456              		.loc 1 784 5 is_stmt 1 view .LVU103
 784:Core/Src/main.c ****     if(halStatus != HAL_OK){
 457              		.loc 1 784 67 is_stmt 0 view .LVU104
 458 0020 2046     		mov	r0, r4
 459 0022 FFF7FEFF 		bl	strlen
 460              	.LVL27:
 784:Core/Src/main.c ****     if(halStatus != HAL_OK){
 461              		.loc 1 784 17 discriminator 1 view .LVU105
 462 0026 4FF0FF33 		mov	r3, #-1
 463 002a 82B2     		uxth	r2, r0
 464 002c 2146     		mov	r1, r4
 465 002e 0F48     		ldr	r0, .L44+16
 466 0030 FFF7FEFF 		bl	HAL_UART_Transmit
 467              	.LVL28:
 784:Core/Src/main.c ****     if(halStatus != HAL_OK){
 468              		.loc 1 784 15 discriminator 2 view .LVU106
 469 0034 0E4B     		ldr	r3, .L44+20
 470 0036 1870     		strb	r0, [r3]
 785:Core/Src/main.c ****       next_state  = STATE_ERROR;
ARM GAS  /tmp/ccACqZav.s 			page 63


 471              		.loc 1 785 5 is_stmt 1 view .LVU107
 785:Core/Src/main.c ****       next_state  = STATE_ERROR;
 472              		.loc 1 785 7 is_stmt 0 view .LVU108
 473 0038 60B9     		cbnz	r0, .L43
 790:Core/Src/main.c ****     is_request_sended = 1;
 474              		.loc 1 790 5 is_stmt 1 view .LVU109
 790:Core/Src/main.c ****     is_request_sended = 1;
 475              		.loc 1 790 17 is_stmt 0 view .LVU110
 476 003a 4622     		movs	r2, #70
 477 003c 0D49     		ldr	r1, .L44+24
 478 003e 0B48     		ldr	r0, .L44+16
 479 0040 FFF7FEFF 		bl	HAL_UARTEx_ReceiveToIdle_IT
 480              	.LVL29:
 790:Core/Src/main.c ****     is_request_sended = 1;
 481              		.loc 1 790 15 discriminator 1 view .LVU111
 482 0044 0A4B     		ldr	r3, .L44+20
 483 0046 1870     		strb	r0, [r3]
 791:Core/Src/main.c ****   }
 484              		.loc 1 791 5 is_stmt 1 view .LVU112
 791:Core/Src/main.c ****   }
 485              		.loc 1 791 23 is_stmt 0 view .LVU113
 486 0048 054B     		ldr	r3, .L44+4
 487 004a 0122     		movs	r2, #1
 488 004c 1A70     		strb	r2, [r3]
 794:Core/Src/main.c **** }
 489              		.loc 1 794 3 is_stmt 1 view .LVU114
 794:Core/Src/main.c **** }
 490              		.loc 1 794 10 is_stmt 0 view .LVU115
 491 004e 034B     		ldr	r3, .L44
 492 0050 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 493              	.L36:
 494              		.loc 1 795 1 view .LVU116
 495 0052 10BD     		pop	{r4, pc}
 496              	.L43:
 786:Core/Src/main.c ****       return next_state;
 497              		.loc 1 786 7 is_stmt 1 view .LVU117
 786:Core/Src/main.c ****       return next_state;
 498              		.loc 1 786 19 is_stmt 0 view .LVU118
 499 0054 0220     		movs	r0, #2
 500 0056 014B     		ldr	r3, .L44
 501 0058 1870     		strb	r0, [r3]
 787:Core/Src/main.c ****     }
 502              		.loc 1 787 7 is_stmt 1 view .LVU119
 787:Core/Src/main.c ****     }
 503              		.loc 1 787 14 is_stmt 0 view .LVU120
 504 005a FAE7     		b	.L36
 505              	.L45:
 506              		.align	2
 507              	.L44:
 508 005c 00000000 		.word	next_state
 509 0060 00000000 		.word	is_request_sended
 510 0064 00000000 		.word	msg_buffer
 511 0068 00000000 		.word	.LC2
 512 006c 00000000 		.word	huart2
 513 0070 00000000 		.word	halStatus
 514 0074 00000000 		.word	cli_command
 515              		.cfi_endproc
ARM GAS  /tmp/ccACqZav.s 			page 64


 516              	.LFE240:
 518              		.section	.text.MX_GPIO_Init,"ax",%progbits
 519              		.align	1
 520              		.syntax unified
 521              		.thumb
 522              		.thumb_func
 524              	MX_GPIO_Init:
 525              	.LFB234:
 531:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 526              		.loc 1 531 1 is_stmt 1 view -0
 527              		.cfi_startproc
 528              		@ args = 0, pretend = 0, frame = 40
 529              		@ frame_needed = 0, uses_anonymous_args = 0
 530 0000 70B5     		push	{r4, r5, r6, lr}
 531              		.cfi_def_cfa_offset 16
 532              		.cfi_offset 4, -16
 533              		.cfi_offset 5, -12
 534              		.cfi_offset 6, -8
 535              		.cfi_offset 14, -4
 536 0002 8AB0     		sub	sp, sp, #40
 537              		.cfi_def_cfa_offset 56
 532:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 538              		.loc 1 532 3 view .LVU122
 532:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 539              		.loc 1 532 20 is_stmt 0 view .LVU123
 540 0004 0024     		movs	r4, #0
 541 0006 0594     		str	r4, [sp, #20]
 542 0008 0694     		str	r4, [sp, #24]
 543 000a 0794     		str	r4, [sp, #28]
 544 000c 0894     		str	r4, [sp, #32]
 545 000e 0994     		str	r4, [sp, #36]
 537:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 546              		.loc 1 537 3 is_stmt 1 view .LVU124
 547              	.LBB10:
 537:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 548              		.loc 1 537 3 view .LVU125
 549 0010 0194     		str	r4, [sp, #4]
 537:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 550              		.loc 1 537 3 view .LVU126
 551 0012 304B     		ldr	r3, .L48
 552 0014 1A6B     		ldr	r2, [r3, #48]
 553 0016 42F00402 		orr	r2, r2, #4
 554 001a 1A63     		str	r2, [r3, #48]
 537:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 555              		.loc 1 537 3 view .LVU127
 556 001c 1A6B     		ldr	r2, [r3, #48]
 557 001e 02F00402 		and	r2, r2, #4
 558 0022 0192     		str	r2, [sp, #4]
 537:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 559              		.loc 1 537 3 view .LVU128
 560 0024 019A     		ldr	r2, [sp, #4]
 561              	.LBE10:
 537:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 562              		.loc 1 537 3 view .LVU129
 538:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 563              		.loc 1 538 3 view .LVU130
 564              	.LBB11:
ARM GAS  /tmp/ccACqZav.s 			page 65


 538:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 565              		.loc 1 538 3 view .LVU131
 566 0026 0294     		str	r4, [sp, #8]
 538:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 567              		.loc 1 538 3 view .LVU132
 568 0028 1A6B     		ldr	r2, [r3, #48]
 569 002a 42F08002 		orr	r2, r2, #128
 570 002e 1A63     		str	r2, [r3, #48]
 538:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 571              		.loc 1 538 3 view .LVU133
 572 0030 1A6B     		ldr	r2, [r3, #48]
 573 0032 02F08002 		and	r2, r2, #128
 574 0036 0292     		str	r2, [sp, #8]
 538:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 575              		.loc 1 538 3 view .LVU134
 576 0038 029A     		ldr	r2, [sp, #8]
 577              	.LBE11:
 538:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 578              		.loc 1 538 3 view .LVU135
 539:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 579              		.loc 1 539 3 view .LVU136
 580              	.LBB12:
 539:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 581              		.loc 1 539 3 view .LVU137
 582 003a 0394     		str	r4, [sp, #12]
 539:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 583              		.loc 1 539 3 view .LVU138
 584 003c 1A6B     		ldr	r2, [r3, #48]
 585 003e 42F00102 		orr	r2, r2, #1
 586 0042 1A63     		str	r2, [r3, #48]
 539:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 587              		.loc 1 539 3 view .LVU139
 588 0044 1A6B     		ldr	r2, [r3, #48]
 589 0046 02F00102 		and	r2, r2, #1
 590 004a 0392     		str	r2, [sp, #12]
 539:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 591              		.loc 1 539 3 view .LVU140
 592 004c 039A     		ldr	r2, [sp, #12]
 593              	.LBE12:
 539:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 594              		.loc 1 539 3 view .LVU141
 540:Core/Src/main.c **** 
 595              		.loc 1 540 3 view .LVU142
 596              	.LBB13:
 540:Core/Src/main.c **** 
 597              		.loc 1 540 3 view .LVU143
 598 004e 0494     		str	r4, [sp, #16]
 540:Core/Src/main.c **** 
 599              		.loc 1 540 3 view .LVU144
 600 0050 1A6B     		ldr	r2, [r3, #48]
 601 0052 42F00202 		orr	r2, r2, #2
 602 0056 1A63     		str	r2, [r3, #48]
 540:Core/Src/main.c **** 
 603              		.loc 1 540 3 view .LVU145
 604 0058 1B6B     		ldr	r3, [r3, #48]
 605 005a 03F00203 		and	r3, r3, #2
 606 005e 0493     		str	r3, [sp, #16]
ARM GAS  /tmp/ccACqZav.s 			page 66


 540:Core/Src/main.c **** 
 607              		.loc 1 540 3 view .LVU146
 608 0060 049B     		ldr	r3, [sp, #16]
 609              	.LBE13:
 540:Core/Src/main.c **** 
 610              		.loc 1 540 3 view .LVU147
 543:Core/Src/main.c **** 
 611              		.loc 1 543 3 view .LVU148
 612 0062 1D4D     		ldr	r5, .L48+4
 613 0064 2246     		mov	r2, r4
 614 0066 2021     		movs	r1, #32
 615 0068 2846     		mov	r0, r5
 616 006a FFF7FEFF 		bl	HAL_GPIO_WritePin
 617              	.LVL30:
 546:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 618              		.loc 1 546 3 view .LVU149
 546:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 619              		.loc 1 546 23 is_stmt 0 view .LVU150
 620 006e 4FF40053 		mov	r3, #8192
 621 0072 0593     		str	r3, [sp, #20]
 547:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 622              		.loc 1 547 3 is_stmt 1 view .LVU151
 547:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 623              		.loc 1 547 24 is_stmt 0 view .LVU152
 624 0074 4FF40413 		mov	r3, #2162688
 625 0078 0693     		str	r3, [sp, #24]
 548:Core/Src/main.c ****   HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 626              		.loc 1 548 3 is_stmt 1 view .LVU153
 548:Core/Src/main.c ****   HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 627              		.loc 1 548 24 is_stmt 0 view .LVU154
 628 007a 0794     		str	r4, [sp, #28]
 549:Core/Src/main.c **** 
 629              		.loc 1 549 3 is_stmt 1 view .LVU155
 630 007c 174E     		ldr	r6, .L48+8
 631 007e 05A9     		add	r1, sp, #20
 632 0080 3046     		mov	r0, r6
 633 0082 FFF7FEFF 		bl	HAL_GPIO_Init
 634              	.LVL31:
 552:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING_FALLING;
 635              		.loc 1 552 3 view .LVU156
 552:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING_FALLING;
 636              		.loc 1 552 23 is_stmt 0 view .LVU157
 637 0086 0423     		movs	r3, #4
 638 0088 0593     		str	r3, [sp, #20]
 553:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 639              		.loc 1 553 3 is_stmt 1 view .LVU158
 553:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 640              		.loc 1 553 24 is_stmt 0 view .LVU159
 641 008a 4FF44413 		mov	r3, #3211264
 642 008e 0693     		str	r3, [sp, #24]
 554:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 643              		.loc 1 554 3 is_stmt 1 view .LVU160
 554:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 644              		.loc 1 554 24 is_stmt 0 view .LVU161
 645 0090 0794     		str	r4, [sp, #28]
 555:Core/Src/main.c **** 
 646              		.loc 1 555 3 is_stmt 1 view .LVU162
ARM GAS  /tmp/ccACqZav.s 			page 67


 647 0092 05A9     		add	r1, sp, #20
 648 0094 3046     		mov	r0, r6
 649 0096 FFF7FEFF 		bl	HAL_GPIO_Init
 650              	.LVL32:
 558:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 651              		.loc 1 558 3 view .LVU163
 558:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 652              		.loc 1 558 23 is_stmt 0 view .LVU164
 653 009a 2023     		movs	r3, #32
 654 009c 0593     		str	r3, [sp, #20]
 559:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 655              		.loc 1 559 3 is_stmt 1 view .LVU165
 559:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 656              		.loc 1 559 24 is_stmt 0 view .LVU166
 657 009e 0123     		movs	r3, #1
 658 00a0 0693     		str	r3, [sp, #24]
 560:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 659              		.loc 1 560 3 is_stmt 1 view .LVU167
 560:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 660              		.loc 1 560 24 is_stmt 0 view .LVU168
 661 00a2 0794     		str	r4, [sp, #28]
 561:Core/Src/main.c ****   HAL_GPIO_Init(LD2_GPIO_Port, &GPIO_InitStruct);
 662              		.loc 1 561 3 is_stmt 1 view .LVU169
 561:Core/Src/main.c ****   HAL_GPIO_Init(LD2_GPIO_Port, &GPIO_InitStruct);
 663              		.loc 1 561 25 is_stmt 0 view .LVU170
 664 00a4 0894     		str	r4, [sp, #32]
 562:Core/Src/main.c **** 
 665              		.loc 1 562 3 is_stmt 1 view .LVU171
 666 00a6 05A9     		add	r1, sp, #20
 667 00a8 2846     		mov	r0, r5
 668 00aa FFF7FEFF 		bl	HAL_GPIO_Init
 669              	.LVL33:
 565:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI2_IRQn);
 670              		.loc 1 565 3 view .LVU172
 671 00ae 2246     		mov	r2, r4
 672 00b0 2146     		mov	r1, r4
 673 00b2 0820     		movs	r0, #8
 674 00b4 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 675              	.LVL34:
 566:Core/Src/main.c **** 
 676              		.loc 1 566 3 view .LVU173
 677 00b8 0820     		movs	r0, #8
 678 00ba FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 679              	.LVL35:
 568:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI15_10_IRQn);
 680              		.loc 1 568 3 view .LVU174
 681 00be 2246     		mov	r2, r4
 682 00c0 2146     		mov	r1, r4
 683 00c2 2820     		movs	r0, #40
 684 00c4 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 685              	.LVL36:
 569:Core/Src/main.c **** 
 686              		.loc 1 569 3 view .LVU175
 687 00c8 2820     		movs	r0, #40
 688 00ca FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 689              	.LVL37:
 573:Core/Src/main.c **** 
ARM GAS  /tmp/ccACqZav.s 			page 68


 690              		.loc 1 573 1 is_stmt 0 view .LVU176
 691 00ce 0AB0     		add	sp, sp, #40
 692              		.cfi_def_cfa_offset 16
 693              		@ sp needed
 694 00d0 70BD     		pop	{r4, r5, r6, pc}
 695              	.L49:
 696 00d2 00BF     		.align	2
 697              	.L48:
 698 00d4 00380240 		.word	1073887232
 699 00d8 00000240 		.word	1073872896
 700 00dc 00080240 		.word	1073874944
 701              		.cfi_endproc
 702              	.LFE234:
 704              		.section	.text.MX_DMA_Init,"ax",%progbits
 705              		.align	1
 706              		.syntax unified
 707              		.thumb
 708              		.thumb_func
 710              	MX_DMA_Init:
 711              	.LFB233:
 513:Core/Src/main.c **** 
 712              		.loc 1 513 1 is_stmt 1 view -0
 713              		.cfi_startproc
 714              		@ args = 0, pretend = 0, frame = 8
 715              		@ frame_needed = 0, uses_anonymous_args = 0
 716 0000 00B5     		push	{lr}
 717              		.cfi_def_cfa_offset 4
 718              		.cfi_offset 14, -4
 719 0002 83B0     		sub	sp, sp, #12
 720              		.cfi_def_cfa_offset 16
 516:Core/Src/main.c **** 
 721              		.loc 1 516 3 view .LVU178
 722              	.LBB14:
 516:Core/Src/main.c **** 
 723              		.loc 1 516 3 view .LVU179
 724 0004 0021     		movs	r1, #0
 725 0006 0191     		str	r1, [sp, #4]
 516:Core/Src/main.c **** 
 726              		.loc 1 516 3 view .LVU180
 727 0008 094B     		ldr	r3, .L52
 728 000a 1A6B     		ldr	r2, [r3, #48]
 729 000c 42F48002 		orr	r2, r2, #4194304
 730 0010 1A63     		str	r2, [r3, #48]
 516:Core/Src/main.c **** 
 731              		.loc 1 516 3 view .LVU181
 732 0012 1B6B     		ldr	r3, [r3, #48]
 733 0014 03F48003 		and	r3, r3, #4194304
 734 0018 0193     		str	r3, [sp, #4]
 516:Core/Src/main.c **** 
 735              		.loc 1 516 3 view .LVU182
 736 001a 019B     		ldr	r3, [sp, #4]
 737              	.LBE14:
 516:Core/Src/main.c **** 
 738              		.loc 1 516 3 view .LVU183
 520:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA2_Stream0_IRQn);
 739              		.loc 1 520 3 view .LVU184
 740 001c 0A46     		mov	r2, r1
ARM GAS  /tmp/ccACqZav.s 			page 69


 741 001e 3820     		movs	r0, #56
 742 0020 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 743              	.LVL38:
 521:Core/Src/main.c **** 
 744              		.loc 1 521 3 view .LVU185
 745 0024 3820     		movs	r0, #56
 746 0026 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 747              	.LVL39:
 523:Core/Src/main.c **** 
 748              		.loc 1 523 1 is_stmt 0 view .LVU186
 749 002a 03B0     		add	sp, sp, #12
 750              		.cfi_def_cfa_offset 4
 751              		@ sp needed
 752 002c 5DF804FB 		ldr	pc, [sp], #4
 753              	.L53:
 754              		.align	2
 755              	.L52:
 756 0030 00380240 		.word	1073887232
 757              		.cfi_endproc
 758              	.LFE233:
 760              		.section	.rodata.do_listening.str1.4,"aMS",%progbits,1
 761              		.align	2
 762              	.LC3:
 763 0000 413A2568 		.ascii	"A:%hu\015\012\000"
 763      750D0A00 
 764              		.global	__aeabi_f2d
 765              		.align	2
 766              	.LC4:
 767 0008 413A2025 		.ascii	"A: %.3f\015\012\000"
 767      2E33660D 
 767      0A00
 768 0012 0000     		.align	2
 769              	.LC5:
 770 0014 413A2025 		.ascii	"A: %hu\015\012\000"
 770      68750D0A 
 770      00
 771 001d 000000   		.align	2
 772              	.LC6:
 773 0020 443A2025 		.ascii	"D: %hu\015\012\000"
 773      68750D0A 
 773      00
 774              		.section	.text.do_listening,"ax",%progbits
 775              		.align	1
 776              		.global	do_listening
 777              		.syntax unified
 778              		.thumb
 779              		.thumb_func
 781              	do_listening:
 782              	.LVL40:
 783              	.LFB238:
 692:Core/Src/main.c ****   next_state = NO_CHANGE;
 784              		.loc 1 692 42 is_stmt 1 view -0
 785              		.cfi_startproc
 786              		@ args = 0, pretend = 0, frame = 0
 787              		@ frame_needed = 0, uses_anonymous_args = 0
 692:Core/Src/main.c ****   next_state = NO_CHANGE;
 788              		.loc 1 692 42 is_stmt 0 view .LVU188
ARM GAS  /tmp/ccACqZav.s 			page 70


 789 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 790              		.cfi_def_cfa_offset 24
 791              		.cfi_offset 3, -24
 792              		.cfi_offset 4, -20
 793              		.cfi_offset 5, -16
 794              		.cfi_offset 6, -12
 795              		.cfi_offset 7, -8
 796              		.cfi_offset 14, -4
 693:Core/Src/main.c ****   
 797              		.loc 1 693 3 is_stmt 1 view .LVU189
 693:Core/Src/main.c ****   
 798              		.loc 1 693 14 is_stmt 0 view .LVU190
 799 0002 584B     		ldr	r3, .L68
 800 0004 0722     		movs	r2, #7
 801 0006 1A70     		strb	r2, [r3]
 697:Core/Src/main.c ****   lastAnalogValue = adcBuffer[last_index];
 802              		.loc 1 697 3 is_stmt 1 view .LVU191
 697:Core/Src/main.c ****   lastAnalogValue = adcBuffer[last_index];
 803              		.loc 1 697 31 is_stmt 0 view .LVU192
 804 0008 574B     		ldr	r3, .L68+4
 805 000a 1B68     		ldr	r3, [r3]
 806 000c 5A68     		ldr	r2, [r3, #4]
 697:Core/Src/main.c ****   lastAnalogValue = adcBuffer[last_index];
 807              		.loc 1 697 29 view .LVU193
 808 000e C2F14602 		rsb	r2, r2, #70
 697:Core/Src/main.c ****   lastAnalogValue = adcBuffer[last_index];
 809              		.loc 1 697 66 view .LVU194
 810 0012 5308     		lsrs	r3, r2, #1
 811 0014 5549     		ldr	r1, .L68+8
 812 0016 A1FB0313 		umull	r1, r3, r1, r3
 813 001a 5B09     		lsrs	r3, r3, #5
 814 001c 4621     		movs	r1, #70
 815 001e 01FB1323 		mls	r3, r1, r3, r2
 697:Core/Src/main.c ****   lastAnalogValue = adcBuffer[last_index];
 816              		.loc 1 697 14 view .LVU195
 817 0022 534A     		ldr	r2, .L68+12
 818 0024 1380     		strh	r3, [r2]	@ movhi
 698:Core/Src/main.c ****   //update moving average if in MOVING_AVERAGE mode
 819              		.loc 1 698 3 is_stmt 1 view .LVU196
 698:Core/Src/main.c ****   //update moving average if in MOVING_AVERAGE mode
 820              		.loc 1 698 30 is_stmt 0 view .LVU197
 821 0026 9BB2     		uxth	r3, r3
 822 0028 524A     		ldr	r2, .L68+16
 823 002a 52F82320 		ldr	r2, [r2, r3, lsl #2]
 698:Core/Src/main.c ****   //update moving average if in MOVING_AVERAGE mode
 824              		.loc 1 698 19 view .LVU198
 825 002e 94B2     		uxth	r4, r2
 826 0030 514B     		ldr	r3, .L68+20
 827 0032 1C80     		strh	r4, [r3]	@ movhi
 700:Core/Src/main.c ****     sum -= adc_moving_average[buffer_index];
 828              		.loc 1 700 3 is_stmt 1 view .LVU199
 700:Core/Src/main.c ****     sum -= adc_moving_average[buffer_index];
 829              		.loc 1 700 25 is_stmt 0 view .LVU200
 830 0034 514B     		ldr	r3, .L68+24
 831 0036 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 700:Core/Src/main.c ****     sum -= adc_moving_average[buffer_index];
 832              		.loc 1 700 6 view .LVU201
ARM GAS  /tmp/ccACqZav.s 			page 71


 833 0038 012B     		cmp	r3, #1
 834 003a 41D0     		beq	.L65
 835              	.LVL41:
 836              	.L55:
 708:Core/Src/main.c ****   {
 837              		.loc 1 708 3 is_stmt 1 view .LVU202
 838 003c 012B     		cmp	r3, #1
 839 003e 58D0     		beq	.L56
 840 0040 022B     		cmp	r3, #2
 841 0042 6AD0     		beq	.L57
 842 0044 23B9     		cbnz	r3, .L58
 843              	.LBB15:
 711:Core/Src/main.c ****     break;
 844              		.loc 1 711 5 view .LVU203
 845 0046 92B2     		uxth	r2, r2
 846 0048 4D49     		ldr	r1, .L68+28
 847 004a 4E48     		ldr	r0, .L68+32
 848 004c FFF7FEFF 		bl	sprintf
 849              	.LVL42:
 712:Core/Src/main.c ****   
 850              		.loc 1 712 5 view .LVU204
 851              	.L58:
 852              	.LBE15:
 726:Core/Src/main.c ****   if(halStatus != HAL_OK){
 853              		.loc 1 726 3 view .LVU205
 726:Core/Src/main.c ****   if(halStatus != HAL_OK){
 854              		.loc 1 726 65 is_stmt 0 view .LVU206
 855 0050 4C4C     		ldr	r4, .L68+32
 856 0052 2046     		mov	r0, r4
 857 0054 FFF7FEFF 		bl	strlen
 858              	.LVL43:
 726:Core/Src/main.c ****   if(halStatus != HAL_OK){
 859              		.loc 1 726 15 discriminator 1 view .LVU207
 860 0058 4FF0FF33 		mov	r3, #-1
 861 005c 82B2     		uxth	r2, r0
 862 005e 2146     		mov	r1, r4
 863 0060 4948     		ldr	r0, .L68+36
 864 0062 FFF7FEFF 		bl	HAL_UART_Transmit
 865              	.LVL44:
 726:Core/Src/main.c ****   if(halStatus != HAL_OK){
 866              		.loc 1 726 13 discriminator 2 view .LVU208
 867 0066 494B     		ldr	r3, .L68+40
 868 0068 1870     		strb	r0, [r3]
 727:Core/Src/main.c ****     next_state  = STATE_ERROR;
 869              		.loc 1 727 3 is_stmt 1 view .LVU209
 727:Core/Src/main.c ****     next_state  = STATE_ERROR;
 870              		.loc 1 727 5 is_stmt 0 view .LVU210
 871 006a 0028     		cmp	r0, #0
 872 006c 6AD1     		bne	.L66
 733:Core/Src/main.c ****   halStatus = HAL_UART_Transmit(&huart2, (uint8_t *)msg_buffer, strlen(msg_buffer), HAL_MAX_DELAY);
 873              		.loc 1 733 3 is_stmt 1 view .LVU211
 874 006e 454C     		ldr	r4, .L68+32
 875 0070 474B     		ldr	r3, .L68+44
 876 0072 1A88     		ldrh	r2, [r3]
 877 0074 4749     		ldr	r1, .L68+48
 878 0076 2046     		mov	r0, r4
 879 0078 FFF7FEFF 		bl	sprintf
ARM GAS  /tmp/ccACqZav.s 			page 72


 880              	.LVL45:
 734:Core/Src/main.c ****   if(halStatus != HAL_OK){
 881              		.loc 1 734 3 view .LVU212
 734:Core/Src/main.c ****   if(halStatus != HAL_OK){
 882              		.loc 1 734 65 is_stmt 0 view .LVU213
 883 007c 2046     		mov	r0, r4
 884 007e FFF7FEFF 		bl	strlen
 885              	.LVL46:
 734:Core/Src/main.c ****   if(halStatus != HAL_OK){
 886              		.loc 1 734 15 discriminator 1 view .LVU214
 887 0082 4FF0FF33 		mov	r3, #-1
 888 0086 82B2     		uxth	r2, r0
 889 0088 2146     		mov	r1, r4
 890 008a 3F48     		ldr	r0, .L68+36
 891 008c FFF7FEFF 		bl	HAL_UART_Transmit
 892              	.LVL47:
 734:Core/Src/main.c ****   if(halStatus != HAL_OK){
 893              		.loc 1 734 13 discriminator 2 view .LVU215
 894 0090 3E4B     		ldr	r3, .L68+40
 895 0092 1870     		strb	r0, [r3]
 735:Core/Src/main.c ****     next_state  = STATE_ERROR;
 896              		.loc 1 735 3 is_stmt 1 view .LVU216
 735:Core/Src/main.c ****     next_state  = STATE_ERROR;
 897              		.loc 1 735 5 is_stmt 0 view .LVU217
 898 0094 0028     		cmp	r0, #0
 899 0096 59D1     		bne	.L67
 740:Core/Src/main.c ****     //check if is high for 5 seconds
 900              		.loc 1 740 3 is_stmt 1 view .LVU218
 740:Core/Src/main.c ****     //check if is high for 5 seconds
 901              		.loc 1 740 6 is_stmt 0 view .LVU219
 902 0098 3D4B     		ldr	r3, .L68+44
 903 009a 1B88     		ldrh	r3, [r3]
 740:Core/Src/main.c ****     //check if is high for 5 seconds
 904              		.loc 1 740 5 view .LVU220
 905 009c 002B     		cmp	r3, #0
 906 009e 59D0     		beq	.L62
 742:Core/Src/main.c ****       //warning state
 907              		.loc 1 742 5 is_stmt 1 view .LVU221
 742:Core/Src/main.c ****       //warning state
 908              		.loc 1 742 8 is_stmt 0 view .LVU222
 909 00a0 FFF7FEFF 		bl	HAL_GetTick
 910              	.LVL48:
 742:Core/Src/main.c ****       //warning state
 911              		.loc 1 742 22 discriminator 1 view .LVU223
 912 00a4 3C4B     		ldr	r3, .L68+52
 913 00a6 1B68     		ldr	r3, [r3]
 914 00a8 C01A     		subs	r0, r0, r3
 742:Core/Src/main.c ****       //warning state
 915              		.loc 1 742 7 discriminator 1 view .LVU224
 916 00aa 41F28733 		movw	r3, #4999
 917 00ae 9842     		cmp	r0, r3
 918 00b0 54D9     		bls	.L63
 744:Core/Src/main.c ****       HAL_UART_AbortReceive_IT(&huart2);
 919              		.loc 1 744 7 is_stmt 1 view .LVU225
 744:Core/Src/main.c ****       HAL_UART_AbortReceive_IT(&huart2);
 920              		.loc 1 744 18 is_stmt 0 view .LVU226
 921 00b2 2C4B     		ldr	r3, .L68
ARM GAS  /tmp/ccACqZav.s 			page 73


 922 00b4 0422     		movs	r2, #4
 923 00b6 1A70     		strb	r2, [r3]
 745:Core/Src/main.c ****     }
 924              		.loc 1 745 7 is_stmt 1 view .LVU227
 925 00b8 3348     		ldr	r0, .L68+36
 926 00ba FFF7FEFF 		bl	HAL_UART_AbortReceive_IT
 927              	.LVL49:
 928 00be 4DE0     		b	.L63
 929              	.LVL50:
 930              	.L65:
 701:Core/Src/main.c ****     adc_moving_average[buffer_index] = lastAnalogValue;
 931              		.loc 1 701 5 view .LVU228
 701:Core/Src/main.c ****     adc_moving_average[buffer_index] = lastAnalogValue;
 932              		.loc 1 701 30 is_stmt 0 view .LVU229
 933 00c0 364E     		ldr	r6, .L68+56
 934 00c2 3188     		ldrh	r1, [r6]
 935 00c4 364F     		ldr	r7, .L68+60
 936 00c6 37F811C0 		ldrh	ip, [r7, r1, lsl #1]
 701:Core/Src/main.c ****     adc_moving_average[buffer_index] = lastAnalogValue;
 937              		.loc 1 701 9 view .LVU230
 938 00ca 364D     		ldr	r5, .L68+64
 939 00cc 2868     		ldr	r0, [r5]
 940              	.LVL51:
 701:Core/Src/main.c ****     adc_moving_average[buffer_index] = lastAnalogValue;
 941              		.loc 1 701 9 view .LVU231
 942 00ce A0EB0C00 		sub	r0, r0, ip
 943 00d2 2860     		str	r0, [r5]
 702:Core/Src/main.c ****     sum += lastAnalogValue;
 944              		.loc 1 702 5 is_stmt 1 view .LVU232
 702:Core/Src/main.c ****     sum += lastAnalogValue;
 945              		.loc 1 702 38 is_stmt 0 view .LVU233
 946 00d4 27F81140 		strh	r4, [r7, r1, lsl #1]	@ movhi
 703:Core/Src/main.c ****     buffer_index = (buffer_index + 1) % MOVING_AVG_SIZE;
 947              		.loc 1 703 5 is_stmt 1 view .LVU234
 703:Core/Src/main.c ****     buffer_index = (buffer_index + 1) % MOVING_AVG_SIZE;
 948              		.loc 1 703 9 is_stmt 0 view .LVU235
 949 00d8 10FA82F0 		uxtah	r0, r0, r2
 950 00dc 2860     		str	r0, [r5]
 704:Core/Src/main.c ****   }
 951              		.loc 1 704 5 is_stmt 1 view .LVU236
 704:Core/Src/main.c ****   }
 952              		.loc 1 704 34 is_stmt 0 view .LVU237
 953 00de 481C     		adds	r0, r1, #1
 704:Core/Src/main.c ****   }
 954              		.loc 1 704 39 view .LVU238
 955 00e0 3149     		ldr	r1, .L68+68
 956 00e2 81FB0041 		smull	r4, r1, r1, r0
 957 00e6 0911     		asrs	r1, r1, #4
 958 00e8 9624     		movs	r4, #150
 959 00ea 04FB1101 		mls	r1, r4, r1, r0
 704:Core/Src/main.c ****   }
 960              		.loc 1 704 18 view .LVU239
 961 00ee 3180     		strh	r1, [r6]	@ movhi
 962 00f0 A4E7     		b	.L55
 963              	.L56:
 964              	.LBB16:
 715:Core/Src/main.c ****     sprintf(msg_buffer, "A: %.3f\r\n", moving_avg);
ARM GAS  /tmp/ccACqZav.s 			page 74


 965              		.loc 1 715 5 is_stmt 1 view .LVU240
 715:Core/Src/main.c ****     sprintf(msg_buffer, "A: %.3f\r\n", moving_avg);
 966              		.loc 1 715 24 is_stmt 0 view .LVU241
 967 00f2 2C4B     		ldr	r3, .L68+64
 968 00f4 D3ED007A 		vldr.32	s15, [r3]	@ int
 969 00f8 F8EE677A 		vcvt.f32.u32	s15, s15
 970              	.LVL52:
 716:Core/Src/main.c ****     break;
 971              		.loc 1 716 5 is_stmt 1 view .LVU242
 972 00fc 9FED2B7A 		vldr.32	s14, .L68+72
 973 0100 C7EE877A 		vdiv.f32	s15, s15, s14
 974              	.LVL53:
 716:Core/Src/main.c ****     break;
 975              		.loc 1 716 5 is_stmt 0 view .LVU243
 976 0104 17EE900A 		vmov	r0, s15
 977 0108 FFF7FEFF 		bl	__aeabi_f2d
 978              	.LVL54:
 716:Core/Src/main.c ****     break;
 979              		.loc 1 716 5 view .LVU244
 980 010c 0246     		mov	r2, r0
 981 010e 0B46     		mov	r3, r1
 982 0110 2749     		ldr	r1, .L68+76
 983 0112 1C48     		ldr	r0, .L68+32
 984 0114 FFF7FEFF 		bl	sprintf
 985              	.LVL55:
 717:Core/Src/main.c **** 
 986              		.loc 1 717 5 is_stmt 1 view .LVU245
 987 0118 9AE7     		b	.L58
 988              	.LVL56:
 989              	.L57:
 720:Core/Src/main.c ****     break;
 990              		.loc 1 720 5 view .LVU246
 720:Core/Src/main.c ****     break;
 991              		.loc 1 720 60 is_stmt 0 view .LVU247
 992 011a 164B     		ldr	r3, .L68+16
 993 011c 1C68     		ldr	r4, [r3]
 720:Core/Src/main.c ****     break;
 994              		.loc 1 720 66 view .LVU248
 995 011e FFF7FEFF 		bl	rand
 996              	.LVL57:
 720:Core/Src/main.c ****     break;
 997              		.loc 1 720 73 discriminator 1 view .LVU249
 998 0122 214A     		ldr	r2, .L68+68
 999 0124 82FB0032 		smull	r3, r2, r2, r0
 1000 0128 C317     		asrs	r3, r0, #31
 1001 012a C3EB6213 		rsb	r3, r3, r2, asr #5
 1002 012e 4FF49672 		mov	r2, #300
 1003 0132 02FB1303 		mls	r3, r2, r3, r0
 720:Core/Src/main.c ****     break;
 1004              		.loc 1 720 39 discriminator 1 view .LVU250
 1005 0136 E218     		adds	r2, r4, r3
 720:Core/Src/main.c ****     break;
 1006              		.loc 1 720 5 discriminator 1 view .LVU251
 1007 0138 92B2     		uxth	r2, r2
 1008 013a 1E49     		ldr	r1, .L68+80
 1009 013c 1148     		ldr	r0, .L68+32
 1010 013e FFF7FEFF 		bl	sprintf
ARM GAS  /tmp/ccACqZav.s 			page 75


 1011              	.LVL58:
 721:Core/Src/main.c **** 
 1012              		.loc 1 721 5 is_stmt 1 view .LVU252
 1013 0142 85E7     		b	.L58
 1014              	.L66:
 1015              	.LBE16:
 728:Core/Src/main.c ****     return next_state;
 1016              		.loc 1 728 5 view .LVU253
 728:Core/Src/main.c ****     return next_state;
 1017              		.loc 1 728 17 is_stmt 0 view .LVU254
 1018 0144 0220     		movs	r0, #2
 1019 0146 074B     		ldr	r3, .L68
 1020 0148 1870     		strb	r0, [r3]
 729:Core/Src/main.c ****   }
 1021              		.loc 1 729 5 is_stmt 1 view .LVU255
 729:Core/Src/main.c ****   }
 1022              		.loc 1 729 12 is_stmt 0 view .LVU256
 1023 014a 09E0     		b	.L60
 1024              	.L67:
 736:Core/Src/main.c ****     return next_state;
 1025              		.loc 1 736 5 is_stmt 1 view .LVU257
 736:Core/Src/main.c ****     return next_state;
 1026              		.loc 1 736 17 is_stmt 0 view .LVU258
 1027 014c 0220     		movs	r0, #2
 1028 014e 054B     		ldr	r3, .L68
 1029 0150 1870     		strb	r0, [r3]
 737:Core/Src/main.c ****   }
 1030              		.loc 1 737 5 is_stmt 1 view .LVU259
 737:Core/Src/main.c ****   }
 1031              		.loc 1 737 12 is_stmt 0 view .LVU260
 1032 0152 05E0     		b	.L60
 1033              	.L62:
 749:Core/Src/main.c ****   }
 1034              		.loc 1 749 5 is_stmt 1 view .LVU261
 749:Core/Src/main.c ****   }
 1035              		.loc 1 749 17 is_stmt 0 view .LVU262
 1036 0154 FFF7FEFF 		bl	HAL_GetTick
 1037              	.LVL59:
 749:Core/Src/main.c ****   }
 1038              		.loc 1 749 15 discriminator 1 view .LVU263
 1039 0158 0F4B     		ldr	r3, .L68+52
 1040 015a 1860     		str	r0, [r3]
 1041              	.L63:
 752:Core/Src/main.c **** }
 1042              		.loc 1 752 3 is_stmt 1 view .LVU264
 752:Core/Src/main.c **** }
 1043              		.loc 1 752 10 is_stmt 0 view .LVU265
 1044 015c 014B     		ldr	r3, .L68
 1045 015e 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 1046              	.L60:
 753:Core/Src/main.c **** 
 1047              		.loc 1 753 1 view .LVU266
 1048 0160 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1049              	.L69:
 1050 0162 00BF     		.align	2
 1051              	.L68:
 1052 0164 00000000 		.word	next_state
ARM GAS  /tmp/ccACqZav.s 			page 76


 1053 0168 00000000 		.word	hdma_adc1
 1054 016c EBA00EEA 		.word	-368140053
 1055 0170 00000000 		.word	last_index
 1056 0174 00000000 		.word	adcBuffer
 1057 0178 00000000 		.word	lastAnalogValue
 1058 017c 00000000 		.word	currentFilterMode
 1059 0180 00000000 		.word	.LC3
 1060 0184 00000000 		.word	msg_buffer
 1061 0188 00000000 		.word	huart2
 1062 018c 00000000 		.word	halStatus
 1063 0190 00000000 		.word	lastDigitalValue
 1064 0194 20000000 		.word	.LC6
 1065 0198 00000000 		.word	lastTimer
 1066 019c 00000000 		.word	buffer_index
 1067 01a0 00000000 		.word	adc_moving_average
 1068 01a4 00000000 		.word	sum
 1069 01a8 B5814E1B 		.word	458129845
 1070 01ac 00001643 		.word	1125515264
 1071 01b0 08000000 		.word	.LC4
 1072 01b4 14000000 		.word	.LC5
 1073              		.cfi_endproc
 1074              	.LFE238:
 1076              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 1077              		.align	1
 1078              		.global	HAL_TIM_PeriodElapsedCallback
 1079              		.syntax unified
 1080              		.thumb
 1081              		.thumb_func
 1083              	HAL_TIM_PeriodElapsedCallback:
 1084              	.LVL60:
 1085              	.LFB223:
 129:Core/Src/main.c ****   if(htim->Instance == TIM3){
 1086              		.loc 1 129 60 is_stmt 1 view -0
 1087              		.cfi_startproc
 1088              		@ args = 0, pretend = 0, frame = 0
 1089              		@ frame_needed = 0, uses_anonymous_args = 0
 129:Core/Src/main.c ****   if(htim->Instance == TIM3){
 1090              		.loc 1 129 60 is_stmt 0 view .LVU268
 1091 0000 08B5     		push	{r3, lr}
 1092              		.cfi_def_cfa_offset 8
 1093              		.cfi_offset 3, -8
 1094              		.cfi_offset 14, -4
 130:Core/Src/main.c ****     //toggle pause state led
 1095              		.loc 1 130 3 is_stmt 1 view .LVU269
 130:Core/Src/main.c ****     //toggle pause state led
 1096              		.loc 1 130 10 is_stmt 0 view .LVU270
 1097 0002 0368     		ldr	r3, [r0]
 130:Core/Src/main.c ****     //toggle pause state led
 1098              		.loc 1 130 5 view .LVU271
 1099 0004 084A     		ldr	r2, .L76
 1100 0006 9342     		cmp	r3, r2
 1101 0008 03D0     		beq	.L74
 133:Core/Src/main.c ****     //toggle error state led
 1102              		.loc 1 133 10 is_stmt 1 view .LVU272
 133:Core/Src/main.c ****     //toggle error state led
 1103              		.loc 1 133 12 is_stmt 0 view .LVU273
 1104 000a 084A     		ldr	r2, .L76+4
ARM GAS  /tmp/ccACqZav.s 			page 77


 1105 000c 9342     		cmp	r3, r2
 1106 000e 05D0     		beq	.L75
 1107              	.LVL61:
 1108              	.L70:
 137:Core/Src/main.c **** 
 1109              		.loc 1 137 1 view .LVU274
 1110 0010 08BD     		pop	{r3, pc}
 1111              	.LVL62:
 1112              	.L74:
 132:Core/Src/main.c ****   } else if(htim->Instance == TIM4){
 1113              		.loc 1 132 5 is_stmt 1 view .LVU275
 1114 0012 2021     		movs	r1, #32
 1115 0014 0648     		ldr	r0, .L76+8
 1116              	.LVL63:
 132:Core/Src/main.c ****   } else if(htim->Instance == TIM4){
 1117              		.loc 1 132 5 is_stmt 0 view .LVU276
 1118 0016 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1119              	.LVL64:
 1120 001a F9E7     		b	.L70
 1121              	.LVL65:
 1122              	.L75:
 135:Core/Src/main.c ****   }
 1123              		.loc 1 135 5 is_stmt 1 view .LVU277
 1124 001c 2021     		movs	r1, #32
 1125 001e 0448     		ldr	r0, .L76+8
 1126              	.LVL66:
 135:Core/Src/main.c ****   }
 1127              		.loc 1 135 5 is_stmt 0 view .LVU278
 1128 0020 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1129              	.LVL67:
 137:Core/Src/main.c **** 
 1130              		.loc 1 137 1 view .LVU279
 1131 0024 F4E7     		b	.L70
 1132              	.L77:
 1133 0026 00BF     		.align	2
 1134              	.L76:
 1135 0028 00040040 		.word	1073742848
 1136 002c 00080040 		.word	1073743872
 1137 0030 00000240 		.word	1073872896
 1138              		.cfi_endproc
 1139              	.LFE223:
 1141              		.section	.text.HAL_GPIO_EXTI_Callback,"ax",%progbits
 1142              		.align	1
 1143              		.global	HAL_GPIO_EXTI_Callback
 1144              		.syntax unified
 1145              		.thumb
 1146              		.thumb_func
 1148              	HAL_GPIO_EXTI_Callback:
 1149              	.LVL68:
 1150              	.LFB224:
 142:Core/Src/main.c ****   if(GPIO_Pin == GPIO_PIN_2){
 1151              		.loc 1 142 47 is_stmt 1 view -0
 1152              		.cfi_startproc
 1153              		@ args = 0, pretend = 0, frame = 0
 1154              		@ frame_needed = 0, uses_anonymous_args = 0
 142:Core/Src/main.c ****   if(GPIO_Pin == GPIO_PIN_2){
 1155              		.loc 1 142 47 is_stmt 0 view .LVU281
ARM GAS  /tmp/ccACqZav.s 			page 78


 1156 0000 08B5     		push	{r3, lr}
 1157              		.cfi_def_cfa_offset 8
 1158              		.cfi_offset 3, -8
 1159              		.cfi_offset 14, -4
 143:Core/Src/main.c ****     //DIGITAL VALUE SENSOR
 1160              		.loc 1 143 3 is_stmt 1 view .LVU282
 143:Core/Src/main.c ****     //DIGITAL VALUE SENSOR
 1161              		.loc 1 143 5 is_stmt 0 view .LVU283
 1162 0002 0428     		cmp	r0, #4
 1163 0004 03D0     		beq	.L90
 147:Core/Src/main.c ****     //USER BUTTON
 1164              		.loc 1 147 8 is_stmt 1 view .LVU284
 147:Core/Src/main.c ****     //USER BUTTON
 1165              		.loc 1 147 10 is_stmt 0 view .LVU285
 1166 0006 B0F5005F 		cmp	r0, #8192
 1167 000a 07D0     		beq	.L91
 1168              	.LVL69:
 1169              	.L78:
 188:Core/Src/main.c **** 
 1170              		.loc 1 188 1 view .LVU286
 1171 000c 08BD     		pop	{r3, pc}
 1172              	.LVL70:
 1173              	.L90:
 145:Core/Src/main.c ****   }
 1174              		.loc 1 145 5 is_stmt 1 view .LVU287
 145:Core/Src/main.c ****   }
 1175              		.loc 1 145 24 is_stmt 0 view .LVU288
 1176 000e 0421     		movs	r1, #4
 1177 0010 2B48     		ldr	r0, .L92
 1178              	.LVL71:
 145:Core/Src/main.c ****   }
 1179              		.loc 1 145 24 view .LVU289
 1180 0012 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1181              	.LVL72:
 145:Core/Src/main.c ****   }
 1182              		.loc 1 145 22 discriminator 1 view .LVU290
 1183 0016 2B4B     		ldr	r3, .L92+4
 1184 0018 1880     		strh	r0, [r3]	@ movhi
 1185 001a F7E7     		b	.L78
 1186              	.LVL73:
 1187              	.L91:
 1188              	.LBB17:
 149:Core/Src/main.c **** 
 1189              		.loc 1 149 5 is_stmt 1 view .LVU291
 149:Core/Src/main.c **** 
 1190              		.loc 1 149 28 is_stmt 0 view .LVU292
 1191 001c FFF7FEFF 		bl	HAL_GetTick
 1192              	.LVL74:
 152:Core/Src/main.c ****       return;//ignore interupt
 1193              		.loc 1 152 5 is_stmt 1 view .LVU293
 152:Core/Src/main.c ****       return;//ignore interupt
 1194              		.loc 1 152 25 is_stmt 0 view .LVU294
 1195 0020 294B     		ldr	r3, .L92+8
 1196 0022 1B68     		ldr	r3, [r3]
 152:Core/Src/main.c ****       return;//ignore interupt
 1197              		.loc 1 152 8 view .LVU295
 1198 0024 13B1     		cbz	r3, .L81
ARM GAS  /tmp/ccACqZav.s 			page 79


 152:Core/Src/main.c ****       return;//ignore interupt
 1199              		.loc 1 152 46 discriminator 1 view .LVU296
 1200 0026 C31A     		subs	r3, r0, r3
 152:Core/Src/main.c ****       return;//ignore interupt
 1201              		.loc 1 152 30 discriminator 1 view .LVU297
 1202 0028 312B     		cmp	r3, #49
 1203 002a EFD9     		bls	.L78
 1204              	.L81:
 155:Core/Src/main.c **** 
 1205              		.loc 1 155 5 is_stmt 1 view .LVU298
 155:Core/Src/main.c **** 
 1206              		.loc 1 155 21 is_stmt 0 view .LVU299
 1207 002c 264B     		ldr	r3, .L92+8
 1208 002e 1860     		str	r0, [r3]
 157:Core/Src/main.c ****       //change state to listening and restore dma
 1209              		.loc 1 157 5 is_stmt 1 view .LVU300
 157:Core/Src/main.c ****       //change state to listening and restore dma
 1210              		.loc 1 157 22 is_stmt 0 view .LVU301
 1211 0030 264B     		ldr	r3, .L92+12
 1212 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1213 0034 013B     		subs	r3, r3, #1
 1214 0036 042B     		cmp	r3, #4
 1215 0038 1BD8     		bhi	.L82
 1216 003a DFE803F0 		tbb	[pc, r3]
 1217              	.L84:
 1218 003e 03       		.byte	(.L83-.L84)/2
 1219 003f 3C       		.byte	(.L87-.L84)/2
 1220 0040 22       		.byte	(.L86-.L84)/2
 1221 0041 2B       		.byte	(.L85-.L84)/2
 1222 0042 03       		.byte	(.L83-.L84)/2
 1223 0043 00       		.p2align 1
 1224              	.L83:
 159:Core/Src/main.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, GPIO_PIN_SET);
 1225              		.loc 1 159 7 is_stmt 1 view .LVU302
 159:Core/Src/main.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, GPIO_PIN_SET);
 1226              		.loc 1 159 34 is_stmt 0 view .LVU303
 1227 0044 0323     		movs	r3, #3
 1228 0046 224A     		ldr	r2, .L92+16
 1229 0048 1370     		strb	r3, [r2]
 159:Core/Src/main.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, GPIO_PIN_SET);
 1230              		.loc 1 159 21 view .LVU304
 1231 004a 204A     		ldr	r2, .L92+12
 1232 004c 1370     		strb	r3, [r2]
 160:Core/Src/main.c ****       HAL_UART_AbortReceive_IT(&huart2);
 1233              		.loc 1 160 7 is_stmt 1 view .LVU305
 1234 004e 0122     		movs	r2, #1
 1235 0050 2021     		movs	r1, #32
 1236 0052 2048     		ldr	r0, .L92+20
 1237              	.LVL75:
 160:Core/Src/main.c ****       HAL_UART_AbortReceive_IT(&huart2);
 1238              		.loc 1 160 7 is_stmt 0 view .LVU306
 1239 0054 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1240              	.LVL76:
 161:Core/Src/main.c ****       lastTimer = HAL_GetTick();
 1241              		.loc 1 161 7 is_stmt 1 view .LVU307
 1242 0058 1F48     		ldr	r0, .L92+24
 1243 005a FFF7FEFF 		bl	HAL_UART_AbortReceive_IT
ARM GAS  /tmp/ccACqZav.s 			page 80


 1244              	.LVL77:
 162:Core/Src/main.c **** 
 1245              		.loc 1 162 7 view .LVU308
 162:Core/Src/main.c **** 
 1246              		.loc 1 162 19 is_stmt 0 view .LVU309
 1247 005e FFF7FEFF 		bl	HAL_GetTick
 1248              	.LVL78:
 162:Core/Src/main.c **** 
 1249              		.loc 1 162 17 discriminator 1 view .LVU310
 1250 0062 1E4B     		ldr	r3, .L92+28
 1251 0064 1860     		str	r0, [r3]
 165:Core/Src/main.c ****       HAL_TIM_Base_Stop_IT(&htim4);
 1252              		.loc 1 165 7 is_stmt 1 view .LVU311
 1253 0066 1E48     		ldr	r0, .L92+32
 1254 0068 FFF7FEFF 		bl	HAL_TIM_Base_Stop_IT
 1255              	.LVL79:
 166:Core/Src/main.c ****     }else if(current_state == STATE_LISTENING){
 1256              		.loc 1 166 7 view .LVU312
 1257 006c 1D48     		ldr	r0, .L92+36
 1258 006e FFF7FEFF 		bl	HAL_TIM_Base_Stop_IT
 1259              	.LVL80:
 1260              	.L82:
 185:Core/Src/main.c ****     lastTimer = HAL_GetTick();//reset timer
 1261              		.loc 1 185 5 view .LVU313
 185:Core/Src/main.c ****     lastTimer = HAL_GetTick();//reset timer
 1262              		.loc 1 185 23 is_stmt 0 view .LVU314
 1263 0072 1D4B     		ldr	r3, .L92+40
 1264 0074 0022     		movs	r2, #0
 1265 0076 1A70     		strb	r2, [r3]
 186:Core/Src/main.c ****   }
 1266              		.loc 1 186 5 is_stmt 1 view .LVU315
 186:Core/Src/main.c ****   }
 1267              		.loc 1 186 17 is_stmt 0 view .LVU316
 1268 0078 FFF7FEFF 		bl	HAL_GetTick
 1269              	.LVL81:
 186:Core/Src/main.c ****   }
 1270              		.loc 1 186 15 discriminator 1 view .LVU317
 1271 007c 174B     		ldr	r3, .L92+28
 1272 007e 1860     		str	r0, [r3]
 1273 0080 C4E7     		b	.L78
 1274              	.LVL82:
 1275              	.L86:
 169:Core/Src/main.c ****       //start timer
 1276              		.loc 1 169 7 is_stmt 1 view .LVU318
 169:Core/Src/main.c ****       //start timer
 1277              		.loc 1 169 34 is_stmt 0 view .LVU319
 1278 0082 0523     		movs	r3, #5
 1279 0084 124A     		ldr	r2, .L92+16
 1280 0086 1370     		strb	r3, [r2]
 169:Core/Src/main.c ****       //start timer
 1281              		.loc 1 169 21 view .LVU320
 1282 0088 104A     		ldr	r2, .L92+12
 1283 008a 1370     		strb	r3, [r2]
 171:Core/Src/main.c ****     }else if(current_state == STATE_WARNING){
 1284              		.loc 1 171 7 is_stmt 1 view .LVU321
 1285 008c 1448     		ldr	r0, .L92+32
 1286              	.LVL83:
ARM GAS  /tmp/ccACqZav.s 			page 81


 171:Core/Src/main.c ****     }else if(current_state == STATE_WARNING){
 1287              		.loc 1 171 7 is_stmt 0 view .LVU322
 1288 008e FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 1289              	.LVL84:
 171:Core/Src/main.c ****     }else if(current_state == STATE_WARNING){
 1290              		.loc 1 171 7 view .LVU323
 1291 0092 EEE7     		b	.L82
 1292              	.LVL85:
 1293              	.L85:
 174:Core/Src/main.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, GPIO_PIN_RESET);
 1294              		.loc 1 174 7 is_stmt 1 view .LVU324
 174:Core/Src/main.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, GPIO_PIN_RESET);
 1295              		.loc 1 174 34 is_stmt 0 view .LVU325
 1296 0094 0123     		movs	r3, #1
 1297 0096 0E4A     		ldr	r2, .L92+16
 1298 0098 1370     		strb	r3, [r2]
 174:Core/Src/main.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, GPIO_PIN_RESET);
 1299              		.loc 1 174 21 view .LVU326
 1300 009a 0C4A     		ldr	r2, .L92+12
 1301 009c 1370     		strb	r3, [r2]
 175:Core/Src/main.c ****       //stop all timers
 1302              		.loc 1 175 7 is_stmt 1 view .LVU327
 1303 009e 0022     		movs	r2, #0
 1304 00a0 2021     		movs	r1, #32
 1305 00a2 0C48     		ldr	r0, .L92+20
 1306              	.LVL86:
 175:Core/Src/main.c ****       //stop all timers
 1307              		.loc 1 175 7 is_stmt 0 view .LVU328
 1308 00a4 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1309              	.LVL87:
 177:Core/Src/main.c ****       HAL_TIM_Base_Stop_IT(&htim4);
 1310              		.loc 1 177 7 is_stmt 1 view .LVU329
 1311 00a8 0D48     		ldr	r0, .L92+32
 1312 00aa FFF7FEFF 		bl	HAL_TIM_Base_Stop_IT
 1313              	.LVL88:
 178:Core/Src/main.c ****     }else if(current_state == STATE_ERROR){
 1314              		.loc 1 178 7 view .LVU330
 1315 00ae 0D48     		ldr	r0, .L92+36
 1316 00b0 FFF7FEFF 		bl	HAL_TIM_Base_Stop_IT
 1317              	.LVL89:
 1318 00b4 DDE7     		b	.L82
 1319              	.LVL90:
 1320              	.L87:
 181:Core/Src/main.c ****       NVIC_SystemReset();
 1321              		.loc 1 181 7 view .LVU331
 181:Core/Src/main.c ****       NVIC_SystemReset();
 1322              		.loc 1 181 30 is_stmt 0 view .LVU332
 1323 00b6 0D4B     		ldr	r3, .L92+44
 1324 00b8 0022     		movs	r2, #0
 1325 00ba 1A70     		strb	r2, [r3]
 182:Core/Src/main.c ****     }
 1326              		.loc 1 182 7 is_stmt 1 view .LVU333
 1327 00bc FFF7FEFF 		bl	__NVIC_SystemReset
 1328              	.LVL91:
 1329              	.L93:
 182:Core/Src/main.c ****     }
 1330              		.loc 1 182 7 is_stmt 0 view .LVU334
ARM GAS  /tmp/ccACqZav.s 			page 82


 1331              		.align	2
 1332              	.L92:
 1333 00c0 00080240 		.word	1073874944
 1334 00c4 00000000 		.word	lastDigitalValue
 1335 00c8 00000000 		.word	lastButtonPress
 1336 00cc 00000000 		.word	current_state
 1337 00d0 00000000 		.word	next_state
 1338 00d4 00000240 		.word	1073872896
 1339 00d8 00000000 		.word	huart2
 1340 00dc 00000000 		.word	lastTimer
 1341 00e0 00000000 		.word	htim3
 1342 00e4 00000000 		.word	htim4
 1343 00e8 00000000 		.word	is_request_sended
 1344 00ec 00000000 		.word	is_running_error_timer
 1345              	.LBE17:
 1346              		.cfi_endproc
 1347              	.LFE224:
 1349              		.section	.rodata.handle_cli_command.str1.4,"aMS",%progbits,1
 1350              		.align	2
 1351              	.LC7:
 1352 0000 72617700 		.ascii	"raw\000"
 1353              		.align	2
 1354              	.LC8:
 1355 0004 6D6F7669 		.ascii	"moving average\000"
 1355      6E672061 
 1355      76657261 
 1355      676500
 1356 0013 00       		.align	2
 1357              	.LC9:
 1358 0014 72616E64 		.ascii	"random noise\000"
 1358      6F6D206E 
 1358      6F697365 
 1358      00
 1359              		.section	.text.handle_cli_command,"ax",%progbits
 1360              		.align	1
 1361              		.global	handle_cli_command
 1362              		.syntax unified
 1363              		.thumb
 1364              		.thumb_func
 1366              	handle_cli_command:
 1367              	.LFB225:
 200:Core/Src/main.c ****     if (strcmp(cli_command, "raw") == 0) {
 1368              		.loc 1 200 31 is_stmt 1 view -0
 1369              		.cfi_startproc
 1370              		@ args = 0, pretend = 0, frame = 0
 1371              		@ frame_needed = 0, uses_anonymous_args = 0
 1372 0000 08B5     		push	{r3, lr}
 1373              		.cfi_def_cfa_offset 8
 1374              		.cfi_offset 3, -8
 1375              		.cfi_offset 14, -4
 201:Core/Src/main.c ****         currentFilterMode = RAW;
 1376              		.loc 1 201 5 view .LVU336
 201:Core/Src/main.c ****         currentFilterMode = RAW;
 1377              		.loc 1 201 9 is_stmt 0 view .LVU337
 1378 0002 1549     		ldr	r1, .L101
 1379 0004 1548     		ldr	r0, .L101+4
 1380 0006 FFF7FEFF 		bl	strcmp
ARM GAS  /tmp/ccACqZav.s 			page 83


 1381              	.LVL92:
 201:Core/Src/main.c ****         currentFilterMode = RAW;
 1382              		.loc 1 201 8 discriminator 1 view .LVU338
 1383 000a 50B9     		cbnz	r0, .L95
 202:Core/Src/main.c ****     } else if (strcmp(cli_command, "moving average") == 0) {
 1384              		.loc 1 202 9 is_stmt 1 view .LVU339
 202:Core/Src/main.c ****     } else if (strcmp(cli_command, "moving average") == 0) {
 1385              		.loc 1 202 27 is_stmt 0 view .LVU340
 1386 000c 144B     		ldr	r3, .L101+8
 1387 000e 0022     		movs	r2, #0
 1388 0010 1A70     		strb	r2, [r3]
 1389              	.L96:
 213:Core/Src/main.c ****     return 0;
 1390              		.loc 1 213 5 is_stmt 1 view .LVU341
 1391 0012 124B     		ldr	r3, .L101+4
 1392 0014 0020     		movs	r0, #0
 1393 0016 1860     		str	r0, [r3]
 1394 0018 5860     		str	r0, [r3, #4]
 1395 001a 9860     		str	r0, [r3, #8]
 1396 001c C3F80B00 		str	r0, [r3, #11]	@ unaligned
 214:Core/Src/main.c **** }
 1397              		.loc 1 214 5 view .LVU342
 1398              	.L99:
 215:Core/Src/main.c **** 
 1399              		.loc 1 215 1 is_stmt 0 view .LVU343
 1400 0020 08BD     		pop	{r3, pc}
 1401              	.L95:
 203:Core/Src/main.c ****         currentFilterMode = MOVING_AVERAGE;
 1402              		.loc 1 203 12 is_stmt 1 view .LVU344
 203:Core/Src/main.c ****         currentFilterMode = MOVING_AVERAGE;
 1403              		.loc 1 203 16 is_stmt 0 view .LVU345
 1404 0022 1049     		ldr	r1, .L101+12
 1405 0024 0D48     		ldr	r0, .L101+4
 1406 0026 FFF7FEFF 		bl	strcmp
 1407              	.LVL93:
 203:Core/Src/main.c ****         currentFilterMode = MOVING_AVERAGE;
 1408              		.loc 1 203 15 discriminator 1 view .LVU346
 1409 002a 18B9     		cbnz	r0, .L97
 204:Core/Src/main.c ****     } else if (strcmp(cli_command, "random noise") == 0) {
 1410              		.loc 1 204 9 is_stmt 1 view .LVU347
 204:Core/Src/main.c ****     } else if (strcmp(cli_command, "random noise") == 0) {
 1411              		.loc 1 204 27 is_stmt 0 view .LVU348
 1412 002c 0C4B     		ldr	r3, .L101+8
 1413 002e 0122     		movs	r2, #1
 1414 0030 1A70     		strb	r2, [r3]
 1415 0032 EEE7     		b	.L96
 1416              	.L97:
 205:Core/Src/main.c ****         currentFilterMode = RANDOM_NOISE;
 1417              		.loc 1 205 12 is_stmt 1 view .LVU349
 205:Core/Src/main.c ****         currentFilterMode = RANDOM_NOISE;
 1418              		.loc 1 205 16 is_stmt 0 view .LVU350
 1419 0034 0C49     		ldr	r1, .L101+16
 1420 0036 0948     		ldr	r0, .L101+4
 1421 0038 FFF7FEFF 		bl	strcmp
 1422              	.LVL94:
 205:Core/Src/main.c ****         currentFilterMode = RANDOM_NOISE;
 1423              		.loc 1 205 15 discriminator 1 view .LVU351
ARM GAS  /tmp/ccACqZav.s 			page 84


 1424 003c 18B9     		cbnz	r0, .L98
 206:Core/Src/main.c ****     } else {
 1425              		.loc 1 206 9 is_stmt 1 view .LVU352
 206:Core/Src/main.c ****     } else {
 1426              		.loc 1 206 27 is_stmt 0 view .LVU353
 1427 003e 084B     		ldr	r3, .L101+8
 1428 0040 0222     		movs	r2, #2
 1429 0042 1A70     		strb	r2, [r3]
 1430 0044 E5E7     		b	.L96
 1431              	.L98:
 209:Core/Src/main.c ****         return 1;
 1432              		.loc 1 209 9 is_stmt 1 view .LVU354
 1433 0046 054B     		ldr	r3, .L101+4
 1434 0048 0022     		movs	r2, #0
 1435 004a 1A60     		str	r2, [r3]
 1436 004c 5A60     		str	r2, [r3, #4]
 1437 004e 9A60     		str	r2, [r3, #8]
 1438 0050 C3F80B20 		str	r2, [r3, #11]	@ unaligned
 210:Core/Src/main.c ****     }
 1439              		.loc 1 210 9 view .LVU355
 210:Core/Src/main.c ****     }
 1440              		.loc 1 210 16 is_stmt 0 view .LVU356
 1441 0054 0120     		movs	r0, #1
 1442 0056 E3E7     		b	.L99
 1443              	.L102:
 1444              		.align	2
 1445              	.L101:
 1446 0058 00000000 		.word	.LC7
 1447 005c 00000000 		.word	cli_command
 1448 0060 00000000 		.word	currentFilterMode
 1449 0064 04000000 		.word	.LC8
 1450 0068 14000000 		.word	.LC9
 1451              		.cfi_endproc
 1452              	.LFE225:
 1454              		.section	.rodata.HAL_UARTEx_RxEventCallback.str1.4,"aMS",%progbits,1
 1455              		.align	2
 1456              	.LC10:
 1457 0000 436F6D6D 		.ascii	"Command not valid. No change to filter mode.\015\012"
 1457      616E6420 
 1457      6E6F7420 
 1457      76616C69 
 1457      642E204E 
 1458 002e 00       		.ascii	"\000"
 1459 002f 00       		.align	2
 1460              	.LC11:
 1461 0030 46696C74 		.ascii	"Filter mode modified!\015\012\000"
 1461      6572206D 
 1461      6F646520 
 1461      6D6F6469 
 1461      66696564 
 1462              		.section	.text.HAL_UARTEx_RxEventCallback,"ax",%progbits
 1463              		.align	1
 1464              		.global	HAL_UARTEx_RxEventCallback
 1465              		.syntax unified
 1466              		.thumb
 1467              		.thumb_func
 1469              	HAL_UARTEx_RxEventCallback:
ARM GAS  /tmp/ccACqZav.s 			page 85


 1470              	.LVL95:
 1471              	.LFB226:
 222:Core/Src/main.c ****   //if we are not in pause or wait request state, ignore the comand received
 1472              		.loc 1 222 1 is_stmt 1 view -0
 1473              		.cfi_startproc
 1474              		@ args = 0, pretend = 0, frame = 0
 1475              		@ frame_needed = 0, uses_anonymous_args = 0
 225:Core/Src/main.c ****     memset(cli_command, '\0', sizeof(cli_command)); 
 1476              		.loc 1 225 3 view .LVU358
 225:Core/Src/main.c ****     memset(cli_command, '\0', sizeof(cli_command)); 
 1477              		.loc 1 225 19 is_stmt 0 view .LVU359
 1478 0000 264B     		ldr	r3, .L112
 1479 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 225:Core/Src/main.c ****     memset(cli_command, '\0', sizeof(cli_command)); 
 1480              		.loc 1 225 5 view .LVU360
 1481 0004 052B     		cmp	r3, #5
 1482 0006 01D0     		beq	.L104
 225:Core/Src/main.c ****     memset(cli_command, '\0', sizeof(cli_command)); 
 1483              		.loc 1 225 34 discriminator 1 view .LVU361
 1484 0008 012B     		cmp	r3, #1
 1485 000a 2BD1     		bne	.L111
 1486              	.L104:
 222:Core/Src/main.c ****   //if we are not in pause or wait request state, ignore the comand received
 1487              		.loc 1 222 1 view .LVU362
 1488 000c 70B5     		push	{r4, r5, r6, lr}
 1489              		.cfi_def_cfa_offset 16
 1490              		.cfi_offset 4, -16
 1491              		.cfi_offset 5, -12
 1492              		.cfi_offset 6, -8
 1493              		.cfi_offset 14, -4
 230:Core/Src/main.c **** 
 1494              		.loc 1 230 3 is_stmt 1 view .LVU363
 230:Core/Src/main.c **** 
 1495              		.loc 1 230 27 is_stmt 0 view .LVU364
 1496 000e FFF7FEFF 		bl	handle_cli_command
 1497              	.LVL96:
 232:Core/Src/main.c ****     sprintf(msg_buffer, "Command not valid. No change to filter mode.\r\n");
 1498              		.loc 1 232 3 is_stmt 1 view .LVU365
 232:Core/Src/main.c ****     sprintf(msg_buffer, "Command not valid. No change to filter mode.\r\n");
 1499              		.loc 1 232 5 is_stmt 0 view .LVU366
 1500 0012 78B3     		cbz	r0, .L106
 233:Core/Src/main.c ****     HAL_UART_Transmit(&huart2, (uint8_t *)msg_buffer, strlen(msg_buffer), HAL_MAX_DELAY);
 1501              		.loc 1 233 5 is_stmt 1 view .LVU367
 1502 0014 224D     		ldr	r5, .L112+4
 1503 0016 AC46     		mov	ip, r5
 1504 0018 224C     		ldr	r4, .L112+8
 1505 001a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 1506              	.LVL97:
 233:Core/Src/main.c ****     HAL_UART_Transmit(&huart2, (uint8_t *)msg_buffer, strlen(msg_buffer), HAL_MAX_DELAY);
 1507              		.loc 1 233 5 is_stmt 0 view .LVU368
 1508 001c ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 1509 0020 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 1510 0022 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 1511 0026 94E80F00 		ldm	r4, {r0, r1, r2, r3}
 1512 002a ACE80700 		stmia	ip!, {r0, r1, r2}
 1513 002e 2CF8023B 		strh	r3, [ip], #2	@ movhi
 1514 0032 1B0C     		lsrs	r3, r3, #16
ARM GAS  /tmp/ccACqZav.s 			page 86


 1515 0034 8CF80030 		strb	r3, [ip]
 234:Core/Src/main.c ****   }
 1516              		.loc 1 234 5 is_stmt 1 view .LVU369
 234:Core/Src/main.c ****   }
 1517              		.loc 1 234 55 is_stmt 0 view .LVU370
 1518 0038 2846     		mov	r0, r5
 1519 003a FFF7FEFF 		bl	strlen
 1520              	.LVL98:
 234:Core/Src/main.c ****   }
 1521              		.loc 1 234 5 discriminator 1 view .LVU371
 1522 003e 4FF0FF33 		mov	r3, #-1
 1523 0042 82B2     		uxth	r2, r0
 1524 0044 2946     		mov	r1, r5
 1525 0046 1848     		ldr	r0, .L112+12
 1526 0048 FFF7FEFF 		bl	HAL_UART_Transmit
 1527              	.LVL99:
 1528              	.L107:
 242:Core/Src/main.c ****   if(halStatus != HAL_OK){
 1529              		.loc 1 242 3 is_stmt 1 view .LVU372
 242:Core/Src/main.c ****   if(halStatus != HAL_OK){
 1530              		.loc 1 242 15 is_stmt 0 view .LVU373
 1531 004c 4622     		movs	r2, #70
 1532 004e 1749     		ldr	r1, .L112+16
 1533 0050 1548     		ldr	r0, .L112+12
 1534 0052 FFF7FEFF 		bl	HAL_UARTEx_ReceiveToIdle_IT
 1535              	.LVL100:
 242:Core/Src/main.c ****   if(halStatus != HAL_OK){
 1536              		.loc 1 242 13 discriminator 1 view .LVU374
 1537 0056 164B     		ldr	r3, .L112+20
 1538 0058 1870     		strb	r0, [r3]
 243:Core/Src/main.c ****     next_state = STATE_ERROR;
 1539              		.loc 1 243 3 is_stmt 1 view .LVU375
 243:Core/Src/main.c ****     next_state = STATE_ERROR;
 1540              		.loc 1 243 5 is_stmt 0 view .LVU376
 1541 005a 10B1     		cbz	r0, .L103
 244:Core/Src/main.c ****   }
 1542              		.loc 1 244 5 is_stmt 1 view .LVU377
 244:Core/Src/main.c ****   }
 1543              		.loc 1 244 16 is_stmt 0 view .LVU378
 1544 005c 154B     		ldr	r3, .L112+24
 1545 005e 0222     		movs	r2, #2
 1546 0060 1A70     		strb	r2, [r3]
 1547              	.L103:
 246:Core/Src/main.c **** 
 1548              		.loc 1 246 1 view .LVU379
 1549 0062 70BD     		pop	{r4, r5, r6, pc}
 1550              	.LVL101:
 1551              	.L111:
 1552              		.cfi_def_cfa_offset 0
 1553              		.cfi_restore 4
 1554              		.cfi_restore 5
 1555              		.cfi_restore 6
 1556              		.cfi_restore 14
 226:Core/Src/main.c ****     return;
 1557              		.loc 1 226 5 is_stmt 1 view .LVU380
 1558 0064 114B     		ldr	r3, .L112+16
 1559 0066 0022     		movs	r2, #0
ARM GAS  /tmp/ccACqZav.s 			page 87


 1560 0068 1A60     		str	r2, [r3]
 1561 006a 5A60     		str	r2, [r3, #4]
 1562 006c 9A60     		str	r2, [r3, #8]
 1563 006e C3F80B20 		str	r2, [r3, #11]	@ unaligned
 227:Core/Src/main.c ****   }
 1564              		.loc 1 227 5 view .LVU381
 1565 0072 7047     		bx	lr
 1566              	.LVL102:
 1567              	.L106:
 1568              		.cfi_def_cfa_offset 16
 1569              		.cfi_offset 4, -16
 1570              		.cfi_offset 5, -12
 1571              		.cfi_offset 6, -8
 1572              		.cfi_offset 14, -4
 237:Core/Src/main.c ****     HAL_UART_Transmit(&huart2, (uint8_t *)msg_buffer, strlen(msg_buffer), HAL_MAX_DELAY);
 1573              		.loc 1 237 5 view .LVU382
 1574 0074 0A4E     		ldr	r6, .L112+4
 1575 0076 3446     		mov	r4, r6
 1576 0078 0F4D     		ldr	r5, .L112+28
 1577 007a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1578              	.LVL103:
 237:Core/Src/main.c ****     HAL_UART_Transmit(&huart2, (uint8_t *)msg_buffer, strlen(msg_buffer), HAL_MAX_DELAY);
 1579              		.loc 1 237 5 is_stmt 0 view .LVU383
 1580 007c 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1581 007e 95E80300 		ldm	r5, {r0, r1}
 1582 0082 84E80300 		stm	r4, {r0, r1}
 238:Core/Src/main.c ****   }
 1583              		.loc 1 238 5 is_stmt 1 view .LVU384
 238:Core/Src/main.c ****   }
 1584              		.loc 1 238 55 is_stmt 0 view .LVU385
 1585 0086 3046     		mov	r0, r6
 1586 0088 FFF7FEFF 		bl	strlen
 1587              	.LVL104:
 238:Core/Src/main.c ****   }
 1588              		.loc 1 238 5 discriminator 1 view .LVU386
 1589 008c 4FF0FF33 		mov	r3, #-1
 1590 0090 82B2     		uxth	r2, r0
 1591 0092 3146     		mov	r1, r6
 1592 0094 0448     		ldr	r0, .L112+12
 1593 0096 FFF7FEFF 		bl	HAL_UART_Transmit
 1594              	.LVL105:
 1595 009a D7E7     		b	.L107
 1596              	.L113:
 1597              		.align	2
 1598              	.L112:
 1599 009c 00000000 		.word	current_state
 1600 00a0 00000000 		.word	msg_buffer
 1601 00a4 00000000 		.word	.LC10
 1602 00a8 00000000 		.word	huart2
 1603 00ac 00000000 		.word	cli_command
 1604 00b0 00000000 		.word	halStatus
 1605 00b4 00000000 		.word	next_state
 1606 00b8 30000000 		.word	.LC11
 1607              		.cfi_endproc
 1608              	.LFE226:
 1610              		.section	.text.run_state,"ax",%progbits
 1611              		.align	1
ARM GAS  /tmp/ccACqZav.s 			page 88


 1612              		.global	run_state
 1613              		.syntax unified
 1614              		.thumb
 1615              		.thumb_func
 1617              	run_state:
 1618              	.LVL106:
 1619              	.LFB241:
 796:Core/Src/main.c **** 
 797:Core/Src/main.c **** 
 798:Core/Src/main.c **** 
 799:Core/Src/main.c **** /*  ____  _        _        
 800:Core/Src/main.c ****  * / ___|| |_ __ _| |_ ___  
 801:Core/Src/main.c ****  * \___ \| __/ _` | __/ _ \
 802:Core/Src/main.c ****  *  ___) | || (_| | ||  __/ 
 803:Core/Src/main.c ****  * |____/ \__\__,_|\__\___| 
 804:Core/Src/main.c ****  *                          
 805:Core/Src/main.c ****  *                                              
 806:Core/Src/main.c ****  *  _ __ ___   __ _ _ __   __ _  __ _  ___ _ __ 
 807:Core/Src/main.c ****  * | '_ ` _ \ / _` | '_ \ / _` |/ _` |/ _ \ '__|
 808:Core/Src/main.c ****  * | | | | | | (_| | | | | (_| | (_| |  __/ |   
 809:Core/Src/main.c ****  * |_| |_| |_|\__,_|_| |_|\__,_|\__, |\___|_|   
 810:Core/Src/main.c ****  *                              |___/           
 811:Core/Src/main.c ****  */
 812:Core/Src/main.c **** 
 813:Core/Src/main.c **** state_t run_state(state_data_t *data) {
 1620              		.loc 1 813 39 is_stmt 1 view -0
 1621              		.cfi_startproc
 1622              		@ args = 0, pretend = 0, frame = 0
 1623              		@ frame_needed = 0, uses_anonymous_args = 0
 1624              		.loc 1 813 39 is_stmt 0 view .LVU388
 1625 0000 08B5     		push	{r3, lr}
 1626              		.cfi_def_cfa_offset 8
 1627              		.cfi_offset 3, -8
 1628              		.cfi_offset 14, -4
 814:Core/Src/main.c ****   state_t new_state = state_table[current_state](data);
 1629              		.loc 1 814 3 is_stmt 1 view .LVU389
 1630              		.loc 1 814 34 is_stmt 0 view .LVU390
 1631 0002 064B     		ldr	r3, .L118
 1632 0004 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1633 0006 064B     		ldr	r3, .L118+4
 1634 0008 53F82230 		ldr	r3, [r3, r2, lsl #2]
 1635              		.loc 1 814 23 view .LVU391
 1636 000c 9847     		blx	r3
 1637              	.LVL107:
 815:Core/Src/main.c ****   if (new_state == NO_CHANGE) new_state = current_state;
 1638              		.loc 1 815 3 is_stmt 1 view .LVU392
 1639              		.loc 1 815 6 is_stmt 0 view .LVU393
 1640 000e 0728     		cmp	r0, #7
 1641 0010 00D0     		beq	.L117
 1642              	.L115:
 816:Core/Src/main.c ****   return new_state;
 1643              		.loc 1 816 3 is_stmt 1 view .LVU394
 817:Core/Src/main.c **** };
 1644              		.loc 1 817 1 is_stmt 0 view .LVU395
 1645 0012 08BD     		pop	{r3, pc}
 1646              	.L117:
 815:Core/Src/main.c ****   if (new_state == NO_CHANGE) new_state = current_state;
ARM GAS  /tmp/ccACqZav.s 			page 89


 1647              		.loc 1 815 31 is_stmt 1 discriminator 1 view .LVU396
 815:Core/Src/main.c ****   if (new_state == NO_CHANGE) new_state = current_state;
 1648              		.loc 1 815 41 is_stmt 0 discriminator 1 view .LVU397
 1649 0014 014B     		ldr	r3, .L118
 1650 0016 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 1651              	.LVL108:
 815:Core/Src/main.c ****   if (new_state == NO_CHANGE) new_state = current_state;
 1652              		.loc 1 815 41 discriminator 1 view .LVU398
 1653 0018 FBE7     		b	.L115
 1654              	.L119:
 1655 001a 00BF     		.align	2
 1656              	.L118:
 1657 001c 00000000 		.word	current_state
 1658 0020 00000000 		.word	state_table
 1659              		.cfi_endproc
 1660              	.LFE241:
 1662              		.section	.text.main,"ax",%progbits
 1663              		.align	1
 1664              		.global	main
 1665              		.syntax unified
 1666              		.thumb
 1667              		.thumb_func
 1669              	main:
 1670              	.LFB227:
 255:Core/Src/main.c **** 
 1671              		.loc 1 255 1 is_stmt 1 view -0
 1672              		.cfi_startproc
 1673              		@ Volatile: function does not return.
 1674              		@ args = 0, pretend = 0, frame = 0
 1675              		@ frame_needed = 0, uses_anonymous_args = 0
 1676 0000 08B5     		push	{r3, lr}
 1677              		.cfi_def_cfa_offset 8
 1678              		.cfi_offset 3, -8
 1679              		.cfi_offset 14, -4
 1680              	.L121:
 278:Core/Src/main.c ****   {
 1681              		.loc 1 278 3 view .LVU400
 283:Core/Src/main.c ****   }
 1682              		.loc 1 283 5 discriminator 1 view .LVU401
 283:Core/Src/main.c ****   }
 1683              		.loc 1 283 21 is_stmt 0 discriminator 1 view .LVU402
 1684 0002 0020     		movs	r0, #0
 1685 0004 FFF7FEFF 		bl	run_state
 1686              	.LVL109:
 283:Core/Src/main.c ****   }
 1687              		.loc 1 283 19 discriminator 1 view .LVU403
 1688 0008 014B     		ldr	r3, .L123
 1689 000a 1870     		strb	r0, [r3]
 278:Core/Src/main.c ****   {
 1690              		.loc 1 278 9 is_stmt 1 view .LVU404
 1691 000c F9E7     		b	.L121
 1692              	.L124:
 1693 000e 00BF     		.align	2
 1694              	.L123:
 1695 0010 00000000 		.word	current_state
 1696              		.cfi_endproc
 1697              	.LFE227:
ARM GAS  /tmp/ccACqZav.s 			page 90


 1699              		.section	.text.Error_Handler,"ax",%progbits
 1700              		.align	1
 1701              		.global	Error_Handler
 1702              		.syntax unified
 1703              		.thumb
 1704              		.thumb_func
 1706              	Error_Handler:
 1707              	.LFB242:
 818:Core/Src/main.c **** 
 819:Core/Src/main.c **** /* USER CODE END 4 */
 820:Core/Src/main.c **** 
 821:Core/Src/main.c **** /**
 822:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 823:Core/Src/main.c ****   * @retval None
 824:Core/Src/main.c ****   */
 825:Core/Src/main.c **** void Error_Handler(void)
 826:Core/Src/main.c **** {
 1708              		.loc 1 826 1 view -0
 1709              		.cfi_startproc
 1710              		@ args = 0, pretend = 0, frame = 0
 1711              		@ frame_needed = 0, uses_anonymous_args = 0
 1712 0000 08B5     		push	{r3, lr}
 1713              		.cfi_def_cfa_offset 8
 1714              		.cfi_offset 3, -8
 1715              		.cfi_offset 14, -4
 827:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 828:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 829:Core/Src/main.c ****   next_state = STATE_ERROR;
 1716              		.loc 1 829 3 view .LVU406
 1717              		.loc 1 829 14 is_stmt 0 view .LVU407
 1718 0002 054B     		ldr	r3, .L127
 1719 0004 0222     		movs	r2, #2
 1720 0006 1A70     		strb	r2, [r3]
 830:Core/Src/main.c ****   HAL_TIM_Base_Start_IT(&htim4);
 1721              		.loc 1 830 3 is_stmt 1 view .LVU408
 1722 0008 0448     		ldr	r0, .L127+4
 1723 000a FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 1724              	.LVL110:
 831:Core/Src/main.c ****   HAL_UART_AbortReceive_IT(&huart2);
 1725              		.loc 1 831 3 view .LVU409
 1726 000e 0448     		ldr	r0, .L127+8
 1727 0010 FFF7FEFF 		bl	HAL_UART_AbortReceive_IT
 1728              	.LVL111:
 832:Core/Src/main.c ****   /* USER CODE END Error_Handler_Debug */
 833:Core/Src/main.c **** }
 1729              		.loc 1 833 1 is_stmt 0 view .LVU410
 1730 0014 08BD     		pop	{r3, pc}
 1731              	.L128:
 1732 0016 00BF     		.align	2
 1733              	.L127:
 1734 0018 00000000 		.word	next_state
 1735 001c 00000000 		.word	htim4
 1736 0020 00000000 		.word	huart2
 1737              		.cfi_endproc
 1738              	.LFE242:
 1740              		.section	.text.SystemClock_Config,"ax",%progbits
 1741              		.align	1
ARM GAS  /tmp/ccACqZav.s 			page 91


 1742              		.global	SystemClock_Config
 1743              		.syntax unified
 1744              		.thumb
 1745              		.thumb_func
 1747              	SystemClock_Config:
 1748              	.LFB228:
 293:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 1749              		.loc 1 293 1 is_stmt 1 view -0
 1750              		.cfi_startproc
 1751              		@ args = 0, pretend = 0, frame = 80
 1752              		@ frame_needed = 0, uses_anonymous_args = 0
 1753 0000 00B5     		push	{lr}
 1754              		.cfi_def_cfa_offset 4
 1755              		.cfi_offset 14, -4
 1756 0002 95B0     		sub	sp, sp, #84
 1757              		.cfi_def_cfa_offset 88
 294:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1758              		.loc 1 294 3 view .LVU412
 294:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1759              		.loc 1 294 22 is_stmt 0 view .LVU413
 1760 0004 3022     		movs	r2, #48
 1761 0006 0021     		movs	r1, #0
 1762 0008 08A8     		add	r0, sp, #32
 1763 000a FFF7FEFF 		bl	memset
 1764              	.LVL112:
 295:Core/Src/main.c **** 
 1765              		.loc 1 295 3 is_stmt 1 view .LVU414
 295:Core/Src/main.c **** 
 1766              		.loc 1 295 22 is_stmt 0 view .LVU415
 1767 000e 0023     		movs	r3, #0
 1768 0010 0393     		str	r3, [sp, #12]
 1769 0012 0493     		str	r3, [sp, #16]
 1770 0014 0593     		str	r3, [sp, #20]
 1771 0016 0693     		str	r3, [sp, #24]
 1772 0018 0793     		str	r3, [sp, #28]
 299:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1773              		.loc 1 299 3 is_stmt 1 view .LVU416
 1774              	.LBB18:
 299:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1775              		.loc 1 299 3 view .LVU417
 1776 001a 0193     		str	r3, [sp, #4]
 299:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1777              		.loc 1 299 3 view .LVU418
 1778 001c 1F4A     		ldr	r2, .L135
 1779 001e 116C     		ldr	r1, [r2, #64]
 1780 0020 41F08051 		orr	r1, r1, #268435456
 1781 0024 1164     		str	r1, [r2, #64]
 299:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1782              		.loc 1 299 3 view .LVU419
 1783 0026 126C     		ldr	r2, [r2, #64]
 1784 0028 02F08052 		and	r2, r2, #268435456
 1785 002c 0192     		str	r2, [sp, #4]
 299:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1786              		.loc 1 299 3 view .LVU420
 1787 002e 019A     		ldr	r2, [sp, #4]
 1788              	.LBE18:
 299:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
ARM GAS  /tmp/ccACqZav.s 			page 92


 1789              		.loc 1 299 3 view .LVU421
 300:Core/Src/main.c **** 
 1790              		.loc 1 300 3 view .LVU422
 1791              	.LBB19:
 300:Core/Src/main.c **** 
 1792              		.loc 1 300 3 view .LVU423
 1793 0030 0293     		str	r3, [sp, #8]
 300:Core/Src/main.c **** 
 1794              		.loc 1 300 3 view .LVU424
 1795 0032 1B4A     		ldr	r2, .L135+4
 1796 0034 1168     		ldr	r1, [r2]
 1797 0036 41F44041 		orr	r1, r1, #49152
 1798 003a 1160     		str	r1, [r2]
 300:Core/Src/main.c **** 
 1799              		.loc 1 300 3 view .LVU425
 1800 003c 1268     		ldr	r2, [r2]
 1801 003e 02F44042 		and	r2, r2, #49152
 1802 0042 0292     		str	r2, [sp, #8]
 300:Core/Src/main.c **** 
 1803              		.loc 1 300 3 view .LVU426
 1804 0044 029A     		ldr	r2, [sp, #8]
 1805              	.LBE19:
 300:Core/Src/main.c **** 
 1806              		.loc 1 300 3 view .LVU427
 305:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1807              		.loc 1 305 3 view .LVU428
 305:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1808              		.loc 1 305 36 is_stmt 0 view .LVU429
 1809 0046 0221     		movs	r1, #2
 1810 0048 0891     		str	r1, [sp, #32]
 306:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1811              		.loc 1 306 3 is_stmt 1 view .LVU430
 306:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1812              		.loc 1 306 30 is_stmt 0 view .LVU431
 1813 004a 0122     		movs	r2, #1
 1814 004c 0B92     		str	r2, [sp, #44]
 307:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1815              		.loc 1 307 3 is_stmt 1 view .LVU432
 307:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1816              		.loc 1 307 41 is_stmt 0 view .LVU433
 1817 004e 1022     		movs	r2, #16
 1818 0050 0C92     		str	r2, [sp, #48]
 308:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 1819              		.loc 1 308 3 is_stmt 1 view .LVU434
 308:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 1820              		.loc 1 308 34 is_stmt 0 view .LVU435
 1821 0052 0E91     		str	r1, [sp, #56]
 309:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 16;
 1822              		.loc 1 309 3 is_stmt 1 view .LVU436
 309:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 16;
 1823              		.loc 1 309 35 is_stmt 0 view .LVU437
 1824 0054 0F93     		str	r3, [sp, #60]
 310:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 336;
 1825              		.loc 1 310 3 is_stmt 1 view .LVU438
 310:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 336;
 1826              		.loc 1 310 30 is_stmt 0 view .LVU439
 1827 0056 1092     		str	r2, [sp, #64]
ARM GAS  /tmp/ccACqZav.s 			page 93


 311:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 1828              		.loc 1 311 3 is_stmt 1 view .LVU440
 311:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 1829              		.loc 1 311 30 is_stmt 0 view .LVU441
 1830 0058 4FF4A873 		mov	r3, #336
 1831 005c 1193     		str	r3, [sp, #68]
 312:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 1832              		.loc 1 312 3 is_stmt 1 view .LVU442
 312:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 1833              		.loc 1 312 30 is_stmt 0 view .LVU443
 1834 005e 0423     		movs	r3, #4
 1835 0060 1293     		str	r3, [sp, #72]
 313:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1836              		.loc 1 313 3 is_stmt 1 view .LVU444
 313:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1837              		.loc 1 313 30 is_stmt 0 view .LVU445
 1838 0062 1393     		str	r3, [sp, #76]
 314:Core/Src/main.c ****   {
 1839              		.loc 1 314 3 is_stmt 1 view .LVU446
 314:Core/Src/main.c ****   {
 1840              		.loc 1 314 7 is_stmt 0 view .LVU447
 1841 0064 08A8     		add	r0, sp, #32
 1842 0066 FFF7FEFF 		bl	HAL_RCC_OscConfig
 1843              	.LVL113:
 314:Core/Src/main.c ****   {
 1844              		.loc 1 314 6 discriminator 1 view .LVU448
 1845 006a 80B9     		cbnz	r0, .L133
 1846              	.L130:
 321:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1847              		.loc 1 321 3 is_stmt 1 view .LVU449
 321:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1848              		.loc 1 321 31 is_stmt 0 view .LVU450
 1849 006c 0F23     		movs	r3, #15
 1850 006e 0393     		str	r3, [sp, #12]
 323:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1851              		.loc 1 323 3 is_stmt 1 view .LVU451
 323:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1852              		.loc 1 323 34 is_stmt 0 view .LVU452
 1853 0070 0221     		movs	r1, #2
 1854 0072 0491     		str	r1, [sp, #16]
 324:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 1855              		.loc 1 324 3 is_stmt 1 view .LVU453
 324:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 1856              		.loc 1 324 35 is_stmt 0 view .LVU454
 1857 0074 0023     		movs	r3, #0
 1858 0076 0593     		str	r3, [sp, #20]
 325:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1859              		.loc 1 325 3 is_stmt 1 view .LVU455
 325:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1860              		.loc 1 325 36 is_stmt 0 view .LVU456
 1861 0078 4FF48052 		mov	r2, #4096
 1862 007c 0692     		str	r2, [sp, #24]
 326:Core/Src/main.c **** 
 1863              		.loc 1 326 3 is_stmt 1 view .LVU457
 326:Core/Src/main.c **** 
 1864              		.loc 1 326 36 is_stmt 0 view .LVU458
 1865 007e 0793     		str	r3, [sp, #28]
ARM GAS  /tmp/ccACqZav.s 			page 94


 328:Core/Src/main.c ****   {
 1866              		.loc 1 328 3 is_stmt 1 view .LVU459
 328:Core/Src/main.c ****   {
 1867              		.loc 1 328 7 is_stmt 0 view .LVU460
 1868 0080 03A8     		add	r0, sp, #12
 1869 0082 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1870              	.LVL114:
 328:Core/Src/main.c ****   {
 1871              		.loc 1 328 6 discriminator 1 view .LVU461
 1872 0086 28B9     		cbnz	r0, .L134
 1873              	.L129:
 332:Core/Src/main.c **** 
 1874              		.loc 1 332 1 view .LVU462
 1875 0088 15B0     		add	sp, sp, #84
 1876              		.cfi_remember_state
 1877              		.cfi_def_cfa_offset 4
 1878              		@ sp needed
 1879 008a 5DF804FB 		ldr	pc, [sp], #4
 1880              	.L133:
 1881              		.cfi_restore_state
 316:Core/Src/main.c ****   }
 1882              		.loc 1 316 5 is_stmt 1 view .LVU463
 1883 008e FFF7FEFF 		bl	Error_Handler
 1884              	.LVL115:
 1885 0092 EBE7     		b	.L130
 1886              	.L134:
 330:Core/Src/main.c ****   }
 1887              		.loc 1 330 5 view .LVU464
 1888 0094 FFF7FEFF 		bl	Error_Handler
 1889              	.LVL116:
 332:Core/Src/main.c **** 
 1890              		.loc 1 332 1 is_stmt 0 view .LVU465
 1891 0098 F6E7     		b	.L129
 1892              	.L136:
 1893 009a 00BF     		.align	2
 1894              	.L135:
 1895 009c 00380240 		.word	1073887232
 1896 00a0 00700040 		.word	1073770496
 1897              		.cfi_endproc
 1898              	.LFE228:
 1900              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 1901              		.align	1
 1902              		.syntax unified
 1903              		.thumb
 1904              		.thumb_func
 1906              	MX_USART2_UART_Init:
 1907              	.LFB232:
 482:Core/Src/main.c **** 
 1908              		.loc 1 482 1 is_stmt 1 view -0
 1909              		.cfi_startproc
 1910              		@ args = 0, pretend = 0, frame = 0
 1911              		@ frame_needed = 0, uses_anonymous_args = 0
 1912 0000 08B5     		push	{r3, lr}
 1913              		.cfi_def_cfa_offset 8
 1914              		.cfi_offset 3, -8
 1915              		.cfi_offset 14, -4
 491:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
ARM GAS  /tmp/ccACqZav.s 			page 95


 1916              		.loc 1 491 3 view .LVU467
 491:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 1917              		.loc 1 491 19 is_stmt 0 view .LVU468
 1918 0002 0A48     		ldr	r0, .L141
 1919 0004 0A4B     		ldr	r3, .L141+4
 1920 0006 0360     		str	r3, [r0]
 492:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 1921              		.loc 1 492 3 is_stmt 1 view .LVU469
 492:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 1922              		.loc 1 492 24 is_stmt 0 view .LVU470
 1923 0008 4FF4E133 		mov	r3, #115200
 1924 000c 4360     		str	r3, [r0, #4]
 493:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 1925              		.loc 1 493 3 is_stmt 1 view .LVU471
 493:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 1926              		.loc 1 493 26 is_stmt 0 view .LVU472
 1927 000e 0023     		movs	r3, #0
 1928 0010 8360     		str	r3, [r0, #8]
 494:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 1929              		.loc 1 494 3 is_stmt 1 view .LVU473
 494:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 1930              		.loc 1 494 24 is_stmt 0 view .LVU474
 1931 0012 C360     		str	r3, [r0, #12]
 495:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 1932              		.loc 1 495 3 is_stmt 1 view .LVU475
 495:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 1933              		.loc 1 495 22 is_stmt 0 view .LVU476
 1934 0014 0361     		str	r3, [r0, #16]
 496:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1935              		.loc 1 496 3 is_stmt 1 view .LVU477
 496:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1936              		.loc 1 496 20 is_stmt 0 view .LVU478
 1937 0016 0C22     		movs	r2, #12
 1938 0018 4261     		str	r2, [r0, #20]
 497:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 1939              		.loc 1 497 3 is_stmt 1 view .LVU479
 497:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 1940              		.loc 1 497 25 is_stmt 0 view .LVU480
 1941 001a 8361     		str	r3, [r0, #24]
 498:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 1942              		.loc 1 498 3 is_stmt 1 view .LVU481
 498:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 1943              		.loc 1 498 28 is_stmt 0 view .LVU482
 1944 001c C361     		str	r3, [r0, #28]
 499:Core/Src/main.c ****   {
 1945              		.loc 1 499 3 is_stmt 1 view .LVU483
 499:Core/Src/main.c ****   {
 1946              		.loc 1 499 7 is_stmt 0 view .LVU484
 1947 001e FFF7FEFF 		bl	HAL_UART_Init
 1948              	.LVL117:
 499:Core/Src/main.c ****   {
 1949              		.loc 1 499 6 discriminator 1 view .LVU485
 1950 0022 00B9     		cbnz	r0, .L140
 1951              	.L137:
 507:Core/Src/main.c **** 
 1952              		.loc 1 507 1 view .LVU486
 1953 0024 08BD     		pop	{r3, pc}
ARM GAS  /tmp/ccACqZav.s 			page 96


 1954              	.L140:
 501:Core/Src/main.c ****   }
 1955              		.loc 1 501 5 is_stmt 1 view .LVU487
 1956 0026 FFF7FEFF 		bl	Error_Handler
 1957              	.LVL118:
 507:Core/Src/main.c **** 
 1958              		.loc 1 507 1 is_stmt 0 view .LVU488
 1959 002a FBE7     		b	.L137
 1960              	.L142:
 1961              		.align	2
 1962              	.L141:
 1963 002c 00000000 		.word	huart2
 1964 0030 00440040 		.word	1073759232
 1965              		.cfi_endproc
 1966              	.LFE232:
 1968              		.section	.text.MX_ADC1_Init,"ax",%progbits
 1969              		.align	1
 1970              		.syntax unified
 1971              		.thumb
 1972              		.thumb_func
 1974              	MX_ADC1_Init:
 1975              	.LFB229:
 340:Core/Src/main.c **** 
 1976              		.loc 1 340 1 is_stmt 1 view -0
 1977              		.cfi_startproc
 1978              		@ args = 0, pretend = 0, frame = 16
 1979              		@ frame_needed = 0, uses_anonymous_args = 0
 1980 0000 00B5     		push	{lr}
 1981              		.cfi_def_cfa_offset 4
 1982              		.cfi_offset 14, -4
 1983 0002 85B0     		sub	sp, sp, #20
 1984              		.cfi_def_cfa_offset 24
 346:Core/Src/main.c **** 
 1985              		.loc 1 346 3 view .LVU490
 346:Core/Src/main.c **** 
 1986              		.loc 1 346 26 is_stmt 0 view .LVU491
 1987 0004 0023     		movs	r3, #0
 1988 0006 0093     		str	r3, [sp]
 1989 0008 0193     		str	r3, [sp, #4]
 1990 000a 0293     		str	r3, [sp, #8]
 1991 000c 0393     		str	r3, [sp, #12]
 354:Core/Src/main.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 1992              		.loc 1 354 3 is_stmt 1 view .LVU492
 354:Core/Src/main.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 1993              		.loc 1 354 18 is_stmt 0 view .LVU493
 1994 000e 1548     		ldr	r0, .L149
 1995 0010 154A     		ldr	r2, .L149+4
 1996 0012 0260     		str	r2, [r0]
 355:Core/Src/main.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 1997              		.loc 1 355 3 is_stmt 1 view .LVU494
 355:Core/Src/main.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 1998              		.loc 1 355 29 is_stmt 0 view .LVU495
 1999 0014 4FF48032 		mov	r2, #65536
 2000 0018 4260     		str	r2, [r0, #4]
 356:Core/Src/main.c ****   hadc1.Init.ScanConvMode = DISABLE;
 2001              		.loc 1 356 3 is_stmt 1 view .LVU496
 356:Core/Src/main.c ****   hadc1.Init.ScanConvMode = DISABLE;
ARM GAS  /tmp/ccACqZav.s 			page 97


 2002              		.loc 1 356 25 is_stmt 0 view .LVU497
 2003 001a 8360     		str	r3, [r0, #8]
 357:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = ENABLE;
 2004              		.loc 1 357 3 is_stmt 1 view .LVU498
 357:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = ENABLE;
 2005              		.loc 1 357 27 is_stmt 0 view .LVU499
 2006 001c 0361     		str	r3, [r0, #16]
 358:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 2007              		.loc 1 358 3 is_stmt 1 view .LVU500
 358:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 2008              		.loc 1 358 33 is_stmt 0 view .LVU501
 2009 001e 0122     		movs	r2, #1
 2010 0020 0276     		strb	r2, [r0, #24]
 359:Core/Src/main.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 2011              		.loc 1 359 3 is_stmt 1 view .LVU502
 359:Core/Src/main.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 2012              		.loc 1 359 36 is_stmt 0 view .LVU503
 2013 0022 80F82030 		strb	r3, [r0, #32]
 360:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 2014              		.loc 1 360 3 is_stmt 1 view .LVU504
 360:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 2015              		.loc 1 360 35 is_stmt 0 view .LVU505
 2016 0026 C362     		str	r3, [r0, #44]
 361:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 2017              		.loc 1 361 3 is_stmt 1 view .LVU506
 361:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 2018              		.loc 1 361 31 is_stmt 0 view .LVU507
 2019 0028 1049     		ldr	r1, .L149+8
 2020 002a 8162     		str	r1, [r0, #40]
 362:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 1;
 2021              		.loc 1 362 3 is_stmt 1 view .LVU508
 362:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 1;
 2022              		.loc 1 362 24 is_stmt 0 view .LVU509
 2023 002c C360     		str	r3, [r0, #12]
 363:Core/Src/main.c ****   hadc1.Init.DMAContinuousRequests = ENABLE;
 2024              		.loc 1 363 3 is_stmt 1 view .LVU510
 363:Core/Src/main.c ****   hadc1.Init.DMAContinuousRequests = ENABLE;
 2025              		.loc 1 363 30 is_stmt 0 view .LVU511
 2026 002e C261     		str	r2, [r0, #28]
 364:Core/Src/main.c ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 2027              		.loc 1 364 3 is_stmt 1 view .LVU512
 364:Core/Src/main.c ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 2028              		.loc 1 364 36 is_stmt 0 view .LVU513
 2029 0030 80F83020 		strb	r2, [r0, #48]
 365:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 2030              		.loc 1 365 3 is_stmt 1 view .LVU514
 365:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 2031              		.loc 1 365 27 is_stmt 0 view .LVU515
 2032 0034 4261     		str	r2, [r0, #20]
 366:Core/Src/main.c ****   {
 2033              		.loc 1 366 3 is_stmt 1 view .LVU516
 366:Core/Src/main.c ****   {
 2034              		.loc 1 366 7 is_stmt 0 view .LVU517
 2035 0036 FFF7FEFF 		bl	HAL_ADC_Init
 2036              	.LVL119:
 366:Core/Src/main.c ****   {
 2037              		.loc 1 366 6 discriminator 1 view .LVU518
ARM GAS  /tmp/ccACqZav.s 			page 98


 2038 003a 60B9     		cbnz	r0, .L147
 2039              	.L144:
 373:Core/Src/main.c ****   sConfig.Rank = 1;
 2040              		.loc 1 373 3 is_stmt 1 view .LVU519
 373:Core/Src/main.c ****   sConfig.Rank = 1;
 2041              		.loc 1 373 19 is_stmt 0 view .LVU520
 2042 003c 0023     		movs	r3, #0
 2043 003e 0093     		str	r3, [sp]
 374:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 2044              		.loc 1 374 3 is_stmt 1 view .LVU521
 374:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 2045              		.loc 1 374 16 is_stmt 0 view .LVU522
 2046 0040 0122     		movs	r2, #1
 2047 0042 0192     		str	r2, [sp, #4]
 375:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 2048              		.loc 1 375 3 is_stmt 1 view .LVU523
 375:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 2049              		.loc 1 375 24 is_stmt 0 view .LVU524
 2050 0044 0293     		str	r3, [sp, #8]
 376:Core/Src/main.c ****   {
 2051              		.loc 1 376 3 is_stmt 1 view .LVU525
 376:Core/Src/main.c ****   {
 2052              		.loc 1 376 7 is_stmt 0 view .LVU526
 2053 0046 6946     		mov	r1, sp
 2054 0048 0648     		ldr	r0, .L149
 2055 004a FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 2056              	.LVL120:
 376:Core/Src/main.c ****   {
 2057              		.loc 1 376 6 discriminator 1 view .LVU527
 2058 004e 28B9     		cbnz	r0, .L148
 2059              	.L143:
 384:Core/Src/main.c **** 
 2060              		.loc 1 384 1 view .LVU528
 2061 0050 05B0     		add	sp, sp, #20
 2062              		.cfi_remember_state
 2063              		.cfi_def_cfa_offset 4
 2064              		@ sp needed
 2065 0052 5DF804FB 		ldr	pc, [sp], #4
 2066              	.L147:
 2067              		.cfi_restore_state
 368:Core/Src/main.c ****   }
 2068              		.loc 1 368 5 is_stmt 1 view .LVU529
 2069 0056 FFF7FEFF 		bl	Error_Handler
 2070              	.LVL121:
 2071 005a EFE7     		b	.L144
 2072              	.L148:
 378:Core/Src/main.c ****   }
 2073              		.loc 1 378 5 view .LVU530
 2074 005c FFF7FEFF 		bl	Error_Handler
 2075              	.LVL122:
 384:Core/Src/main.c **** 
 2076              		.loc 1 384 1 is_stmt 0 view .LVU531
 2077 0060 F6E7     		b	.L143
 2078              	.L150:
 2079 0062 00BF     		.align	2
 2080              	.L149:
 2081 0064 00000000 		.word	hadc1
ARM GAS  /tmp/ccACqZav.s 			page 99


 2082 0068 00200140 		.word	1073815552
 2083 006c 0100000F 		.word	251658241
 2084              		.cfi_endproc
 2085              	.LFE229:
 2087              		.section	.text.MX_TIM3_Init,"ax",%progbits
 2088              		.align	1
 2089              		.syntax unified
 2090              		.thumb
 2091              		.thumb_func
 2093              	MX_TIM3_Init:
 2094              	.LFB230:
 392:Core/Src/main.c **** 
 2095              		.loc 1 392 1 is_stmt 1 view -0
 2096              		.cfi_startproc
 2097              		@ args = 0, pretend = 0, frame = 24
 2098              		@ frame_needed = 0, uses_anonymous_args = 0
 2099 0000 00B5     		push	{lr}
 2100              		.cfi_def_cfa_offset 4
 2101              		.cfi_offset 14, -4
 2102 0002 87B0     		sub	sp, sp, #28
 2103              		.cfi_def_cfa_offset 32
 398:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 2104              		.loc 1 398 3 view .LVU533
 398:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 2105              		.loc 1 398 26 is_stmt 0 view .LVU534
 2106 0004 0023     		movs	r3, #0
 2107 0006 0293     		str	r3, [sp, #8]
 2108 0008 0393     		str	r3, [sp, #12]
 2109 000a 0493     		str	r3, [sp, #16]
 2110 000c 0593     		str	r3, [sp, #20]
 399:Core/Src/main.c **** 
 2111              		.loc 1 399 3 is_stmt 1 view .LVU535
 399:Core/Src/main.c **** 
 2112              		.loc 1 399 27 is_stmt 0 view .LVU536
 2113 000e 0093     		str	r3, [sp]
 2114 0010 0193     		str	r3, [sp, #4]
 404:Core/Src/main.c ****   htim3.Init.Prescaler = 9999;
 2115              		.loc 1 404 3 is_stmt 1 view .LVU537
 404:Core/Src/main.c ****   htim3.Init.Prescaler = 9999;
 2116              		.loc 1 404 18 is_stmt 0 view .LVU538
 2117 0012 1548     		ldr	r0, .L159
 2118 0014 154A     		ldr	r2, .L159+4
 2119 0016 0260     		str	r2, [r0]
 405:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 2120              		.loc 1 405 3 is_stmt 1 view .LVU539
 405:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 2121              		.loc 1 405 24 is_stmt 0 view .LVU540
 2122 0018 42F20F72 		movw	r2, #9999
 2123 001c 4260     		str	r2, [r0, #4]
 406:Core/Src/main.c ****   htim3.Init.Period = 7199;
 2124              		.loc 1 406 3 is_stmt 1 view .LVU541
 406:Core/Src/main.c ****   htim3.Init.Period = 7199;
 2125              		.loc 1 406 26 is_stmt 0 view .LVU542
 2126 001e 8360     		str	r3, [r0, #8]
 407:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 2127              		.loc 1 407 3 is_stmt 1 view .LVU543
 407:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
ARM GAS  /tmp/ccACqZav.s 			page 100


 2128              		.loc 1 407 21 is_stmt 0 view .LVU544
 2129 0020 41F61F42 		movw	r2, #7199
 2130 0024 C260     		str	r2, [r0, #12]
 408:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 2131              		.loc 1 408 3 is_stmt 1 view .LVU545
 408:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 2132              		.loc 1 408 28 is_stmt 0 view .LVU546
 2133 0026 0361     		str	r3, [r0, #16]
 409:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 2134              		.loc 1 409 3 is_stmt 1 view .LVU547
 409:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 2135              		.loc 1 409 32 is_stmt 0 view .LVU548
 2136 0028 8361     		str	r3, [r0, #24]
 410:Core/Src/main.c ****   {
 2137              		.loc 1 410 3 is_stmt 1 view .LVU549
 410:Core/Src/main.c ****   {
 2138              		.loc 1 410 7 is_stmt 0 view .LVU550
 2139 002a FFF7FEFF 		bl	HAL_TIM_Base_Init
 2140              	.LVL123:
 410:Core/Src/main.c ****   {
 2141              		.loc 1 410 6 discriminator 1 view .LVU551
 2142 002e 90B9     		cbnz	r0, .L156
 2143              	.L152:
 414:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 2144              		.loc 1 414 3 is_stmt 1 view .LVU552
 414:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 2145              		.loc 1 414 34 is_stmt 0 view .LVU553
 2146 0030 4FF48053 		mov	r3, #4096
 2147 0034 0293     		str	r3, [sp, #8]
 415:Core/Src/main.c ****   {
 2148              		.loc 1 415 3 is_stmt 1 view .LVU554
 415:Core/Src/main.c ****   {
 2149              		.loc 1 415 7 is_stmt 0 view .LVU555
 2150 0036 02A9     		add	r1, sp, #8
 2151 0038 0B48     		ldr	r0, .L159
 2152 003a FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 2153              	.LVL124:
 415:Core/Src/main.c ****   {
 2154              		.loc 1 415 6 discriminator 1 view .LVU556
 2155 003e 68B9     		cbnz	r0, .L157
 2156              	.L153:
 419:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 2157              		.loc 1 419 3 is_stmt 1 view .LVU557
 419:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 2158              		.loc 1 419 37 is_stmt 0 view .LVU558
 2159 0040 0023     		movs	r3, #0
 2160 0042 0093     		str	r3, [sp]
 420:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 2161              		.loc 1 420 3 is_stmt 1 view .LVU559
 420:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 2162              		.loc 1 420 33 is_stmt 0 view .LVU560
 2163 0044 0193     		str	r3, [sp, #4]
 421:Core/Src/main.c ****   {
 2164              		.loc 1 421 3 is_stmt 1 view .LVU561
 421:Core/Src/main.c ****   {
 2165              		.loc 1 421 7 is_stmt 0 view .LVU562
 2166 0046 6946     		mov	r1, sp
ARM GAS  /tmp/ccACqZav.s 			page 101


 2167 0048 0748     		ldr	r0, .L159
 2168 004a FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 2169              	.LVL125:
 421:Core/Src/main.c ****   {
 2170              		.loc 1 421 6 discriminator 1 view .LVU563
 2171 004e 40B9     		cbnz	r0, .L158
 2172              	.L151:
 429:Core/Src/main.c **** 
 2173              		.loc 1 429 1 view .LVU564
 2174 0050 07B0     		add	sp, sp, #28
 2175              		.cfi_remember_state
 2176              		.cfi_def_cfa_offset 4
 2177              		@ sp needed
 2178 0052 5DF804FB 		ldr	pc, [sp], #4
 2179              	.L156:
 2180              		.cfi_restore_state
 412:Core/Src/main.c ****   }
 2181              		.loc 1 412 5 is_stmt 1 view .LVU565
 2182 0056 FFF7FEFF 		bl	Error_Handler
 2183              	.LVL126:
 2184 005a E9E7     		b	.L152
 2185              	.L157:
 417:Core/Src/main.c ****   }
 2186              		.loc 1 417 5 view .LVU566
 2187 005c FFF7FEFF 		bl	Error_Handler
 2188              	.LVL127:
 2189 0060 EEE7     		b	.L153
 2190              	.L158:
 423:Core/Src/main.c ****   }
 2191              		.loc 1 423 5 view .LVU567
 2192 0062 FFF7FEFF 		bl	Error_Handler
 2193              	.LVL128:
 429:Core/Src/main.c **** 
 2194              		.loc 1 429 1 is_stmt 0 view .LVU568
 2195 0066 F3E7     		b	.L151
 2196              	.L160:
 2197              		.align	2
 2198              	.L159:
 2199 0068 00000000 		.word	htim3
 2200 006c 00040040 		.word	1073742848
 2201              		.cfi_endproc
 2202              	.LFE230:
 2204              		.section	.text.MX_TIM4_Init,"ax",%progbits
 2205              		.align	1
 2206              		.syntax unified
 2207              		.thumb
 2208              		.thumb_func
 2210              	MX_TIM4_Init:
 2211              	.LFB231:
 437:Core/Src/main.c **** 
 2212              		.loc 1 437 1 is_stmt 1 view -0
 2213              		.cfi_startproc
 2214              		@ args = 0, pretend = 0, frame = 24
 2215              		@ frame_needed = 0, uses_anonymous_args = 0
 2216 0000 00B5     		push	{lr}
 2217              		.cfi_def_cfa_offset 4
 2218              		.cfi_offset 14, -4
ARM GAS  /tmp/ccACqZav.s 			page 102


 2219 0002 87B0     		sub	sp, sp, #28
 2220              		.cfi_def_cfa_offset 32
 443:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 2221              		.loc 1 443 3 view .LVU570
 443:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 2222              		.loc 1 443 26 is_stmt 0 view .LVU571
 2223 0004 0023     		movs	r3, #0
 2224 0006 0293     		str	r3, [sp, #8]
 2225 0008 0393     		str	r3, [sp, #12]
 2226 000a 0493     		str	r3, [sp, #16]
 2227 000c 0593     		str	r3, [sp, #20]
 444:Core/Src/main.c **** 
 2228              		.loc 1 444 3 is_stmt 1 view .LVU572
 444:Core/Src/main.c **** 
 2229              		.loc 1 444 27 is_stmt 0 view .LVU573
 2230 000e 0093     		str	r3, [sp]
 2231 0010 0193     		str	r3, [sp, #4]
 449:Core/Src/main.c ****   htim4.Init.Prescaler = 9999;
 2232              		.loc 1 449 3 is_stmt 1 view .LVU574
 449:Core/Src/main.c ****   htim4.Init.Prescaler = 9999;
 2233              		.loc 1 449 18 is_stmt 0 view .LVU575
 2234 0012 1548     		ldr	r0, .L169
 2235 0014 154A     		ldr	r2, .L169+4
 2236 0016 0260     		str	r2, [r0]
 450:Core/Src/main.c ****   htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 2237              		.loc 1 450 3 is_stmt 1 view .LVU576
 450:Core/Src/main.c ****   htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 2238              		.loc 1 450 24 is_stmt 0 view .LVU577
 2239 0018 42F20F72 		movw	r2, #9999
 2240 001c 4260     		str	r2, [r0, #4]
 451:Core/Src/main.c ****   htim4.Init.Period = 1679;
 2241              		.loc 1 451 3 is_stmt 1 view .LVU578
 451:Core/Src/main.c ****   htim4.Init.Period = 1679;
 2242              		.loc 1 451 26 is_stmt 0 view .LVU579
 2243 001e 8360     		str	r3, [r0, #8]
 452:Core/Src/main.c ****   htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 2244              		.loc 1 452 3 is_stmt 1 view .LVU580
 452:Core/Src/main.c ****   htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 2245              		.loc 1 452 21 is_stmt 0 view .LVU581
 2246 0020 40F28F62 		movw	r2, #1679
 2247 0024 C260     		str	r2, [r0, #12]
 453:Core/Src/main.c ****   htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 2248              		.loc 1 453 3 is_stmt 1 view .LVU582
 453:Core/Src/main.c ****   htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 2249              		.loc 1 453 28 is_stmt 0 view .LVU583
 2250 0026 0361     		str	r3, [r0, #16]
 454:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim4) != HAL_OK)
 2251              		.loc 1 454 3 is_stmt 1 view .LVU584
 454:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim4) != HAL_OK)
 2252              		.loc 1 454 32 is_stmt 0 view .LVU585
 2253 0028 8361     		str	r3, [r0, #24]
 455:Core/Src/main.c ****   {
 2254              		.loc 1 455 3 is_stmt 1 view .LVU586
 455:Core/Src/main.c ****   {
 2255              		.loc 1 455 7 is_stmt 0 view .LVU587
 2256 002a FFF7FEFF 		bl	HAL_TIM_Base_Init
 2257              	.LVL129:
ARM GAS  /tmp/ccACqZav.s 			page 103


 455:Core/Src/main.c ****   {
 2258              		.loc 1 455 6 discriminator 1 view .LVU588
 2259 002e 90B9     		cbnz	r0, .L166
 2260              	.L162:
 459:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim4, &sClockSourceConfig) != HAL_OK)
 2261              		.loc 1 459 3 is_stmt 1 view .LVU589
 459:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim4, &sClockSourceConfig) != HAL_OK)
 2262              		.loc 1 459 34 is_stmt 0 view .LVU590
 2263 0030 4FF48053 		mov	r3, #4096
 2264 0034 0293     		str	r3, [sp, #8]
 460:Core/Src/main.c ****   {
 2265              		.loc 1 460 3 is_stmt 1 view .LVU591
 460:Core/Src/main.c ****   {
 2266              		.loc 1 460 7 is_stmt 0 view .LVU592
 2267 0036 02A9     		add	r1, sp, #8
 2268 0038 0B48     		ldr	r0, .L169
 2269 003a FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 2270              	.LVL130:
 460:Core/Src/main.c ****   {
 2271              		.loc 1 460 6 discriminator 1 view .LVU593
 2272 003e 68B9     		cbnz	r0, .L167
 2273              	.L163:
 464:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 2274              		.loc 1 464 3 is_stmt 1 view .LVU594
 464:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 2275              		.loc 1 464 37 is_stmt 0 view .LVU595
 2276 0040 0023     		movs	r3, #0
 2277 0042 0093     		str	r3, [sp]
 465:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 2278              		.loc 1 465 3 is_stmt 1 view .LVU596
 465:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 2279              		.loc 1 465 33 is_stmt 0 view .LVU597
 2280 0044 0193     		str	r3, [sp, #4]
 466:Core/Src/main.c ****   {
 2281              		.loc 1 466 3 is_stmt 1 view .LVU598
 466:Core/Src/main.c ****   {
 2282              		.loc 1 466 7 is_stmt 0 view .LVU599
 2283 0046 6946     		mov	r1, sp
 2284 0048 0748     		ldr	r0, .L169
 2285 004a FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 2286              	.LVL131:
 466:Core/Src/main.c ****   {
 2287              		.loc 1 466 6 discriminator 1 view .LVU600
 2288 004e 40B9     		cbnz	r0, .L168
 2289              	.L161:
 474:Core/Src/main.c **** 
 2290              		.loc 1 474 1 view .LVU601
 2291 0050 07B0     		add	sp, sp, #28
 2292              		.cfi_remember_state
 2293              		.cfi_def_cfa_offset 4
 2294              		@ sp needed
 2295 0052 5DF804FB 		ldr	pc, [sp], #4
 2296              	.L166:
 2297              		.cfi_restore_state
 457:Core/Src/main.c ****   }
 2298              		.loc 1 457 5 is_stmt 1 view .LVU602
 2299 0056 FFF7FEFF 		bl	Error_Handler
ARM GAS  /tmp/ccACqZav.s 			page 104


 2300              	.LVL132:
 2301 005a E9E7     		b	.L162
 2302              	.L167:
 462:Core/Src/main.c ****   }
 2303              		.loc 1 462 5 view .LVU603
 2304 005c FFF7FEFF 		bl	Error_Handler
 2305              	.LVL133:
 2306 0060 EEE7     		b	.L163
 2307              	.L168:
 468:Core/Src/main.c ****   }
 2308              		.loc 1 468 5 view .LVU604
 2309 0062 FFF7FEFF 		bl	Error_Handler
 2310              	.LVL134:
 474:Core/Src/main.c **** 
 2311              		.loc 1 474 1 is_stmt 0 view .LVU605
 2312 0066 F3E7     		b	.L161
 2313              	.L170:
 2314              		.align	2
 2315              	.L169:
 2316 0068 00000000 		.word	htim4
 2317 006c 00080040 		.word	1073743872
 2318              		.cfi_endproc
 2319              	.LFE231:
 2321              		.section	.text.do_init,"ax",%progbits
 2322              		.align	1
 2323              		.global	do_init
 2324              		.syntax unified
 2325              		.thumb
 2326              		.thumb_func
 2328              	do_init:
 2329              	.LVL135:
 2330              	.LFB235:
 594:Core/Src/main.c ****   next_state = STATE_WAIT_REQUEST;
 2331              		.loc 1 594 37 is_stmt 1 view -0
 2332              		.cfi_startproc
 2333              		@ args = 0, pretend = 0, frame = 0
 2334              		@ frame_needed = 0, uses_anonymous_args = 0
 594:Core/Src/main.c ****   next_state = STATE_WAIT_REQUEST;
 2335              		.loc 1 594 37 is_stmt 0 view .LVU607
 2336 0000 08B5     		push	{r3, lr}
 2337              		.cfi_def_cfa_offset 8
 2338              		.cfi_offset 3, -8
 2339              		.cfi_offset 14, -4
 595:Core/Src/main.c ****   
 2340              		.loc 1 595 3 is_stmt 1 view .LVU608
 595:Core/Src/main.c ****   
 2341              		.loc 1 595 14 is_stmt 0 view .LVU609
 2342 0002 1A4B     		ldr	r3, .L178
 2343 0004 0122     		movs	r2, #1
 2344 0006 1A70     		strb	r2, [r3]
 599:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 2345              		.loc 1 599 3 is_stmt 1 view .LVU610
 599:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 2346              		.loc 1 599 9 is_stmt 0 view .LVU611
 2347 0008 0020     		movs	r0, #0
 2348              	.LVL136:
 599:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
ARM GAS  /tmp/ccACqZav.s 			page 105


 2349              		.loc 1 599 9 view .LVU612
 2350 000a FFF7FEFF 		bl	time
 2351              	.LVL137:
 599:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 2352              		.loc 1 599 3 discriminator 1 view .LVU613
 2353 000e FFF7FEFF 		bl	srand
 2354              	.LVL138:
 601:Core/Src/main.c **** 
 2355              		.loc 1 601 3 is_stmt 1 view .LVU614
 601:Core/Src/main.c **** 
 2356              		.loc 1 601 15 is_stmt 0 view .LVU615
 2357 0012 FFF7FEFF 		bl	HAL_Init
 2358              	.LVL139:
 601:Core/Src/main.c **** 
 2359              		.loc 1 601 13 discriminator 1 view .LVU616
 2360 0016 164B     		ldr	r3, .L178+4
 2361 0018 1870     		strb	r0, [r3]
 603:Core/Src/main.c ****     next_state  = STATE_ERROR;
 2362              		.loc 1 603 3 is_stmt 1 view .LVU617
 603:Core/Src/main.c ****     next_state  = STATE_ERROR;
 2363              		.loc 1 603 5 is_stmt 0 view .LVU618
 2364 001a F0B9     		cbnz	r0, .L176
 609:Core/Src/main.c **** 
 2365              		.loc 1 609 3 is_stmt 1 view .LVU619
 2366 001c FFF7FEFF 		bl	SystemClock_Config
 2367              	.LVL140:
 612:Core/Src/main.c ****   MX_DMA_Init();
 2368              		.loc 1 612 3 view .LVU620
 2369 0020 FFF7FEFF 		bl	MX_GPIO_Init
 2370              	.LVL141:
 613:Core/Src/main.c ****   MX_USART2_UART_Init();
 2371              		.loc 1 613 3 view .LVU621
 2372 0024 FFF7FEFF 		bl	MX_DMA_Init
 2373              	.LVL142:
 614:Core/Src/main.c ****   MX_ADC1_Init();
 2374              		.loc 1 614 3 view .LVU622
 2375 0028 FFF7FEFF 		bl	MX_USART2_UART_Init
 2376              	.LVL143:
 615:Core/Src/main.c ****   MX_TIM3_Init();
 2377              		.loc 1 615 3 view .LVU623
 2378 002c FFF7FEFF 		bl	MX_ADC1_Init
 2379              	.LVL144:
 616:Core/Src/main.c ****   MX_TIM4_Init();
 2380              		.loc 1 616 3 view .LVU624
 2381 0030 FFF7FEFF 		bl	MX_TIM3_Init
 2382              	.LVL145:
 617:Core/Src/main.c **** 
 2383              		.loc 1 617 3 view .LVU625
 2384 0034 FFF7FEFF 		bl	MX_TIM4_Init
 2385              	.LVL146:
 620:Core/Src/main.c ****   if(halStatus != HAL_OK){
 2386              		.loc 1 620 3 view .LVU626
 620:Core/Src/main.c ****   if(halStatus != HAL_OK){
 2387              		.loc 1 620 15 is_stmt 0 view .LVU627
 2388 0038 4FF49672 		mov	r2, #300
 2389 003c 0D49     		ldr	r1, .L178+8
 2390 003e 0E48     		ldr	r0, .L178+12
ARM GAS  /tmp/ccACqZav.s 			page 106


 2391 0040 FFF7FEFF 		bl	HAL_ADC_Start_DMA
 2392              	.LVL147:
 620:Core/Src/main.c ****   if(halStatus != HAL_OK){
 2393              		.loc 1 620 13 discriminator 1 view .LVU628
 2394 0044 0A4B     		ldr	r3, .L178+4
 2395 0046 1870     		strb	r0, [r3]
 621:Core/Src/main.c ****     next_state  = STATE_ERROR;
 2396              		.loc 1 621 3 is_stmt 1 view .LVU629
 621:Core/Src/main.c ****     next_state  = STATE_ERROR;
 2397              		.loc 1 621 5 is_stmt 0 view .LVU630
 2398 0048 58B9     		cbnz	r0, .L177
 633:Core/Src/main.c ****   next_state = STATE_WAIT_REQUEST;
 2399              		.loc 1 633 3 is_stmt 1 view .LVU631
 633:Core/Src/main.c ****   next_state = STATE_WAIT_REQUEST;
 2400              		.loc 1 633 15 is_stmt 0 view .LVU632
 2401 004a FFF7FEFF 		bl	HAL_GetTick
 2402              	.LVL148:
 633:Core/Src/main.c ****   next_state = STATE_WAIT_REQUEST;
 2403              		.loc 1 633 13 discriminator 1 view .LVU633
 2404 004e 0B4B     		ldr	r3, .L178+16
 2405 0050 1860     		str	r0, [r3]
 634:Core/Src/main.c ****   return next_state;
 2406              		.loc 1 634 3 is_stmt 1 view .LVU634
 634:Core/Src/main.c ****   return next_state;
 2407              		.loc 1 634 14 is_stmt 0 view .LVU635
 2408 0052 0120     		movs	r0, #1
 2409 0054 054B     		ldr	r3, .L178
 2410 0056 1870     		strb	r0, [r3]
 635:Core/Src/main.c **** }
 2411              		.loc 1 635 3 is_stmt 1 view .LVU636
 2412              	.L173:
 636:Core/Src/main.c **** 
 2413              		.loc 1 636 1 is_stmt 0 view .LVU637
 2414 0058 08BD     		pop	{r3, pc}
 2415              	.L176:
 604:Core/Src/main.c ****     return next_state;
 2416              		.loc 1 604 5 is_stmt 1 view .LVU638
 604:Core/Src/main.c ****     return next_state;
 2417              		.loc 1 604 17 is_stmt 0 view .LVU639
 2418 005a 0220     		movs	r0, #2
 2419 005c 034B     		ldr	r3, .L178
 2420 005e 1870     		strb	r0, [r3]
 605:Core/Src/main.c ****   }
 2421              		.loc 1 605 5 is_stmt 1 view .LVU640
 605:Core/Src/main.c ****   }
 2422              		.loc 1 605 12 is_stmt 0 view .LVU641
 2423 0060 FAE7     		b	.L173
 2424              	.L177:
 622:Core/Src/main.c ****     return next_state;
 2425              		.loc 1 622 5 is_stmt 1 view .LVU642
 622:Core/Src/main.c ****     return next_state;
 2426              		.loc 1 622 17 is_stmt 0 view .LVU643
 2427 0062 0220     		movs	r0, #2
 2428 0064 014B     		ldr	r3, .L178
 2429 0066 1870     		strb	r0, [r3]
 623:Core/Src/main.c ****   }
 2430              		.loc 1 623 5 is_stmt 1 view .LVU644
ARM GAS  /tmp/ccACqZav.s 			page 107


 623:Core/Src/main.c ****   }
 2431              		.loc 1 623 12 is_stmt 0 view .LVU645
 2432 0068 F6E7     		b	.L173
 2433              	.L179:
 2434 006a 00BF     		.align	2
 2435              	.L178:
 2436 006c 00000000 		.word	next_state
 2437 0070 00000000 		.word	halStatus
 2438 0074 00000000 		.word	adcBuffer
 2439 0078 00000000 		.word	hadc1
 2440 007c 00000000 		.word	lastTimer
 2441              		.cfi_endproc
 2442              	.LFE235:
 2444              		.global	is_running_error_timer
 2445              		.section	.bss.is_running_error_timer,"aw",%nobits
 2448              	is_running_error_timer:
 2449 0000 00       		.space	1
 2450              		.global	next_state
 2451              		.section	.data.next_state,"aw"
 2454              	next_state:
 2455 0000 01       		.byte	1
 2456              		.global	current_state
 2457              		.section	.bss.current_state,"aw",%nobits
 2460              	current_state:
 2461 0000 00       		.space	1
 2462              		.global	halStatus
 2463              		.section	.bss.halStatus,"aw",%nobits
 2466              	halStatus:
 2467 0000 00       		.space	1
 2468              		.global	state_table
 2469              		.section	.rodata.state_table,"a"
 2470              		.align	2
 2473              	state_table:
 2474 0000 00000000 		.word	do_init
 2475 0004 00000000 		.word	do_wait_request
 2476 0008 00000000 		.word	do_error
 2477 000c 00000000 		.word	do_listening
 2478 0010 00000000 		.word	do_warning
 2479 0014 00000000 		.word	do_pause
 2480              		.global	state_names
 2481              		.section	.rodata.str1.4,"aMS",%progbits,1
 2482              		.align	2
 2483              	.LC12:
 2484 0000 696E6974 		.ascii	"init\000"
 2484      00
 2485 0005 000000   		.align	2
 2486              	.LC13:
 2487 0008 77616974 		.ascii	"wait_request\000"
 2487      5F726571 
 2487      75657374 
 2487      00
 2488 0015 000000   		.align	2
 2489              	.LC14:
 2490 0018 6572726F 		.ascii	"error\000"
 2490      7200
 2491 001e 0000     		.align	2
 2492              	.LC15:
ARM GAS  /tmp/ccACqZav.s 			page 108


 2493 0020 6C697374 		.ascii	"listening\000"
 2493      656E696E 
 2493      6700
 2494 002a 0000     		.align	2
 2495              	.LC16:
 2496 002c 7761726E 		.ascii	"warning\000"
 2496      696E6700 
 2497              		.align	2
 2498              	.LC17:
 2499 0034 70617573 		.ascii	"pause\000"
 2499      6500
 2500              		.section	.data.state_names,"aw"
 2501              		.align	2
 2504              	state_names:
 2505 0000 00000000 		.word	.LC12
 2506 0004 08000000 		.word	.LC13
 2507 0008 18000000 		.word	.LC14
 2508 000c 20000000 		.word	.LC15
 2509 0010 2C000000 		.word	.LC16
 2510 0014 34000000 		.word	.LC17
 2511              		.global	msg_buffer
 2512              		.section	.bss.msg_buffer,"aw",%nobits
 2513              		.align	2
 2516              	msg_buffer:
 2517 0000 00000000 		.space	70
 2517      00000000 
 2517      00000000 
 2517      00000000 
 2517      00000000 
 2518              		.global	is_request_sended
 2519              		.section	.bss.is_request_sended,"aw",%nobits
 2522              	is_request_sended:
 2523 0000 00       		.space	1
 2524              		.global	cli_command
 2525              		.section	.bss.cli_command,"aw",%nobits
 2526              		.align	2
 2529              	cli_command:
 2530 0000 00000000 		.space	15
 2530      00000000 
 2530      00000000 
 2530      000000
 2531              		.global	currentFilterMode
 2532              		.section	.bss.currentFilterMode,"aw",%nobits
 2535              	currentFilterMode:
 2536 0000 00       		.space	1
 2537              		.global	lastButtonPress
 2538              		.section	.bss.lastButtonPress,"aw",%nobits
 2539              		.align	2
 2542              	lastButtonPress:
 2543 0000 00000000 		.space	4
 2544              		.global	lastTimer
 2545              		.section	.bss.lastTimer,"aw",%nobits
 2546              		.align	2
 2549              	lastTimer:
 2550 0000 00000000 		.space	4
 2551              		.global	sum
 2552              		.section	.bss.sum,"aw",%nobits
ARM GAS  /tmp/ccACqZav.s 			page 109


 2553              		.align	2
 2556              	sum:
 2557 0000 00000000 		.space	4
 2558              		.global	buffer_index
 2559              		.section	.bss.buffer_index,"aw",%nobits
 2560              		.align	1
 2563              	buffer_index:
 2564 0000 0000     		.space	2
 2565              		.global	adc_moving_average
 2566              		.section	.bss.adc_moving_average,"aw",%nobits
 2567              		.align	2
 2570              	adc_moving_average:
 2571 0000 00000000 		.space	300
 2571      00000000 
 2571      00000000 
 2571      00000000 
 2571      00000000 
 2572              		.global	adcBuffer
 2573              		.section	.bss.adcBuffer,"aw",%nobits
 2574              		.align	2
 2577              	adcBuffer:
 2578 0000 00000000 		.space	1200
 2578      00000000 
 2578      00000000 
 2578      00000000 
 2578      00000000 
 2579              		.global	last_index
 2580              		.section	.bss.last_index,"aw",%nobits
 2581              		.align	1
 2584              	last_index:
 2585 0000 0000     		.space	2
 2586              		.global	lastDigitalValue
 2587              		.section	.bss.lastDigitalValue,"aw",%nobits
 2588              		.align	1
 2591              	lastDigitalValue:
 2592 0000 0000     		.space	2
 2593              		.global	lastAnalogValue
 2594              		.section	.bss.lastAnalogValue,"aw",%nobits
 2595              		.align	1
 2598              	lastAnalogValue:
 2599 0000 0000     		.space	2
 2600              		.global	huart2
 2601              		.section	.bss.huart2,"aw",%nobits
 2602              		.align	2
 2605              	huart2:
 2606 0000 00000000 		.space	72
 2606      00000000 
 2606      00000000 
 2606      00000000 
 2606      00000000 
 2607              		.global	htim4
 2608              		.section	.bss.htim4,"aw",%nobits
 2609              		.align	2
 2612              	htim4:
 2613 0000 00000000 		.space	72
 2613      00000000 
 2613      00000000 
ARM GAS  /tmp/ccACqZav.s 			page 110


 2613      00000000 
 2613      00000000 
 2614              		.global	htim3
 2615              		.section	.bss.htim3,"aw",%nobits
 2616              		.align	2
 2619              	htim3:
 2620 0000 00000000 		.space	72
 2620      00000000 
 2620      00000000 
 2620      00000000 
 2620      00000000 
 2621              		.global	hdma_adc1
 2622              		.section	.bss.hdma_adc1,"aw",%nobits
 2623              		.align	2
 2626              	hdma_adc1:
 2627 0000 00000000 		.space	96
 2627      00000000 
 2627      00000000 
 2627      00000000 
 2627      00000000 
 2628              		.global	hadc1
 2629              		.section	.bss.hadc1,"aw",%nobits
 2630              		.align	2
 2633              	hadc1:
 2634 0000 00000000 		.space	72
 2634      00000000 
 2634      00000000 
 2634      00000000 
 2634      00000000 
 2635              		.text
 2636              	.Letext0:
 2637              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f411xe.h"
 2638              		.file 5 "/home/dorijan/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/arm-n
 2639              		.file 6 "/home/dorijan/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/arm-n
 2640              		.file 7 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 2641              		.file 8 "/home/dorijan/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/arm-n
 2642              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 2643              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 2644              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 2645              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 2646              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 2647              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_adc.h"
 2648              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 2649              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 2650              		.file 17 "Core/Src/scheme.h"
 2651              		.file 18 "/home/dorijan/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/arm-
 2652              		.file 19 "/home/dorijan/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/arm-
 2653              		.file 20 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim_ex.h"
 2654              		.file 21 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 2655              		.file 22 "/home/dorijan/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/arm-
 2656              		.file 23 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 2657              		.file 24 "/home/dorijan/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/arm-
 2658              		.file 25 "/home/dorijan/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/arm-
 2659              		.file 26 "/home/dorijan/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/arm-
 2660              		.file 27 "<built-in>"
ARM GAS  /tmp/ccACqZav.s 			page 111


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
     /tmp/ccACqZav.s:21     .text.__NVIC_SystemReset:00000000 $t
     /tmp/ccACqZav.s:26     .text.__NVIC_SystemReset:00000000 __NVIC_SystemReset
     /tmp/ccACqZav.s:89     .text.__NVIC_SystemReset:0000001c $d
     /tmp/ccACqZav.s:95     .rodata.do_error.str1.4:00000000 $d
     /tmp/ccACqZav.s:99     .text.do_error:00000000 $t
     /tmp/ccACqZav.s:105    .text.do_error:00000000 do_error
     /tmp/ccACqZav.s:195    .text.do_error:00000058 $d
     /tmp/ccACqZav.s:2454   .data.next_state:00000000 next_state
     /tmp/ccACqZav.s:2448   .bss.is_running_error_timer:00000000 is_running_error_timer
     /tmp/ccACqZav.s:2522   .bss.is_request_sended:00000000 is_request_sended
     /tmp/ccACqZav.s:2516   .bss.msg_buffer:00000000 msg_buffer
     /tmp/ccACqZav.s:2605   .bss.huart2:00000000 huart2
     /tmp/ccACqZav.s:2466   .bss.halStatus:00000000 halStatus
     /tmp/ccACqZav.s:2612   .bss.htim4:00000000 htim4
     /tmp/ccACqZav.s:208    .rodata.do_warning.str1.4:00000000 $d
     /tmp/ccACqZav.s:212    .text.do_warning:00000000 $t
     /tmp/ccACqZav.s:218    .text.do_warning:00000000 do_warning
     /tmp/ccACqZav.s:287    .text.do_warning:00000048 $d
     /tmp/ccACqZav.s:297    .rodata.do_wait_request.str1.4:00000000 $d
     /tmp/ccACqZav.s:301    .text.do_wait_request:00000000 $t
     /tmp/ccACqZav.s:307    .text.do_wait_request:00000000 do_wait_request
     /tmp/ccACqZav.s:399    .text.do_wait_request:0000005c $d
     /tmp/ccACqZav.s:2529   .bss.cli_command:00000000 cli_command
     /tmp/ccACqZav.s:410    .text.do_pause:00000000 $t
     /tmp/ccACqZav.s:416    .text.do_pause:00000000 do_pause
     /tmp/ccACqZav.s:508    .text.do_pause:0000005c $d
     /tmp/ccACqZav.s:519    .text.MX_GPIO_Init:00000000 $t
     /tmp/ccACqZav.s:524    .text.MX_GPIO_Init:00000000 MX_GPIO_Init
     /tmp/ccACqZav.s:698    .text.MX_GPIO_Init:000000d4 $d
     /tmp/ccACqZav.s:705    .text.MX_DMA_Init:00000000 $t
     /tmp/ccACqZav.s:710    .text.MX_DMA_Init:00000000 MX_DMA_Init
     /tmp/ccACqZav.s:756    .text.MX_DMA_Init:00000030 $d
     /tmp/ccACqZav.s:761    .rodata.do_listening.str1.4:00000000 $d
     /tmp/ccACqZav.s:775    .text.do_listening:00000000 $t
     /tmp/ccACqZav.s:781    .text.do_listening:00000000 do_listening
     /tmp/ccACqZav.s:1052   .text.do_listening:00000164 $d
     /tmp/ccACqZav.s:2626   .bss.hdma_adc1:00000000 hdma_adc1
     /tmp/ccACqZav.s:2584   .bss.last_index:00000000 last_index
     /tmp/ccACqZav.s:2577   .bss.adcBuffer:00000000 adcBuffer
     /tmp/ccACqZav.s:2598   .bss.lastAnalogValue:00000000 lastAnalogValue
     /tmp/ccACqZav.s:2535   .bss.currentFilterMode:00000000 currentFilterMode
     /tmp/ccACqZav.s:2591   .bss.lastDigitalValue:00000000 lastDigitalValue
     /tmp/ccACqZav.s:2549   .bss.lastTimer:00000000 lastTimer
     /tmp/ccACqZav.s:2563   .bss.buffer_index:00000000 buffer_index
     /tmp/ccACqZav.s:2570   .bss.adc_moving_average:00000000 adc_moving_average
     /tmp/ccACqZav.s:2556   .bss.sum:00000000 sum
     /tmp/ccACqZav.s:1077   .text.HAL_TIM_PeriodElapsedCallback:00000000 $t
     /tmp/ccACqZav.s:1083   .text.HAL_TIM_PeriodElapsedCallback:00000000 HAL_TIM_PeriodElapsedCallback
     /tmp/ccACqZav.s:1135   .text.HAL_TIM_PeriodElapsedCallback:00000028 $d
     /tmp/ccACqZav.s:1142   .text.HAL_GPIO_EXTI_Callback:00000000 $t
     /tmp/ccACqZav.s:1148   .text.HAL_GPIO_EXTI_Callback:00000000 HAL_GPIO_EXTI_Callback
     /tmp/ccACqZav.s:1218   .text.HAL_GPIO_EXTI_Callback:0000003e $d
     /tmp/ccACqZav.s:1333   .text.HAL_GPIO_EXTI_Callback:000000c0 $d
     /tmp/ccACqZav.s:2542   .bss.lastButtonPress:00000000 lastButtonPress
     /tmp/ccACqZav.s:2460   .bss.current_state:00000000 current_state
ARM GAS  /tmp/ccACqZav.s 			page 112


     /tmp/ccACqZav.s:2619   .bss.htim3:00000000 htim3
     /tmp/ccACqZav.s:1350   .rodata.handle_cli_command.str1.4:00000000 $d
     /tmp/ccACqZav.s:1360   .text.handle_cli_command:00000000 $t
     /tmp/ccACqZav.s:1366   .text.handle_cli_command:00000000 handle_cli_command
     /tmp/ccACqZav.s:1446   .text.handle_cli_command:00000058 $d
     /tmp/ccACqZav.s:1455   .rodata.HAL_UARTEx_RxEventCallback.str1.4:00000000 $d
     /tmp/ccACqZav.s:1463   .text.HAL_UARTEx_RxEventCallback:00000000 $t
     /tmp/ccACqZav.s:1469   .text.HAL_UARTEx_RxEventCallback:00000000 HAL_UARTEx_RxEventCallback
     /tmp/ccACqZav.s:1599   .text.HAL_UARTEx_RxEventCallback:0000009c $d
     /tmp/ccACqZav.s:1611   .text.run_state:00000000 $t
     /tmp/ccACqZav.s:1617   .text.run_state:00000000 run_state
     /tmp/ccACqZav.s:1657   .text.run_state:0000001c $d
     /tmp/ccACqZav.s:2473   .rodata.state_table:00000000 state_table
     /tmp/ccACqZav.s:1663   .text.main:00000000 $t
     /tmp/ccACqZav.s:1669   .text.main:00000000 main
     /tmp/ccACqZav.s:1695   .text.main:00000010 $d
     /tmp/ccACqZav.s:1700   .text.Error_Handler:00000000 $t
     /tmp/ccACqZav.s:1706   .text.Error_Handler:00000000 Error_Handler
     /tmp/ccACqZav.s:1734   .text.Error_Handler:00000018 $d
     /tmp/ccACqZav.s:1741   .text.SystemClock_Config:00000000 $t
     /tmp/ccACqZav.s:1747   .text.SystemClock_Config:00000000 SystemClock_Config
     /tmp/ccACqZav.s:1895   .text.SystemClock_Config:0000009c $d
     /tmp/ccACqZav.s:1901   .text.MX_USART2_UART_Init:00000000 $t
     /tmp/ccACqZav.s:1906   .text.MX_USART2_UART_Init:00000000 MX_USART2_UART_Init
     /tmp/ccACqZav.s:1963   .text.MX_USART2_UART_Init:0000002c $d
     /tmp/ccACqZav.s:1969   .text.MX_ADC1_Init:00000000 $t
     /tmp/ccACqZav.s:1974   .text.MX_ADC1_Init:00000000 MX_ADC1_Init
     /tmp/ccACqZav.s:2081   .text.MX_ADC1_Init:00000064 $d
     /tmp/ccACqZav.s:2633   .bss.hadc1:00000000 hadc1
     /tmp/ccACqZav.s:2088   .text.MX_TIM3_Init:00000000 $t
     /tmp/ccACqZav.s:2093   .text.MX_TIM3_Init:00000000 MX_TIM3_Init
     /tmp/ccACqZav.s:2199   .text.MX_TIM3_Init:00000068 $d
     /tmp/ccACqZav.s:2205   .text.MX_TIM4_Init:00000000 $t
     /tmp/ccACqZav.s:2210   .text.MX_TIM4_Init:00000000 MX_TIM4_Init
     /tmp/ccACqZav.s:2316   .text.MX_TIM4_Init:00000068 $d
     /tmp/ccACqZav.s:2322   .text.do_init:00000000 $t
     /tmp/ccACqZav.s:2328   .text.do_init:00000000 do_init
     /tmp/ccACqZav.s:2436   .text.do_init:0000006c $d
     /tmp/ccACqZav.s:2449   .bss.is_running_error_timer:00000000 $d
     /tmp/ccACqZav.s:2461   .bss.current_state:00000000 $d
     /tmp/ccACqZav.s:2467   .bss.halStatus:00000000 $d
     /tmp/ccACqZav.s:2470   .rodata.state_table:00000000 $d
     /tmp/ccACqZav.s:2504   .data.state_names:00000000 state_names
     /tmp/ccACqZav.s:2482   .rodata.str1.4:00000000 $d
     /tmp/ccACqZav.s:2501   .data.state_names:00000000 $d
     /tmp/ccACqZav.s:2513   .bss.msg_buffer:00000000 $d
     /tmp/ccACqZav.s:2523   .bss.is_request_sended:00000000 $d
     /tmp/ccACqZav.s:2526   .bss.cli_command:00000000 $d
     /tmp/ccACqZav.s:2536   .bss.currentFilterMode:00000000 $d
     /tmp/ccACqZav.s:2539   .bss.lastButtonPress:00000000 $d
     /tmp/ccACqZav.s:2546   .bss.lastTimer:00000000 $d
     /tmp/ccACqZav.s:2553   .bss.sum:00000000 $d
     /tmp/ccACqZav.s:2560   .bss.buffer_index:00000000 $d
     /tmp/ccACqZav.s:2567   .bss.adc_moving_average:00000000 $d
     /tmp/ccACqZav.s:2574   .bss.adcBuffer:00000000 $d
     /tmp/ccACqZav.s:2581   .bss.last_index:00000000 $d
     /tmp/ccACqZav.s:2588   .bss.lastDigitalValue:00000000 $d
ARM GAS  /tmp/ccACqZav.s 			page 113


     /tmp/ccACqZav.s:2595   .bss.lastAnalogValue:00000000 $d
     /tmp/ccACqZav.s:2602   .bss.huart2:00000000 $d
     /tmp/ccACqZav.s:2609   .bss.htim4:00000000 $d
     /tmp/ccACqZav.s:2616   .bss.htim3:00000000 $d
     /tmp/ccACqZav.s:2623   .bss.hdma_adc1:00000000 $d
     /tmp/ccACqZav.s:2630   .bss.hadc1:00000000 $d
     /tmp/ccACqZav.s:1223   .text.HAL_GPIO_EXTI_Callback:00000043 $d
     /tmp/ccACqZav.s:1223   .text.HAL_GPIO_EXTI_Callback:00000044 $t

UNDEFINED SYMBOLS
sprintf
strlen
HAL_UART_Transmit
HAL_TIM_Base_Start_IT
HAL_UART_AbortReceive_IT
HAL_GPIO_WritePin
HAL_UARTEx_ReceiveToIdle_IT
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
__aeabi_f2d
HAL_GetTick
rand
HAL_GPIO_TogglePin
HAL_GPIO_ReadPin
HAL_TIM_Base_Stop_IT
strcmp
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_UART_Init
HAL_ADC_Init
HAL_ADC_ConfigChannel
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIMEx_MasterConfigSynchronization
time
srand
HAL_Init
HAL_ADC_Start_DMA
