ARM GAS  /tmp/ccDHp4gG.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/main.c"
  20              		.section	.text.__NVIC_SystemReset,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	__NVIC_SystemReset:
  27              	.LFB121:
  28              		.file 2 "Drivers/CMSIS/Include/core_cm4.h"
   1:Drivers/CMSIS/Include/core_cm4.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/core_cm4.h ****  * @file     core_cm4.h
   3:Drivers/CMSIS/Include/core_cm4.h ****  * @brief    CMSIS Cortex-M4 Core Peripheral Access Layer Header File
   4:Drivers/CMSIS/Include/core_cm4.h ****  * @version  V5.1.2
   5:Drivers/CMSIS/Include/core_cm4.h ****  * @date     04. June 2021
   6:Drivers/CMSIS/Include/core_cm4.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/core_cm4.h **** /*
   8:Drivers/CMSIS/Include/core_cm4.h ****  * Copyright (c) 2009-2020 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/core_cm4.h ****  *
  10:Drivers/CMSIS/Include/core_cm4.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/core_cm4.h ****  *
  12:Drivers/CMSIS/Include/core_cm4.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/core_cm4.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/core_cm4.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/core_cm4.h ****  *
  16:Drivers/CMSIS/Include/core_cm4.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/core_cm4.h ****  *
  18:Drivers/CMSIS/Include/core_cm4.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/core_cm4.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/core_cm4.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/core_cm4.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/core_cm4.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/core_cm4.h ****  */
  24:Drivers/CMSIS/Include/core_cm4.h **** 
  25:Drivers/CMSIS/Include/core_cm4.h **** #if   defined ( __ICCARM__ )
  26:Drivers/CMSIS/Include/core_cm4.h ****   #pragma system_include         /* treat file as system include file for MISRA check */
  27:Drivers/CMSIS/Include/core_cm4.h **** #elif defined (__clang__)
  28:Drivers/CMSIS/Include/core_cm4.h ****   #pragma clang system_header   /* treat file as system include file */
  29:Drivers/CMSIS/Include/core_cm4.h **** #endif
  30:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/ccDHp4gG.s 			page 2


  31:Drivers/CMSIS/Include/core_cm4.h **** #ifndef __CORE_CM4_H_GENERIC
  32:Drivers/CMSIS/Include/core_cm4.h **** #define __CORE_CM4_H_GENERIC
  33:Drivers/CMSIS/Include/core_cm4.h **** 
  34:Drivers/CMSIS/Include/core_cm4.h **** #include <stdint.h>
  35:Drivers/CMSIS/Include/core_cm4.h **** 
  36:Drivers/CMSIS/Include/core_cm4.h **** #ifdef __cplusplus
  37:Drivers/CMSIS/Include/core_cm4.h ****  extern "C" {
  38:Drivers/CMSIS/Include/core_cm4.h **** #endif
  39:Drivers/CMSIS/Include/core_cm4.h **** 
  40:Drivers/CMSIS/Include/core_cm4.h **** /**
  41:Drivers/CMSIS/Include/core_cm4.h ****   \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  42:Drivers/CMSIS/Include/core_cm4.h ****   CMSIS violates the following MISRA-C:2004 rules:
  43:Drivers/CMSIS/Include/core_cm4.h **** 
  44:Drivers/CMSIS/Include/core_cm4.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  45:Drivers/CMSIS/Include/core_cm4.h ****      Function definitions in header files are used to allow 'inlining'.
  46:Drivers/CMSIS/Include/core_cm4.h **** 
  47:Drivers/CMSIS/Include/core_cm4.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  48:Drivers/CMSIS/Include/core_cm4.h ****      Unions are used for effective representation of core registers.
  49:Drivers/CMSIS/Include/core_cm4.h **** 
  50:Drivers/CMSIS/Include/core_cm4.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  51:Drivers/CMSIS/Include/core_cm4.h ****      Function-like macros are used to allow more efficient code.
  52:Drivers/CMSIS/Include/core_cm4.h ****  */
  53:Drivers/CMSIS/Include/core_cm4.h **** 
  54:Drivers/CMSIS/Include/core_cm4.h **** 
  55:Drivers/CMSIS/Include/core_cm4.h **** /*******************************************************************************
  56:Drivers/CMSIS/Include/core_cm4.h ****  *                 CMSIS definitions
  57:Drivers/CMSIS/Include/core_cm4.h ****  ******************************************************************************/
  58:Drivers/CMSIS/Include/core_cm4.h **** /**
  59:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup Cortex_M4
  60:Drivers/CMSIS/Include/core_cm4.h ****   @{
  61:Drivers/CMSIS/Include/core_cm4.h ****  */
  62:Drivers/CMSIS/Include/core_cm4.h **** 
  63:Drivers/CMSIS/Include/core_cm4.h **** #include "cmsis_version.h"
  64:Drivers/CMSIS/Include/core_cm4.h **** 
  65:Drivers/CMSIS/Include/core_cm4.h **** /* CMSIS CM4 definitions */
  66:Drivers/CMSIS/Include/core_cm4.h **** #define __CM4_CMSIS_VERSION_MAIN  (__CM_CMSIS_VERSION_MAIN)              /*!< \deprecated [31:16] C
  67:Drivers/CMSIS/Include/core_cm4.h **** #define __CM4_CMSIS_VERSION_SUB   (__CM_CMSIS_VERSION_SUB)               /*!< \deprecated [15:0]  C
  68:Drivers/CMSIS/Include/core_cm4.h **** #define __CM4_CMSIS_VERSION       ((__CM4_CMSIS_VERSION_MAIN << 16U) | \
  69:Drivers/CMSIS/Include/core_cm4.h ****                                     __CM4_CMSIS_VERSION_SUB           )  /*!< \deprecated CMSIS HAL
  70:Drivers/CMSIS/Include/core_cm4.h **** 
  71:Drivers/CMSIS/Include/core_cm4.h **** #define __CORTEX_M                (4U)                                   /*!< Cortex-M Core */
  72:Drivers/CMSIS/Include/core_cm4.h **** 
  73:Drivers/CMSIS/Include/core_cm4.h **** /** __FPU_USED indicates whether an FPU is used or not.
  74:Drivers/CMSIS/Include/core_cm4.h ****     For this, __FPU_PRESENT has to be checked prior to making use of FPU specific registers and fun
  75:Drivers/CMSIS/Include/core_cm4.h **** */
  76:Drivers/CMSIS/Include/core_cm4.h **** #if defined ( __CC_ARM )
  77:Drivers/CMSIS/Include/core_cm4.h ****   #if defined __TARGET_FPU_VFP
  78:Drivers/CMSIS/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
  79:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
  80:Drivers/CMSIS/Include/core_cm4.h ****     #else
  81:Drivers/CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
  82:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
  83:Drivers/CMSIS/Include/core_cm4.h ****     #endif
  84:Drivers/CMSIS/Include/core_cm4.h ****   #else
  85:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
  86:Drivers/CMSIS/Include/core_cm4.h ****   #endif
  87:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/ccDHp4gG.s 			page 3


  88:Drivers/CMSIS/Include/core_cm4.h **** #elif defined (__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  89:Drivers/CMSIS/Include/core_cm4.h ****   #if defined __ARM_FP
  90:Drivers/CMSIS/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
  91:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
  92:Drivers/CMSIS/Include/core_cm4.h ****     #else
  93:Drivers/CMSIS/Include/core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
  94:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
  95:Drivers/CMSIS/Include/core_cm4.h ****     #endif
  96:Drivers/CMSIS/Include/core_cm4.h ****   #else
  97:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
  98:Drivers/CMSIS/Include/core_cm4.h ****   #endif
  99:Drivers/CMSIS/Include/core_cm4.h **** 
 100:Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __GNUC__ )
 101:Drivers/CMSIS/Include/core_cm4.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
 102:Drivers/CMSIS/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 103:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
 104:Drivers/CMSIS/Include/core_cm4.h ****     #else
 105:Drivers/CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 106:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
 107:Drivers/CMSIS/Include/core_cm4.h ****     #endif
 108:Drivers/CMSIS/Include/core_cm4.h ****   #else
 109:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
 110:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 111:Drivers/CMSIS/Include/core_cm4.h **** 
 112:Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __ICCARM__ )
 113:Drivers/CMSIS/Include/core_cm4.h ****   #if defined __ARMVFP__
 114:Drivers/CMSIS/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 115:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
 116:Drivers/CMSIS/Include/core_cm4.h ****     #else
 117:Drivers/CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 118:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
 119:Drivers/CMSIS/Include/core_cm4.h ****     #endif
 120:Drivers/CMSIS/Include/core_cm4.h ****   #else
 121:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
 122:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 123:Drivers/CMSIS/Include/core_cm4.h **** 
 124:Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __TI_ARM__ )
 125:Drivers/CMSIS/Include/core_cm4.h ****   #if defined __TI_VFP_SUPPORT__
 126:Drivers/CMSIS/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 127:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
 128:Drivers/CMSIS/Include/core_cm4.h ****     #else
 129:Drivers/CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 130:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
 131:Drivers/CMSIS/Include/core_cm4.h ****     #endif
 132:Drivers/CMSIS/Include/core_cm4.h ****   #else
 133:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
 134:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 135:Drivers/CMSIS/Include/core_cm4.h **** 
 136:Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __TASKING__ )
 137:Drivers/CMSIS/Include/core_cm4.h ****   #if defined __FPU_VFP__
 138:Drivers/CMSIS/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 139:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
 140:Drivers/CMSIS/Include/core_cm4.h ****     #else
 141:Drivers/CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 142:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
 143:Drivers/CMSIS/Include/core_cm4.h ****     #endif
 144:Drivers/CMSIS/Include/core_cm4.h ****   #else
ARM GAS  /tmp/ccDHp4gG.s 			page 4


 145:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
 146:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 147:Drivers/CMSIS/Include/core_cm4.h **** 
 148:Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __CSMC__ )
 149:Drivers/CMSIS/Include/core_cm4.h ****   #if ( __CSMC__ & 0x400U)
 150:Drivers/CMSIS/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 151:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
 152:Drivers/CMSIS/Include/core_cm4.h ****     #else
 153:Drivers/CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 154:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
 155:Drivers/CMSIS/Include/core_cm4.h ****     #endif
 156:Drivers/CMSIS/Include/core_cm4.h ****   #else
 157:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
 158:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 159:Drivers/CMSIS/Include/core_cm4.h **** 
 160:Drivers/CMSIS/Include/core_cm4.h **** #endif
 161:Drivers/CMSIS/Include/core_cm4.h **** 
 162:Drivers/CMSIS/Include/core_cm4.h **** #include "cmsis_compiler.h"               /* CMSIS compiler specific defines */
 163:Drivers/CMSIS/Include/core_cm4.h **** 
 164:Drivers/CMSIS/Include/core_cm4.h **** 
 165:Drivers/CMSIS/Include/core_cm4.h **** #ifdef __cplusplus
 166:Drivers/CMSIS/Include/core_cm4.h **** }
 167:Drivers/CMSIS/Include/core_cm4.h **** #endif
 168:Drivers/CMSIS/Include/core_cm4.h **** 
 169:Drivers/CMSIS/Include/core_cm4.h **** #endif /* __CORE_CM4_H_GENERIC */
 170:Drivers/CMSIS/Include/core_cm4.h **** 
 171:Drivers/CMSIS/Include/core_cm4.h **** #ifndef __CMSIS_GENERIC
 172:Drivers/CMSIS/Include/core_cm4.h **** 
 173:Drivers/CMSIS/Include/core_cm4.h **** #ifndef __CORE_CM4_H_DEPENDANT
 174:Drivers/CMSIS/Include/core_cm4.h **** #define __CORE_CM4_H_DEPENDANT
 175:Drivers/CMSIS/Include/core_cm4.h **** 
 176:Drivers/CMSIS/Include/core_cm4.h **** #ifdef __cplusplus
 177:Drivers/CMSIS/Include/core_cm4.h ****  extern "C" {
 178:Drivers/CMSIS/Include/core_cm4.h **** #endif
 179:Drivers/CMSIS/Include/core_cm4.h **** 
 180:Drivers/CMSIS/Include/core_cm4.h **** /* check device defines and use defaults */
 181:Drivers/CMSIS/Include/core_cm4.h **** #if defined __CHECK_DEVICE_DEFINES
 182:Drivers/CMSIS/Include/core_cm4.h ****   #ifndef __CM4_REV
 183:Drivers/CMSIS/Include/core_cm4.h ****     #define __CM4_REV               0x0000U
 184:Drivers/CMSIS/Include/core_cm4.h ****     #warning "__CM4_REV not defined in device header file; using default!"
 185:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 186:Drivers/CMSIS/Include/core_cm4.h **** 
 187:Drivers/CMSIS/Include/core_cm4.h ****   #ifndef __FPU_PRESENT
 188:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_PRESENT             0U
 189:Drivers/CMSIS/Include/core_cm4.h ****     #warning "__FPU_PRESENT not defined in device header file; using default!"
 190:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 191:Drivers/CMSIS/Include/core_cm4.h **** 
 192:Drivers/CMSIS/Include/core_cm4.h ****   #ifndef __MPU_PRESENT
 193:Drivers/CMSIS/Include/core_cm4.h ****     #define __MPU_PRESENT             0U
 194:Drivers/CMSIS/Include/core_cm4.h ****     #warning "__MPU_PRESENT not defined in device header file; using default!"
 195:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 196:Drivers/CMSIS/Include/core_cm4.h **** 
 197:Drivers/CMSIS/Include/core_cm4.h ****   #ifndef __VTOR_PRESENT
 198:Drivers/CMSIS/Include/core_cm4.h ****     #define __VTOR_PRESENT             1U
 199:Drivers/CMSIS/Include/core_cm4.h ****     #warning "__VTOR_PRESENT not defined in device header file; using default!"
 200:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 201:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/ccDHp4gG.s 			page 5


 202:Drivers/CMSIS/Include/core_cm4.h ****   #ifndef __NVIC_PRIO_BITS
 203:Drivers/CMSIS/Include/core_cm4.h ****     #define __NVIC_PRIO_BITS          3U
 204:Drivers/CMSIS/Include/core_cm4.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 205:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 206:Drivers/CMSIS/Include/core_cm4.h **** 
 207:Drivers/CMSIS/Include/core_cm4.h ****   #ifndef __Vendor_SysTickConfig
 208:Drivers/CMSIS/Include/core_cm4.h ****     #define __Vendor_SysTickConfig    0U
 209:Drivers/CMSIS/Include/core_cm4.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 210:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 211:Drivers/CMSIS/Include/core_cm4.h **** #endif
 212:Drivers/CMSIS/Include/core_cm4.h **** 
 213:Drivers/CMSIS/Include/core_cm4.h **** /* IO definitions (access restrictions to peripheral registers) */
 214:Drivers/CMSIS/Include/core_cm4.h **** /**
 215:Drivers/CMSIS/Include/core_cm4.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 216:Drivers/CMSIS/Include/core_cm4.h **** 
 217:Drivers/CMSIS/Include/core_cm4.h ****     <strong>IO Type Qualifiers</strong> are used
 218:Drivers/CMSIS/Include/core_cm4.h ****     \li to specify the access to peripheral variables.
 219:Drivers/CMSIS/Include/core_cm4.h ****     \li for automatic generation of peripheral register debug information.
 220:Drivers/CMSIS/Include/core_cm4.h **** */
 221:Drivers/CMSIS/Include/core_cm4.h **** #ifdef __cplusplus
 222:Drivers/CMSIS/Include/core_cm4.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions */
 223:Drivers/CMSIS/Include/core_cm4.h **** #else
 224:Drivers/CMSIS/Include/core_cm4.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions */
 225:Drivers/CMSIS/Include/core_cm4.h **** #endif
 226:Drivers/CMSIS/Include/core_cm4.h **** #define     __O     volatile             /*!< Defines 'write only' permissions */
 227:Drivers/CMSIS/Include/core_cm4.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions */
 228:Drivers/CMSIS/Include/core_cm4.h **** 
 229:Drivers/CMSIS/Include/core_cm4.h **** /* following defines should be used for structure members */
 230:Drivers/CMSIS/Include/core_cm4.h **** #define     __IM     volatile const      /*! Defines 'read only' structure member permissions */
 231:Drivers/CMSIS/Include/core_cm4.h **** #define     __OM     volatile            /*! Defines 'write only' structure member permissions */
 232:Drivers/CMSIS/Include/core_cm4.h **** #define     __IOM    volatile            /*! Defines 'read / write' structure member permissions */
 233:Drivers/CMSIS/Include/core_cm4.h **** 
 234:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group Cortex_M4 */
 235:Drivers/CMSIS/Include/core_cm4.h **** 
 236:Drivers/CMSIS/Include/core_cm4.h **** 
 237:Drivers/CMSIS/Include/core_cm4.h **** 
 238:Drivers/CMSIS/Include/core_cm4.h **** /*******************************************************************************
 239:Drivers/CMSIS/Include/core_cm4.h ****  *                 Register Abstraction
 240:Drivers/CMSIS/Include/core_cm4.h ****   Core Register contain:
 241:Drivers/CMSIS/Include/core_cm4.h ****   - Core Register
 242:Drivers/CMSIS/Include/core_cm4.h ****   - Core NVIC Register
 243:Drivers/CMSIS/Include/core_cm4.h ****   - Core SCB Register
 244:Drivers/CMSIS/Include/core_cm4.h ****   - Core SysTick Register
 245:Drivers/CMSIS/Include/core_cm4.h ****   - Core Debug Register
 246:Drivers/CMSIS/Include/core_cm4.h ****   - Core MPU Register
 247:Drivers/CMSIS/Include/core_cm4.h ****   - Core FPU Register
 248:Drivers/CMSIS/Include/core_cm4.h ****  ******************************************************************************/
 249:Drivers/CMSIS/Include/core_cm4.h **** /**
 250:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_core_register Defines and Type Definitions
 251:Drivers/CMSIS/Include/core_cm4.h ****   \brief Type definitions and defines for Cortex-M processor based devices.
 252:Drivers/CMSIS/Include/core_cm4.h **** */
 253:Drivers/CMSIS/Include/core_cm4.h **** 
 254:Drivers/CMSIS/Include/core_cm4.h **** /**
 255:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup    CMSIS_core_register
 256:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup   CMSIS_CORE  Status and Control Registers
 257:Drivers/CMSIS/Include/core_cm4.h ****   \brief      Core Register type definitions.
 258:Drivers/CMSIS/Include/core_cm4.h ****   @{
ARM GAS  /tmp/ccDHp4gG.s 			page 6


 259:Drivers/CMSIS/Include/core_cm4.h ****  */
 260:Drivers/CMSIS/Include/core_cm4.h **** 
 261:Drivers/CMSIS/Include/core_cm4.h **** /**
 262:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Union type to access the Application Program Status Register (APSR).
 263:Drivers/CMSIS/Include/core_cm4.h ****  */
 264:Drivers/CMSIS/Include/core_cm4.h **** typedef union
 265:Drivers/CMSIS/Include/core_cm4.h **** {
 266:Drivers/CMSIS/Include/core_cm4.h ****   struct
 267:Drivers/CMSIS/Include/core_cm4.h ****   {
 268:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved0:16;              /*!< bit:  0..15  Reserved */
 269:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 270:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved1:7;               /*!< bit: 20..26  Reserved */
 271:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 272:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 273:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 274:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 275:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 276:Drivers/CMSIS/Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 277:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 278:Drivers/CMSIS/Include/core_cm4.h **** } APSR_Type;
 279:Drivers/CMSIS/Include/core_cm4.h **** 
 280:Drivers/CMSIS/Include/core_cm4.h **** /* APSR Register Definitions */
 281:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_N_Pos                         31U                                            /*!< APSR
 282:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_N_Msk                         (1UL << APSR_N_Pos)                            /*!< APSR
 283:Drivers/CMSIS/Include/core_cm4.h **** 
 284:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_Z_Pos                         30U                                            /*!< APSR
 285:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_Z_Msk                         (1UL << APSR_Z_Pos)                            /*!< APSR
 286:Drivers/CMSIS/Include/core_cm4.h **** 
 287:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_C_Pos                         29U                                            /*!< APSR
 288:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_C_Msk                         (1UL << APSR_C_Pos)                            /*!< APSR
 289:Drivers/CMSIS/Include/core_cm4.h **** 
 290:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_V_Pos                         28U                                            /*!< APSR
 291:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_V_Msk                         (1UL << APSR_V_Pos)                            /*!< APSR
 292:Drivers/CMSIS/Include/core_cm4.h **** 
 293:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_Q_Pos                         27U                                            /*!< APSR
 294:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_Q_Msk                         (1UL << APSR_Q_Pos)                            /*!< APSR
 295:Drivers/CMSIS/Include/core_cm4.h **** 
 296:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_GE_Pos                        16U                                            /*!< APSR
 297:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_GE_Msk                        (0xFUL << APSR_GE_Pos)                         /*!< APSR
 298:Drivers/CMSIS/Include/core_cm4.h **** 
 299:Drivers/CMSIS/Include/core_cm4.h **** 
 300:Drivers/CMSIS/Include/core_cm4.h **** /**
 301:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Union type to access the Interrupt Program Status Register (IPSR).
 302:Drivers/CMSIS/Include/core_cm4.h ****  */
 303:Drivers/CMSIS/Include/core_cm4.h **** typedef union
 304:Drivers/CMSIS/Include/core_cm4.h **** {
 305:Drivers/CMSIS/Include/core_cm4.h ****   struct
 306:Drivers/CMSIS/Include/core_cm4.h ****   {
 307:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 308:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved */
 309:Drivers/CMSIS/Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 310:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 311:Drivers/CMSIS/Include/core_cm4.h **** } IPSR_Type;
 312:Drivers/CMSIS/Include/core_cm4.h **** 
 313:Drivers/CMSIS/Include/core_cm4.h **** /* IPSR Register Definitions */
 314:Drivers/CMSIS/Include/core_cm4.h **** #define IPSR_ISR_Pos                        0U                                            /*!< IPSR
 315:Drivers/CMSIS/Include/core_cm4.h **** #define IPSR_ISR_Msk                       (0x1FFUL /*<< IPSR_ISR_Pos*/)                  /*!< IPSR
ARM GAS  /tmp/ccDHp4gG.s 			page 7


 316:Drivers/CMSIS/Include/core_cm4.h **** 
 317:Drivers/CMSIS/Include/core_cm4.h **** 
 318:Drivers/CMSIS/Include/core_cm4.h **** /**
 319:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 320:Drivers/CMSIS/Include/core_cm4.h ****  */
 321:Drivers/CMSIS/Include/core_cm4.h **** typedef union
 322:Drivers/CMSIS/Include/core_cm4.h **** {
 323:Drivers/CMSIS/Include/core_cm4.h ****   struct
 324:Drivers/CMSIS/Include/core_cm4.h ****   {
 325:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 326:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved0:1;               /*!< bit:      9  Reserved */
 327:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t ICI_IT_1:6;                 /*!< bit: 10..15  ICI/IT part 1 */
 328:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 329:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved1:4;               /*!< bit: 20..23  Reserved */
 330:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit */
 331:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t ICI_IT_2:2;                 /*!< bit: 25..26  ICI/IT part 2 */
 332:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 333:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 334:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 335:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 336:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 337:Drivers/CMSIS/Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 338:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 339:Drivers/CMSIS/Include/core_cm4.h **** } xPSR_Type;
 340:Drivers/CMSIS/Include/core_cm4.h **** 
 341:Drivers/CMSIS/Include/core_cm4.h **** /* xPSR Register Definitions */
 342:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_N_Pos                         31U                                            /*!< xPSR
 343:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_N_Msk                         (1UL << xPSR_N_Pos)                            /*!< xPSR
 344:Drivers/CMSIS/Include/core_cm4.h **** 
 345:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_Z_Pos                         30U                                            /*!< xPSR
 346:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_Z_Msk                         (1UL << xPSR_Z_Pos)                            /*!< xPSR
 347:Drivers/CMSIS/Include/core_cm4.h **** 
 348:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_C_Pos                         29U                                            /*!< xPSR
 349:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_C_Msk                         (1UL << xPSR_C_Pos)                            /*!< xPSR
 350:Drivers/CMSIS/Include/core_cm4.h **** 
 351:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_V_Pos                         28U                                            /*!< xPSR
 352:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_V_Msk                         (1UL << xPSR_V_Pos)                            /*!< xPSR
 353:Drivers/CMSIS/Include/core_cm4.h **** 
 354:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_Q_Pos                         27U                                            /*!< xPSR
 355:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_Q_Msk                         (1UL << xPSR_Q_Pos)                            /*!< xPSR
 356:Drivers/CMSIS/Include/core_cm4.h **** 
 357:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_ICI_IT_2_Pos                  25U                                            /*!< xPSR
 358:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_ICI_IT_2_Msk                  (3UL << xPSR_ICI_IT_2_Pos)                     /*!< xPSR
 359:Drivers/CMSIS/Include/core_cm4.h **** 
 360:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_T_Pos                         24U                                            /*!< xPSR
 361:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_T_Msk                         (1UL << xPSR_T_Pos)                            /*!< xPSR
 362:Drivers/CMSIS/Include/core_cm4.h **** 
 363:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_GE_Pos                        16U                                            /*!< xPSR
 364:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_GE_Msk                        (0xFUL << xPSR_GE_Pos)                         /*!< xPSR
 365:Drivers/CMSIS/Include/core_cm4.h **** 
 366:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_ICI_IT_1_Pos                  10U                                            /*!< xPSR
 367:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_ICI_IT_1_Msk                  (0x3FUL << xPSR_ICI_IT_1_Pos)                  /*!< xPSR
 368:Drivers/CMSIS/Include/core_cm4.h **** 
 369:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_ISR_Pos                        0U                                            /*!< xPSR
 370:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_ISR_Msk                       (0x1FFUL /*<< xPSR_ISR_Pos*/)                  /*!< xPSR
 371:Drivers/CMSIS/Include/core_cm4.h **** 
 372:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/ccDHp4gG.s 			page 8


 373:Drivers/CMSIS/Include/core_cm4.h **** /**
 374:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Union type to access the Control Registers (CONTROL).
 375:Drivers/CMSIS/Include/core_cm4.h ****  */
 376:Drivers/CMSIS/Include/core_cm4.h **** typedef union
 377:Drivers/CMSIS/Include/core_cm4.h **** {
 378:Drivers/CMSIS/Include/core_cm4.h ****   struct
 379:Drivers/CMSIS/Include/core_cm4.h ****   {
 380:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t nPRIV:1;                    /*!< bit:      0  Execution privilege in Thread mode */
 381:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used */
 382:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t FPCA:1;                     /*!< bit:      2  FP extension active flag */
 383:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved0:29;              /*!< bit:  3..31  Reserved */
 384:Drivers/CMSIS/Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 385:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 386:Drivers/CMSIS/Include/core_cm4.h **** } CONTROL_Type;
 387:Drivers/CMSIS/Include/core_cm4.h **** 
 388:Drivers/CMSIS/Include/core_cm4.h **** /* CONTROL Register Definitions */
 389:Drivers/CMSIS/Include/core_cm4.h **** #define CONTROL_FPCA_Pos                    2U                                            /*!< CONT
 390:Drivers/CMSIS/Include/core_cm4.h **** #define CONTROL_FPCA_Msk                   (1UL << CONTROL_FPCA_Pos)                      /*!< CONT
 391:Drivers/CMSIS/Include/core_cm4.h **** 
 392:Drivers/CMSIS/Include/core_cm4.h **** #define CONTROL_SPSEL_Pos                   1U                                            /*!< CONT
 393:Drivers/CMSIS/Include/core_cm4.h **** #define CONTROL_SPSEL_Msk                  (1UL << CONTROL_SPSEL_Pos)                     /*!< CONT
 394:Drivers/CMSIS/Include/core_cm4.h **** 
 395:Drivers/CMSIS/Include/core_cm4.h **** #define CONTROL_nPRIV_Pos                   0U                                            /*!< CONT
 396:Drivers/CMSIS/Include/core_cm4.h **** #define CONTROL_nPRIV_Msk                  (1UL /*<< CONTROL_nPRIV_Pos*/)                 /*!< CONT
 397:Drivers/CMSIS/Include/core_cm4.h **** 
 398:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_CORE */
 399:Drivers/CMSIS/Include/core_cm4.h **** 
 400:Drivers/CMSIS/Include/core_cm4.h **** 
 401:Drivers/CMSIS/Include/core_cm4.h **** /**
 402:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup    CMSIS_core_register
 403:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 404:Drivers/CMSIS/Include/core_cm4.h ****   \brief      Type definitions for the NVIC Registers
 405:Drivers/CMSIS/Include/core_cm4.h ****   @{
 406:Drivers/CMSIS/Include/core_cm4.h ****  */
 407:Drivers/CMSIS/Include/core_cm4.h **** 
 408:Drivers/CMSIS/Include/core_cm4.h **** /**
 409:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 410:Drivers/CMSIS/Include/core_cm4.h ****  */
 411:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
 412:Drivers/CMSIS/Include/core_cm4.h **** {
 413:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ISER[8U];               /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register */
 414:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[24U];
 415:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ICER[8U];               /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 416:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED1[24U];
 417:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ISPR[8U];               /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register *
 418:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED2[24U];
 419:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ICPR[8U];               /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 420:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED3[24U];
 421:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t IABR[8U];               /*!< Offset: 0x200 (R/W)  Interrupt Active bit Register */
 422:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED4[56U];
 423:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint8_t  IP[240U];               /*!< Offset: 0x300 (R/W)  Interrupt Priority Register (8Bi
 424:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED5[644U];
 425:Drivers/CMSIS/Include/core_cm4.h ****   __OM  uint32_t STIR;                   /*!< Offset: 0xE00 ( /W)  Software Trigger Interrupt Regis
 426:Drivers/CMSIS/Include/core_cm4.h **** }  NVIC_Type;
 427:Drivers/CMSIS/Include/core_cm4.h **** 
 428:Drivers/CMSIS/Include/core_cm4.h **** /* Software Triggered Interrupt Register Definitions */
 429:Drivers/CMSIS/Include/core_cm4.h **** #define NVIC_STIR_INTID_Pos                 0U                                         /*!< STIR: I
ARM GAS  /tmp/ccDHp4gG.s 			page 9


 430:Drivers/CMSIS/Include/core_cm4.h **** #define NVIC_STIR_INTID_Msk                (0x1FFUL /*<< NVIC_STIR_INTID_Pos*/)        /*!< STIR: I
 431:Drivers/CMSIS/Include/core_cm4.h **** 
 432:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_NVIC */
 433:Drivers/CMSIS/Include/core_cm4.h **** 
 434:Drivers/CMSIS/Include/core_cm4.h **** 
 435:Drivers/CMSIS/Include/core_cm4.h **** /**
 436:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 437:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_SCB     System Control Block (SCB)
 438:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the System Control Block Registers
 439:Drivers/CMSIS/Include/core_cm4.h ****   @{
 440:Drivers/CMSIS/Include/core_cm4.h ****  */
 441:Drivers/CMSIS/Include/core_cm4.h **** 
 442:Drivers/CMSIS/Include/core_cm4.h **** /**
 443:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the System Control Block (SCB).
 444:Drivers/CMSIS/Include/core_cm4.h ****  */
 445:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
 446:Drivers/CMSIS/Include/core_cm4.h **** {
 447:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t CPUID;                  /*!< Offset: 0x000 (R/ )  CPUID Base Register */
 448:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ICSR;                   /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 449:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t VTOR;                   /*!< Offset: 0x008 (R/W)  Vector Table Offset Register */
 450:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t AIRCR;                  /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 451:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t SCR;                    /*!< Offset: 0x010 (R/W)  System Control Register */
 452:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CCR;                    /*!< Offset: 0x014 (R/W)  Configuration Control Register *
 453:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint8_t  SHP[12U];               /*!< Offset: 0x018 (R/W)  System Handlers Priority Registe
 454:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t SHCSR;                  /*!< Offset: 0x024 (R/W)  System Handler Control and State
 455:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CFSR;                   /*!< Offset: 0x028 (R/W)  Configurable Fault Status Regist
 456:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t HFSR;                   /*!< Offset: 0x02C (R/W)  HardFault Status Register */
 457:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t DFSR;                   /*!< Offset: 0x030 (R/W)  Debug Fault Status Register */
 458:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t MMFAR;                  /*!< Offset: 0x034 (R/W)  MemManage Fault Address Register
 459:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t BFAR;                   /*!< Offset: 0x038 (R/W)  BusFault Address Register */
 460:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t AFSR;                   /*!< Offset: 0x03C (R/W)  Auxiliary Fault Status Register 
 461:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PFR[2U];                /*!< Offset: 0x040 (R/ )  Processor Feature Register */
 462:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t DFR;                    /*!< Offset: 0x048 (R/ )  Debug Feature Register */
 463:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t ADR;                    /*!< Offset: 0x04C (R/ )  Auxiliary Feature Register */
 464:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t MMFR[4U];               /*!< Offset: 0x050 (R/ )  Memory Model Feature Register */
 465:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t ISAR[5U];               /*!< Offset: 0x060 (R/ )  Instruction Set Attributes Regis
 466:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[5U];
 467:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CPACR;                  /*!< Offset: 0x088 (R/W)  Coprocessor Access Control Regis
 468:Drivers/CMSIS/Include/core_cm4.h **** } SCB_Type;
 469:Drivers/CMSIS/Include/core_cm4.h **** 
 470:Drivers/CMSIS/Include/core_cm4.h **** /* SCB CPUID Register Definitions */
 471:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24U                                            /*!< SCB 
 472:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 473:Drivers/CMSIS/Include/core_cm4.h **** 
 474:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_VARIANT_Pos              20U                                            /*!< SCB 
 475:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 476:Drivers/CMSIS/Include/core_cm4.h **** 
 477:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16U                                            /*!< SCB 
 478:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 479:Drivers/CMSIS/Include/core_cm4.h **** 
 480:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_PARTNO_Pos                4U                                            /*!< SCB 
 481:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 482:Drivers/CMSIS/Include/core_cm4.h **** 
 483:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_REVISION_Pos              0U                                            /*!< SCB 
 484:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL /*<< SCB_CPUID_REVISION_Pos*/)          /*!< SCB 
 485:Drivers/CMSIS/Include/core_cm4.h **** 
 486:Drivers/CMSIS/Include/core_cm4.h **** /* SCB Interrupt Control State Register Definitions */
ARM GAS  /tmp/ccDHp4gG.s 			page 10


 487:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Pos            31U                                            /*!< SCB 
 488:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 489:Drivers/CMSIS/Include/core_cm4.h **** 
 490:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSVSET_Pos             28U                                            /*!< SCB 
 491:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 492:Drivers/CMSIS/Include/core_cm4.h **** 
 493:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Pos             27U                                            /*!< SCB 
 494:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 495:Drivers/CMSIS/Include/core_cm4.h **** 
 496:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSTSET_Pos             26U                                            /*!< SCB 
 497:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 498:Drivers/CMSIS/Include/core_cm4.h **** 
 499:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Pos             25U                                            /*!< SCB 
 500:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 501:Drivers/CMSIS/Include/core_cm4.h **** 
 502:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23U                                            /*!< SCB 
 503:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 504:Drivers/CMSIS/Include/core_cm4.h **** 
 505:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_ISRPENDING_Pos            22U                                            /*!< SCB 
 506:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 507:Drivers/CMSIS/Include/core_cm4.h **** 
 508:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_VECTPENDING_Pos           12U                                            /*!< SCB 
 509:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 510:Drivers/CMSIS/Include/core_cm4.h **** 
 511:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_RETTOBASE_Pos             11U                                            /*!< SCB 
 512:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_RETTOBASE_Msk             (1UL << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 513:Drivers/CMSIS/Include/core_cm4.h **** 
 514:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Pos             0U                                            /*!< SCB 
 515:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL /*<< SCB_ICSR_VECTACTIVE_Pos*/)       /*!< SCB 
 516:Drivers/CMSIS/Include/core_cm4.h **** 
 517:Drivers/CMSIS/Include/core_cm4.h **** /* SCB Vector Table Offset Register Definitions */
 518:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_VTOR_TBLOFF_Pos                 7U                                            /*!< SCB 
 519:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_VTOR_TBLOFF_Msk                (0x1FFFFFFUL << SCB_VTOR_TBLOFF_Pos)           /*!< SCB 
 520:Drivers/CMSIS/Include/core_cm4.h **** 
 521:Drivers/CMSIS/Include/core_cm4.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 522:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTKEY_Pos              16U                                            /*!< SCB 
 523:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 524:Drivers/CMSIS/Include/core_cm4.h **** 
 525:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16U                                            /*!< SCB 
 526:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 527:Drivers/CMSIS/Include/core_cm4.h **** 
 528:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Pos            15U                                            /*!< SCB 
 529:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 530:Drivers/CMSIS/Include/core_cm4.h **** 
 531:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Pos              8U                                            /*!< SCB 
 532:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7UL << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 533:Drivers/CMSIS/Include/core_cm4.h **** 
 534:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2U                                            /*!< SCB 
 535:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 536:Drivers/CMSIS/Include/core_cm4.h **** 
 537:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1U                                            /*!< SCB 
 538:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 539:Drivers/CMSIS/Include/core_cm4.h **** 
 540:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTRESET_Pos             0U                                            /*!< SCB 
 541:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTRESET_Msk            (1UL /*<< SCB_AIRCR_VECTRESET_Pos*/)           /*!< SCB 
 542:Drivers/CMSIS/Include/core_cm4.h **** 
 543:Drivers/CMSIS/Include/core_cm4.h **** /* SCB System Control Register Definitions */
ARM GAS  /tmp/ccDHp4gG.s 			page 11


 544:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SEVONPEND_Pos               4U                                            /*!< SCB 
 545:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 546:Drivers/CMSIS/Include/core_cm4.h **** 
 547:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Pos               2U                                            /*!< SCB 
 548:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 549:Drivers/CMSIS/Include/core_cm4.h **** 
 550:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1U                                            /*!< SCB 
 551:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 552:Drivers/CMSIS/Include/core_cm4.h **** 
 553:Drivers/CMSIS/Include/core_cm4.h **** /* SCB Configuration Control Register Definitions */
 554:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_STKALIGN_Pos                9U                                            /*!< SCB 
 555:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 556:Drivers/CMSIS/Include/core_cm4.h **** 
 557:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Pos               8U                                            /*!< SCB 
 558:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1UL << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 559:Drivers/CMSIS/Include/core_cm4.h **** 
 560:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Pos               4U                                            /*!< SCB 
 561:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1UL << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 562:Drivers/CMSIS/Include/core_cm4.h **** 
 563:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3U                                            /*!< SCB 
 564:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 565:Drivers/CMSIS/Include/core_cm4.h **** 
 566:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_USERSETMPEND_Pos            1U                                            /*!< SCB 
 567:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_USERSETMPEND_Msk           (1UL << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 568:Drivers/CMSIS/Include/core_cm4.h **** 
 569:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0U                                            /*!< SCB 
 570:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1UL /*<< SCB_CCR_NONBASETHRDENA_Pos*/)        /*!< SCB 
 571:Drivers/CMSIS/Include/core_cm4.h **** 
 572:Drivers/CMSIS/Include/core_cm4.h **** /* SCB System Handler Control and State Register Definitions */
 573:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18U                                            /*!< SCB 
 574:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1UL << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 575:Drivers/CMSIS/Include/core_cm4.h **** 
 576:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17U                                            /*!< SCB 
 577:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1UL << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 578:Drivers/CMSIS/Include/core_cm4.h **** 
 579:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16U                                            /*!< SCB 
 580:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1UL << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 581:Drivers/CMSIS/Include/core_cm4.h **** 
 582:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15U                                            /*!< SCB 
 583:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 584:Drivers/CMSIS/Include/core_cm4.h **** 
 585:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14U                                            /*!< SCB 
 586:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1UL << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 587:Drivers/CMSIS/Include/core_cm4.h **** 
 588:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13U                                            /*!< SCB 
 589:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1UL << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 590:Drivers/CMSIS/Include/core_cm4.h **** 
 591:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12U                                            /*!< SCB 
 592:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1UL << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 593:Drivers/CMSIS/Include/core_cm4.h **** 
 594:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11U                                            /*!< SCB 
 595:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1UL << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 596:Drivers/CMSIS/Include/core_cm4.h **** 
 597:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Pos            10U                                            /*!< SCB 
 598:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1UL << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 599:Drivers/CMSIS/Include/core_cm4.h **** 
 600:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MONITORACT_Pos            8U                                            /*!< SCB 
ARM GAS  /tmp/ccDHp4gG.s 			page 12


 601:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MONITORACT_Msk           (1UL << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 602:Drivers/CMSIS/Include/core_cm4.h **** 
 603:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Pos             7U                                            /*!< SCB 
 604:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1UL << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 605:Drivers/CMSIS/Include/core_cm4.h **** 
 606:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3U                                            /*!< SCB 
 607:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1UL << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 608:Drivers/CMSIS/Include/core_cm4.h **** 
 609:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1U                                            /*!< SCB 
 610:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1UL << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 611:Drivers/CMSIS/Include/core_cm4.h **** 
 612:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0U                                            /*!< SCB 
 613:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1UL /*<< SCB_SHCSR_MEMFAULTACT_Pos*/)         /*!< SCB 
 614:Drivers/CMSIS/Include/core_cm4.h **** 
 615:Drivers/CMSIS/Include/core_cm4.h **** /* SCB Configurable Fault Status Register Definitions */
 616:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Pos            16U                                            /*!< SCB 
 617:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFUL << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 618:Drivers/CMSIS/Include/core_cm4.h **** 
 619:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8U                                            /*!< SCB 
 620:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFUL << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 621:Drivers/CMSIS/Include/core_cm4.h **** 
 622:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0U                                            /*!< SCB 
 623:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFUL /*<< SCB_CFSR_MEMFAULTSR_Pos*/)        /*!< SCB 
 624:Drivers/CMSIS/Include/core_cm4.h **** 
 625:Drivers/CMSIS/Include/core_cm4.h **** /* MemManage Fault Status Register (part of SCB Configurable Fault Status Register) */
 626:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MMARVALID_Pos             (SCB_CFSR_MEMFAULTSR_Pos + 7U)                 /*!< SCB 
 627:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MMARVALID_Msk             (1UL << SCB_CFSR_MMARVALID_Pos)                /*!< SCB 
 628:Drivers/CMSIS/Include/core_cm4.h **** 
 629:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MLSPERR_Pos               (SCB_CFSR_MEMFAULTSR_Pos + 5U)                 /*!< SCB 
 630:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MLSPERR_Msk               (1UL << SCB_CFSR_MLSPERR_Pos)                  /*!< SCB 
 631:Drivers/CMSIS/Include/core_cm4.h **** 
 632:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MSTKERR_Pos               (SCB_CFSR_MEMFAULTSR_Pos + 4U)                 /*!< SCB 
 633:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MSTKERR_Msk               (1UL << SCB_CFSR_MSTKERR_Pos)                  /*!< SCB 
 634:Drivers/CMSIS/Include/core_cm4.h **** 
 635:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MUNSTKERR_Pos             (SCB_CFSR_MEMFAULTSR_Pos + 3U)                 /*!< SCB 
 636:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MUNSTKERR_Msk             (1UL << SCB_CFSR_MUNSTKERR_Pos)                /*!< SCB 
 637:Drivers/CMSIS/Include/core_cm4.h **** 
 638:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_DACCVIOL_Pos              (SCB_CFSR_MEMFAULTSR_Pos + 1U)                 /*!< SCB 
 639:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_DACCVIOL_Msk              (1UL << SCB_CFSR_DACCVIOL_Pos)                 /*!< SCB 
 640:Drivers/CMSIS/Include/core_cm4.h **** 
 641:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_IACCVIOL_Pos              (SCB_CFSR_MEMFAULTSR_Pos + 0U)                 /*!< SCB 
 642:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_IACCVIOL_Msk              (1UL /*<< SCB_CFSR_IACCVIOL_Pos*/)             /*!< SCB 
 643:Drivers/CMSIS/Include/core_cm4.h **** 
 644:Drivers/CMSIS/Include/core_cm4.h **** /* BusFault Status Register (part of SCB Configurable Fault Status Register) */
 645:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_BFARVALID_Pos            (SCB_CFSR_BUSFAULTSR_Pos + 7U)                  /*!< SCB 
 646:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_BFARVALID_Msk            (1UL << SCB_CFSR_BFARVALID_Pos)                 /*!< SCB 
 647:Drivers/CMSIS/Include/core_cm4.h **** 
 648:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_LSPERR_Pos               (SCB_CFSR_BUSFAULTSR_Pos + 5U)                  /*!< SCB 
 649:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_LSPERR_Msk               (1UL << SCB_CFSR_LSPERR_Pos)                    /*!< SCB 
 650:Drivers/CMSIS/Include/core_cm4.h **** 
 651:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_STKERR_Pos               (SCB_CFSR_BUSFAULTSR_Pos + 4U)                  /*!< SCB 
 652:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_STKERR_Msk               (1UL << SCB_CFSR_STKERR_Pos)                    /*!< SCB 
 653:Drivers/CMSIS/Include/core_cm4.h **** 
 654:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_UNSTKERR_Pos             (SCB_CFSR_BUSFAULTSR_Pos + 3U)                  /*!< SCB 
 655:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_UNSTKERR_Msk             (1UL << SCB_CFSR_UNSTKERR_Pos)                  /*!< SCB 
 656:Drivers/CMSIS/Include/core_cm4.h **** 
 657:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_IMPRECISERR_Pos          (SCB_CFSR_BUSFAULTSR_Pos + 2U)                  /*!< SCB 
ARM GAS  /tmp/ccDHp4gG.s 			page 13


 658:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_IMPRECISERR_Msk          (1UL << SCB_CFSR_IMPRECISERR_Pos)               /*!< SCB 
 659:Drivers/CMSIS/Include/core_cm4.h **** 
 660:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_PRECISERR_Pos            (SCB_CFSR_BUSFAULTSR_Pos + 1U)                  /*!< SCB 
 661:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_PRECISERR_Msk            (1UL << SCB_CFSR_PRECISERR_Pos)                 /*!< SCB 
 662:Drivers/CMSIS/Include/core_cm4.h **** 
 663:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_IBUSERR_Pos              (SCB_CFSR_BUSFAULTSR_Pos + 0U)                  /*!< SCB 
 664:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_IBUSERR_Msk              (1UL << SCB_CFSR_IBUSERR_Pos)                   /*!< SCB 
 665:Drivers/CMSIS/Include/core_cm4.h **** 
 666:Drivers/CMSIS/Include/core_cm4.h **** /* UsageFault Status Register (part of SCB Configurable Fault Status Register) */
 667:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_DIVBYZERO_Pos            (SCB_CFSR_USGFAULTSR_Pos + 9U)                  /*!< SCB 
 668:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_DIVBYZERO_Msk            (1UL << SCB_CFSR_DIVBYZERO_Pos)                 /*!< SCB 
 669:Drivers/CMSIS/Include/core_cm4.h **** 
 670:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_UNALIGNED_Pos            (SCB_CFSR_USGFAULTSR_Pos + 8U)                  /*!< SCB 
 671:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_UNALIGNED_Msk            (1UL << SCB_CFSR_UNALIGNED_Pos)                 /*!< SCB 
 672:Drivers/CMSIS/Include/core_cm4.h **** 
 673:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_NOCP_Pos                 (SCB_CFSR_USGFAULTSR_Pos + 3U)                  /*!< SCB 
 674:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_NOCP_Msk                 (1UL << SCB_CFSR_NOCP_Pos)                      /*!< SCB 
 675:Drivers/CMSIS/Include/core_cm4.h **** 
 676:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_INVPC_Pos                (SCB_CFSR_USGFAULTSR_Pos + 2U)                  /*!< SCB 
 677:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_INVPC_Msk                (1UL << SCB_CFSR_INVPC_Pos)                     /*!< SCB 
 678:Drivers/CMSIS/Include/core_cm4.h **** 
 679:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_INVSTATE_Pos             (SCB_CFSR_USGFAULTSR_Pos + 1U)                  /*!< SCB 
 680:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_INVSTATE_Msk             (1UL << SCB_CFSR_INVSTATE_Pos)                  /*!< SCB 
 681:Drivers/CMSIS/Include/core_cm4.h **** 
 682:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_UNDEFINSTR_Pos           (SCB_CFSR_USGFAULTSR_Pos + 0U)                  /*!< SCB 
 683:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_UNDEFINSTR_Msk           (1UL << SCB_CFSR_UNDEFINSTR_Pos)                /*!< SCB 
 684:Drivers/CMSIS/Include/core_cm4.h **** 
 685:Drivers/CMSIS/Include/core_cm4.h **** /* SCB Hard Fault Status Register Definitions */
 686:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Pos              31U                                            /*!< SCB 
 687:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1UL << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 688:Drivers/CMSIS/Include/core_cm4.h **** 
 689:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_FORCED_Pos                30U                                            /*!< SCB 
 690:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_FORCED_Msk                (1UL << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 691:Drivers/CMSIS/Include/core_cm4.h **** 
 692:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_VECTTBL_Pos                1U                                            /*!< SCB 
 693:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_VECTTBL_Msk               (1UL << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 694:Drivers/CMSIS/Include/core_cm4.h **** 
 695:Drivers/CMSIS/Include/core_cm4.h **** /* SCB Debug Fault Status Register Definitions */
 696:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_EXTERNAL_Pos               4U                                            /*!< SCB 
 697:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_EXTERNAL_Msk              (1UL << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 698:Drivers/CMSIS/Include/core_cm4.h **** 
 699:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_VCATCH_Pos                 3U                                            /*!< SCB 
 700:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_VCATCH_Msk                (1UL << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 701:Drivers/CMSIS/Include/core_cm4.h **** 
 702:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_DWTTRAP_Pos                2U                                            /*!< SCB 
 703:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_DWTTRAP_Msk               (1UL << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 704:Drivers/CMSIS/Include/core_cm4.h **** 
 705:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_BKPT_Pos                   1U                                            /*!< SCB 
 706:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_BKPT_Msk                  (1UL << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 707:Drivers/CMSIS/Include/core_cm4.h **** 
 708:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_HALTED_Pos                 0U                                            /*!< SCB 
 709:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_HALTED_Msk                (1UL /*<< SCB_DFSR_HALTED_Pos*/)               /*!< SCB 
 710:Drivers/CMSIS/Include/core_cm4.h **** 
 711:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_SCB */
 712:Drivers/CMSIS/Include/core_cm4.h **** 
 713:Drivers/CMSIS/Include/core_cm4.h **** 
 714:Drivers/CMSIS/Include/core_cm4.h **** /**
ARM GAS  /tmp/ccDHp4gG.s 			page 14


 715:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 716:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_SCnSCB System Controls not in SCB (SCnSCB)
 717:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the System Control and ID Register not in the SCB
 718:Drivers/CMSIS/Include/core_cm4.h ****   @{
 719:Drivers/CMSIS/Include/core_cm4.h ****  */
 720:Drivers/CMSIS/Include/core_cm4.h **** 
 721:Drivers/CMSIS/Include/core_cm4.h **** /**
 722:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the System Control and ID Register not in the SCB.
 723:Drivers/CMSIS/Include/core_cm4.h ****  */
 724:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
 725:Drivers/CMSIS/Include/core_cm4.h **** {
 726:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[1U];
 727:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t ICTR;                   /*!< Offset: 0x004 (R/ )  Interrupt Controller Type Regist
 728:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ACTLR;                  /*!< Offset: 0x008 (R/W)  Auxiliary Control Register */
 729:Drivers/CMSIS/Include/core_cm4.h **** } SCnSCB_Type;
 730:Drivers/CMSIS/Include/core_cm4.h **** 
 731:Drivers/CMSIS/Include/core_cm4.h **** /* Interrupt Controller Type Register Definitions */
 732:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Pos         0U                                         /*!< ICTR: I
 733:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Msk        (0xFUL /*<< SCnSCB_ICTR_INTLINESNUM_Pos*/)  /*!< ICTR: I
 734:Drivers/CMSIS/Include/core_cm4.h **** 
 735:Drivers/CMSIS/Include/core_cm4.h **** /* Auxiliary Control Register Definitions */
 736:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Pos            9U                                         /*!< ACTLR: 
 737:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Msk           (1UL << SCnSCB_ACTLR_DISOOFP_Pos)           /*!< ACTLR: 
 738:Drivers/CMSIS/Include/core_cm4.h **** 
 739:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Pos            8U                                         /*!< ACTLR: 
 740:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Msk           (1UL << SCnSCB_ACTLR_DISFPCA_Pos)           /*!< ACTLR: 
 741:Drivers/CMSIS/Include/core_cm4.h **** 
 742:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Pos            2U                                         /*!< ACTLR: 
 743:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Msk           (1UL << SCnSCB_ACTLR_DISFOLD_Pos)           /*!< ACTLR: 
 744:Drivers/CMSIS/Include/core_cm4.h **** 
 745:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Pos         1U                                         /*!< ACTLR: 
 746:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Msk        (1UL << SCnSCB_ACTLR_DISDEFWBUF_Pos)        /*!< ACTLR: 
 747:Drivers/CMSIS/Include/core_cm4.h **** 
 748:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Pos         0U                                         /*!< ACTLR: 
 749:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Msk        (1UL /*<< SCnSCB_ACTLR_DISMCYCINT_Pos*/)    /*!< ACTLR: 
 750:Drivers/CMSIS/Include/core_cm4.h **** 
 751:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_SCnotSCB */
 752:Drivers/CMSIS/Include/core_cm4.h **** 
 753:Drivers/CMSIS/Include/core_cm4.h **** 
 754:Drivers/CMSIS/Include/core_cm4.h **** /**
 755:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 756:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 757:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the System Timer Registers.
 758:Drivers/CMSIS/Include/core_cm4.h ****   @{
 759:Drivers/CMSIS/Include/core_cm4.h ****  */
 760:Drivers/CMSIS/Include/core_cm4.h **** 
 761:Drivers/CMSIS/Include/core_cm4.h **** /**
 762:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the System Timer (SysTick).
 763:Drivers/CMSIS/Include/core_cm4.h ****  */
 764:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
 765:Drivers/CMSIS/Include/core_cm4.h **** {
 766:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 767:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t LOAD;                   /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register */
 768:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t VAL;                    /*!< Offset: 0x008 (R/W)  SysTick Current Value Register *
 769:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t CALIB;                  /*!< Offset: 0x00C (R/ )  SysTick Calibration Register */
 770:Drivers/CMSIS/Include/core_cm4.h **** } SysTick_Type;
 771:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/ccDHp4gG.s 			page 15


 772:Drivers/CMSIS/Include/core_cm4.h **** /* SysTick Control / Status Register Definitions */
 773:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16U                                            /*!< SysT
 774:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 775:Drivers/CMSIS/Include/core_cm4.h **** 
 776:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2U                                            /*!< SysT
 777:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 778:Drivers/CMSIS/Include/core_cm4.h **** 
 779:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_TICKINT_Pos            1U                                            /*!< SysT
 780:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 781:Drivers/CMSIS/Include/core_cm4.h **** 
 782:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_ENABLE_Pos             0U                                            /*!< SysT
 783:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL /*<< SysTick_CTRL_ENABLE_Pos*/)           /*!< SysT
 784:Drivers/CMSIS/Include/core_cm4.h **** 
 785:Drivers/CMSIS/Include/core_cm4.h **** /* SysTick Reload Register Definitions */
 786:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_LOAD_RELOAD_Pos             0U                                            /*!< SysT
 787:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL /*<< SysTick_LOAD_RELOAD_Pos*/)    /*!< SysT
 788:Drivers/CMSIS/Include/core_cm4.h **** 
 789:Drivers/CMSIS/Include/core_cm4.h **** /* SysTick Current Register Definitions */
 790:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_VAL_CURRENT_Pos             0U                                            /*!< SysT
 791:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL /*<< SysTick_VAL_CURRENT_Pos*/)    /*!< SysT
 792:Drivers/CMSIS/Include/core_cm4.h **** 
 793:Drivers/CMSIS/Include/core_cm4.h **** /* SysTick Calibration Register Definitions */
 794:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_NOREF_Pos            31U                                            /*!< SysT
 795:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 796:Drivers/CMSIS/Include/core_cm4.h **** 
 797:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_SKEW_Pos             30U                                            /*!< SysT
 798:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 799:Drivers/CMSIS/Include/core_cm4.h **** 
 800:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_TENMS_Pos             0U                                            /*!< SysT
 801:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL /*<< SysTick_CALIB_TENMS_Pos*/)    /*!< SysT
 802:Drivers/CMSIS/Include/core_cm4.h **** 
 803:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_SysTick */
 804:Drivers/CMSIS/Include/core_cm4.h **** 
 805:Drivers/CMSIS/Include/core_cm4.h **** 
 806:Drivers/CMSIS/Include/core_cm4.h **** /**
 807:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 808:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_ITM     Instrumentation Trace Macrocell (ITM)
 809:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Instrumentation Trace Macrocell (ITM)
 810:Drivers/CMSIS/Include/core_cm4.h ****   @{
 811:Drivers/CMSIS/Include/core_cm4.h ****  */
 812:Drivers/CMSIS/Include/core_cm4.h **** 
 813:Drivers/CMSIS/Include/core_cm4.h **** /**
 814:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Instrumentation Trace Macrocell Register (ITM).
 815:Drivers/CMSIS/Include/core_cm4.h ****  */
 816:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
 817:Drivers/CMSIS/Include/core_cm4.h **** {
 818:Drivers/CMSIS/Include/core_cm4.h ****   __OM  union
 819:Drivers/CMSIS/Include/core_cm4.h ****   {
 820:Drivers/CMSIS/Include/core_cm4.h ****     __OM  uint8_t    u8;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 8-bit */
 821:Drivers/CMSIS/Include/core_cm4.h ****     __OM  uint16_t   u16;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 16-bit */
 822:Drivers/CMSIS/Include/core_cm4.h ****     __OM  uint32_t   u32;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 32-bit */
 823:Drivers/CMSIS/Include/core_cm4.h ****   }  PORT [32U];                         /*!< Offset: 0x000 ( /W)  ITM Stimulus Port Registers */
 824:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[864U];
 825:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t TER;                    /*!< Offset: 0xE00 (R/W)  ITM Trace Enable Register */
 826:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED1[15U];
 827:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t TPR;                    /*!< Offset: 0xE40 (R/W)  ITM Trace Privilege Register */
 828:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED2[15U];
ARM GAS  /tmp/ccDHp4gG.s 			page 16


 829:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t TCR;                    /*!< Offset: 0xE80 (R/W)  ITM Trace Control Register */
 830:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED3[32U];
 831:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED4[43U];
 832:Drivers/CMSIS/Include/core_cm4.h ****   __OM  uint32_t LAR;                    /*!< Offset: 0xFB0 ( /W)  ITM Lock Access Register */
 833:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t LSR;                    /*!< Offset: 0xFB4 (R/ )  ITM Lock Status Register */
 834:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED5[6U];
 835:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID4;                   /*!< Offset: 0xFD0 (R/ )  ITM Peripheral Identification Re
 836:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID5;                   /*!< Offset: 0xFD4 (R/ )  ITM Peripheral Identification Re
 837:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID6;                   /*!< Offset: 0xFD8 (R/ )  ITM Peripheral Identification Re
 838:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID7;                   /*!< Offset: 0xFDC (R/ )  ITM Peripheral Identification Re
 839:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID0;                   /*!< Offset: 0xFE0 (R/ )  ITM Peripheral Identification Re
 840:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID1;                   /*!< Offset: 0xFE4 (R/ )  ITM Peripheral Identification Re
 841:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID2;                   /*!< Offset: 0xFE8 (R/ )  ITM Peripheral Identification Re
 842:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID3;                   /*!< Offset: 0xFEC (R/ )  ITM Peripheral Identification Re
 843:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t CID0;                   /*!< Offset: 0xFF0 (R/ )  ITM Component  Identification Re
 844:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t CID1;                   /*!< Offset: 0xFF4 (R/ )  ITM Component  Identification Re
 845:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t CID2;                   /*!< Offset: 0xFF8 (R/ )  ITM Component  Identification Re
 846:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t CID3;                   /*!< Offset: 0xFFC (R/ )  ITM Component  Identification Re
 847:Drivers/CMSIS/Include/core_cm4.h **** } ITM_Type;
 848:Drivers/CMSIS/Include/core_cm4.h **** 
 849:Drivers/CMSIS/Include/core_cm4.h **** /* ITM Trace Privilege Register Definitions */
 850:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TPR_PRIVMASK_Pos                0U                                            /*!< ITM 
 851:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFFFFFFFFUL /*<< ITM_TPR_PRIVMASK_Pos*/)     /*!< ITM 
 852:Drivers/CMSIS/Include/core_cm4.h **** 
 853:Drivers/CMSIS/Include/core_cm4.h **** /* ITM Trace Control Register Definitions */
 854:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_BUSY_Pos                   23U                                            /*!< ITM 
 855:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_BUSY_Msk                   (1UL << ITM_TCR_BUSY_Pos)                      /*!< ITM 
 856:Drivers/CMSIS/Include/core_cm4.h **** 
 857:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TraceBusID_Pos             16U                                            /*!< ITM 
 858:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TraceBusID_Msk             (0x7FUL << ITM_TCR_TraceBusID_Pos)             /*!< ITM 
 859:Drivers/CMSIS/Include/core_cm4.h **** 
 860:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_GTSFREQ_Pos                10U                                            /*!< ITM 
 861:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_GTSFREQ_Msk                (3UL << ITM_TCR_GTSFREQ_Pos)                   /*!< ITM 
 862:Drivers/CMSIS/Include/core_cm4.h **** 
 863:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TSPrescale_Pos              8U                                            /*!< ITM 
 864:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TSPrescale_Msk             (3UL << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
 865:Drivers/CMSIS/Include/core_cm4.h **** 
 866:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_SWOENA_Pos                  4U                                            /*!< ITM 
 867:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_SWOENA_Msk                 (1UL << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
 868:Drivers/CMSIS/Include/core_cm4.h **** 
 869:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_DWTENA_Pos                  3U                                            /*!< ITM 
 870:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_DWTENA_Msk                 (1UL << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
 871:Drivers/CMSIS/Include/core_cm4.h **** 
 872:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_SYNCENA_Pos                 2U                                            /*!< ITM 
 873:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_SYNCENA_Msk                (1UL << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
 874:Drivers/CMSIS/Include/core_cm4.h **** 
 875:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TSENA_Pos                   1U                                            /*!< ITM 
 876:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TSENA_Msk                  (1UL << ITM_TCR_TSENA_Pos)                     /*!< ITM 
 877:Drivers/CMSIS/Include/core_cm4.h **** 
 878:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_ITMENA_Pos                  0U                                            /*!< ITM 
 879:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_ITMENA_Msk                 (1UL /*<< ITM_TCR_ITMENA_Pos*/)                /*!< ITM 
 880:Drivers/CMSIS/Include/core_cm4.h **** 
 881:Drivers/CMSIS/Include/core_cm4.h **** /* ITM Lock Status Register Definitions */
 882:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_LSR_ByteAcc_Pos                 2U                                            /*!< ITM 
 883:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_LSR_ByteAcc_Msk                (1UL << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
 884:Drivers/CMSIS/Include/core_cm4.h **** 
 885:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_LSR_Access_Pos                  1U                                            /*!< ITM 
ARM GAS  /tmp/ccDHp4gG.s 			page 17


 886:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_LSR_Access_Msk                 (1UL << ITM_LSR_Access_Pos)                    /*!< ITM 
 887:Drivers/CMSIS/Include/core_cm4.h **** 
 888:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_LSR_Present_Pos                 0U                                            /*!< ITM 
 889:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_LSR_Present_Msk                (1UL /*<< ITM_LSR_Present_Pos*/)               /*!< ITM 
 890:Drivers/CMSIS/Include/core_cm4.h **** 
 891:Drivers/CMSIS/Include/core_cm4.h **** /*@}*/ /* end of group CMSIS_ITM */
 892:Drivers/CMSIS/Include/core_cm4.h **** 
 893:Drivers/CMSIS/Include/core_cm4.h **** 
 894:Drivers/CMSIS/Include/core_cm4.h **** /**
 895:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 896:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_DWT     Data Watchpoint and Trace (DWT)
 897:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Data Watchpoint and Trace (DWT)
 898:Drivers/CMSIS/Include/core_cm4.h ****   @{
 899:Drivers/CMSIS/Include/core_cm4.h ****  */
 900:Drivers/CMSIS/Include/core_cm4.h **** 
 901:Drivers/CMSIS/Include/core_cm4.h **** /**
 902:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Data Watchpoint and Trace Register (DWT).
 903:Drivers/CMSIS/Include/core_cm4.h ****  */
 904:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
 905:Drivers/CMSIS/Include/core_cm4.h **** {
 906:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  Control Register */
 907:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CYCCNT;                 /*!< Offset: 0x004 (R/W)  Cycle Count Register */
 908:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CPICNT;                 /*!< Offset: 0x008 (R/W)  CPI Count Register */
 909:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t EXCCNT;                 /*!< Offset: 0x00C (R/W)  Exception Overhead Count Registe
 910:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t SLEEPCNT;               /*!< Offset: 0x010 (R/W)  Sleep Count Register */
 911:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t LSUCNT;                 /*!< Offset: 0x014 (R/W)  LSU Count Register */
 912:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FOLDCNT;                /*!< Offset: 0x018 (R/W)  Folded-instruction Count Registe
 913:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PCSR;                   /*!< Offset: 0x01C (R/ )  Program Counter Sample Register 
 914:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t COMP0;                  /*!< Offset: 0x020 (R/W)  Comparator Register 0 */
 915:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t MASK0;                  /*!< Offset: 0x024 (R/W)  Mask Register 0 */
 916:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FUNCTION0;              /*!< Offset: 0x028 (R/W)  Function Register 0 */
 917:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[1U];
 918:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t COMP1;                  /*!< Offset: 0x030 (R/W)  Comparator Register 1 */
 919:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t MASK1;                  /*!< Offset: 0x034 (R/W)  Mask Register 1 */
 920:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FUNCTION1;              /*!< Offset: 0x038 (R/W)  Function Register 1 */
 921:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED1[1U];
 922:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t COMP2;                  /*!< Offset: 0x040 (R/W)  Comparator Register 2 */
 923:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t MASK2;                  /*!< Offset: 0x044 (R/W)  Mask Register 2 */
 924:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FUNCTION2;              /*!< Offset: 0x048 (R/W)  Function Register 2 */
 925:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED2[1U];
 926:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t COMP3;                  /*!< Offset: 0x050 (R/W)  Comparator Register 3 */
 927:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t MASK3;                  /*!< Offset: 0x054 (R/W)  Mask Register 3 */
 928:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FUNCTION3;              /*!< Offset: 0x058 (R/W)  Function Register 3 */
 929:Drivers/CMSIS/Include/core_cm4.h **** } DWT_Type;
 930:Drivers/CMSIS/Include/core_cm4.h **** 
 931:Drivers/CMSIS/Include/core_cm4.h **** /* DWT Control Register Definitions */
 932:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NUMCOMP_Pos               28U                                         /*!< DWT CTR
 933:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NUMCOMP_Msk               (0xFUL << DWT_CTRL_NUMCOMP_Pos)             /*!< DWT CTR
 934:Drivers/CMSIS/Include/core_cm4.h **** 
 935:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Pos              27U                                         /*!< DWT CTR
 936:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Msk              (0x1UL << DWT_CTRL_NOTRCPKT_Pos)            /*!< DWT CTR
 937:Drivers/CMSIS/Include/core_cm4.h **** 
 938:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Pos             26U                                         /*!< DWT CTR
 939:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Msk             (0x1UL << DWT_CTRL_NOEXTTRIG_Pos)           /*!< DWT CTR
 940:Drivers/CMSIS/Include/core_cm4.h **** 
 941:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Pos              25U                                         /*!< DWT CTR
 942:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Msk              (0x1UL << DWT_CTRL_NOCYCCNT_Pos)            /*!< DWT CTR
ARM GAS  /tmp/ccDHp4gG.s 			page 18


 943:Drivers/CMSIS/Include/core_cm4.h **** 
 944:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Pos              24U                                         /*!< DWT CTR
 945:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Msk              (0x1UL << DWT_CTRL_NOPRFCNT_Pos)            /*!< DWT CTR
 946:Drivers/CMSIS/Include/core_cm4.h **** 
 947:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Pos             22U                                         /*!< DWT CTR
 948:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Msk             (0x1UL << DWT_CTRL_CYCEVTENA_Pos)           /*!< DWT CTR
 949:Drivers/CMSIS/Include/core_cm4.h **** 
 950:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Pos            21U                                         /*!< DWT CTR
 951:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Msk            (0x1UL << DWT_CTRL_FOLDEVTENA_Pos)          /*!< DWT CTR
 952:Drivers/CMSIS/Include/core_cm4.h **** 
 953:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Pos             20U                                         /*!< DWT CTR
 954:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Msk             (0x1UL << DWT_CTRL_LSUEVTENA_Pos)           /*!< DWT CTR
 955:Drivers/CMSIS/Include/core_cm4.h **** 
 956:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Pos           19U                                         /*!< DWT CTR
 957:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Msk           (0x1UL << DWT_CTRL_SLEEPEVTENA_Pos)         /*!< DWT CTR
 958:Drivers/CMSIS/Include/core_cm4.h **** 
 959:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Pos             18U                                         /*!< DWT CTR
 960:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Msk             (0x1UL << DWT_CTRL_EXCEVTENA_Pos)           /*!< DWT CTR
 961:Drivers/CMSIS/Include/core_cm4.h **** 
 962:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Pos             17U                                         /*!< DWT CTR
 963:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Msk             (0x1UL << DWT_CTRL_CPIEVTENA_Pos)           /*!< DWT CTR
 964:Drivers/CMSIS/Include/core_cm4.h **** 
 965:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Pos             16U                                         /*!< DWT CTR
 966:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Msk             (0x1UL << DWT_CTRL_EXCTRCENA_Pos)           /*!< DWT CTR
 967:Drivers/CMSIS/Include/core_cm4.h **** 
 968:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Pos            12U                                         /*!< DWT CTR
 969:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Msk            (0x1UL << DWT_CTRL_PCSAMPLENA_Pos)          /*!< DWT CTR
 970:Drivers/CMSIS/Include/core_cm4.h **** 
 971:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_SYNCTAP_Pos               10U                                         /*!< DWT CTR
 972:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_SYNCTAP_Msk               (0x3UL << DWT_CTRL_SYNCTAP_Pos)             /*!< DWT CTR
 973:Drivers/CMSIS/Include/core_cm4.h **** 
 974:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCTAP_Pos                 9U                                         /*!< DWT CTR
 975:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCTAP_Msk                (0x1UL << DWT_CTRL_CYCTAP_Pos)              /*!< DWT CTR
 976:Drivers/CMSIS/Include/core_cm4.h **** 
 977:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_POSTINIT_Pos               5U                                         /*!< DWT CTR
 978:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_POSTINIT_Msk              (0xFUL << DWT_CTRL_POSTINIT_Pos)            /*!< DWT CTR
 979:Drivers/CMSIS/Include/core_cm4.h **** 
 980:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_POSTPRESET_Pos             1U                                         /*!< DWT CTR
 981:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_POSTPRESET_Msk            (0xFUL << DWT_CTRL_POSTPRESET_Pos)          /*!< DWT CTR
 982:Drivers/CMSIS/Include/core_cm4.h **** 
 983:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Pos              0U                                         /*!< DWT CTR
 984:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Msk             (0x1UL /*<< DWT_CTRL_CYCCNTENA_Pos*/)       /*!< DWT CTR
 985:Drivers/CMSIS/Include/core_cm4.h **** 
 986:Drivers/CMSIS/Include/core_cm4.h **** /* DWT CPI Count Register Definitions */
 987:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CPICNT_CPICNT_Pos               0U                                         /*!< DWT CPI
 988:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CPICNT_CPICNT_Msk              (0xFFUL /*<< DWT_CPICNT_CPICNT_Pos*/)       /*!< DWT CPI
 989:Drivers/CMSIS/Include/core_cm4.h **** 
 990:Drivers/CMSIS/Include/core_cm4.h **** /* DWT Exception Overhead Count Register Definitions */
 991:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Pos               0U                                         /*!< DWT EXC
 992:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Msk              (0xFFUL /*<< DWT_EXCCNT_EXCCNT_Pos*/)       /*!< DWT EXC
 993:Drivers/CMSIS/Include/core_cm4.h **** 
 994:Drivers/CMSIS/Include/core_cm4.h **** /* DWT Sleep Count Register Definitions */
 995:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Pos           0U                                         /*!< DWT SLE
 996:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Msk          (0xFFUL /*<< DWT_SLEEPCNT_SLEEPCNT_Pos*/)   /*!< DWT SLE
 997:Drivers/CMSIS/Include/core_cm4.h **** 
 998:Drivers/CMSIS/Include/core_cm4.h **** /* DWT LSU Count Register Definitions */
 999:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Pos               0U                                         /*!< DWT LSU
ARM GAS  /tmp/ccDHp4gG.s 			page 19


1000:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Msk              (0xFFUL /*<< DWT_LSUCNT_LSUCNT_Pos*/)       /*!< DWT LSU
1001:Drivers/CMSIS/Include/core_cm4.h **** 
1002:Drivers/CMSIS/Include/core_cm4.h **** /* DWT Folded-instruction Count Register Definitions */
1003:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Pos             0U                                         /*!< DWT FOL
1004:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Msk            (0xFFUL /*<< DWT_FOLDCNT_FOLDCNT_Pos*/)     /*!< DWT FOL
1005:Drivers/CMSIS/Include/core_cm4.h **** 
1006:Drivers/CMSIS/Include/core_cm4.h **** /* DWT Comparator Mask Register Definitions */
1007:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_MASK_MASK_Pos                   0U                                         /*!< DWT MAS
1008:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_MASK_MASK_Msk                  (0x1FUL /*<< DWT_MASK_MASK_Pos*/)           /*!< DWT MAS
1009:Drivers/CMSIS/Include/core_cm4.h **** 
1010:Drivers/CMSIS/Include/core_cm4.h **** /* DWT Comparator Function Register Definitions */
1011:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_MATCHED_Pos           24U                                         /*!< DWT FUN
1012:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_MATCHED_Msk           (0x1UL << DWT_FUNCTION_MATCHED_Pos)         /*!< DWT FUN
1013:Drivers/CMSIS/Include/core_cm4.h **** 
1014:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Pos        16U                                         /*!< DWT FUN
1015:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR1_Pos)      /*!< DWT FUN
1016:Drivers/CMSIS/Include/core_cm4.h **** 
1017:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Pos        12U                                         /*!< DWT FUN
1018:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR0_Pos)      /*!< DWT FUN
1019:Drivers/CMSIS/Include/core_cm4.h **** 
1020:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Pos         10U                                         /*!< DWT FUN
1021:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Msk         (0x3UL << DWT_FUNCTION_DATAVSIZE_Pos)       /*!< DWT FUN
1022:Drivers/CMSIS/Include/core_cm4.h **** 
1023:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Pos            9U                                         /*!< DWT FUN
1024:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Msk           (0x1UL << DWT_FUNCTION_LNK1ENA_Pos)         /*!< DWT FUN
1025:Drivers/CMSIS/Include/core_cm4.h **** 
1026:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Pos         8U                                         /*!< DWT FUN
1027:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Msk        (0x1UL << DWT_FUNCTION_DATAVMATCH_Pos)      /*!< DWT FUN
1028:Drivers/CMSIS/Include/core_cm4.h **** 
1029:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Pos           7U                                         /*!< DWT FUN
1030:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Msk          (0x1UL << DWT_FUNCTION_CYCMATCH_Pos)        /*!< DWT FUN
1031:Drivers/CMSIS/Include/core_cm4.h **** 
1032:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Pos          5U                                         /*!< DWT FUN
1033:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Msk         (0x1UL << DWT_FUNCTION_EMITRANGE_Pos)       /*!< DWT FUN
1034:Drivers/CMSIS/Include/core_cm4.h **** 
1035:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Pos           0U                                         /*!< DWT FUN
1036:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Msk          (0xFUL /*<< DWT_FUNCTION_FUNCTION_Pos*/)    /*!< DWT FUN
1037:Drivers/CMSIS/Include/core_cm4.h **** 
1038:Drivers/CMSIS/Include/core_cm4.h **** /*@}*/ /* end of group CMSIS_DWT */
1039:Drivers/CMSIS/Include/core_cm4.h **** 
1040:Drivers/CMSIS/Include/core_cm4.h **** 
1041:Drivers/CMSIS/Include/core_cm4.h **** /**
1042:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
1043:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_TPI     Trace Port Interface (TPI)
1044:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Trace Port Interface (TPI)
1045:Drivers/CMSIS/Include/core_cm4.h ****   @{
1046:Drivers/CMSIS/Include/core_cm4.h ****  */
1047:Drivers/CMSIS/Include/core_cm4.h **** 
1048:Drivers/CMSIS/Include/core_cm4.h **** /**
1049:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Trace Port Interface Register (TPI).
1050:Drivers/CMSIS/Include/core_cm4.h ****  */
1051:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
1052:Drivers/CMSIS/Include/core_cm4.h **** {
1053:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t SSPSR;                  /*!< Offset: 0x000 (R/ )  Supported Parallel Port Size Reg
1054:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CSPSR;                  /*!< Offset: 0x004 (R/W)  Current Parallel Port Size Regis
1055:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[2U];
1056:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ACPR;                   /*!< Offset: 0x010 (R/W)  Asynchronous Clock Prescaler Reg
ARM GAS  /tmp/ccDHp4gG.s 			page 20


1057:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED1[55U];
1058:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t SPPR;                   /*!< Offset: 0x0F0 (R/W)  Selected Pin Protocol Register *
1059:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED2[131U];
1060:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t FFSR;                   /*!< Offset: 0x300 (R/ )  Formatter and Flush Status Regis
1061:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FFCR;                   /*!< Offset: 0x304 (R/W)  Formatter and Flush Control Regi
1062:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t FSCR;                   /*!< Offset: 0x308 (R/ )  Formatter Synchronization Counte
1063:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED3[759U];
1064:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t TRIGGER;                /*!< Offset: 0xEE8 (R/ )  TRIGGER Register */
1065:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t FIFO0;                  /*!< Offset: 0xEEC (R/ )  Integration ETM Data */
1066:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t ITATBCTR2;              /*!< Offset: 0xEF0 (R/ )  ITATBCTR2 */
1067:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED4[1U];
1068:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t ITATBCTR0;              /*!< Offset: 0xEF8 (R/ )  ITATBCTR0 */
1069:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t FIFO1;                  /*!< Offset: 0xEFC (R/ )  Integration ITM Data */
1070:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ITCTRL;                 /*!< Offset: 0xF00 (R/W)  Integration Mode Control */
1071:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED5[39U];
1072:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CLAIMSET;               /*!< Offset: 0xFA0 (R/W)  Claim tag set */
1073:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CLAIMCLR;               /*!< Offset: 0xFA4 (R/W)  Claim tag clear */
1074:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED7[8U];
1075:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t DEVID;                  /*!< Offset: 0xFC8 (R/ )  TPIU_DEVID */
1076:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t DEVTYPE;                /*!< Offset: 0xFCC (R/ )  TPIU_DEVTYPE */
1077:Drivers/CMSIS/Include/core_cm4.h **** } TPI_Type;
1078:Drivers/CMSIS/Include/core_cm4.h **** 
1079:Drivers/CMSIS/Include/core_cm4.h **** /* TPI Asynchronous Clock Prescaler Register Definitions */
1080:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ACPR_PRESCALER_Pos              0U                                         /*!< TPI ACP
1081:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ACPR_PRESCALER_Msk             (0x1FFFUL /*<< TPI_ACPR_PRESCALER_Pos*/)    /*!< TPI ACP
1082:Drivers/CMSIS/Include/core_cm4.h **** 
1083:Drivers/CMSIS/Include/core_cm4.h **** /* TPI Selected Pin Protocol Register Definitions */
1084:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_SPPR_TXMODE_Pos                 0U                                         /*!< TPI SPP
1085:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_SPPR_TXMODE_Msk                (0x3UL /*<< TPI_SPPR_TXMODE_Pos*/)          /*!< TPI SPP
1086:Drivers/CMSIS/Include/core_cm4.h **** 
1087:Drivers/CMSIS/Include/core_cm4.h **** /* TPI Formatter and Flush Status Register Definitions */
1088:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FtNonStop_Pos              3U                                         /*!< TPI FFS
1089:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FtNonStop_Msk             (0x1UL << TPI_FFSR_FtNonStop_Pos)           /*!< TPI FFS
1090:Drivers/CMSIS/Include/core_cm4.h **** 
1091:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_TCPresent_Pos              2U                                         /*!< TPI FFS
1092:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_TCPresent_Msk             (0x1UL << TPI_FFSR_TCPresent_Pos)           /*!< TPI FFS
1093:Drivers/CMSIS/Include/core_cm4.h **** 
1094:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FtStopped_Pos              1U                                         /*!< TPI FFS
1095:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FtStopped_Msk             (0x1UL << TPI_FFSR_FtStopped_Pos)           /*!< TPI FFS
1096:Drivers/CMSIS/Include/core_cm4.h **** 
1097:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FlInProg_Pos               0U                                         /*!< TPI FFS
1098:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FlInProg_Msk              (0x1UL /*<< TPI_FFSR_FlInProg_Pos*/)        /*!< TPI FFS
1099:Drivers/CMSIS/Include/core_cm4.h **** 
1100:Drivers/CMSIS/Include/core_cm4.h **** /* TPI Formatter and Flush Control Register Definitions */
1101:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFCR_TrigIn_Pos                 8U                                         /*!< TPI FFC
1102:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFCR_TrigIn_Msk                (0x1UL << TPI_FFCR_TrigIn_Pos)              /*!< TPI FFC
1103:Drivers/CMSIS/Include/core_cm4.h **** 
1104:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFCR_EnFCont_Pos                1U                                         /*!< TPI FFC
1105:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFCR_EnFCont_Msk               (0x1UL << TPI_FFCR_EnFCont_Pos)             /*!< TPI FFC
1106:Drivers/CMSIS/Include/core_cm4.h **** 
1107:Drivers/CMSIS/Include/core_cm4.h **** /* TPI TRIGGER Register Definitions */
1108:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Pos             0U                                         /*!< TPI TRI
1109:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Msk            (0x1UL /*<< TPI_TRIGGER_TRIGGER_Pos*/)      /*!< TPI TRI
1110:Drivers/CMSIS/Include/core_cm4.h **** 
1111:Drivers/CMSIS/Include/core_cm4.h **** /* TPI Integration ETM Data Register Definitions (FIFO0) */
1112:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1113:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Msk          (0x1UL << TPI_FIFO0_ITM_ATVALID_Pos)        /*!< TPI FIF
ARM GAS  /tmp/ccDHp4gG.s 			page 21


1114:Drivers/CMSIS/Include/core_cm4.h **** 
1115:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1116:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Msk        (0x3UL << TPI_FIFO0_ITM_bytecount_Pos)      /*!< TPI FIF
1117:Drivers/CMSIS/Include/core_cm4.h **** 
1118:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1119:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Msk          (0x1UL << TPI_FIFO0_ETM_ATVALID_Pos)        /*!< TPI FIF
1120:Drivers/CMSIS/Include/core_cm4.h **** 
1121:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1122:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Msk        (0x3UL << TPI_FIFO0_ETM_bytecount_Pos)      /*!< TPI FIF
1123:Drivers/CMSIS/Include/core_cm4.h **** 
1124:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM2_Pos                 16U                                         /*!< TPI FIF
1125:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM2_Msk                 (0xFFUL << TPI_FIFO0_ETM2_Pos)              /*!< TPI FIF
1126:Drivers/CMSIS/Include/core_cm4.h **** 
1127:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM1_Pos                  8U                                         /*!< TPI FIF
1128:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM1_Msk                 (0xFFUL << TPI_FIFO0_ETM1_Pos)              /*!< TPI FIF
1129:Drivers/CMSIS/Include/core_cm4.h **** 
1130:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM0_Pos                  0U                                         /*!< TPI FIF
1131:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM0_Msk                 (0xFFUL /*<< TPI_FIFO0_ETM0_Pos*/)          /*!< TPI FIF
1132:Drivers/CMSIS/Include/core_cm4.h **** 
1133:Drivers/CMSIS/Include/core_cm4.h **** /* TPI ITATBCTR2 Register Definitions */
1134:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY2_Pos          0U                                         /*!< TPI ITA
1135:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY2_Msk         (0x1UL /*<< TPI_ITATBCTR2_ATREADY2_Pos*/)   /*!< TPI ITA
1136:Drivers/CMSIS/Include/core_cm4.h **** 
1137:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY1_Pos          0U                                         /*!< TPI ITA
1138:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY1_Msk         (0x1UL /*<< TPI_ITATBCTR2_ATREADY1_Pos*/)   /*!< TPI ITA
1139:Drivers/CMSIS/Include/core_cm4.h **** 
1140:Drivers/CMSIS/Include/core_cm4.h **** /* TPI Integration ITM Data Register Definitions (FIFO1) */
1141:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1142:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Msk          (0x1UL << TPI_FIFO1_ITM_ATVALID_Pos)        /*!< TPI FIF
1143:Drivers/CMSIS/Include/core_cm4.h **** 
1144:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1145:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Msk        (0x3UL << TPI_FIFO1_ITM_bytecount_Pos)      /*!< TPI FIF
1146:Drivers/CMSIS/Include/core_cm4.h **** 
1147:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1148:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Msk          (0x1UL << TPI_FIFO1_ETM_ATVALID_Pos)        /*!< TPI FIF
1149:Drivers/CMSIS/Include/core_cm4.h **** 
1150:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1151:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Msk        (0x3UL << TPI_FIFO1_ETM_bytecount_Pos)      /*!< TPI FIF
1152:Drivers/CMSIS/Include/core_cm4.h **** 
1153:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM2_Pos                 16U                                         /*!< TPI FIF
1154:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM2_Msk                 (0xFFUL << TPI_FIFO1_ITM2_Pos)              /*!< TPI FIF
1155:Drivers/CMSIS/Include/core_cm4.h **** 
1156:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM1_Pos                  8U                                         /*!< TPI FIF
1157:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM1_Msk                 (0xFFUL << TPI_FIFO1_ITM1_Pos)              /*!< TPI FIF
1158:Drivers/CMSIS/Include/core_cm4.h **** 
1159:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM0_Pos                  0U                                         /*!< TPI FIF
1160:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM0_Msk                 (0xFFUL /*<< TPI_FIFO1_ITM0_Pos*/)          /*!< TPI FIF
1161:Drivers/CMSIS/Include/core_cm4.h **** 
1162:Drivers/CMSIS/Include/core_cm4.h **** /* TPI ITATBCTR0 Register Definitions */
1163:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY2_Pos          0U                                         /*!< TPI ITA
1164:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY2_Msk         (0x1UL /*<< TPI_ITATBCTR0_ATREADY2_Pos*/)   /*!< TPI ITA
1165:Drivers/CMSIS/Include/core_cm4.h **** 
1166:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY1_Pos          0U                                         /*!< TPI ITA
1167:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY1_Msk         (0x1UL /*<< TPI_ITATBCTR0_ATREADY1_Pos*/)   /*!< TPI ITA
1168:Drivers/CMSIS/Include/core_cm4.h **** 
1169:Drivers/CMSIS/Include/core_cm4.h **** /* TPI Integration Mode Control Register Definitions */
1170:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITCTRL_Mode_Pos                 0U                                         /*!< TPI ITC
ARM GAS  /tmp/ccDHp4gG.s 			page 22


1171:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITCTRL_Mode_Msk                (0x3UL /*<< TPI_ITCTRL_Mode_Pos*/)          /*!< TPI ITC
1172:Drivers/CMSIS/Include/core_cm4.h **** 
1173:Drivers/CMSIS/Include/core_cm4.h **** /* TPI DEVID Register Definitions */
1174:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_NRZVALID_Pos             11U                                         /*!< TPI DEV
1175:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_NRZVALID_Msk             (0x1UL << TPI_DEVID_NRZVALID_Pos)           /*!< TPI DEV
1176:Drivers/CMSIS/Include/core_cm4.h **** 
1177:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_MANCVALID_Pos            10U                                         /*!< TPI DEV
1178:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_MANCVALID_Msk            (0x1UL << TPI_DEVID_MANCVALID_Pos)          /*!< TPI DEV
1179:Drivers/CMSIS/Include/core_cm4.h **** 
1180:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_PTINVALID_Pos             9U                                         /*!< TPI DEV
1181:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_PTINVALID_Msk            (0x1UL << TPI_DEVID_PTINVALID_Pos)          /*!< TPI DEV
1182:Drivers/CMSIS/Include/core_cm4.h **** 
1183:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_MinBufSz_Pos              6U                                         /*!< TPI DEV
1184:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_MinBufSz_Msk             (0x7UL << TPI_DEVID_MinBufSz_Pos)           /*!< TPI DEV
1185:Drivers/CMSIS/Include/core_cm4.h **** 
1186:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_AsynClkIn_Pos             5U                                         /*!< TPI DEV
1187:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_AsynClkIn_Msk            (0x1UL << TPI_DEVID_AsynClkIn_Pos)          /*!< TPI DEV
1188:Drivers/CMSIS/Include/core_cm4.h **** 
1189:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_NrTraceInput_Pos          0U                                         /*!< TPI DEV
1190:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_NrTraceInput_Msk         (0x1FUL /*<< TPI_DEVID_NrTraceInput_Pos*/)  /*!< TPI DEV
1191:Drivers/CMSIS/Include/core_cm4.h **** 
1192:Drivers/CMSIS/Include/core_cm4.h **** /* TPI DEVTYPE Register Definitions */
1193:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVTYPE_SubType_Pos             4U                                         /*!< TPI DEV
1194:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVTYPE_SubType_Msk            (0xFUL /*<< TPI_DEVTYPE_SubType_Pos*/)      /*!< TPI DEV
1195:Drivers/CMSIS/Include/core_cm4.h **** 
1196:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVTYPE_MajorType_Pos           0U                                         /*!< TPI DEV
1197:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVTYPE_MajorType_Msk          (0xFUL << TPI_DEVTYPE_MajorType_Pos)        /*!< TPI DEV
1198:Drivers/CMSIS/Include/core_cm4.h **** 
1199:Drivers/CMSIS/Include/core_cm4.h **** /*@}*/ /* end of group CMSIS_TPI */
1200:Drivers/CMSIS/Include/core_cm4.h **** 
1201:Drivers/CMSIS/Include/core_cm4.h **** 
1202:Drivers/CMSIS/Include/core_cm4.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1203:Drivers/CMSIS/Include/core_cm4.h **** /**
1204:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
1205:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_MPU     Memory Protection Unit (MPU)
1206:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Memory Protection Unit (MPU)
1207:Drivers/CMSIS/Include/core_cm4.h ****   @{
1208:Drivers/CMSIS/Include/core_cm4.h ****  */
1209:Drivers/CMSIS/Include/core_cm4.h **** 
1210:Drivers/CMSIS/Include/core_cm4.h **** /**
1211:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Memory Protection Unit (MPU).
1212:Drivers/CMSIS/Include/core_cm4.h ****  */
1213:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
1214:Drivers/CMSIS/Include/core_cm4.h **** {
1215:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t TYPE;                   /*!< Offset: 0x000 (R/ )  MPU Type Register */
1216:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x004 (R/W)  MPU Control Register */
1217:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RNR;                    /*!< Offset: 0x008 (R/W)  MPU Region RNRber Register */
1218:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RBAR;                   /*!< Offset: 0x00C (R/W)  MPU Region Base Address Register
1219:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RASR;                   /*!< Offset: 0x010 (R/W)  MPU Region Attribute and Size Re
1220:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RBAR_A1;                /*!< Offset: 0x014 (R/W)  MPU Alias 1 Region Base Address 
1221:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RASR_A1;                /*!< Offset: 0x018 (R/W)  MPU Alias 1 Region Attribute and
1222:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RBAR_A2;                /*!< Offset: 0x01C (R/W)  MPU Alias 2 Region Base Address 
1223:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RASR_A2;                /*!< Offset: 0x020 (R/W)  MPU Alias 2 Region Attribute and
1224:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RBAR_A3;                /*!< Offset: 0x024 (R/W)  MPU Alias 3 Region Base Address 
1225:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RASR_A3;                /*!< Offset: 0x028 (R/W)  MPU Alias 3 Region Attribute and
1226:Drivers/CMSIS/Include/core_cm4.h **** } MPU_Type;
1227:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/ccDHp4gG.s 			page 23


1228:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_RALIASES                  4U
1229:Drivers/CMSIS/Include/core_cm4.h **** 
1230:Drivers/CMSIS/Include/core_cm4.h **** /* MPU Type Register Definitions */
1231:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_IREGION_Pos               16U                                            /*!< MPU 
1232:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_IREGION_Msk               (0xFFUL << MPU_TYPE_IREGION_Pos)               /*!< MPU 
1233:Drivers/CMSIS/Include/core_cm4.h **** 
1234:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_DREGION_Pos                8U                                            /*!< MPU 
1235:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_DREGION_Msk               (0xFFUL << MPU_TYPE_DREGION_Pos)               /*!< MPU 
1236:Drivers/CMSIS/Include/core_cm4.h **** 
1237:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_SEPARATE_Pos               0U                                            /*!< MPU 
1238:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_SEPARATE_Msk              (1UL /*<< MPU_TYPE_SEPARATE_Pos*/)             /*!< MPU 
1239:Drivers/CMSIS/Include/core_cm4.h **** 
1240:Drivers/CMSIS/Include/core_cm4.h **** /* MPU Control Register Definitions */
1241:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2U                                            /*!< MPU 
1242:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1UL << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
1243:Drivers/CMSIS/Include/core_cm4.h **** 
1244:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_HFNMIENA_Pos               1U                                            /*!< MPU 
1245:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_HFNMIENA_Msk              (1UL << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
1246:Drivers/CMSIS/Include/core_cm4.h **** 
1247:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_ENABLE_Pos                 0U                                            /*!< MPU 
1248:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_ENABLE_Msk                (1UL /*<< MPU_CTRL_ENABLE_Pos*/)               /*!< MPU 
1249:Drivers/CMSIS/Include/core_cm4.h **** 
1250:Drivers/CMSIS/Include/core_cm4.h **** /* MPU Region Number Register Definitions */
1251:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RNR_REGION_Pos                  0U                                            /*!< MPU 
1252:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RNR_REGION_Msk                 (0xFFUL /*<< MPU_RNR_REGION_Pos*/)             /*!< MPU 
1253:Drivers/CMSIS/Include/core_cm4.h **** 
1254:Drivers/CMSIS/Include/core_cm4.h **** /* MPU Region Base Address Register Definitions */
1255:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_ADDR_Pos                   5U                                            /*!< MPU 
1256:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFUL << MPU_RBAR_ADDR_Pos)             /*!< MPU 
1257:Drivers/CMSIS/Include/core_cm4.h **** 
1258:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_VALID_Pos                  4U                                            /*!< MPU 
1259:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_VALID_Msk                 (1UL << MPU_RBAR_VALID_Pos)                    /*!< MPU 
1260:Drivers/CMSIS/Include/core_cm4.h **** 
1261:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_REGION_Pos                 0U                                            /*!< MPU 
1262:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_REGION_Msk                (0xFUL /*<< MPU_RBAR_REGION_Pos*/)             /*!< MPU 
1263:Drivers/CMSIS/Include/core_cm4.h **** 
1264:Drivers/CMSIS/Include/core_cm4.h **** /* MPU Region Attribute and Size Register Definitions */
1265:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_ATTRS_Pos                 16U                                            /*!< MPU 
1266:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_ATTRS_Msk                 (0xFFFFUL << MPU_RASR_ATTRS_Pos)               /*!< MPU 
1267:Drivers/CMSIS/Include/core_cm4.h **** 
1268:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_XN_Pos                    28U                                            /*!< MPU 
1269:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_XN_Msk                    (1UL << MPU_RASR_XN_Pos)                       /*!< MPU 
1270:Drivers/CMSIS/Include/core_cm4.h **** 
1271:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_AP_Pos                    24U                                            /*!< MPU 
1272:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_AP_Msk                    (0x7UL << MPU_RASR_AP_Pos)                     /*!< MPU 
1273:Drivers/CMSIS/Include/core_cm4.h **** 
1274:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_TEX_Pos                   19U                                            /*!< MPU 
1275:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_TEX_Msk                   (0x7UL << MPU_RASR_TEX_Pos)                    /*!< MPU 
1276:Drivers/CMSIS/Include/core_cm4.h **** 
1277:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_S_Pos                     18U                                            /*!< MPU 
1278:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_S_Msk                     (1UL << MPU_RASR_S_Pos)                        /*!< MPU 
1279:Drivers/CMSIS/Include/core_cm4.h **** 
1280:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_C_Pos                     17U                                            /*!< MPU 
1281:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_C_Msk                     (1UL << MPU_RASR_C_Pos)                        /*!< MPU 
1282:Drivers/CMSIS/Include/core_cm4.h **** 
1283:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_B_Pos                     16U                                            /*!< MPU 
1284:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_B_Msk                     (1UL << MPU_RASR_B_Pos)                        /*!< MPU 
ARM GAS  /tmp/ccDHp4gG.s 			page 24


1285:Drivers/CMSIS/Include/core_cm4.h **** 
1286:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_SRD_Pos                    8U                                            /*!< MPU 
1287:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_SRD_Msk                   (0xFFUL << MPU_RASR_SRD_Pos)                   /*!< MPU 
1288:Drivers/CMSIS/Include/core_cm4.h **** 
1289:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_SIZE_Pos                   1U                                            /*!< MPU 
1290:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_SIZE_Msk                  (0x1FUL << MPU_RASR_SIZE_Pos)                  /*!< MPU 
1291:Drivers/CMSIS/Include/core_cm4.h **** 
1292:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_ENABLE_Pos                 0U                                            /*!< MPU 
1293:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_ENABLE_Msk                (1UL /*<< MPU_RASR_ENABLE_Pos*/)               /*!< MPU 
1294:Drivers/CMSIS/Include/core_cm4.h **** 
1295:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_MPU */
1296:Drivers/CMSIS/Include/core_cm4.h **** #endif /* defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U) */
1297:Drivers/CMSIS/Include/core_cm4.h **** 
1298:Drivers/CMSIS/Include/core_cm4.h **** 
1299:Drivers/CMSIS/Include/core_cm4.h **** /**
1300:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
1301:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_FPU     Floating Point Unit (FPU)
1302:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Floating Point Unit (FPU)
1303:Drivers/CMSIS/Include/core_cm4.h ****   @{
1304:Drivers/CMSIS/Include/core_cm4.h ****  */
1305:Drivers/CMSIS/Include/core_cm4.h **** 
1306:Drivers/CMSIS/Include/core_cm4.h **** /**
1307:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Floating Point Unit (FPU).
1308:Drivers/CMSIS/Include/core_cm4.h ****  */
1309:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
1310:Drivers/CMSIS/Include/core_cm4.h **** {
1311:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[1U];
1312:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FPCCR;                  /*!< Offset: 0x004 (R/W)  Floating-Point Context Control R
1313:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FPCAR;                  /*!< Offset: 0x008 (R/W)  Floating-Point Context Address R
1314:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FPDSCR;                 /*!< Offset: 0x00C (R/W)  Floating-Point Default Status Co
1315:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t MVFR0;                  /*!< Offset: 0x010 (R/ )  Media and FP Feature Register 0 
1316:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t MVFR1;                  /*!< Offset: 0x014 (R/ )  Media and FP Feature Register 1 
1317:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t MVFR2;                  /*!< Offset: 0x018 (R/ )  Media and FP Feature Register 2 
1318:Drivers/CMSIS/Include/core_cm4.h **** } FPU_Type;
1319:Drivers/CMSIS/Include/core_cm4.h **** 
1320:Drivers/CMSIS/Include/core_cm4.h **** /* Floating-Point Context Control Register Definitions */
1321:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_ASPEN_Pos                31U                                            /*!< FPCC
1322:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_ASPEN_Msk                (1UL << FPU_FPCCR_ASPEN_Pos)                   /*!< FPCC
1323:Drivers/CMSIS/Include/core_cm4.h **** 
1324:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_LSPEN_Pos                30U                                            /*!< FPCC
1325:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_LSPEN_Msk                (1UL << FPU_FPCCR_LSPEN_Pos)                   /*!< FPCC
1326:Drivers/CMSIS/Include/core_cm4.h **** 
1327:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_MONRDY_Pos                8U                                            /*!< FPCC
1328:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_MONRDY_Msk               (1UL << FPU_FPCCR_MONRDY_Pos)                  /*!< FPCC
1329:Drivers/CMSIS/Include/core_cm4.h **** 
1330:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_BFRDY_Pos                 6U                                            /*!< FPCC
1331:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_BFRDY_Msk                (1UL << FPU_FPCCR_BFRDY_Pos)                   /*!< FPCC
1332:Drivers/CMSIS/Include/core_cm4.h **** 
1333:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_MMRDY_Pos                 5U                                            /*!< FPCC
1334:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_MMRDY_Msk                (1UL << FPU_FPCCR_MMRDY_Pos)                   /*!< FPCC
1335:Drivers/CMSIS/Include/core_cm4.h **** 
1336:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_HFRDY_Pos                 4U                                            /*!< FPCC
1337:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_HFRDY_Msk                (1UL << FPU_FPCCR_HFRDY_Pos)                   /*!< FPCC
1338:Drivers/CMSIS/Include/core_cm4.h **** 
1339:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_THREAD_Pos                3U                                            /*!< FPCC
1340:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_THREAD_Msk               (1UL << FPU_FPCCR_THREAD_Pos)                  /*!< FPCC
1341:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/ccDHp4gG.s 			page 25


1342:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_USER_Pos                  1U                                            /*!< FPCC
1343:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_USER_Msk                 (1UL << FPU_FPCCR_USER_Pos)                    /*!< FPCC
1344:Drivers/CMSIS/Include/core_cm4.h **** 
1345:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_LSPACT_Pos                0U                                            /*!< FPCC
1346:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_LSPACT_Msk               (1UL /*<< FPU_FPCCR_LSPACT_Pos*/)              /*!< FPCC
1347:Drivers/CMSIS/Include/core_cm4.h **** 
1348:Drivers/CMSIS/Include/core_cm4.h **** /* Floating-Point Context Address Register Definitions */
1349:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCAR_ADDRESS_Pos               3U                                            /*!< FPCA
1350:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCAR_ADDRESS_Msk              (0x1FFFFFFFUL << FPU_FPCAR_ADDRESS_Pos)        /*!< FPCA
1351:Drivers/CMSIS/Include/core_cm4.h **** 
1352:Drivers/CMSIS/Include/core_cm4.h **** /* Floating-Point Default Status Control Register Definitions */
1353:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_AHP_Pos                 26U                                            /*!< FPDS
1354:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_AHP_Msk                 (1UL << FPU_FPDSCR_AHP_Pos)                    /*!< FPDS
1355:Drivers/CMSIS/Include/core_cm4.h **** 
1356:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_DN_Pos                  25U                                            /*!< FPDS
1357:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_DN_Msk                  (1UL << FPU_FPDSCR_DN_Pos)                     /*!< FPDS
1358:Drivers/CMSIS/Include/core_cm4.h **** 
1359:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_FZ_Pos                  24U                                            /*!< FPDS
1360:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_FZ_Msk                  (1UL << FPU_FPDSCR_FZ_Pos)                     /*!< FPDS
1361:Drivers/CMSIS/Include/core_cm4.h **** 
1362:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_RMode_Pos               22U                                            /*!< FPDS
1363:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_RMode_Msk               (3UL << FPU_FPDSCR_RMode_Pos)                  /*!< FPDS
1364:Drivers/CMSIS/Include/core_cm4.h **** 
1365:Drivers/CMSIS/Include/core_cm4.h **** /* Media and FP Feature Register 0 Definitions */
1366:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Pos    28U                                            /*!< MVFR
1367:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Msk    (0xFUL << FPU_MVFR0_FP_rounding_modes_Pos)     /*!< MVFR
1368:Drivers/CMSIS/Include/core_cm4.h **** 
1369:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Short_vectors_Pos        24U                                            /*!< MVFR
1370:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Short_vectors_Msk        (0xFUL << FPU_MVFR0_Short_vectors_Pos)         /*!< MVFR
1371:Drivers/CMSIS/Include/core_cm4.h **** 
1372:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Square_root_Pos          20U                                            /*!< MVFR
1373:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Square_root_Msk          (0xFUL << FPU_MVFR0_Square_root_Pos)           /*!< MVFR
1374:Drivers/CMSIS/Include/core_cm4.h **** 
1375:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Divide_Pos               16U                                            /*!< MVFR
1376:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Divide_Msk               (0xFUL << FPU_MVFR0_Divide_Pos)                /*!< MVFR
1377:Drivers/CMSIS/Include/core_cm4.h **** 
1378:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Pos    12U                                            /*!< MVFR
1379:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Msk    (0xFUL << FPU_MVFR0_FP_excep_trapping_Pos)     /*!< MVFR
1380:Drivers/CMSIS/Include/core_cm4.h **** 
1381:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Double_precision_Pos      8U                                            /*!< MVFR
1382:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Double_precision_Msk     (0xFUL << FPU_MVFR0_Double_precision_Pos)      /*!< MVFR
1383:Drivers/CMSIS/Include/core_cm4.h **** 
1384:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Single_precision_Pos      4U                                            /*!< MVFR
1385:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Single_precision_Msk     (0xFUL << FPU_MVFR0_Single_precision_Pos)      /*!< MVFR
1386:Drivers/CMSIS/Include/core_cm4.h **** 
1387:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Pos      0U                                            /*!< MVFR
1388:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Msk     (0xFUL /*<< FPU_MVFR0_A_SIMD_registers_Pos*/)  /*!< MVFR
1389:Drivers/CMSIS/Include/core_cm4.h **** 
1390:Drivers/CMSIS/Include/core_cm4.h **** /* Media and FP Feature Register 1 Definitions */
1391:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Pos         28U                                            /*!< MVFR
1392:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Msk         (0xFUL << FPU_MVFR1_FP_fused_MAC_Pos)          /*!< MVFR
1393:Drivers/CMSIS/Include/core_cm4.h **** 
1394:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Pos              24U                                            /*!< MVFR
1395:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Msk              (0xFUL << FPU_MVFR1_FP_HPFP_Pos)               /*!< MVFR
1396:Drivers/CMSIS/Include/core_cm4.h **** 
1397:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Pos            4U                                            /*!< MVFR
1398:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Msk           (0xFUL << FPU_MVFR1_D_NaN_mode_Pos)            /*!< MVFR
ARM GAS  /tmp/ccDHp4gG.s 			page 26


1399:Drivers/CMSIS/Include/core_cm4.h **** 
1400:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Pos              0U                                            /*!< MVFR
1401:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Msk             (0xFUL /*<< FPU_MVFR1_FtZ_mode_Pos*/)          /*!< MVFR
1402:Drivers/CMSIS/Include/core_cm4.h **** 
1403:Drivers/CMSIS/Include/core_cm4.h **** /* Media and FP Feature Register 2 Definitions */
1404:Drivers/CMSIS/Include/core_cm4.h **** 
1405:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR2_VFP_Misc_Pos              4U                                            /*!< MVFR
1406:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR2_VFP_Misc_Msk             (0xFUL << FPU_MVFR2_VFP_Misc_Pos)              /*!< MVFR
1407:Drivers/CMSIS/Include/core_cm4.h **** 
1408:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_FPU */
1409:Drivers/CMSIS/Include/core_cm4.h **** 
1410:Drivers/CMSIS/Include/core_cm4.h **** 
1411:Drivers/CMSIS/Include/core_cm4.h **** /**
1412:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
1413:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
1414:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Core Debug Registers
1415:Drivers/CMSIS/Include/core_cm4.h ****   @{
1416:Drivers/CMSIS/Include/core_cm4.h ****  */
1417:Drivers/CMSIS/Include/core_cm4.h **** 
1418:Drivers/CMSIS/Include/core_cm4.h **** /**
1419:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Core Debug Register (CoreDebug).
1420:Drivers/CMSIS/Include/core_cm4.h ****  */
1421:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
1422:Drivers/CMSIS/Include/core_cm4.h **** {
1423:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t DHCSR;                  /*!< Offset: 0x000 (R/W)  Debug Halting Control and Status
1424:Drivers/CMSIS/Include/core_cm4.h ****   __OM  uint32_t DCRSR;                  /*!< Offset: 0x004 ( /W)  Debug Core Register Selector Reg
1425:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t DCRDR;                  /*!< Offset: 0x008 (R/W)  Debug Core Register Data Registe
1426:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t DEMCR;                  /*!< Offset: 0x00C (R/W)  Debug Exception and Monitor Cont
1427:Drivers/CMSIS/Include/core_cm4.h **** } CoreDebug_Type;
1428:Drivers/CMSIS/Include/core_cm4.h **** 
1429:Drivers/CMSIS/Include/core_cm4.h **** /* Debug Halting Control and Status Register Definitions */
1430:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16U                                            /*!< Core
1431:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFUL << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
1432:Drivers/CMSIS/Include/core_cm4.h **** 
1433:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25U                                            /*!< Core
1434:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1UL << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
1435:Drivers/CMSIS/Include/core_cm4.h **** 
1436:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24U                                            /*!< Core
1437:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1UL << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
1438:Drivers/CMSIS/Include/core_cm4.h **** 
1439:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19U                                            /*!< Core
1440:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1UL << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
1441:Drivers/CMSIS/Include/core_cm4.h **** 
1442:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18U                                            /*!< Core
1443:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1UL << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
1444:Drivers/CMSIS/Include/core_cm4.h **** 
1445:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17U                                            /*!< Core
1446:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1UL << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
1447:Drivers/CMSIS/Include/core_cm4.h **** 
1448:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16U                                            /*!< Core
1449:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1UL << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
1450:Drivers/CMSIS/Include/core_cm4.h **** 
1451:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5U                                            /*!< Core
1452:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1UL << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
1453:Drivers/CMSIS/Include/core_cm4.h **** 
1454:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3U                                            /*!< Core
1455:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1UL << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
ARM GAS  /tmp/ccDHp4gG.s 			page 27


1456:Drivers/CMSIS/Include/core_cm4.h **** 
1457:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2U                                            /*!< Core
1458:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1UL << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
1459:Drivers/CMSIS/Include/core_cm4.h **** 
1460:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1U                                            /*!< Core
1461:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1UL << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
1462:Drivers/CMSIS/Include/core_cm4.h **** 
1463:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0U                                            /*!< Core
1464:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1UL /*<< CoreDebug_DHCSR_C_DEBUGEN_Pos*/)     /*!< Core
1465:Drivers/CMSIS/Include/core_cm4.h **** 
1466:Drivers/CMSIS/Include/core_cm4.h **** /* Debug Core Register Selector Register Definitions */
1467:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16U                                            /*!< Core
1468:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1UL << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
1469:Drivers/CMSIS/Include/core_cm4.h **** 
1470:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0U                                            /*!< Core
1471:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1FUL /*<< CoreDebug_DCRSR_REGSEL_Pos*/)     /*!< Core
1472:Drivers/CMSIS/Include/core_cm4.h **** 
1473:Drivers/CMSIS/Include/core_cm4.h **** /* Debug Exception and Monitor Control Register Definitions */
1474:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24U                                            /*!< Core
1475:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1UL << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
1476:Drivers/CMSIS/Include/core_cm4.h **** 
1477:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19U                                            /*!< Core
1478:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1UL << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
1479:Drivers/CMSIS/Include/core_cm4.h **** 
1480:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18U                                            /*!< Core
1481:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1UL << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
1482:Drivers/CMSIS/Include/core_cm4.h **** 
1483:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17U                                            /*!< Core
1484:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1UL << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
1485:Drivers/CMSIS/Include/core_cm4.h **** 
1486:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16U                                            /*!< Core
1487:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1UL << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
1488:Drivers/CMSIS/Include/core_cm4.h **** 
1489:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10U                                            /*!< Core
1490:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1UL << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
1491:Drivers/CMSIS/Include/core_cm4.h **** 
1492:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9U                                            /*!< Core
1493:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1UL << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
1494:Drivers/CMSIS/Include/core_cm4.h **** 
1495:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8U                                            /*!< Core
1496:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1UL << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
1497:Drivers/CMSIS/Include/core_cm4.h **** 
1498:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7U                                            /*!< Core
1499:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1UL << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
1500:Drivers/CMSIS/Include/core_cm4.h **** 
1501:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6U                                            /*!< Core
1502:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1UL << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
1503:Drivers/CMSIS/Include/core_cm4.h **** 
1504:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5U                                            /*!< Core
1505:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1UL << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
1506:Drivers/CMSIS/Include/core_cm4.h **** 
1507:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4U                                            /*!< Core
1508:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1UL << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
1509:Drivers/CMSIS/Include/core_cm4.h **** 
1510:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0U                                            /*!< Core
1511:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1UL /*<< CoreDebug_DEMCR_VC_CORERESET_Pos*/)  /*!< Core
1512:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/ccDHp4gG.s 			page 28


1513:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_CoreDebug */
1514:Drivers/CMSIS/Include/core_cm4.h **** 
1515:Drivers/CMSIS/Include/core_cm4.h **** 
1516:Drivers/CMSIS/Include/core_cm4.h **** /**
1517:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup    CMSIS_core_register
1518:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup   CMSIS_core_bitfield     Core register bit field macros
1519:Drivers/CMSIS/Include/core_cm4.h ****   \brief      Macros for use with bit field definitions (xxx_Pos, xxx_Msk).
1520:Drivers/CMSIS/Include/core_cm4.h ****   @{
1521:Drivers/CMSIS/Include/core_cm4.h ****  */
1522:Drivers/CMSIS/Include/core_cm4.h **** 
1523:Drivers/CMSIS/Include/core_cm4.h **** /**
1524:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Mask and shift a bit field value for use in a register bit range.
1525:Drivers/CMSIS/Include/core_cm4.h ****   \param[in] field  Name of the register bit field.
1526:Drivers/CMSIS/Include/core_cm4.h ****   \param[in] value  Value of the bit field. This parameter is interpreted as an uint32_t type.
1527:Drivers/CMSIS/Include/core_cm4.h ****   \return           Masked and shifted value.
1528:Drivers/CMSIS/Include/core_cm4.h **** */
1529:Drivers/CMSIS/Include/core_cm4.h **** #define _VAL2FLD(field, value)    (((uint32_t)(value) << field ## _Pos) & field ## _Msk)
1530:Drivers/CMSIS/Include/core_cm4.h **** 
1531:Drivers/CMSIS/Include/core_cm4.h **** /**
1532:Drivers/CMSIS/Include/core_cm4.h ****   \brief     Mask and shift a register value to extract a bit filed value.
1533:Drivers/CMSIS/Include/core_cm4.h ****   \param[in] field  Name of the register bit field.
1534:Drivers/CMSIS/Include/core_cm4.h ****   \param[in] value  Value of register. This parameter is interpreted as an uint32_t type.
1535:Drivers/CMSIS/Include/core_cm4.h ****   \return           Masked and shifted bit field value.
1536:Drivers/CMSIS/Include/core_cm4.h **** */
1537:Drivers/CMSIS/Include/core_cm4.h **** #define _FLD2VAL(field, value)    (((uint32_t)(value) & field ## _Msk) >> field ## _Pos)
1538:Drivers/CMSIS/Include/core_cm4.h **** 
1539:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_core_bitfield */
1540:Drivers/CMSIS/Include/core_cm4.h **** 
1541:Drivers/CMSIS/Include/core_cm4.h **** 
1542:Drivers/CMSIS/Include/core_cm4.h **** /**
1543:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup    CMSIS_core_register
1544:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup   CMSIS_core_base     Core Definitions
1545:Drivers/CMSIS/Include/core_cm4.h ****   \brief      Definitions for base addresses, unions, and structures.
1546:Drivers/CMSIS/Include/core_cm4.h ****   @{
1547:Drivers/CMSIS/Include/core_cm4.h ****  */
1548:Drivers/CMSIS/Include/core_cm4.h **** 
1549:Drivers/CMSIS/Include/core_cm4.h **** /* Memory mapping of Core Hardware */
1550:Drivers/CMSIS/Include/core_cm4.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
1551:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_BASE            (0xE0000000UL)                            /*!< ITM Base Address */
1552:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_BASE            (0xE0001000UL)                            /*!< DWT Base Address */
1553:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_BASE            (0xE0040000UL)                            /*!< TPI Base Address */
1554:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_BASE      (0xE000EDF0UL)                            /*!< Core Debug Base Address 
1555:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address */
1556:Drivers/CMSIS/Include/core_cm4.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address */
1557:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
1558:Drivers/CMSIS/Include/core_cm4.h **** 
1559:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB              ((SCnSCB_Type    *)     SCS_BASE      )   /*!< System control Register 
1560:Drivers/CMSIS/Include/core_cm4.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
1561:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
1562:Drivers/CMSIS/Include/core_cm4.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
1563:Drivers/CMSIS/Include/core_cm4.h **** #define ITM                 ((ITM_Type       *)     ITM_BASE      )   /*!< ITM configuration struct
1564:Drivers/CMSIS/Include/core_cm4.h **** #define DWT                 ((DWT_Type       *)     DWT_BASE      )   /*!< DWT configuration struct
1565:Drivers/CMSIS/Include/core_cm4.h **** #define TPI                 ((TPI_Type       *)     TPI_BASE      )   /*!< TPI configuration struct
1566:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
1567:Drivers/CMSIS/Include/core_cm4.h **** 
1568:Drivers/CMSIS/Include/core_cm4.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1569:Drivers/CMSIS/Include/core_cm4.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90UL)                    /*!< Memory Protection Unit *
ARM GAS  /tmp/ccDHp4gG.s 			page 29


1570:Drivers/CMSIS/Include/core_cm4.h ****   #define MPU               ((MPU_Type       *)     MPU_BASE      )   /*!< Memory Protection Unit *
1571:Drivers/CMSIS/Include/core_cm4.h **** #endif
1572:Drivers/CMSIS/Include/core_cm4.h **** 
1573:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_BASE            (SCS_BASE +  0x0F30UL)                    /*!< Floating Point Unit */
1574:Drivers/CMSIS/Include/core_cm4.h **** #define FPU                 ((FPU_Type       *)     FPU_BASE      )   /*!< Floating Point Unit */
1575:Drivers/CMSIS/Include/core_cm4.h **** 
1576:Drivers/CMSIS/Include/core_cm4.h **** /*@} */
1577:Drivers/CMSIS/Include/core_cm4.h **** 
1578:Drivers/CMSIS/Include/core_cm4.h **** 
1579:Drivers/CMSIS/Include/core_cm4.h **** 
1580:Drivers/CMSIS/Include/core_cm4.h **** /*******************************************************************************
1581:Drivers/CMSIS/Include/core_cm4.h ****  *                Hardware Abstraction Layer
1582:Drivers/CMSIS/Include/core_cm4.h ****   Core Function Interface contains:
1583:Drivers/CMSIS/Include/core_cm4.h ****   - Core NVIC Functions
1584:Drivers/CMSIS/Include/core_cm4.h ****   - Core SysTick Functions
1585:Drivers/CMSIS/Include/core_cm4.h ****   - Core Debug Functions
1586:Drivers/CMSIS/Include/core_cm4.h ****   - Core Register Access Functions
1587:Drivers/CMSIS/Include/core_cm4.h ****  ******************************************************************************/
1588:Drivers/CMSIS/Include/core_cm4.h **** /**
1589:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
1590:Drivers/CMSIS/Include/core_cm4.h **** */
1591:Drivers/CMSIS/Include/core_cm4.h **** 
1592:Drivers/CMSIS/Include/core_cm4.h **** 
1593:Drivers/CMSIS/Include/core_cm4.h **** 
1594:Drivers/CMSIS/Include/core_cm4.h **** /* ##########################   NVIC functions  #################################### */
1595:Drivers/CMSIS/Include/core_cm4.h **** /**
1596:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_Core_FunctionInterface
1597:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_Core_NVICFunctions NVIC Functions
1598:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Functions that manage interrupts and exceptions via the NVIC.
1599:Drivers/CMSIS/Include/core_cm4.h ****   @{
1600:Drivers/CMSIS/Include/core_cm4.h ****  */
1601:Drivers/CMSIS/Include/core_cm4.h **** 
1602:Drivers/CMSIS/Include/core_cm4.h **** #ifdef CMSIS_NVIC_VIRTUAL
1603:Drivers/CMSIS/Include/core_cm4.h ****   #ifndef CMSIS_NVIC_VIRTUAL_HEADER_FILE
1604:Drivers/CMSIS/Include/core_cm4.h ****     #define CMSIS_NVIC_VIRTUAL_HEADER_FILE "cmsis_nvic_virtual.h"
1605:Drivers/CMSIS/Include/core_cm4.h ****   #endif
1606:Drivers/CMSIS/Include/core_cm4.h ****   #include CMSIS_NVIC_VIRTUAL_HEADER_FILE
1607:Drivers/CMSIS/Include/core_cm4.h **** #else
1608:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_SetPriorityGrouping    __NVIC_SetPriorityGrouping
1609:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_GetPriorityGrouping    __NVIC_GetPriorityGrouping
1610:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_EnableIRQ              __NVIC_EnableIRQ
1611:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_GetEnableIRQ           __NVIC_GetEnableIRQ
1612:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_DisableIRQ             __NVIC_DisableIRQ
1613:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_GetPendingIRQ          __NVIC_GetPendingIRQ
1614:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_SetPendingIRQ          __NVIC_SetPendingIRQ
1615:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_ClearPendingIRQ        __NVIC_ClearPendingIRQ
1616:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_GetActive              __NVIC_GetActive
1617:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_SetPriority            __NVIC_SetPriority
1618:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_GetPriority            __NVIC_GetPriority
1619:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_SystemReset            __NVIC_SystemReset
1620:Drivers/CMSIS/Include/core_cm4.h **** #endif /* CMSIS_NVIC_VIRTUAL */
1621:Drivers/CMSIS/Include/core_cm4.h **** 
1622:Drivers/CMSIS/Include/core_cm4.h **** #ifdef CMSIS_VECTAB_VIRTUAL
1623:Drivers/CMSIS/Include/core_cm4.h ****   #ifndef CMSIS_VECTAB_VIRTUAL_HEADER_FILE
1624:Drivers/CMSIS/Include/core_cm4.h ****     #define CMSIS_VECTAB_VIRTUAL_HEADER_FILE "cmsis_vectab_virtual.h"
1625:Drivers/CMSIS/Include/core_cm4.h ****   #endif
1626:Drivers/CMSIS/Include/core_cm4.h ****   #include CMSIS_VECTAB_VIRTUAL_HEADER_FILE
ARM GAS  /tmp/ccDHp4gG.s 			page 30


1627:Drivers/CMSIS/Include/core_cm4.h **** #else
1628:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_SetVector              __NVIC_SetVector
1629:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_GetVector              __NVIC_GetVector
1630:Drivers/CMSIS/Include/core_cm4.h **** #endif  /* (CMSIS_VECTAB_VIRTUAL) */
1631:Drivers/CMSIS/Include/core_cm4.h **** 
1632:Drivers/CMSIS/Include/core_cm4.h **** #define NVIC_USER_IRQ_OFFSET          16
1633:Drivers/CMSIS/Include/core_cm4.h **** 
1634:Drivers/CMSIS/Include/core_cm4.h **** 
1635:Drivers/CMSIS/Include/core_cm4.h **** /* The following EXC_RETURN values are saved the LR on exception entry */
1636:Drivers/CMSIS/Include/core_cm4.h **** #define EXC_RETURN_HANDLER         (0xFFFFFFF1UL)     /* return to Handler mode, uses MSP after ret
1637:Drivers/CMSIS/Include/core_cm4.h **** #define EXC_RETURN_THREAD_MSP      (0xFFFFFFF9UL)     /* return to Thread mode, uses MSP after retu
1638:Drivers/CMSIS/Include/core_cm4.h **** #define EXC_RETURN_THREAD_PSP      (0xFFFFFFFDUL)     /* return to Thread mode, uses PSP after retu
1639:Drivers/CMSIS/Include/core_cm4.h **** #define EXC_RETURN_HANDLER_FPU     (0xFFFFFFE1UL)     /* return to Handler mode, uses MSP after ret
1640:Drivers/CMSIS/Include/core_cm4.h **** #define EXC_RETURN_THREAD_MSP_FPU  (0xFFFFFFE9UL)     /* return to Thread mode, uses MSP after retu
1641:Drivers/CMSIS/Include/core_cm4.h **** #define EXC_RETURN_THREAD_PSP_FPU  (0xFFFFFFEDUL)     /* return to Thread mode, uses PSP after retu
1642:Drivers/CMSIS/Include/core_cm4.h **** 
1643:Drivers/CMSIS/Include/core_cm4.h **** 
1644:Drivers/CMSIS/Include/core_cm4.h **** /**
1645:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Set Priority Grouping
1646:Drivers/CMSIS/Include/core_cm4.h ****   \details Sets the priority grouping field using the required unlock sequence.
1647:Drivers/CMSIS/Include/core_cm4.h ****            The parameter PriorityGroup is assigned to the field SCB->AIRCR [10:8] PRIGROUP field.
1648:Drivers/CMSIS/Include/core_cm4.h ****            Only values from 0..7 are used.
1649:Drivers/CMSIS/Include/core_cm4.h ****            In case of a conflict between priority grouping and available
1650:Drivers/CMSIS/Include/core_cm4.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1651:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      PriorityGroup  Priority grouping field.
1652:Drivers/CMSIS/Include/core_cm4.h ****  */
1653:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1654:Drivers/CMSIS/Include/core_cm4.h **** {
1655:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t reg_value;
1656:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 a
1657:Drivers/CMSIS/Include/core_cm4.h **** 
1658:Drivers/CMSIS/Include/core_cm4.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
1659:Drivers/CMSIS/Include/core_cm4.h ****   reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to chan
1660:Drivers/CMSIS/Include/core_cm4.h ****   reg_value  =  (reg_value                                   |
1661:Drivers/CMSIS/Include/core_cm4.h ****                 ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
1662:Drivers/CMSIS/Include/core_cm4.h ****                 (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key a
1663:Drivers/CMSIS/Include/core_cm4.h ****   SCB->AIRCR =  reg_value;
1664:Drivers/CMSIS/Include/core_cm4.h **** }
1665:Drivers/CMSIS/Include/core_cm4.h **** 
1666:Drivers/CMSIS/Include/core_cm4.h **** 
1667:Drivers/CMSIS/Include/core_cm4.h **** /**
1668:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Get Priority Grouping
1669:Drivers/CMSIS/Include/core_cm4.h ****   \details Reads the priority grouping field from the NVIC Interrupt Controller.
1670:Drivers/CMSIS/Include/core_cm4.h ****   \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
1671:Drivers/CMSIS/Include/core_cm4.h ****  */
1672:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
1673:Drivers/CMSIS/Include/core_cm4.h **** {
1674:Drivers/CMSIS/Include/core_cm4.h ****   return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
1675:Drivers/CMSIS/Include/core_cm4.h **** }
1676:Drivers/CMSIS/Include/core_cm4.h **** 
1677:Drivers/CMSIS/Include/core_cm4.h **** 
1678:Drivers/CMSIS/Include/core_cm4.h **** /**
1679:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Enable Interrupt
1680:Drivers/CMSIS/Include/core_cm4.h ****   \details Enables a device specific interrupt in the NVIC interrupt controller.
1681:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1682:Drivers/CMSIS/Include/core_cm4.h ****   \note    IRQn must not be negative.
1683:Drivers/CMSIS/Include/core_cm4.h ****  */
ARM GAS  /tmp/ccDHp4gG.s 			page 31


1684:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
1685:Drivers/CMSIS/Include/core_cm4.h **** {
1686:Drivers/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1687:Drivers/CMSIS/Include/core_cm4.h ****   {
1688:Drivers/CMSIS/Include/core_cm4.h ****     __COMPILER_BARRIER();
1689:Drivers/CMSIS/Include/core_cm4.h ****     NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1690:Drivers/CMSIS/Include/core_cm4.h ****     __COMPILER_BARRIER();
1691:Drivers/CMSIS/Include/core_cm4.h ****   }
1692:Drivers/CMSIS/Include/core_cm4.h **** }
1693:Drivers/CMSIS/Include/core_cm4.h **** 
1694:Drivers/CMSIS/Include/core_cm4.h **** 
1695:Drivers/CMSIS/Include/core_cm4.h **** /**
1696:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Get Interrupt Enable status
1697:Drivers/CMSIS/Include/core_cm4.h ****   \details Returns a device specific interrupt enable status from the NVIC interrupt controller.
1698:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1699:Drivers/CMSIS/Include/core_cm4.h ****   \return             0  Interrupt is not enabled.
1700:Drivers/CMSIS/Include/core_cm4.h ****   \return             1  Interrupt is enabled.
1701:Drivers/CMSIS/Include/core_cm4.h ****   \note    IRQn must not be negative.
1702:Drivers/CMSIS/Include/core_cm4.h ****  */
1703:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetEnableIRQ(IRQn_Type IRQn)
1704:Drivers/CMSIS/Include/core_cm4.h **** {
1705:Drivers/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1706:Drivers/CMSIS/Include/core_cm4.h ****   {
1707:Drivers/CMSIS/Include/core_cm4.h ****     return((uint32_t)(((NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1708:Drivers/CMSIS/Include/core_cm4.h ****   }
1709:Drivers/CMSIS/Include/core_cm4.h ****   else
1710:Drivers/CMSIS/Include/core_cm4.h ****   {
1711:Drivers/CMSIS/Include/core_cm4.h ****     return(0U);
1712:Drivers/CMSIS/Include/core_cm4.h ****   }
1713:Drivers/CMSIS/Include/core_cm4.h **** }
1714:Drivers/CMSIS/Include/core_cm4.h **** 
1715:Drivers/CMSIS/Include/core_cm4.h **** 
1716:Drivers/CMSIS/Include/core_cm4.h **** /**
1717:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Disable Interrupt
1718:Drivers/CMSIS/Include/core_cm4.h ****   \details Disables a device specific interrupt in the NVIC interrupt controller.
1719:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1720:Drivers/CMSIS/Include/core_cm4.h ****   \note    IRQn must not be negative.
1721:Drivers/CMSIS/Include/core_cm4.h ****  */
1722:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
1723:Drivers/CMSIS/Include/core_cm4.h **** {
1724:Drivers/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1725:Drivers/CMSIS/Include/core_cm4.h ****   {
1726:Drivers/CMSIS/Include/core_cm4.h ****     NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1727:Drivers/CMSIS/Include/core_cm4.h ****     __DSB();
1728:Drivers/CMSIS/Include/core_cm4.h ****     __ISB();
1729:Drivers/CMSIS/Include/core_cm4.h ****   }
1730:Drivers/CMSIS/Include/core_cm4.h **** }
1731:Drivers/CMSIS/Include/core_cm4.h **** 
1732:Drivers/CMSIS/Include/core_cm4.h **** 
1733:Drivers/CMSIS/Include/core_cm4.h **** /**
1734:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Get Pending Interrupt
1735:Drivers/CMSIS/Include/core_cm4.h ****   \details Reads the NVIC pending register and returns the pending bit for the specified device spe
1736:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1737:Drivers/CMSIS/Include/core_cm4.h ****   \return             0  Interrupt status is not pending.
1738:Drivers/CMSIS/Include/core_cm4.h ****   \return             1  Interrupt status is pending.
1739:Drivers/CMSIS/Include/core_cm4.h ****   \note    IRQn must not be negative.
1740:Drivers/CMSIS/Include/core_cm4.h ****  */
ARM GAS  /tmp/ccDHp4gG.s 			page 32


1741:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetPendingIRQ(IRQn_Type IRQn)
1742:Drivers/CMSIS/Include/core_cm4.h **** {
1743:Drivers/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1744:Drivers/CMSIS/Include/core_cm4.h ****   {
1745:Drivers/CMSIS/Include/core_cm4.h ****     return((uint32_t)(((NVIC->ISPR[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1746:Drivers/CMSIS/Include/core_cm4.h ****   }
1747:Drivers/CMSIS/Include/core_cm4.h ****   else
1748:Drivers/CMSIS/Include/core_cm4.h ****   {
1749:Drivers/CMSIS/Include/core_cm4.h ****     return(0U);
1750:Drivers/CMSIS/Include/core_cm4.h ****   }
1751:Drivers/CMSIS/Include/core_cm4.h **** }
1752:Drivers/CMSIS/Include/core_cm4.h **** 
1753:Drivers/CMSIS/Include/core_cm4.h **** 
1754:Drivers/CMSIS/Include/core_cm4.h **** /**
1755:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Set Pending Interrupt
1756:Drivers/CMSIS/Include/core_cm4.h ****   \details Sets the pending bit of a device specific interrupt in the NVIC pending register.
1757:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1758:Drivers/CMSIS/Include/core_cm4.h ****   \note    IRQn must not be negative.
1759:Drivers/CMSIS/Include/core_cm4.h ****  */
1760:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void __NVIC_SetPendingIRQ(IRQn_Type IRQn)
1761:Drivers/CMSIS/Include/core_cm4.h **** {
1762:Drivers/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1763:Drivers/CMSIS/Include/core_cm4.h ****   {
1764:Drivers/CMSIS/Include/core_cm4.h ****     NVIC->ISPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1765:Drivers/CMSIS/Include/core_cm4.h ****   }
1766:Drivers/CMSIS/Include/core_cm4.h **** }
1767:Drivers/CMSIS/Include/core_cm4.h **** 
1768:Drivers/CMSIS/Include/core_cm4.h **** 
1769:Drivers/CMSIS/Include/core_cm4.h **** /**
1770:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Clear Pending Interrupt
1771:Drivers/CMSIS/Include/core_cm4.h ****   \details Clears the pending bit of a device specific interrupt in the NVIC pending register.
1772:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1773:Drivers/CMSIS/Include/core_cm4.h ****   \note    IRQn must not be negative.
1774:Drivers/CMSIS/Include/core_cm4.h ****  */
1775:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void __NVIC_ClearPendingIRQ(IRQn_Type IRQn)
1776:Drivers/CMSIS/Include/core_cm4.h **** {
1777:Drivers/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1778:Drivers/CMSIS/Include/core_cm4.h ****   {
1779:Drivers/CMSIS/Include/core_cm4.h ****     NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1780:Drivers/CMSIS/Include/core_cm4.h ****   }
1781:Drivers/CMSIS/Include/core_cm4.h **** }
1782:Drivers/CMSIS/Include/core_cm4.h **** 
1783:Drivers/CMSIS/Include/core_cm4.h **** 
1784:Drivers/CMSIS/Include/core_cm4.h **** /**
1785:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Get Active Interrupt
1786:Drivers/CMSIS/Include/core_cm4.h ****   \details Reads the active register in the NVIC and returns the active bit for the device specific
1787:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1788:Drivers/CMSIS/Include/core_cm4.h ****   \return             0  Interrupt status is not active.
1789:Drivers/CMSIS/Include/core_cm4.h ****   \return             1  Interrupt status is active.
1790:Drivers/CMSIS/Include/core_cm4.h ****   \note    IRQn must not be negative.
1791:Drivers/CMSIS/Include/core_cm4.h ****  */
1792:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetActive(IRQn_Type IRQn)
1793:Drivers/CMSIS/Include/core_cm4.h **** {
1794:Drivers/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1795:Drivers/CMSIS/Include/core_cm4.h ****   {
1796:Drivers/CMSIS/Include/core_cm4.h ****     return((uint32_t)(((NVIC->IABR[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1797:Drivers/CMSIS/Include/core_cm4.h ****   }
ARM GAS  /tmp/ccDHp4gG.s 			page 33


1798:Drivers/CMSIS/Include/core_cm4.h ****   else
1799:Drivers/CMSIS/Include/core_cm4.h ****   {
1800:Drivers/CMSIS/Include/core_cm4.h ****     return(0U);
1801:Drivers/CMSIS/Include/core_cm4.h ****   }
1802:Drivers/CMSIS/Include/core_cm4.h **** }
1803:Drivers/CMSIS/Include/core_cm4.h **** 
1804:Drivers/CMSIS/Include/core_cm4.h **** 
1805:Drivers/CMSIS/Include/core_cm4.h **** /**
1806:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Set Interrupt Priority
1807:Drivers/CMSIS/Include/core_cm4.h ****   \details Sets the priority of a device specific interrupt or a processor exception.
1808:Drivers/CMSIS/Include/core_cm4.h ****            The interrupt number can be positive to specify a device specific interrupt,
1809:Drivers/CMSIS/Include/core_cm4.h ****            or negative to specify a processor exception.
1810:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Interrupt number.
1811:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]  priority  Priority to set.
1812:Drivers/CMSIS/Include/core_cm4.h ****   \note    The priority cannot be set for every processor exception.
1813:Drivers/CMSIS/Include/core_cm4.h ****  */
1814:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
1815:Drivers/CMSIS/Include/core_cm4.h **** {
1816:Drivers/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1817:Drivers/CMSIS/Include/core_cm4.h ****   {
1818:Drivers/CMSIS/Include/core_cm4.h ****     NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (u
1819:Drivers/CMSIS/Include/core_cm4.h ****   }
1820:Drivers/CMSIS/Include/core_cm4.h ****   else
1821:Drivers/CMSIS/Include/core_cm4.h ****   {
1822:Drivers/CMSIS/Include/core_cm4.h ****     SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (u
1823:Drivers/CMSIS/Include/core_cm4.h ****   }
1824:Drivers/CMSIS/Include/core_cm4.h **** }
1825:Drivers/CMSIS/Include/core_cm4.h **** 
1826:Drivers/CMSIS/Include/core_cm4.h **** 
1827:Drivers/CMSIS/Include/core_cm4.h **** /**
1828:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Get Interrupt Priority
1829:Drivers/CMSIS/Include/core_cm4.h ****   \details Reads the priority of a device specific interrupt or a processor exception.
1830:Drivers/CMSIS/Include/core_cm4.h ****            The interrupt number can be positive to specify a device specific interrupt,
1831:Drivers/CMSIS/Include/core_cm4.h ****            or negative to specify a processor exception.
1832:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]   IRQn  Interrupt number.
1833:Drivers/CMSIS/Include/core_cm4.h ****   \return             Interrupt Priority.
1834:Drivers/CMSIS/Include/core_cm4.h ****                       Value is aligned automatically to the implemented priority bits of the microc
1835:Drivers/CMSIS/Include/core_cm4.h ****  */
1836:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetPriority(IRQn_Type IRQn)
1837:Drivers/CMSIS/Include/core_cm4.h **** {
1838:Drivers/CMSIS/Include/core_cm4.h **** 
1839:Drivers/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1840:Drivers/CMSIS/Include/core_cm4.h ****   {
1841:Drivers/CMSIS/Include/core_cm4.h ****     return(((uint32_t)NVIC->IP[((uint32_t)IRQn)]               >> (8U - __NVIC_PRIO_BITS)));
1842:Drivers/CMSIS/Include/core_cm4.h ****   }
1843:Drivers/CMSIS/Include/core_cm4.h ****   else
1844:Drivers/CMSIS/Include/core_cm4.h ****   {
1845:Drivers/CMSIS/Include/core_cm4.h ****     return(((uint32_t)SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] >> (8U - __NVIC_PRIO_BITS)));
1846:Drivers/CMSIS/Include/core_cm4.h ****   }
1847:Drivers/CMSIS/Include/core_cm4.h **** }
1848:Drivers/CMSIS/Include/core_cm4.h **** 
1849:Drivers/CMSIS/Include/core_cm4.h **** 
1850:Drivers/CMSIS/Include/core_cm4.h **** /**
1851:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Encode Priority
1852:Drivers/CMSIS/Include/core_cm4.h ****   \details Encodes the priority for an interrupt with the given priority group,
1853:Drivers/CMSIS/Include/core_cm4.h ****            preemptive priority value, and subpriority value.
1854:Drivers/CMSIS/Include/core_cm4.h ****            In case of a conflict between priority grouping and available
ARM GAS  /tmp/ccDHp4gG.s 			page 34


1855:Drivers/CMSIS/Include/core_cm4.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1856:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]     PriorityGroup  Used priority group.
1857:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
1858:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]       SubPriority  Subpriority value (starting from 0).
1859:Drivers/CMSIS/Include/core_cm4.h ****   \return                        Encoded priority. Value can be used in the function \ref NVIC_SetP
1860:Drivers/CMSIS/Include/core_cm4.h ****  */
1861:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uin
1862:Drivers/CMSIS/Include/core_cm4.h **** {
1863:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
1864:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t PreemptPriorityBits;
1865:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t SubPriorityBits;
1866:Drivers/CMSIS/Include/core_cm4.h **** 
1867:Drivers/CMSIS/Include/core_cm4.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
1868:Drivers/CMSIS/Include/core_cm4.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
1869:Drivers/CMSIS/Include/core_cm4.h **** 
1870:Drivers/CMSIS/Include/core_cm4.h ****   return (
1871:Drivers/CMSIS/Include/core_cm4.h ****            ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits
1872:Drivers/CMSIS/Include/core_cm4.h ****            ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
1873:Drivers/CMSIS/Include/core_cm4.h ****          );
1874:Drivers/CMSIS/Include/core_cm4.h **** }
1875:Drivers/CMSIS/Include/core_cm4.h **** 
1876:Drivers/CMSIS/Include/core_cm4.h **** 
1877:Drivers/CMSIS/Include/core_cm4.h **** /**
1878:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Decode Priority
1879:Drivers/CMSIS/Include/core_cm4.h ****   \details Decodes an interrupt priority value with a given priority group to
1880:Drivers/CMSIS/Include/core_cm4.h ****            preemptive priority value and subpriority value.
1881:Drivers/CMSIS/Include/core_cm4.h ****            In case of a conflict between priority grouping and available
1882:Drivers/CMSIS/Include/core_cm4.h ****            priority bits (__NVIC_PRIO_BITS) the smallest possible priority group is set.
1883:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]         Priority   Priority value, which can be retrieved with the function \ref NVIC
1884:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]     PriorityGroup  Used priority group.
1885:Drivers/CMSIS/Include/core_cm4.h ****   \param [out] pPreemptPriority  Preemptive priority value (starting from 0).
1886:Drivers/CMSIS/Include/core_cm4.h ****   \param [out]     pSubPriority  Subpriority value (starting from 0).
1887:Drivers/CMSIS/Include/core_cm4.h ****  */
1888:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void NVIC_DecodePriority (uint32_t Priority, uint32_t PriorityGroup, uint32_t* cons
1889:Drivers/CMSIS/Include/core_cm4.h **** {
1890:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
1891:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t PreemptPriorityBits;
1892:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t SubPriorityBits;
1893:Drivers/CMSIS/Include/core_cm4.h **** 
1894:Drivers/CMSIS/Include/core_cm4.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
1895:Drivers/CMSIS/Include/core_cm4.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
1896:Drivers/CMSIS/Include/core_cm4.h **** 
1897:Drivers/CMSIS/Include/core_cm4.h ****   *pPreemptPriority = (Priority >> SubPriorityBits) & (uint32_t)((1UL << (PreemptPriorityBits)) - 1
1898:Drivers/CMSIS/Include/core_cm4.h ****   *pSubPriority     = (Priority                   ) & (uint32_t)((1UL << (SubPriorityBits    )) - 1
1899:Drivers/CMSIS/Include/core_cm4.h **** }
1900:Drivers/CMSIS/Include/core_cm4.h **** 
1901:Drivers/CMSIS/Include/core_cm4.h **** 
1902:Drivers/CMSIS/Include/core_cm4.h **** /**
1903:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Set Interrupt Vector
1904:Drivers/CMSIS/Include/core_cm4.h ****   \details Sets an interrupt vector in SRAM based interrupt vector table.
1905:Drivers/CMSIS/Include/core_cm4.h ****            The interrupt number can be positive to specify a device specific interrupt,
1906:Drivers/CMSIS/Include/core_cm4.h ****            or negative to specify a processor exception.
1907:Drivers/CMSIS/Include/core_cm4.h ****            VTOR must been relocated to SRAM before.
1908:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]   IRQn      Interrupt number
1909:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]   vector    Address of interrupt handler function
1910:Drivers/CMSIS/Include/core_cm4.h ****  */
1911:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void __NVIC_SetVector(IRQn_Type IRQn, uint32_t vector)
ARM GAS  /tmp/ccDHp4gG.s 			page 35


1912:Drivers/CMSIS/Include/core_cm4.h **** {
1913:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t *vectors = (uint32_t *)SCB->VTOR;
1914:Drivers/CMSIS/Include/core_cm4.h ****   vectors[(int32_t)IRQn + NVIC_USER_IRQ_OFFSET] = vector;
1915:Drivers/CMSIS/Include/core_cm4.h ****   /* ARM Application Note 321 states that the M4 does not require the architectural barrier */
1916:Drivers/CMSIS/Include/core_cm4.h **** }
1917:Drivers/CMSIS/Include/core_cm4.h **** 
1918:Drivers/CMSIS/Include/core_cm4.h **** 
1919:Drivers/CMSIS/Include/core_cm4.h **** /**
1920:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Get Interrupt Vector
1921:Drivers/CMSIS/Include/core_cm4.h ****   \details Reads an interrupt vector from interrupt vector table.
1922:Drivers/CMSIS/Include/core_cm4.h ****            The interrupt number can be positive to specify a device specific interrupt,
1923:Drivers/CMSIS/Include/core_cm4.h ****            or negative to specify a processor exception.
1924:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]   IRQn      Interrupt number.
1925:Drivers/CMSIS/Include/core_cm4.h ****   \return                 Address of interrupt handler function
1926:Drivers/CMSIS/Include/core_cm4.h ****  */
1927:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetVector(IRQn_Type IRQn)
1928:Drivers/CMSIS/Include/core_cm4.h **** {
1929:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t *vectors = (uint32_t *)SCB->VTOR;
1930:Drivers/CMSIS/Include/core_cm4.h ****   return vectors[(int32_t)IRQn + NVIC_USER_IRQ_OFFSET];
1931:Drivers/CMSIS/Include/core_cm4.h **** }
1932:Drivers/CMSIS/Include/core_cm4.h **** 
1933:Drivers/CMSIS/Include/core_cm4.h **** 
1934:Drivers/CMSIS/Include/core_cm4.h **** /**
1935:Drivers/CMSIS/Include/core_cm4.h ****   \brief   System Reset
1936:Drivers/CMSIS/Include/core_cm4.h ****   \details Initiates a system reset request to reset the MCU.
1937:Drivers/CMSIS/Include/core_cm4.h ****  */
1938:Drivers/CMSIS/Include/core_cm4.h **** __NO_RETURN __STATIC_INLINE void __NVIC_SystemReset(void)
1939:Drivers/CMSIS/Include/core_cm4.h **** {
  29              		.loc 2 1939 1 view -0
  30              		.cfi_startproc
  31              		@ Volatile: function does not return.
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
1940:Drivers/CMSIS/Include/core_cm4.h ****   __DSB();                                                          /* Ensure all outstanding memor
  35              		.loc 2 1940 3 view .LVU1
  36              	.LBB8:
  37              	.LBI8:
  38              		.file 3 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.4.1
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     27. May 2021
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2021 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
ARM GAS  /tmp/ccDHp4gG.s 			page 36


  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
ARM GAS  /tmp/ccDHp4gG.s 			page 37


  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  /tmp/ccDHp4gG.s 			page 38


 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute__((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_SEAL
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_SEAL              __StackSeal
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 189:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccDHp4gG.s 			page 39


 190:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_SIZE
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_SIZE      8U
 192:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_VALUE
 195:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_VALUE     0xFEF5EDA5FEF5EDA5ULL
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_STACKSEAL_S (uint32_t* stackTop) {
 200:Drivers/CMSIS/Include/cmsis_gcc.h ****   *((uint64_t *)stackTop) = __TZ_STACK_SEAL_VALUE;
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 203:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 204:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 208:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 209:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 212:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 213:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 215:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 216:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 217:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 223:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 225:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 226:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 227:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 229:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 230:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 233:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi":::"memory")
 235:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 239:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 240:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 241:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe":::"memory")
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 244:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 245:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
ARM GAS  /tmp/ccDHp4gG.s 			page 40


 247:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 248:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 253:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 254:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 255:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 258:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 259:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 265:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
  39              		.loc 3 269 27 view .LVU2
  40              	.LBB9:
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
  41              		.loc 3 271 3 view .LVU3
  42              		.syntax unified
  43              	@ 271 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
  44 0000 BFF34F8F 		dsb 0xF
  45              	@ 0 "" 2
  46              		.thumb
  47              		.syntax unified
  48              	.LBE9:
  49              	.LBE8:
1941:Drivers/CMSIS/Include/core_cm4.h ****                                                                        buffered write are completed
1942:Drivers/CMSIS/Include/core_cm4.h ****   SCB->AIRCR  = (uint32_t)((0x5FAUL << SCB_AIRCR_VECTKEY_Pos)    |
  50              		.loc 2 1942 3 view .LVU4
1943:Drivers/CMSIS/Include/core_cm4.h ****                            (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
  51              		.loc 2 1943 32 is_stmt 0 view .LVU5
  52 0004 0549     		ldr	r1, .L3
  53 0006 CA68     		ldr	r2, [r1, #12]
  54              		.loc 2 1943 40 view .LVU6
  55 0008 02F4E062 		and	r2, r2, #1792
1942:Drivers/CMSIS/Include/core_cm4.h ****                            (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
  56              		.loc 2 1942 17 view .LVU7
  57 000c 044B     		ldr	r3, .L3+4
  58 000e 1343     		orrs	r3, r3, r2
1942:Drivers/CMSIS/Include/core_cm4.h ****                            (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
  59              		.loc 2 1942 15 view .LVU8
  60 0010 CB60     		str	r3, [r1, #12]
1944:Drivers/CMSIS/Include/core_cm4.h ****                             SCB_AIRCR_SYSRESETREQ_Msk    );         /* Keep priority group unchange
1945:Drivers/CMSIS/Include/core_cm4.h ****   __DSB();                                                          /* Ensure completion of memory 
  61              		.loc 2 1945 3 is_stmt 1 view .LVU9
  62              	.LBB10:
  63              	.LBI10:
ARM GAS  /tmp/ccDHp4gG.s 			page 41


 269:Drivers/CMSIS/Include/cmsis_gcc.h **** {
  64              		.loc 3 269 27 view .LVU10
  65              	.LBB11:
  66              		.loc 3 271 3 view .LVU11
  67              		.syntax unified
  68              	@ 271 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
  69 0012 BFF34F8F 		dsb 0xF
  70              	@ 0 "" 2
  71              		.thumb
  72              		.syntax unified
  73              	.L2:
  74              	.LBE11:
  75              	.LBE10:
1946:Drivers/CMSIS/Include/core_cm4.h **** 
1947:Drivers/CMSIS/Include/core_cm4.h ****   for(;;)                                                           /* wait until reset */
  76              		.loc 2 1947 3 view .LVU12
1948:Drivers/CMSIS/Include/core_cm4.h ****   {
1949:Drivers/CMSIS/Include/core_cm4.h ****     __NOP();
  77              		.loc 2 1949 5 discriminator 1 view .LVU13
  78              		.syntax unified
  79              	@ 1949 "Drivers/CMSIS/Include/core_cm4.h" 1
  80 0016 00BF     		nop
  81              	@ 0 "" 2
1947:Drivers/CMSIS/Include/core_cm4.h ****   {
  82              		.loc 2 1947 3 view .LVU14
  83              		.thumb
  84              		.syntax unified
  85 0018 FDE7     		b	.L2
  86              	.L4:
  87 001a 00BF     		.align	2
  88              	.L3:
  89 001c 00ED00E0 		.word	-536810240
  90 0020 0400FA05 		.word	100270084
  91              		.cfi_endproc
  92              	.LFE121:
  94              		.section	.rodata.do_warning.str1.4,"aMS",%progbits,1
  95              		.align	2
  96              	.LC0:
  97 0000 5741524E 		.ascii	"WARNING\015\012\000"
  97      494E470D 
  97      0A00
  98              		.section	.text.do_warning,"ax",%progbits
  99              		.align	1
 100              		.global	do_warning
 101              		.syntax unified
 102              		.thumb
 103              		.thumb_func
 105              	do_warning:
 106              	.LVL0:
 107              	.LFB236:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
ARM GAS  /tmp/ccDHp4gG.s 			page 42


   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2024 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** #include "scheme.h"
  25:Core/Src/main.c **** #include <string.h>
  26:Core/Src/main.c **** #include <stdio.h>
  27:Core/Src/main.c **** #include <time.h> //for random values
  28:Core/Src/main.c **** #include <stdlib.h>
  29:Core/Src/main.c **** /* USER CODE END Includes */
  30:Core/Src/main.c **** 
  31:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  32:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  33:Core/Src/main.c **** typedef enum {
  34:Core/Src/main.c ****     RAW,
  35:Core/Src/main.c ****     MOVING_AVERAGE,
  36:Core/Src/main.c ****     RANDOM_NOISE
  37:Core/Src/main.c **** } FilterMode;
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* USER CODE END PTD */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  42:Core/Src/main.c **** /* USER CODE BEGIN PD */
  43:Core/Src/main.c **** #define ADC_BUFFER_SIZE 300
  44:Core/Src/main.c **** #define MOVING_AVG_SIZE 150
  45:Core/Src/main.c **** #define BUFFER_SIZE 50
  46:Core/Src/main.c **** #define RANDOM_RANGE 300
  47:Core/Src/main.c **** /* USER CODE END PD */
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  50:Core/Src/main.c **** /* USER CODE BEGIN PM */
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** /* USER CODE END PM */
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  55:Core/Src/main.c **** ADC_HandleTypeDef hadc1;
  56:Core/Src/main.c **** DMA_HandleTypeDef hdma_adc1;
  57:Core/Src/main.c **** UART_HandleTypeDef huart2;
  58:Core/Src/main.c **** HAL_StatusTypeDef halStatus;
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** state_t current_state = STATE_INIT;
  61:Core/Src/main.c **** state_t next_state = STATE_WAIT_REQUEST;
  62:Core/Src/main.c **** 
  63:Core/Src/main.c **** /* USER CODE BEGIN PV */
  64:Core/Src/main.c **** 
ARM GAS  /tmp/ccDHp4gG.s 			page 43


  65:Core/Src/main.c **** //digital and analog variables
  66:Core/Src/main.c **** uint16_t lastAnalogValue = 0; 
  67:Core/Src/main.c **** uint16_t lastDigitalValue = 0;
  68:Core/Src/main.c **** 
  69:Core/Src/main.c **** uint16_t last_index = 0;//position of last written element on buffer
  70:Core/Src/main.c **** uint32_t adcBuffer[ADC_BUFFER_SIZE];//dma data structure
  71:Core/Src/main.c **** uint8_t disableInterrupt = 0;
  72:Core/Src/main.c **** 
  73:Core/Src/main.c **** //moving average variables
  74:Core/Src/main.c **** uint16_t adc_moving_average[MOVING_AVG_SIZE];
  75:Core/Src/main.c **** uint16_t buffer_index = 0;
  76:Core/Src/main.c **** uint32_t sum = 0;
  77:Core/Src/main.c **** 
  78:Core/Src/main.c **** //millis for warning state
  79:Core/Src/main.c **** uint32_t lastTimer = 0;
  80:Core/Src/main.c **** uint8_t isWarningState = 0;
  81:Core/Src/main.c **** 
  82:Core/Src/main.c **** //filter mode for data variables
  83:Core/Src/main.c **** FilterMode currentFilterMode = RAW;
  84:Core/Src/main.c **** char cli_command[BUFFER_SIZE];
  85:Core/Src/main.c **** uint8_t sendRequest = 0;
  86:Core/Src/main.c **** 
  87:Core/Src/main.c **** //debug/info variables
  88:Core/Src/main.c **** char msg_buffer[BUFFER_SIZE];//buffer for serial msg
  89:Core/Src/main.c **** 
  90:Core/Src/main.c **** /* USER CODE END PV */
  91:Core/Src/main.c **** 
  92:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  93:Core/Src/main.c **** void SystemClock_Config(void);
  94:Core/Src/main.c **** static void MX_GPIO_Init(void);
  95:Core/Src/main.c **** static void MX_DMA_Init(void);
  96:Core/Src/main.c **** static void MX_USART2_UART_Init(void);
  97:Core/Src/main.c **** static void MX_ADC1_Init(void);
  98:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  99:Core/Src/main.c **** 
 100:Core/Src/main.c **** /* USER CODE END PFP */
 101:Core/Src/main.c **** 
 102:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
 103:Core/Src/main.c **** /* USER CODE BEGIN 0 */
 104:Core/Src/main.c **** 
 105:Core/Src/main.c **** /**
 106:Core/Src/main.c ****  * Callback function for gpio digital input
 107:Core/Src/main.c ****  */
 108:Core/Src/main.c **** void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin){
 109:Core/Src/main.c ****   if(GPIO_Pin == GPIO_PIN_2){
 110:Core/Src/main.c ****     lastDigitalValue = HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_2);
 111:Core/Src/main.c ****   }
 112:Core/Src/main.c ****   else if(GPIO_Pin == GPIO_PIN_13){
 113:Core/Src/main.c ****     if(current_state == STATE_WAIT_REQUEST || current_state == STATE_PAUSE){
 114:Core/Src/main.c ****       //change state to listening and restore dma
 115:Core/Src/main.c ****       current_state = next_state = STATE_LISTENING;
 116:Core/Src/main.c ****       HAL_ADC_Start_DMA(&hadc1, adcBuffer, ADC_BUFFER_SIZE);
 117:Core/Src/main.c ****       HAL_GPIO_WritePin(GPIOC, GPIO_PIN_5, GPIO_PIN_SET);
 118:Core/Src/main.c ****       sendRequest = 0;
 119:Core/Src/main.c ****     }else if(current_state == STATE_LISTENING){
 120:Core/Src/main.c ****       //change state to pause
 121:Core/Src/main.c ****       current_state = next_state = STATE_PAUSE;
ARM GAS  /tmp/ccDHp4gG.s 			page 44


 122:Core/Src/main.c ****     }else if(current_state == STATE_ERROR){
 123:Core/Src/main.c ****       //reset the board
 124:Core/Src/main.c ****       NVIC_SystemReset();
 125:Core/Src/main.c ****     }
 126:Core/Src/main.c ****   }
 127:Core/Src/main.c **** }
 128:Core/Src/main.c **** 
 129:Core/Src/main.c **** /*
 130:Core/Src/main.c **** void HAL_ADC_ConvHalfCpltCallback(ADC_HandleTypeDef* hadc){
 131:Core/Src/main.c **** }
 132:Core/Src/main.c **** */
 133:Core/Src/main.c **** 
 134:Core/Src/main.c **** /**
 135:Core/Src/main.c **** Based on the user input, change the filter mode.
 136:Core/Src/main.c **** If the comand is unknown, the current filter is not changed but
 137:Core/Src/main.c **** a falsse value is returned
 138:Core/Src/main.c **** */
 139:Core/Src/main.c **** u_int8_t handle_cli_command() {
 140:Core/Src/main.c ****     if (strcmp(cli_command, "raw") == 0) {
 141:Core/Src/main.c ****         currentFilterMode = RAW;
 142:Core/Src/main.c ****     } else if (strcmp(cli_command, "moving average") == 0) {
 143:Core/Src/main.c ****         currentFilterMode = MOVING_AVERAGE;
 144:Core/Src/main.c ****     } else if (strcmp(cli_command, "random noise") == 0) {
 145:Core/Src/main.c ****         currentFilterMode = RANDOM_NOISE;
 146:Core/Src/main.c ****     } else {
 147:Core/Src/main.c ****         //comand not recognized
 148:Core/Src/main.c ****         memset(cli_command, '\0', sizeof(cli_command)); 
 149:Core/Src/main.c ****         return 1;
 150:Core/Src/main.c ****     }
 151:Core/Src/main.c ****     //clear buffer
 152:Core/Src/main.c ****     memset(cli_command, '\0', sizeof(cli_command)); 
 153:Core/Src/main.c ****     return 0;
 154:Core/Src/main.c **** }
 155:Core/Src/main.c **** 
 156:Core/Src/main.c **** /**
 157:Core/Src/main.c ****  * Callback function to handle the receiving of a comand from the user
 158:Core/Src/main.c ****  * if the command is unknown, restart sending data anyway
 159:Core/Src/main.c ****  */
 160:Core/Src/main.c **** void HAL_UARTEx_RxEventCallback(UART_HandleTypeDef *huart, uint16_t Size)
 161:Core/Src/main.c **** {
 162:Core/Src/main.c ****   uint8_t unknownComand = handle_cli_command();
 163:Core/Src/main.c **** 
 164:Core/Src/main.c ****   if(unknownComand){
 165:Core/Src/main.c ****     sprintf(msg_buffer, "Command not valid. Try again.\r\n");
 166:Core/Src/main.c ****     HAL_UART_Transmit(&huart2, (uint8_t *)msg_buffer, strlen(msg_buffer), HAL_MAX_DELAY);
 167:Core/Src/main.c ****     sprintf(msg_buffer, "C:\r\n");//send comand request to user
 168:Core/Src/main.c ****     HAL_UART_Transmit(&huart2, (uint8_t *)msg_buffer, strlen(msg_buffer), HAL_MAX_DELAY);  
 169:Core/Src/main.c ****   }
 170:Core/Src/main.c ****   else{
 171:Core/Src/main.c ****     sprintf(msg_buffer, "New filter mode: %d\r\n", currentFilterMode);
 172:Core/Src/main.c ****     HAL_UART_Transmit(&huart2, (uint8_t *)msg_buffer, strlen(msg_buffer), HAL_MAX_DELAY);
 173:Core/Src/main.c ****     sendRequest = 1;
 174:Core/Src/main.c ****     disableInterrupt = 0;
 175:Core/Src/main.c ****     HAL_ADC_Start_DMA(&hadc1, adcBuffer, ADC_BUFFER_SIZE);
 176:Core/Src/main.c ****   }
 177:Core/Src/main.c **** 
 178:Core/Src/main.c ****   //wait for next input
ARM GAS  /tmp/ccDHp4gG.s 			page 45


 179:Core/Src/main.c ****   HAL_UARTEx_ReceiveToIdle_IT(&huart2, (uint8_t *)cli_command, BUFFER_SIZE);
 180:Core/Src/main.c **** }
 181:Core/Src/main.c **** 
 182:Core/Src/main.c **** /* USER CODE END 0 */
 183:Core/Src/main.c **** 
 184:Core/Src/main.c **** /**
 185:Core/Src/main.c ****   * @brief  The application entry point.
 186:Core/Src/main.c ****   * @retval int
 187:Core/Src/main.c ****   */
 188:Core/Src/main.c **** int main(void)
 189:Core/Src/main.c **** {
 190:Core/Src/main.c ****   /* Infinite loop */
 191:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 192:Core/Src/main.c **** 
 193:Core/Src/main.c ****   while (1)
 194:Core/Src/main.c ****   {
 195:Core/Src/main.c ****     /* USER CODE END WHILE */
 196:Core/Src/main.c **** 
 197:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 198:Core/Src/main.c ****     current_state = run_state(NULL);
 199:Core/Src/main.c ****   }
 200:Core/Src/main.c ****   /* USER CODE END 3 */
 201:Core/Src/main.c **** }
 202:Core/Src/main.c **** 
 203:Core/Src/main.c **** /**
 204:Core/Src/main.c ****   * @brief System Clock Configuration
 205:Core/Src/main.c ****   * @retval None
 206:Core/Src/main.c ****   */
 207:Core/Src/main.c **** void SystemClock_Config(void)
 208:Core/Src/main.c **** {
 209:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 210:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 211:Core/Src/main.c **** 
 212:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 213:Core/Src/main.c ****   */
 214:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 215:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 216:Core/Src/main.c **** 
 217:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 218:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 219:Core/Src/main.c ****   */
 220:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 221:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 222:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 223:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 224:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 225:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 16;
 226:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 336;
 227:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 228:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 229:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 230:Core/Src/main.c ****   {
 231:Core/Src/main.c ****     Error_Handler();
 232:Core/Src/main.c ****   }
 233:Core/Src/main.c **** 
 234:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 235:Core/Src/main.c ****   */
ARM GAS  /tmp/ccDHp4gG.s 			page 46


 236:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 237:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 238:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 239:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 240:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 241:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 242:Core/Src/main.c **** 
 243:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 244:Core/Src/main.c ****   {
 245:Core/Src/main.c ****     Error_Handler();
 246:Core/Src/main.c ****   }
 247:Core/Src/main.c **** }
 248:Core/Src/main.c **** 
 249:Core/Src/main.c **** /**
 250:Core/Src/main.c ****   * @brief ADC1 Initialization Function
 251:Core/Src/main.c ****   * @param None
 252:Core/Src/main.c ****   * @retval None
 253:Core/Src/main.c ****   */
 254:Core/Src/main.c **** static void MX_ADC1_Init(void)
 255:Core/Src/main.c **** {
 256:Core/Src/main.c **** 
 257:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 0 */
 258:Core/Src/main.c **** 
 259:Core/Src/main.c ****   /* USER CODE END ADC1_Init 0 */
 260:Core/Src/main.c **** 
 261:Core/Src/main.c ****   ADC_ChannelConfTypeDef sConfig = {0};
 262:Core/Src/main.c **** 
 263:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 1 */
 264:Core/Src/main.c **** 
 265:Core/Src/main.c ****   /* USER CODE END ADC1_Init 1 */
 266:Core/Src/main.c **** 
 267:Core/Src/main.c ****   /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of con
 268:Core/Src/main.c ****   */
 269:Core/Src/main.c ****   hadc1.Instance = ADC1;
 270:Core/Src/main.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 271:Core/Src/main.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 272:Core/Src/main.c ****   hadc1.Init.ScanConvMode = DISABLE;
 273:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = ENABLE;
 274:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 275:Core/Src/main.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 276:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 277:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 278:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 1;
 279:Core/Src/main.c ****   hadc1.Init.DMAContinuousRequests = ENABLE;
 280:Core/Src/main.c ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 281:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 282:Core/Src/main.c ****   {
 283:Core/Src/main.c ****     Error_Handler();
 284:Core/Src/main.c ****   }
 285:Core/Src/main.c **** 
 286:Core/Src/main.c ****   /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and it
 287:Core/Src/main.c ****   */
 288:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_0;
 289:Core/Src/main.c ****   sConfig.Rank = 1;
 290:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 291:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 292:Core/Src/main.c ****   {
ARM GAS  /tmp/ccDHp4gG.s 			page 47


 293:Core/Src/main.c ****     Error_Handler();
 294:Core/Src/main.c ****   }
 295:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 2 */
 296:Core/Src/main.c **** 
 297:Core/Src/main.c ****   /* USER CODE END ADC1_Init 2 */
 298:Core/Src/main.c **** 
 299:Core/Src/main.c **** }
 300:Core/Src/main.c **** 
 301:Core/Src/main.c **** /**
 302:Core/Src/main.c ****   * @brief USART2 Initialization Function
 303:Core/Src/main.c ****   * @param None
 304:Core/Src/main.c ****   * @retval None
 305:Core/Src/main.c ****   */
 306:Core/Src/main.c **** static void MX_USART2_UART_Init(void)
 307:Core/Src/main.c **** {
 308:Core/Src/main.c **** 
 309:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 0 */
 310:Core/Src/main.c **** 
 311:Core/Src/main.c ****   /* USER CODE END USART2_Init 0 */
 312:Core/Src/main.c **** 
 313:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 1 */
 314:Core/Src/main.c **** 
 315:Core/Src/main.c ****   /* USER CODE END USART2_Init 1 */
 316:Core/Src/main.c ****   huart2.Instance = USART2;
 317:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 318:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 319:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 320:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 321:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 322:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 323:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 324:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 325:Core/Src/main.c ****   {
 326:Core/Src/main.c ****     Error_Handler();
 327:Core/Src/main.c ****   }
 328:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 2 */
 329:Core/Src/main.c **** 
 330:Core/Src/main.c ****   /* USER CODE END USART2_Init 2 */
 331:Core/Src/main.c **** 
 332:Core/Src/main.c **** }
 333:Core/Src/main.c **** 
 334:Core/Src/main.c **** /**
 335:Core/Src/main.c ****   * Enable DMA controller clock
 336:Core/Src/main.c ****   */
 337:Core/Src/main.c **** static void MX_DMA_Init(void)
 338:Core/Src/main.c **** {
 339:Core/Src/main.c **** 
 340:Core/Src/main.c ****   /* DMA controller clock enable */
 341:Core/Src/main.c ****   __HAL_RCC_DMA2_CLK_ENABLE();
 342:Core/Src/main.c **** 
 343:Core/Src/main.c ****   /* DMA interrupt init */
 344:Core/Src/main.c ****   /* DMA2_Stream0_IRQn interrupt configuration */
 345:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA2_Stream0_IRQn, 0, 0);
 346:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA2_Stream0_IRQn);
 347:Core/Src/main.c **** 
 348:Core/Src/main.c **** }
 349:Core/Src/main.c **** 
ARM GAS  /tmp/ccDHp4gG.s 			page 48


 350:Core/Src/main.c **** /**
 351:Core/Src/main.c ****   * @brief GPIO Initialization Function
 352:Core/Src/main.c ****   * @param None
 353:Core/Src/main.c ****   * @retval None
 354:Core/Src/main.c ****   */
 355:Core/Src/main.c **** static void MX_GPIO_Init(void)
 356:Core/Src/main.c **** {
 357:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 358:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 359:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
 360:Core/Src/main.c **** 
 361:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 362:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
 363:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 364:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 365:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 366:Core/Src/main.c **** 
 367:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 368:Core/Src/main.c ****   HAL_GPIO_WritePin(LD2_GPIO_Port, LD2_Pin, GPIO_PIN_RESET);
 369:Core/Src/main.c **** 
 370:Core/Src/main.c ****   /*Configure GPIO pin : B1_Pin */
 371:Core/Src/main.c ****   GPIO_InitStruct.Pin = B1_Pin;
 372:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 373:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 374:Core/Src/main.c ****   HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 375:Core/Src/main.c **** 
 376:Core/Src/main.c ****   /*Configure GPIO pin : PC2 */
 377:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_2;
 378:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING_FALLING;
 379:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 380:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 381:Core/Src/main.c **** 
 382:Core/Src/main.c ****   /*Configure GPIO pin : LD2_Pin */
 383:Core/Src/main.c ****   GPIO_InitStruct.Pin = LD2_Pin;
 384:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 385:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 386:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 387:Core/Src/main.c ****   HAL_GPIO_Init(LD2_GPIO_Port, &GPIO_InitStruct);
 388:Core/Src/main.c **** 
 389:Core/Src/main.c ****   /* EXTI interrupt init*/
 390:Core/Src/main.c ****   HAL_NVIC_SetPriority(EXTI2_IRQn, 0, 0);
 391:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI2_IRQn);
 392:Core/Src/main.c **** 
 393:Core/Src/main.c ****   HAL_NVIC_SetPriority(EXTI15_10_IRQn, 0, 0);
 394:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI15_10_IRQn);
 395:Core/Src/main.c **** 
 396:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 397:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
 398:Core/Src/main.c **** }
 399:Core/Src/main.c **** 
 400:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 401:Core/Src/main.c **** 
 402:Core/Src/main.c **** //debug/info variables
 403:Core/Src/main.c **** char msg_buffer[BUFFER_SIZE];//buffer for serial msg
 404:Core/Src/main.c **** 
 405:Core/Src/main.c **** // GLOBALS
 406:Core/Src/main.c **** // State human-readable names
ARM GAS  /tmp/ccDHp4gG.s 			page 49


 407:Core/Src/main.c **** const char *state_names[] = {"init", "wait_request", "error", "listening", "warning", "pause"};
 408:Core/Src/main.c **** 
 409:Core/Src/main.c **** // List of state functions
 410:Core/Src/main.c **** state_func_t *const state_table[NUM_STATES] = {
 411:Core/Src/main.c ****   do_init,         // in state init
 412:Core/Src/main.c ****   do_wait_request, // in state wait_request
 413:Core/Src/main.c ****   do_error,        // in state error
 414:Core/Src/main.c ****   do_listening,    // in state listening
 415:Core/Src/main.c ****   do_warning,      // in state warning
 416:Core/Src/main.c ****   do_pause,        // in state pause
 417:Core/Src/main.c **** };
 418:Core/Src/main.c **** 
 419:Core/Src/main.c **** // No transition functions
 420:Core/Src/main.c **** 
 421:Core/Src/main.c **** /*  ____  _        _       
 422:Core/Src/main.c ****  * / ___|| |_ __ _| |_ ___ 
 423:Core/Src/main.c ****  * \___ \| __/ _` | __/ _ \
 424:Core/Src/main.c ****  *  ___) | || (_| | ||  __/
 425:Core/Src/main.c ****  * |____/ \__\__,_|\__\___|
 426:Core/Src/main.c ****  *                         
 427:Core/Src/main.c ****  *   __                  _   _                 
 428:Core/Src/main.c ****  *  / _|_   _ _ __   ___| |_(_) ___  _ __  ___ 
 429:Core/Src/main.c ****  * | |_| | | | '_ \ / __| __| |/ _ \| '_ \/ __|
 430:Core/Src/main.c ****  * |  _| |_| | | | | (__| |_| | (_) | | | \__ \
 431:Core/Src/main.c ****  * |_|  \__,_|_| |_|\___|\__|_|\___/|_| |_|___/
 432:Core/Src/main.c ****  */                                             
 433:Core/Src/main.c **** 
 434:Core/Src/main.c **** // Function to be executed in state init
 435:Core/Src/main.c **** // valid return states: STATE_WAIT_REQUEST, STATE_ERROR
 436:Core/Src/main.c **** state_t do_init(state_data_t *data) {
 437:Core/Src/main.c ****   next_state = STATE_WAIT_REQUEST;
 438:Core/Src/main.c ****   
 439:Core/Src/main.c ****   //syslog(LOG_INFO, "[FSM] In state init");
 440:Core/Src/main.c ****   /* Your Code Here */
 441:Core/Src/main.c ****   srand(time(NULL)); //set seed for random number generator
 442:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 443:Core/Src/main.c ****   halStatus = HAL_Init();
 444:Core/Src/main.c **** 
 445:Core/Src/main.c ****   if(halStatus != HAL_OK){
 446:Core/Src/main.c ****     next_state  = STATE_ERROR;
 447:Core/Src/main.c ****     return next_state;
 448:Core/Src/main.c ****   }
 449:Core/Src/main.c **** 
 450:Core/Src/main.c ****   /* Configure the system clock */
 451:Core/Src/main.c ****   SystemClock_Config();
 452:Core/Src/main.c **** 
 453:Core/Src/main.c ****   /* Initialize all configured peripherals */
 454:Core/Src/main.c ****   MX_GPIO_Init();
 455:Core/Src/main.c ****   MX_DMA_Init();
 456:Core/Src/main.c ****   MX_USART2_UART_Init();
 457:Core/Src/main.c ****   MX_ADC1_Init();
 458:Core/Src/main.c **** 
 459:Core/Src/main.c ****   // Initialize the DMA conversion
 460:Core/Src/main.c ****   halStatus = HAL_ADC_Start_DMA(&hadc1, adcBuffer, ADC_BUFFER_SIZE);
 461:Core/Src/main.c ****   if(halStatus != HAL_OK){
 462:Core/Src/main.c ****     next_state  = STATE_ERROR;
 463:Core/Src/main.c ****     return next_state;
ARM GAS  /tmp/ccDHp4gG.s 			page 50


 464:Core/Src/main.c ****   }
 465:Core/Src/main.c **** 
 466:Core/Src/main.c ****   halStatus = HAL_UARTEx_ReceiveToIdle_IT(&huart2, (u_int8_t *)cli_command, BUFFER_SIZE);
 467:Core/Src/main.c ****   if(halStatus != HAL_OK){
 468:Core/Src/main.c ****     next_state  = STATE_ERROR;
 469:Core/Src/main.c ****     return next_state;
 470:Core/Src/main.c ****   }
 471:Core/Src/main.c **** 
 472:Core/Src/main.c ****   lastTimer = HAL_GetTick();//start time of MCU
 473:Core/Src/main.c ****   next_state = STATE_WAIT_REQUEST;
 474:Core/Src/main.c **** 
 475:Core/Src/main.c ****   return next_state;
 476:Core/Src/main.c **** }
 477:Core/Src/main.c **** 
 478:Core/Src/main.c **** 
 479:Core/Src/main.c **** // Function to be executed in state wait_request
 480:Core/Src/main.c **** // valid return states: STATE_ERROR, STATE_LISTENING
 481:Core/Src/main.c **** state_t do_wait_request(state_data_t *data) {
 482:Core/Src/main.c ****   next_state = NO_CHANGE;
 483:Core/Src/main.c ****   
 484:Core/Src/main.c ****   //syslog(LOG_INFO, "[FSM] In state wait_request");
 485:Core/Src/main.c ****   /* Your Code Here */
 486:Core/Src/main.c ****   if(!sendRequest){
 487:Core/Src/main.c ****     halStatus = HAL_ADC_Stop_DMA(&hadc1);
 488:Core/Src/main.c ****     if(halStatus != HAL_OK){
 489:Core/Src/main.c ****       next_state  = STATE_ERROR;
 490:Core/Src/main.c ****       return next_state;
 491:Core/Src/main.c ****     }
 492:Core/Src/main.c **** 
 493:Core/Src/main.c ****     sprintf(msg_buffer, "C:\r\n");//send comand request to user
 494:Core/Src/main.c ****     halStatus = HAL_UART_Transmit(&huart2, (uint8_t *)msg_buffer, strlen(msg_buffer), HAL_MAX_DELAY
 495:Core/Src/main.c ****     if(halStatus != HAL_OK){
 496:Core/Src/main.c ****       next_state  = STATE_ERROR;
 497:Core/Src/main.c ****       return next_state;
 498:Core/Src/main.c ****     }
 499:Core/Src/main.c **** 
 500:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOC, GPIO_PIN_5, GPIO_PIN_RESET);
 501:Core/Src/main.c ****     sendRequest = 1;
 502:Core/Src/main.c ****   }
 503:Core/Src/main.c ****   
 504:Core/Src/main.c ****   return next_state;
 505:Core/Src/main.c **** }
 506:Core/Src/main.c **** 
 507:Core/Src/main.c **** 
 508:Core/Src/main.c **** // Function to be executed in state error
 509:Core/Src/main.c **** // valid return states: NO_CHANGE
 510:Core/Src/main.c **** state_t do_error(state_data_t *data) {
 511:Core/Src/main.c ****   next_state = NO_CHANGE;
 512:Core/Src/main.c ****   
 513:Core/Src/main.c ****   //syslog(LOG_INFO, "[FSM] In state error");
 514:Core/Src/main.c ****   /* Your Code Here */
 515:Core/Src/main.c ****   sprintf(msg_buffer, "ERROR\r\n");
 516:Core/Src/main.c ****   halStatus = HAL_UART_Transmit(&huart2, (uint8_t *)msg_buffer, strlen(msg_buffer), HAL_MAX_DELAY);
 517:Core/Src/main.c ****   //TODO: use a TIME peripheral to blink led
 518:Core/Src/main.c ****   HAL_GPIO_TogglePin(GPIOC, GPIO_PIN_5);
 519:Core/Src/main.c ****   HAL_Delay(200);
 520:Core/Src/main.c **** 
ARM GAS  /tmp/ccDHp4gG.s 			page 51


 521:Core/Src/main.c ****   return next_state;
 522:Core/Src/main.c **** }
 523:Core/Src/main.c **** 
 524:Core/Src/main.c **** 
 525:Core/Src/main.c **** // Function to be executed in state listening
 526:Core/Src/main.c **** // valid return states: STATE_ERROR, STATE_WARNING, STATE_PAUSE
 527:Core/Src/main.c **** state_t do_listening(state_data_t *data) {
 528:Core/Src/main.c ****   next_state = NO_CHANGE;
 529:Core/Src/main.c ****   
 530:Core/Src/main.c ****   //syslog(LOG_INFO, "[FSM] In state listening");
 531:Core/Src/main.c ****   /* Your Code Here */
 532:Core/Src/main.c **** 
 533:Core/Src/main.c ****   last_index = (BUFFER_SIZE - __HAL_DMA_GET_COUNTER(&hdma_adc1)) % BUFFER_SIZE;
 534:Core/Src/main.c ****   lastAnalogValue = adcBuffer[last_index];
 535:Core/Src/main.c ****   //update moving average if in MOVING_AVERAGE mode
 536:Core/Src/main.c ****   if (currentFilterMode == MOVING_AVERAGE) {
 537:Core/Src/main.c ****     sum -= adc_moving_average[buffer_index];
 538:Core/Src/main.c ****     adc_moving_average[buffer_index] = lastAnalogValue;
 539:Core/Src/main.c ****     sum += lastAnalogValue;
 540:Core/Src/main.c ****     buffer_index = (buffer_index + 1) % MOVING_AVG_SIZE;
 541:Core/Src/main.c ****   }
 542:Core/Src/main.c **** 
 543:Core/Src/main.c ****   //print analog data
 544:Core/Src/main.c ****   switch (currentFilterMode)
 545:Core/Src/main.c ****   {
 546:Core/Src/main.c ****   case RAW:
 547:Core/Src/main.c ****     sprintf(msg_buffer, "A:%hu\r\n", (u_int16_t)lastAnalogValue);
 548:Core/Src/main.c ****     break;
 549:Core/Src/main.c ****   
 550:Core/Src/main.c ****   case MOVING_AVERAGE:
 551:Core/Src/main.c ****     float moving_avg = (float)sum / MOVING_AVG_SIZE;
 552:Core/Src/main.c ****     sprintf(msg_buffer, "A: %.3f\r\n", moving_avg);
 553:Core/Src/main.c ****     break;
 554:Core/Src/main.c **** 
 555:Core/Src/main.c ****   case RANDOM_NOISE:
 556:Core/Src/main.c ****     sprintf(msg_buffer, "A: %hu\r\n", (u_int16_t)(adcBuffer[0] + rand() % RANDOM_RANGE));
 557:Core/Src/main.c ****     break;
 558:Core/Src/main.c **** 
 559:Core/Src/main.c ****   default:
 560:Core/Src/main.c ****     break;
 561:Core/Src/main.c ****   }
 562:Core/Src/main.c ****   halStatus = HAL_UART_Transmit(&huart2, (uint8_t *)msg_buffer, strlen(msg_buffer), HAL_MAX_DELAY);
 563:Core/Src/main.c ****   if(halStatus != HAL_OK){
 564:Core/Src/main.c ****     next_state  = STATE_ERROR;
 565:Core/Src/main.c ****     return next_state;
 566:Core/Src/main.c ****   }
 567:Core/Src/main.c **** 
 568:Core/Src/main.c ****   //print digital data
 569:Core/Src/main.c ****   sprintf(msg_buffer, "D: %hu\r\n", lastDigitalValue);
 570:Core/Src/main.c ****   halStatus = HAL_UART_Transmit(&huart2, (uint8_t *)msg_buffer, strlen(msg_buffer), HAL_MAX_DELAY);
 571:Core/Src/main.c ****   if(halStatus != HAL_OK){
 572:Core/Src/main.c ****     next_state  = STATE_ERROR;
 573:Core/Src/main.c ****     return next_state;
 574:Core/Src/main.c ****   }
 575:Core/Src/main.c **** 
 576:Core/Src/main.c ****   if(lastDigitalValue){
 577:Core/Src/main.c ****     //check if is high for 5 seconds
ARM GAS  /tmp/ccDHp4gG.s 			page 52


 578:Core/Src/main.c ****     if(HAL_GetTick() - lastTimer >= 5000){
 579:Core/Src/main.c ****       //warning state
 580:Core/Src/main.c ****       next_state = STATE_WARNING;
 581:Core/Src/main.c ****     }
 582:Core/Src/main.c ****   }else{
 583:Core/Src/main.c ****     //reset timer
 584:Core/Src/main.c ****     lastTimer = HAL_GetTick();
 585:Core/Src/main.c ****   }
 586:Core/Src/main.c **** 
 587:Core/Src/main.c ****   return next_state;
 588:Core/Src/main.c **** }
 589:Core/Src/main.c **** 
 590:Core/Src/main.c **** 
 591:Core/Src/main.c **** // Function to be executed in state warning
 592:Core/Src/main.c **** // valid return states: STATE_WAIT_REQUEST, STATE_ERROR
 593:Core/Src/main.c **** state_t do_warning(state_data_t *data) {
 108              		.loc 1 593 40 view -0
 109              		.cfi_startproc
 110              		@ args = 0, pretend = 0, frame = 0
 111              		@ frame_needed = 0, uses_anonymous_args = 0
 112              		.loc 1 593 40 is_stmt 0 view .LVU16
 113 0000 10B5     		push	{r4, lr}
 114              		.cfi_def_cfa_offset 8
 115              		.cfi_offset 4, -8
 116              		.cfi_offset 14, -4
 594:Core/Src/main.c ****   next_state = NO_CHANGE;
 117              		.loc 1 594 3 is_stmt 1 view .LVU17
 118              		.loc 1 594 14 is_stmt 0 view .LVU18
 119 0002 114B     		ldr	r3, .L10
 120 0004 0722     		movs	r2, #7
 121 0006 1A70     		strb	r2, [r3]
 595:Core/Src/main.c ****   
 596:Core/Src/main.c ****   //syslog(LOG_INFO, "[FSM] In state warning");
 597:Core/Src/main.c ****   /* Your Code Here */
 598:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOC, GPIO_PIN_5, GPIO_PIN_RESET);
 122              		.loc 1 598 3 is_stmt 1 view .LVU19
 123 0008 0022     		movs	r2, #0
 124 000a 2021     		movs	r1, #32
 125 000c 0F48     		ldr	r0, .L10+4
 126              	.LVL1:
 127              		.loc 1 598 3 is_stmt 0 view .LVU20
 128 000e FFF7FEFF 		bl	HAL_GPIO_WritePin
 129              	.LVL2:
 599:Core/Src/main.c ****   sprintf(msg_buffer, "WARNING\r\n");
 130              		.loc 1 599 3 is_stmt 1 view .LVU21
 131 0012 0F4C     		ldr	r4, .L10+8
 132 0014 0F4A     		ldr	r2, .L10+12
 133 0016 2346     		mov	r3, r4
 134 0018 07CA     		ldm	r2, {r0, r1, r2}
 135 001a 03C3     		stmia	r3!, {r0, r1}
 136 001c 1A80     		strh	r2, [r3]	@ movhi
 600:Core/Src/main.c ****   halStatus = HAL_UART_Transmit(&huart2, (uint8_t *)msg_buffer, strlen(msg_buffer), HAL_MAX_DELAY);
 137              		.loc 1 600 3 view .LVU22
 138              		.loc 1 600 65 is_stmt 0 view .LVU23
 139 001e 2046     		mov	r0, r4
 140 0020 FFF7FEFF 		bl	strlen
 141              	.LVL3:
ARM GAS  /tmp/ccDHp4gG.s 			page 53


 142              		.loc 1 600 15 discriminator 1 view .LVU24
 143 0024 4FF0FF33 		mov	r3, #-1
 144 0028 82B2     		uxth	r2, r0
 145 002a 2146     		mov	r1, r4
 146 002c 0A48     		ldr	r0, .L10+16
 147 002e FFF7FEFF 		bl	HAL_UART_Transmit
 148              	.LVL4:
 149              		.loc 1 600 13 discriminator 2 view .LVU25
 150 0032 0A4B     		ldr	r3, .L10+20
 151 0034 1870     		strb	r0, [r3]
 601:Core/Src/main.c ****   if(halStatus != HAL_OK){
 152              		.loc 1 601 3 is_stmt 1 view .LVU26
 153              		.loc 1 601 5 is_stmt 0 view .LVU27
 154 0036 10B9     		cbnz	r0, .L9
 602:Core/Src/main.c ****     next_state = STATE_ERROR;
 603:Core/Src/main.c ****     return next_state;
 604:Core/Src/main.c ****   }
 605:Core/Src/main.c **** 
 606:Core/Src/main.c ****   return next_state;
 155              		.loc 1 606 3 is_stmt 1 view .LVU28
 156              		.loc 1 606 10 is_stmt 0 view .LVU29
 157 0038 034B     		ldr	r3, .L10
 158 003a 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 159              	.L7:
 607:Core/Src/main.c **** }
 160              		.loc 1 607 1 view .LVU30
 161 003c 10BD     		pop	{r4, pc}
 162              	.L9:
 602:Core/Src/main.c ****     next_state = STATE_ERROR;
 163              		.loc 1 602 5 is_stmt 1 view .LVU31
 602:Core/Src/main.c ****     next_state = STATE_ERROR;
 164              		.loc 1 602 16 is_stmt 0 view .LVU32
 165 003e 0220     		movs	r0, #2
 166 0040 014B     		ldr	r3, .L10
 167 0042 1870     		strb	r0, [r3]
 603:Core/Src/main.c ****   }
 168              		.loc 1 603 5 is_stmt 1 view .LVU33
 603:Core/Src/main.c ****   }
 169              		.loc 1 603 12 is_stmt 0 view .LVU34
 170 0044 FAE7     		b	.L7
 171              	.L11:
 172 0046 00BF     		.align	2
 173              	.L10:
 174 0048 00000000 		.word	next_state
 175 004c 00080240 		.word	1073874944
 176 0050 00000000 		.word	msg_buffer
 177 0054 00000000 		.word	.LC0
 178 0058 00000000 		.word	huart2
 179 005c 00000000 		.word	halStatus
 180              		.cfi_endproc
 181              	.LFE236:
 183              		.section	.text.MX_GPIO_Init,"ax",%progbits
 184              		.align	1
 185              		.syntax unified
 186              		.thumb
 187              		.thumb_func
 189              	MX_GPIO_Init:
ARM GAS  /tmp/ccDHp4gG.s 			page 54


 190              	.LFB231:
 356:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 191              		.loc 1 356 1 is_stmt 1 view -0
 192              		.cfi_startproc
 193              		@ args = 0, pretend = 0, frame = 40
 194              		@ frame_needed = 0, uses_anonymous_args = 0
 195 0000 70B5     		push	{r4, r5, r6, lr}
 196              		.cfi_def_cfa_offset 16
 197              		.cfi_offset 4, -16
 198              		.cfi_offset 5, -12
 199              		.cfi_offset 6, -8
 200              		.cfi_offset 14, -4
 201 0002 8AB0     		sub	sp, sp, #40
 202              		.cfi_def_cfa_offset 56
 357:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 203              		.loc 1 357 3 view .LVU36
 357:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 204              		.loc 1 357 20 is_stmt 0 view .LVU37
 205 0004 0024     		movs	r4, #0
 206 0006 0594     		str	r4, [sp, #20]
 207 0008 0694     		str	r4, [sp, #24]
 208 000a 0794     		str	r4, [sp, #28]
 209 000c 0894     		str	r4, [sp, #32]
 210 000e 0994     		str	r4, [sp, #36]
 362:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 211              		.loc 1 362 3 is_stmt 1 view .LVU38
 212              	.LBB12:
 362:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 213              		.loc 1 362 3 view .LVU39
 214 0010 0194     		str	r4, [sp, #4]
 362:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 215              		.loc 1 362 3 view .LVU40
 216 0012 304B     		ldr	r3, .L14
 217 0014 1A6B     		ldr	r2, [r3, #48]
 218 0016 42F00402 		orr	r2, r2, #4
 219 001a 1A63     		str	r2, [r3, #48]
 362:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 220              		.loc 1 362 3 view .LVU41
 221 001c 1A6B     		ldr	r2, [r3, #48]
 222 001e 02F00402 		and	r2, r2, #4
 223 0022 0192     		str	r2, [sp, #4]
 362:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 224              		.loc 1 362 3 view .LVU42
 225 0024 019A     		ldr	r2, [sp, #4]
 226              	.LBE12:
 362:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 227              		.loc 1 362 3 view .LVU43
 363:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 228              		.loc 1 363 3 view .LVU44
 229              	.LBB13:
 363:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 230              		.loc 1 363 3 view .LVU45
 231 0026 0294     		str	r4, [sp, #8]
 363:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 232              		.loc 1 363 3 view .LVU46
 233 0028 1A6B     		ldr	r2, [r3, #48]
 234 002a 42F08002 		orr	r2, r2, #128
ARM GAS  /tmp/ccDHp4gG.s 			page 55


 235 002e 1A63     		str	r2, [r3, #48]
 363:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 236              		.loc 1 363 3 view .LVU47
 237 0030 1A6B     		ldr	r2, [r3, #48]
 238 0032 02F08002 		and	r2, r2, #128
 239 0036 0292     		str	r2, [sp, #8]
 363:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 240              		.loc 1 363 3 view .LVU48
 241 0038 029A     		ldr	r2, [sp, #8]
 242              	.LBE13:
 363:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 243              		.loc 1 363 3 view .LVU49
 364:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 244              		.loc 1 364 3 view .LVU50
 245              	.LBB14:
 364:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 246              		.loc 1 364 3 view .LVU51
 247 003a 0394     		str	r4, [sp, #12]
 364:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 248              		.loc 1 364 3 view .LVU52
 249 003c 1A6B     		ldr	r2, [r3, #48]
 250 003e 42F00102 		orr	r2, r2, #1
 251 0042 1A63     		str	r2, [r3, #48]
 364:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 252              		.loc 1 364 3 view .LVU53
 253 0044 1A6B     		ldr	r2, [r3, #48]
 254 0046 02F00102 		and	r2, r2, #1
 255 004a 0392     		str	r2, [sp, #12]
 364:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 256              		.loc 1 364 3 view .LVU54
 257 004c 039A     		ldr	r2, [sp, #12]
 258              	.LBE14:
 364:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 259              		.loc 1 364 3 view .LVU55
 365:Core/Src/main.c **** 
 260              		.loc 1 365 3 view .LVU56
 261              	.LBB15:
 365:Core/Src/main.c **** 
 262              		.loc 1 365 3 view .LVU57
 263 004e 0494     		str	r4, [sp, #16]
 365:Core/Src/main.c **** 
 264              		.loc 1 365 3 view .LVU58
 265 0050 1A6B     		ldr	r2, [r3, #48]
 266 0052 42F00202 		orr	r2, r2, #2
 267 0056 1A63     		str	r2, [r3, #48]
 365:Core/Src/main.c **** 
 268              		.loc 1 365 3 view .LVU59
 269 0058 1B6B     		ldr	r3, [r3, #48]
 270 005a 03F00203 		and	r3, r3, #2
 271 005e 0493     		str	r3, [sp, #16]
 365:Core/Src/main.c **** 
 272              		.loc 1 365 3 view .LVU60
 273 0060 049B     		ldr	r3, [sp, #16]
 274              	.LBE15:
 365:Core/Src/main.c **** 
 275              		.loc 1 365 3 view .LVU61
 368:Core/Src/main.c **** 
ARM GAS  /tmp/ccDHp4gG.s 			page 56


 276              		.loc 1 368 3 view .LVU62
 277 0062 1D4D     		ldr	r5, .L14+4
 278 0064 2246     		mov	r2, r4
 279 0066 2021     		movs	r1, #32
 280 0068 2846     		mov	r0, r5
 281 006a FFF7FEFF 		bl	HAL_GPIO_WritePin
 282              	.LVL5:
 371:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 283              		.loc 1 371 3 view .LVU63
 371:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 284              		.loc 1 371 23 is_stmt 0 view .LVU64
 285 006e 4FF40053 		mov	r3, #8192
 286 0072 0593     		str	r3, [sp, #20]
 372:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 287              		.loc 1 372 3 is_stmt 1 view .LVU65
 372:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 288              		.loc 1 372 24 is_stmt 0 view .LVU66
 289 0074 4FF40413 		mov	r3, #2162688
 290 0078 0693     		str	r3, [sp, #24]
 373:Core/Src/main.c ****   HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 291              		.loc 1 373 3 is_stmt 1 view .LVU67
 373:Core/Src/main.c ****   HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 292              		.loc 1 373 24 is_stmt 0 view .LVU68
 293 007a 0794     		str	r4, [sp, #28]
 374:Core/Src/main.c **** 
 294              		.loc 1 374 3 is_stmt 1 view .LVU69
 295 007c 174E     		ldr	r6, .L14+8
 296 007e 05A9     		add	r1, sp, #20
 297 0080 3046     		mov	r0, r6
 298 0082 FFF7FEFF 		bl	HAL_GPIO_Init
 299              	.LVL6:
 377:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING_FALLING;
 300              		.loc 1 377 3 view .LVU70
 377:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING_FALLING;
 301              		.loc 1 377 23 is_stmt 0 view .LVU71
 302 0086 0423     		movs	r3, #4
 303 0088 0593     		str	r3, [sp, #20]
 378:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 304              		.loc 1 378 3 is_stmt 1 view .LVU72
 378:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 305              		.loc 1 378 24 is_stmt 0 view .LVU73
 306 008a 4FF44413 		mov	r3, #3211264
 307 008e 0693     		str	r3, [sp, #24]
 379:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 308              		.loc 1 379 3 is_stmt 1 view .LVU74
 379:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 309              		.loc 1 379 24 is_stmt 0 view .LVU75
 310 0090 0794     		str	r4, [sp, #28]
 380:Core/Src/main.c **** 
 311              		.loc 1 380 3 is_stmt 1 view .LVU76
 312 0092 05A9     		add	r1, sp, #20
 313 0094 3046     		mov	r0, r6
 314 0096 FFF7FEFF 		bl	HAL_GPIO_Init
 315              	.LVL7:
 383:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 316              		.loc 1 383 3 view .LVU77
 383:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
ARM GAS  /tmp/ccDHp4gG.s 			page 57


 317              		.loc 1 383 23 is_stmt 0 view .LVU78
 318 009a 2023     		movs	r3, #32
 319 009c 0593     		str	r3, [sp, #20]
 384:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 320              		.loc 1 384 3 is_stmt 1 view .LVU79
 384:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 321              		.loc 1 384 24 is_stmt 0 view .LVU80
 322 009e 0123     		movs	r3, #1
 323 00a0 0693     		str	r3, [sp, #24]
 385:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 324              		.loc 1 385 3 is_stmt 1 view .LVU81
 385:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 325              		.loc 1 385 24 is_stmt 0 view .LVU82
 326 00a2 0794     		str	r4, [sp, #28]
 386:Core/Src/main.c ****   HAL_GPIO_Init(LD2_GPIO_Port, &GPIO_InitStruct);
 327              		.loc 1 386 3 is_stmt 1 view .LVU83
 386:Core/Src/main.c ****   HAL_GPIO_Init(LD2_GPIO_Port, &GPIO_InitStruct);
 328              		.loc 1 386 25 is_stmt 0 view .LVU84
 329 00a4 0894     		str	r4, [sp, #32]
 387:Core/Src/main.c **** 
 330              		.loc 1 387 3 is_stmt 1 view .LVU85
 331 00a6 05A9     		add	r1, sp, #20
 332 00a8 2846     		mov	r0, r5
 333 00aa FFF7FEFF 		bl	HAL_GPIO_Init
 334              	.LVL8:
 390:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI2_IRQn);
 335              		.loc 1 390 3 view .LVU86
 336 00ae 2246     		mov	r2, r4
 337 00b0 2146     		mov	r1, r4
 338 00b2 0820     		movs	r0, #8
 339 00b4 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 340              	.LVL9:
 391:Core/Src/main.c **** 
 341              		.loc 1 391 3 view .LVU87
 342 00b8 0820     		movs	r0, #8
 343 00ba FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 344              	.LVL10:
 393:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI15_10_IRQn);
 345              		.loc 1 393 3 view .LVU88
 346 00be 2246     		mov	r2, r4
 347 00c0 2146     		mov	r1, r4
 348 00c2 2820     		movs	r0, #40
 349 00c4 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 350              	.LVL11:
 394:Core/Src/main.c **** 
 351              		.loc 1 394 3 view .LVU89
 352 00c8 2820     		movs	r0, #40
 353 00ca FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 354              	.LVL12:
 398:Core/Src/main.c **** 
 355              		.loc 1 398 1 is_stmt 0 view .LVU90
 356 00ce 0AB0     		add	sp, sp, #40
 357              		.cfi_def_cfa_offset 16
 358              		@ sp needed
 359 00d0 70BD     		pop	{r4, r5, r6, pc}
 360              	.L15:
 361 00d2 00BF     		.align	2
ARM GAS  /tmp/ccDHp4gG.s 			page 58


 362              	.L14:
 363 00d4 00380240 		.word	1073887232
 364 00d8 00000240 		.word	1073872896
 365 00dc 00080240 		.word	1073874944
 366              		.cfi_endproc
 367              	.LFE231:
 369              		.section	.text.MX_DMA_Init,"ax",%progbits
 370              		.align	1
 371              		.syntax unified
 372              		.thumb
 373              		.thumb_func
 375              	MX_DMA_Init:
 376              	.LFB230:
 338:Core/Src/main.c **** 
 377              		.loc 1 338 1 is_stmt 1 view -0
 378              		.cfi_startproc
 379              		@ args = 0, pretend = 0, frame = 8
 380              		@ frame_needed = 0, uses_anonymous_args = 0
 381 0000 00B5     		push	{lr}
 382              		.cfi_def_cfa_offset 4
 383              		.cfi_offset 14, -4
 384 0002 83B0     		sub	sp, sp, #12
 385              		.cfi_def_cfa_offset 16
 341:Core/Src/main.c **** 
 386              		.loc 1 341 3 view .LVU92
 387              	.LBB16:
 341:Core/Src/main.c **** 
 388              		.loc 1 341 3 view .LVU93
 389 0004 0021     		movs	r1, #0
 390 0006 0191     		str	r1, [sp, #4]
 341:Core/Src/main.c **** 
 391              		.loc 1 341 3 view .LVU94
 392 0008 094B     		ldr	r3, .L18
 393 000a 1A6B     		ldr	r2, [r3, #48]
 394 000c 42F48002 		orr	r2, r2, #4194304
 395 0010 1A63     		str	r2, [r3, #48]
 341:Core/Src/main.c **** 
 396              		.loc 1 341 3 view .LVU95
 397 0012 1B6B     		ldr	r3, [r3, #48]
 398 0014 03F48003 		and	r3, r3, #4194304
 399 0018 0193     		str	r3, [sp, #4]
 341:Core/Src/main.c **** 
 400              		.loc 1 341 3 view .LVU96
 401 001a 019B     		ldr	r3, [sp, #4]
 402              	.LBE16:
 341:Core/Src/main.c **** 
 403              		.loc 1 341 3 view .LVU97
 345:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA2_Stream0_IRQn);
 404              		.loc 1 345 3 view .LVU98
 405 001c 0A46     		mov	r2, r1
 406 001e 3820     		movs	r0, #56
 407 0020 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 408              	.LVL13:
 346:Core/Src/main.c **** 
 409              		.loc 1 346 3 view .LVU99
 410 0024 3820     		movs	r0, #56
 411 0026 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
ARM GAS  /tmp/ccDHp4gG.s 			page 59


 412              	.LVL14:
 348:Core/Src/main.c **** 
 413              		.loc 1 348 1 is_stmt 0 view .LVU100
 414 002a 03B0     		add	sp, sp, #12
 415              		.cfi_def_cfa_offset 4
 416              		@ sp needed
 417 002c 5DF804FB 		ldr	pc, [sp], #4
 418              	.L19:
 419              		.align	2
 420              	.L18:
 421 0030 00380240 		.word	1073887232
 422              		.cfi_endproc
 423              	.LFE230:
 425              		.section	.rodata.do_wait_request.str1.4,"aMS",%progbits,1
 426              		.align	2
 427              	.LC1:
 428 0000 433A0D0A 		.ascii	"C:\015\012\000"
 428      00
 429              		.section	.text.do_wait_request,"ax",%progbits
 430              		.align	1
 431              		.global	do_wait_request
 432              		.syntax unified
 433              		.thumb
 434              		.thumb_func
 436              	do_wait_request:
 437              	.LVL15:
 438              	.LFB233:
 481:Core/Src/main.c ****   next_state = NO_CHANGE;
 439              		.loc 1 481 45 is_stmt 1 view -0
 440              		.cfi_startproc
 441              		@ args = 0, pretend = 0, frame = 0
 442              		@ frame_needed = 0, uses_anonymous_args = 0
 482:Core/Src/main.c ****   
 443              		.loc 1 482 3 view .LVU102
 482:Core/Src/main.c ****   
 444              		.loc 1 482 14 is_stmt 0 view .LVU103
 445 0000 1A4B     		ldr	r3, .L33
 446 0002 0722     		movs	r2, #7
 447 0004 1A70     		strb	r2, [r3]
 486:Core/Src/main.c ****     halStatus = HAL_ADC_Stop_DMA(&hadc1);
 448              		.loc 1 486 3 is_stmt 1 view .LVU104
 486:Core/Src/main.c ****     halStatus = HAL_ADC_Stop_DMA(&hadc1);
 449              		.loc 1 486 6 is_stmt 0 view .LVU105
 450 0006 1A4B     		ldr	r3, .L33+4
 451 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 486:Core/Src/main.c ****     halStatus = HAL_ADC_Stop_DMA(&hadc1);
 452              		.loc 1 486 5 view .LVU106
 453 000a 13B1     		cbz	r3, .L30
 504:Core/Src/main.c **** }
 454              		.loc 1 504 3 is_stmt 1 view .LVU107
 504:Core/Src/main.c **** }
 455              		.loc 1 504 10 is_stmt 0 view .LVU108
 456 000c 174B     		ldr	r3, .L33
 457 000e 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 458              	.LVL16:
 505:Core/Src/main.c **** 
 459              		.loc 1 505 1 view .LVU109
ARM GAS  /tmp/ccDHp4gG.s 			page 60


 460 0010 7047     		bx	lr
 461              	.LVL17:
 462              	.L30:
 481:Core/Src/main.c ****   next_state = NO_CHANGE;
 463              		.loc 1 481 45 view .LVU110
 464 0012 10B5     		push	{r4, lr}
 465              		.cfi_def_cfa_offset 8
 466              		.cfi_offset 4, -8
 467              		.cfi_offset 14, -4
 487:Core/Src/main.c ****     if(halStatus != HAL_OK){
 468              		.loc 1 487 5 is_stmt 1 view .LVU111
 487:Core/Src/main.c ****     if(halStatus != HAL_OK){
 469              		.loc 1 487 17 is_stmt 0 view .LVU112
 470 0014 1748     		ldr	r0, .L33+8
 471              	.LVL18:
 487:Core/Src/main.c ****     if(halStatus != HAL_OK){
 472              		.loc 1 487 17 view .LVU113
 473 0016 FFF7FEFF 		bl	HAL_ADC_Stop_DMA
 474              	.LVL19:
 487:Core/Src/main.c ****     if(halStatus != HAL_OK){
 475              		.loc 1 487 15 discriminator 1 view .LVU114
 476 001a 174B     		ldr	r3, .L33+12
 477 001c 1870     		strb	r0, [r3]
 488:Core/Src/main.c ****       next_state  = STATE_ERROR;
 478              		.loc 1 488 5 is_stmt 1 view .LVU115
 488:Core/Src/main.c ****       next_state  = STATE_ERROR;
 479              		.loc 1 488 7 is_stmt 0 view .LVU116
 480 001e E8B9     		cbnz	r0, .L31
 493:Core/Src/main.c ****     halStatus = HAL_UART_Transmit(&huart2, (uint8_t *)msg_buffer, strlen(msg_buffer), HAL_MAX_DELAY
 481              		.loc 1 493 5 is_stmt 1 view .LVU117
 482 0020 164C     		ldr	r4, .L33+16
 483 0022 174B     		ldr	r3, .L33+20
 484 0024 93E80300 		ldm	r3, {r0, r1}
 485 0028 2060     		str	r0, [r4]
 486 002a 2171     		strb	r1, [r4, #4]
 494:Core/Src/main.c ****     if(halStatus != HAL_OK){
 487              		.loc 1 494 5 view .LVU118
 494:Core/Src/main.c ****     if(halStatus != HAL_OK){
 488              		.loc 1 494 67 is_stmt 0 view .LVU119
 489 002c 2046     		mov	r0, r4
 490 002e FFF7FEFF 		bl	strlen
 491              	.LVL20:
 494:Core/Src/main.c ****     if(halStatus != HAL_OK){
 492              		.loc 1 494 17 discriminator 1 view .LVU120
 493 0032 4FF0FF33 		mov	r3, #-1
 494 0036 82B2     		uxth	r2, r0
 495 0038 2146     		mov	r1, r4
 496 003a 1248     		ldr	r0, .L33+24
 497 003c FFF7FEFF 		bl	HAL_UART_Transmit
 498              	.LVL21:
 494:Core/Src/main.c ****     if(halStatus != HAL_OK){
 499              		.loc 1 494 15 discriminator 2 view .LVU121
 500 0040 0D4B     		ldr	r3, .L33+12
 501 0042 1870     		strb	r0, [r3]
 495:Core/Src/main.c ****       next_state  = STATE_ERROR;
 502              		.loc 1 495 5 is_stmt 1 view .LVU122
 495:Core/Src/main.c ****       next_state  = STATE_ERROR;
ARM GAS  /tmp/ccDHp4gG.s 			page 61


 503              		.loc 1 495 7 is_stmt 0 view .LVU123
 504 0044 70B9     		cbnz	r0, .L32
 500:Core/Src/main.c ****     sendRequest = 1;
 505              		.loc 1 500 5 is_stmt 1 view .LVU124
 506 0046 0022     		movs	r2, #0
 507 0048 2021     		movs	r1, #32
 508 004a 0F48     		ldr	r0, .L33+28
 509 004c FFF7FEFF 		bl	HAL_GPIO_WritePin
 510              	.LVL22:
 501:Core/Src/main.c ****   }
 511              		.loc 1 501 5 view .LVU125
 501:Core/Src/main.c ****   }
 512              		.loc 1 501 17 is_stmt 0 view .LVU126
 513 0050 074B     		ldr	r3, .L33+4
 514 0052 0122     		movs	r2, #1
 515 0054 1A70     		strb	r2, [r3]
 504:Core/Src/main.c **** }
 516              		.loc 1 504 3 is_stmt 1 view .LVU127
 504:Core/Src/main.c **** }
 517              		.loc 1 504 10 is_stmt 0 view .LVU128
 518 0056 054B     		ldr	r3, .L33
 519 0058 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 520              	.L23:
 505:Core/Src/main.c **** 
 521              		.loc 1 505 1 view .LVU129
 522 005a 10BD     		pop	{r4, pc}
 523              	.L31:
 489:Core/Src/main.c ****       return next_state;
 524              		.loc 1 489 7 is_stmt 1 view .LVU130
 489:Core/Src/main.c ****       return next_state;
 525              		.loc 1 489 19 is_stmt 0 view .LVU131
 526 005c 0220     		movs	r0, #2
 527 005e 034B     		ldr	r3, .L33
 528 0060 1870     		strb	r0, [r3]
 490:Core/Src/main.c ****     }
 529              		.loc 1 490 7 is_stmt 1 view .LVU132
 490:Core/Src/main.c ****     }
 530              		.loc 1 490 14 is_stmt 0 view .LVU133
 531 0062 FAE7     		b	.L23
 532              	.L32:
 496:Core/Src/main.c ****       return next_state;
 533              		.loc 1 496 7 is_stmt 1 view .LVU134
 496:Core/Src/main.c ****       return next_state;
 534              		.loc 1 496 19 is_stmt 0 view .LVU135
 535 0064 0220     		movs	r0, #2
 536 0066 014B     		ldr	r3, .L33
 537 0068 1870     		strb	r0, [r3]
 497:Core/Src/main.c ****     }
 538              		.loc 1 497 7 is_stmt 1 view .LVU136
 497:Core/Src/main.c ****     }
 539              		.loc 1 497 14 is_stmt 0 view .LVU137
 540 006a F6E7     		b	.L23
 541              	.L34:
 542              		.align	2
 543              	.L33:
 544 006c 00000000 		.word	next_state
 545 0070 00000000 		.word	sendRequest
ARM GAS  /tmp/ccDHp4gG.s 			page 62


 546 0074 00000000 		.word	hadc1
 547 0078 00000000 		.word	halStatus
 548 007c 00000000 		.word	msg_buffer
 549 0080 00000000 		.word	.LC1
 550 0084 00000000 		.word	huart2
 551 0088 00080240 		.word	1073874944
 552              		.cfi_endproc
 553              	.LFE233:
 555              		.section	.rodata.do_error.str1.4,"aMS",%progbits,1
 556              		.align	2
 557              	.LC2:
 558 0000 4552524F 		.ascii	"ERROR\015\012\000"
 558      520D0A00 
 559              		.section	.text.do_error,"ax",%progbits
 560              		.align	1
 561              		.global	do_error
 562              		.syntax unified
 563              		.thumb
 564              		.thumb_func
 566              	do_error:
 567              	.LVL23:
 568              	.LFB234:
 510:Core/Src/main.c ****   next_state = NO_CHANGE;
 569              		.loc 1 510 38 is_stmt 1 view -0
 570              		.cfi_startproc
 571              		@ args = 0, pretend = 0, frame = 0
 572              		@ frame_needed = 0, uses_anonymous_args = 0
 510:Core/Src/main.c ****   next_state = NO_CHANGE;
 573              		.loc 1 510 38 is_stmt 0 view .LVU139
 574 0000 38B5     		push	{r3, r4, r5, lr}
 575              		.cfi_def_cfa_offset 16
 576              		.cfi_offset 3, -16
 577              		.cfi_offset 4, -12
 578              		.cfi_offset 5, -8
 579              		.cfi_offset 14, -4
 511:Core/Src/main.c ****   
 580              		.loc 1 511 3 is_stmt 1 view .LVU140
 511:Core/Src/main.c ****   
 581              		.loc 1 511 14 is_stmt 0 view .LVU141
 582 0002 0F4D     		ldr	r5, .L37
 583 0004 0723     		movs	r3, #7
 584 0006 2B70     		strb	r3, [r5]
 515:Core/Src/main.c ****   halStatus = HAL_UART_Transmit(&huart2, (uint8_t *)msg_buffer, strlen(msg_buffer), HAL_MAX_DELAY);
 585              		.loc 1 515 3 is_stmt 1 view .LVU142
 586 0008 0E4C     		ldr	r4, .L37+4
 587 000a 0F4B     		ldr	r3, .L37+8
 588 000c 93E80300 		ldm	r3, {r0, r1}
 589              	.LVL24:
 515:Core/Src/main.c ****   halStatus = HAL_UART_Transmit(&huart2, (uint8_t *)msg_buffer, strlen(msg_buffer), HAL_MAX_DELAY);
 590              		.loc 1 515 3 is_stmt 0 view .LVU143
 591 0010 84E80300 		stm	r4, {r0, r1}
 516:Core/Src/main.c ****   //TODO: use a TIME peripheral to blink led
 592              		.loc 1 516 3 is_stmt 1 view .LVU144
 516:Core/Src/main.c ****   //TODO: use a TIME peripheral to blink led
 593              		.loc 1 516 65 is_stmt 0 view .LVU145
 594 0014 2046     		mov	r0, r4
 595 0016 FFF7FEFF 		bl	strlen
ARM GAS  /tmp/ccDHp4gG.s 			page 63


 596              	.LVL25:
 516:Core/Src/main.c ****   //TODO: use a TIME peripheral to blink led
 597              		.loc 1 516 15 discriminator 1 view .LVU146
 598 001a 4FF0FF33 		mov	r3, #-1
 599 001e 82B2     		uxth	r2, r0
 600 0020 2146     		mov	r1, r4
 601 0022 0A48     		ldr	r0, .L37+12
 602 0024 FFF7FEFF 		bl	HAL_UART_Transmit
 603              	.LVL26:
 516:Core/Src/main.c ****   //TODO: use a TIME peripheral to blink led
 604              		.loc 1 516 13 discriminator 2 view .LVU147
 605 0028 094B     		ldr	r3, .L37+16
 606 002a 1870     		strb	r0, [r3]
 518:Core/Src/main.c ****   HAL_Delay(200);
 607              		.loc 1 518 3 is_stmt 1 view .LVU148
 608 002c 2021     		movs	r1, #32
 609 002e 0948     		ldr	r0, .L37+20
 610 0030 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 611              	.LVL27:
 519:Core/Src/main.c **** 
 612              		.loc 1 519 3 view .LVU149
 613 0034 C820     		movs	r0, #200
 614 0036 FFF7FEFF 		bl	HAL_Delay
 615              	.LVL28:
 521:Core/Src/main.c **** }
 616              		.loc 1 521 3 view .LVU150
 522:Core/Src/main.c **** 
 617              		.loc 1 522 1 is_stmt 0 view .LVU151
 618 003a 2878     		ldrb	r0, [r5]	@ zero_extendqisi2
 619 003c 38BD     		pop	{r3, r4, r5, pc}
 620              	.L38:
 621 003e 00BF     		.align	2
 622              	.L37:
 623 0040 00000000 		.word	next_state
 624 0044 00000000 		.word	msg_buffer
 625 0048 00000000 		.word	.LC2
 626 004c 00000000 		.word	huart2
 627 0050 00000000 		.word	halStatus
 628 0054 00080240 		.word	1073874944
 629              		.cfi_endproc
 630              	.LFE234:
 632              		.section	.text.do_pause,"ax",%progbits
 633              		.align	1
 634              		.global	do_pause
 635              		.syntax unified
 636              		.thumb
 637              		.thumb_func
 639              	do_pause:
 640              	.LVL29:
 641              	.LFB237:
 608:Core/Src/main.c **** 
 609:Core/Src/main.c **** 
 610:Core/Src/main.c **** // Function to be executed in state pause
 611:Core/Src/main.c **** // valid return states: STATE_ERROR, STATE_LISTENING
 612:Core/Src/main.c **** state_t do_pause(state_data_t *data) {
 642              		.loc 1 612 38 is_stmt 1 view -0
 643              		.cfi_startproc
ARM GAS  /tmp/ccDHp4gG.s 			page 64


 644              		@ args = 0, pretend = 0, frame = 0
 645              		@ frame_needed = 0, uses_anonymous_args = 0
 613:Core/Src/main.c ****   next_state = NO_CHANGE;
 646              		.loc 1 613 3 view .LVU153
 647              		.loc 1 613 14 is_stmt 0 view .LVU154
 648 0000 1C4B     		ldr	r3, .L52
 649 0002 0722     		movs	r2, #7
 650 0004 1A70     		strb	r2, [r3]
 614:Core/Src/main.c ****   
 615:Core/Src/main.c ****   //syslog(LOG_INFO, "[FSM] In state pause");
 616:Core/Src/main.c ****   /* Your Code Here */
 617:Core/Src/main.c ****   if(!sendRequest){
 651              		.loc 1 617 3 is_stmt 1 view .LVU155
 652              		.loc 1 617 6 is_stmt 0 view .LVU156
 653 0006 1C4B     		ldr	r3, .L52+4
 654 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 655              		.loc 1 617 5 view .LVU157
 656 000a 13B1     		cbz	r3, .L49
 618:Core/Src/main.c ****     halStatus = HAL_ADC_Stop_DMA(&hadc1);
 619:Core/Src/main.c ****     if(halStatus != HAL_OK){
 620:Core/Src/main.c ****       next_state  = STATE_ERROR;
 621:Core/Src/main.c ****       return next_state;
 622:Core/Src/main.c ****     }
 623:Core/Src/main.c **** 
 624:Core/Src/main.c ****     sprintf(msg_buffer, "C:\r\n");//send comand request to user
 625:Core/Src/main.c ****     halStatus = HAL_UART_Transmit(&huart2, (uint8_t *)msg_buffer, strlen(msg_buffer), HAL_MAX_DELAY
 626:Core/Src/main.c ****     if(halStatus != HAL_OK){
 627:Core/Src/main.c ****       next_state  = STATE_ERROR;
 628:Core/Src/main.c ****       return next_state;
 629:Core/Src/main.c ****     }
 630:Core/Src/main.c **** 
 631:Core/Src/main.c ****     //TODO: use a TIME peripheral to blink led
 632:Core/Src/main.c ****     HAL_GPIO_TogglePin(GPIOC, GPIO_PIN_5);
 633:Core/Src/main.c ****     HAL_Delay(1000);
 634:Core/Src/main.c ****     sendRequest = 1;
 635:Core/Src/main.c ****   }
 636:Core/Src/main.c **** 
 637:Core/Src/main.c ****   
 638:Core/Src/main.c ****   return next_state;
 657              		.loc 1 638 3 is_stmt 1 view .LVU158
 658              		.loc 1 638 10 is_stmt 0 view .LVU159
 659 000c 194B     		ldr	r3, .L52
 660 000e 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 661              	.LVL30:
 639:Core/Src/main.c **** }
 662              		.loc 1 639 1 view .LVU160
 663 0010 7047     		bx	lr
 664              	.LVL31:
 665              	.L49:
 612:Core/Src/main.c ****   next_state = NO_CHANGE;
 666              		.loc 1 612 38 view .LVU161
 667 0012 10B5     		push	{r4, lr}
 668              		.cfi_def_cfa_offset 8
 669              		.cfi_offset 4, -8
 670              		.cfi_offset 14, -4
 618:Core/Src/main.c ****     halStatus = HAL_ADC_Stop_DMA(&hadc1);
 671              		.loc 1 618 5 is_stmt 1 view .LVU162
ARM GAS  /tmp/ccDHp4gG.s 			page 65


 618:Core/Src/main.c ****     halStatus = HAL_ADC_Stop_DMA(&hadc1);
 672              		.loc 1 618 17 is_stmt 0 view .LVU163
 673 0014 1948     		ldr	r0, .L52+8
 674              	.LVL32:
 618:Core/Src/main.c ****     halStatus = HAL_ADC_Stop_DMA(&hadc1);
 675              		.loc 1 618 17 view .LVU164
 676 0016 FFF7FEFF 		bl	HAL_ADC_Stop_DMA
 677              	.LVL33:
 618:Core/Src/main.c ****     halStatus = HAL_ADC_Stop_DMA(&hadc1);
 678              		.loc 1 618 15 discriminator 1 view .LVU165
 679 001a 194B     		ldr	r3, .L52+12
 680 001c 1870     		strb	r0, [r3]
 619:Core/Src/main.c ****       next_state  = STATE_ERROR;
 681              		.loc 1 619 5 is_stmt 1 view .LVU166
 619:Core/Src/main.c ****       next_state  = STATE_ERROR;
 682              		.loc 1 619 7 is_stmt 0 view .LVU167
 683 001e 00BB     		cbnz	r0, .L50
 624:Core/Src/main.c ****     halStatus = HAL_UART_Transmit(&huart2, (uint8_t *)msg_buffer, strlen(msg_buffer), HAL_MAX_DELAY
 684              		.loc 1 624 5 is_stmt 1 view .LVU168
 685 0020 184C     		ldr	r4, .L52+16
 686 0022 194B     		ldr	r3, .L52+20
 687 0024 93E80300 		ldm	r3, {r0, r1}
 688 0028 2060     		str	r0, [r4]
 689 002a 2171     		strb	r1, [r4, #4]
 625:Core/Src/main.c ****     if(halStatus != HAL_OK){
 690              		.loc 1 625 5 view .LVU169
 625:Core/Src/main.c ****     if(halStatus != HAL_OK){
 691              		.loc 1 625 67 is_stmt 0 view .LVU170
 692 002c 2046     		mov	r0, r4
 693 002e FFF7FEFF 		bl	strlen
 694              	.LVL34:
 625:Core/Src/main.c ****     if(halStatus != HAL_OK){
 695              		.loc 1 625 17 discriminator 1 view .LVU171
 696 0032 4FF0FF33 		mov	r3, #-1
 697 0036 82B2     		uxth	r2, r0
 698 0038 2146     		mov	r1, r4
 699 003a 1448     		ldr	r0, .L52+24
 700 003c FFF7FEFF 		bl	HAL_UART_Transmit
 701              	.LVL35:
 625:Core/Src/main.c ****     if(halStatus != HAL_OK){
 702              		.loc 1 625 15 discriminator 2 view .LVU172
 703 0040 0F4B     		ldr	r3, .L52+12
 704 0042 1870     		strb	r0, [r3]
 626:Core/Src/main.c ****       next_state  = STATE_ERROR;
 705              		.loc 1 626 5 is_stmt 1 view .LVU173
 626:Core/Src/main.c ****       next_state  = STATE_ERROR;
 706              		.loc 1 626 7 is_stmt 0 view .LVU174
 707 0044 88B9     		cbnz	r0, .L51
 632:Core/Src/main.c ****     HAL_Delay(1000);
 708              		.loc 1 632 5 is_stmt 1 view .LVU175
 709 0046 2021     		movs	r1, #32
 710 0048 1148     		ldr	r0, .L52+28
 711 004a FFF7FEFF 		bl	HAL_GPIO_TogglePin
 712              	.LVL36:
 633:Core/Src/main.c ****     sendRequest = 1;
 713              		.loc 1 633 5 view .LVU176
 714 004e 4FF47A70 		mov	r0, #1000
ARM GAS  /tmp/ccDHp4gG.s 			page 66


 715 0052 FFF7FEFF 		bl	HAL_Delay
 716              	.LVL37:
 634:Core/Src/main.c ****   }
 717              		.loc 1 634 5 view .LVU177
 634:Core/Src/main.c ****   }
 718              		.loc 1 634 17 is_stmt 0 view .LVU178
 719 0056 084B     		ldr	r3, .L52+4
 720 0058 0122     		movs	r2, #1
 721 005a 1A70     		strb	r2, [r3]
 638:Core/Src/main.c **** }
 722              		.loc 1 638 3 is_stmt 1 view .LVU179
 638:Core/Src/main.c **** }
 723              		.loc 1 638 10 is_stmt 0 view .LVU180
 724 005c 054B     		ldr	r3, .L52
 725 005e 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 726              	.L42:
 727              		.loc 1 639 1 view .LVU181
 728 0060 10BD     		pop	{r4, pc}
 729              	.L50:
 620:Core/Src/main.c ****       return next_state;
 730              		.loc 1 620 7 is_stmt 1 view .LVU182
 620:Core/Src/main.c ****       return next_state;
 731              		.loc 1 620 19 is_stmt 0 view .LVU183
 732 0062 0220     		movs	r0, #2
 733 0064 034B     		ldr	r3, .L52
 734 0066 1870     		strb	r0, [r3]
 621:Core/Src/main.c ****     }
 735              		.loc 1 621 7 is_stmt 1 view .LVU184
 621:Core/Src/main.c ****     }
 736              		.loc 1 621 14 is_stmt 0 view .LVU185
 737 0068 FAE7     		b	.L42
 738              	.L51:
 627:Core/Src/main.c ****       return next_state;
 739              		.loc 1 627 7 is_stmt 1 view .LVU186
 627:Core/Src/main.c ****       return next_state;
 740              		.loc 1 627 19 is_stmt 0 view .LVU187
 741 006a 0220     		movs	r0, #2
 742 006c 014B     		ldr	r3, .L52
 743 006e 1870     		strb	r0, [r3]
 628:Core/Src/main.c ****     }
 744              		.loc 1 628 7 is_stmt 1 view .LVU188
 628:Core/Src/main.c ****     }
 745              		.loc 1 628 14 is_stmt 0 view .LVU189
 746 0070 F6E7     		b	.L42
 747              	.L53:
 748 0072 00BF     		.align	2
 749              	.L52:
 750 0074 00000000 		.word	next_state
 751 0078 00000000 		.word	sendRequest
 752 007c 00000000 		.word	hadc1
 753 0080 00000000 		.word	halStatus
 754 0084 00000000 		.word	msg_buffer
 755 0088 00000000 		.word	.LC1
 756 008c 00000000 		.word	huart2
 757 0090 00080240 		.word	1073874944
 758              		.cfi_endproc
 759              	.LFE237:
ARM GAS  /tmp/ccDHp4gG.s 			page 67


 761              		.section	.rodata.do_listening.str1.4,"aMS",%progbits,1
 762              		.align	2
 763              	.LC3:
 764 0000 413A2568 		.ascii	"A:%hu\015\012\000"
 764      750D0A00 
 765              		.global	__aeabi_f2d
 766              		.align	2
 767              	.LC4:
 768 0008 413A2025 		.ascii	"A: %.3f\015\012\000"
 768      2E33660D 
 768      0A00
 769 0012 0000     		.align	2
 770              	.LC5:
 771 0014 413A2025 		.ascii	"A: %hu\015\012\000"
 771      68750D0A 
 771      00
 772 001d 000000   		.align	2
 773              	.LC6:
 774 0020 443A2025 		.ascii	"D: %hu\015\012\000"
 774      68750D0A 
 774      00
 775              		.section	.text.do_listening,"ax",%progbits
 776              		.align	1
 777              		.global	do_listening
 778              		.syntax unified
 779              		.thumb
 780              		.thumb_func
 782              	do_listening:
 783              	.LVL38:
 784              	.LFB235:
 527:Core/Src/main.c ****   next_state = NO_CHANGE;
 785              		.loc 1 527 42 is_stmt 1 view -0
 786              		.cfi_startproc
 787              		@ args = 0, pretend = 0, frame = 0
 788              		@ frame_needed = 0, uses_anonymous_args = 0
 527:Core/Src/main.c ****   next_state = NO_CHANGE;
 789              		.loc 1 527 42 is_stmt 0 view .LVU191
 790 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 791              		.cfi_def_cfa_offset 24
 792              		.cfi_offset 3, -24
 793              		.cfi_offset 4, -20
 794              		.cfi_offset 5, -16
 795              		.cfi_offset 6, -12
 796              		.cfi_offset 7, -8
 797              		.cfi_offset 14, -4
 528:Core/Src/main.c ****   
 798              		.loc 1 528 3 is_stmt 1 view .LVU192
 528:Core/Src/main.c ****   
 799              		.loc 1 528 14 is_stmt 0 view .LVU193
 800 0002 564B     		ldr	r3, .L68
 801 0004 0722     		movs	r2, #7
 802 0006 1A70     		strb	r2, [r3]
 533:Core/Src/main.c ****   lastAnalogValue = adcBuffer[last_index];
 803              		.loc 1 533 3 is_stmt 1 view .LVU194
 533:Core/Src/main.c ****   lastAnalogValue = adcBuffer[last_index];
 804              		.loc 1 533 31 is_stmt 0 view .LVU195
 805 0008 554B     		ldr	r3, .L68+4
ARM GAS  /tmp/ccDHp4gG.s 			page 68


 806 000a 1B68     		ldr	r3, [r3]
 807 000c 5A68     		ldr	r2, [r3, #4]
 533:Core/Src/main.c ****   lastAnalogValue = adcBuffer[last_index];
 808              		.loc 1 533 29 view .LVU196
 809 000e C2F13202 		rsb	r2, r2, #50
 533:Core/Src/main.c ****   lastAnalogValue = adcBuffer[last_index];
 810              		.loc 1 533 66 view .LVU197
 811 0012 544B     		ldr	r3, .L68+8
 812 0014 A3FB0213 		umull	r1, r3, r3, r2
 813 0018 1B09     		lsrs	r3, r3, #4
 814 001a 3221     		movs	r1, #50
 815 001c 01FB1323 		mls	r3, r1, r3, r2
 533:Core/Src/main.c ****   lastAnalogValue = adcBuffer[last_index];
 816              		.loc 1 533 14 view .LVU198
 817 0020 514A     		ldr	r2, .L68+12
 818 0022 1380     		strh	r3, [r2]	@ movhi
 534:Core/Src/main.c ****   //update moving average if in MOVING_AVERAGE mode
 819              		.loc 1 534 3 is_stmt 1 view .LVU199
 534:Core/Src/main.c ****   //update moving average if in MOVING_AVERAGE mode
 820              		.loc 1 534 30 is_stmt 0 view .LVU200
 821 0024 9BB2     		uxth	r3, r3
 822 0026 514A     		ldr	r2, .L68+16
 823 0028 52F82320 		ldr	r2, [r2, r3, lsl #2]
 534:Core/Src/main.c ****   //update moving average if in MOVING_AVERAGE mode
 824              		.loc 1 534 19 view .LVU201
 825 002c 94B2     		uxth	r4, r2
 826 002e 504B     		ldr	r3, .L68+20
 827 0030 1C80     		strh	r4, [r3]	@ movhi
 536:Core/Src/main.c ****     sum -= adc_moving_average[buffer_index];
 828              		.loc 1 536 3 is_stmt 1 view .LVU202
 536:Core/Src/main.c ****     sum -= adc_moving_average[buffer_index];
 829              		.loc 1 536 25 is_stmt 0 view .LVU203
 830 0032 504B     		ldr	r3, .L68+24
 831 0034 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 536:Core/Src/main.c ****     sum -= adc_moving_average[buffer_index];
 832              		.loc 1 536 6 view .LVU204
 833 0036 012B     		cmp	r3, #1
 834 0038 3ED0     		beq	.L65
 835              	.LVL39:
 836              	.L55:
 544:Core/Src/main.c ****   {
 837              		.loc 1 544 3 is_stmt 1 view .LVU205
 838 003a 012B     		cmp	r3, #1
 839 003c 55D0     		beq	.L56
 840 003e 022B     		cmp	r3, #2
 841 0040 67D0     		beq	.L57
 842 0042 23B9     		cbnz	r3, .L58
 843              	.LBB17:
 547:Core/Src/main.c ****     break;
 844              		.loc 1 547 5 view .LVU206
 845 0044 92B2     		uxth	r2, r2
 846 0046 4C49     		ldr	r1, .L68+28
 847 0048 4C48     		ldr	r0, .L68+32
 848 004a FFF7FEFF 		bl	sprintf
 849              	.LVL40:
 548:Core/Src/main.c ****   
 850              		.loc 1 548 5 view .LVU207
ARM GAS  /tmp/ccDHp4gG.s 			page 69


 851              	.L58:
 852              	.LBE17:
 562:Core/Src/main.c ****   if(halStatus != HAL_OK){
 853              		.loc 1 562 3 view .LVU208
 562:Core/Src/main.c ****   if(halStatus != HAL_OK){
 854              		.loc 1 562 65 is_stmt 0 view .LVU209
 855 004e 4B4C     		ldr	r4, .L68+32
 856 0050 2046     		mov	r0, r4
 857 0052 FFF7FEFF 		bl	strlen
 858              	.LVL41:
 562:Core/Src/main.c ****   if(halStatus != HAL_OK){
 859              		.loc 1 562 15 discriminator 1 view .LVU210
 860 0056 4FF0FF33 		mov	r3, #-1
 861 005a 82B2     		uxth	r2, r0
 862 005c 2146     		mov	r1, r4
 863 005e 4848     		ldr	r0, .L68+36
 864 0060 FFF7FEFF 		bl	HAL_UART_Transmit
 865              	.LVL42:
 562:Core/Src/main.c ****   if(halStatus != HAL_OK){
 866              		.loc 1 562 13 discriminator 2 view .LVU211
 867 0064 474B     		ldr	r3, .L68+40
 868 0066 1870     		strb	r0, [r3]
 563:Core/Src/main.c ****     next_state  = STATE_ERROR;
 869              		.loc 1 563 3 is_stmt 1 view .LVU212
 563:Core/Src/main.c ****     next_state  = STATE_ERROR;
 870              		.loc 1 563 5 is_stmt 0 view .LVU213
 871 0068 0028     		cmp	r0, #0
 872 006a 67D1     		bne	.L66
 569:Core/Src/main.c ****   halStatus = HAL_UART_Transmit(&huart2, (uint8_t *)msg_buffer, strlen(msg_buffer), HAL_MAX_DELAY);
 873              		.loc 1 569 3 is_stmt 1 view .LVU214
 874 006c 434C     		ldr	r4, .L68+32
 875 006e 464B     		ldr	r3, .L68+44
 876 0070 1A88     		ldrh	r2, [r3]
 877 0072 4649     		ldr	r1, .L68+48
 878 0074 2046     		mov	r0, r4
 879 0076 FFF7FEFF 		bl	sprintf
 880              	.LVL43:
 570:Core/Src/main.c ****   if(halStatus != HAL_OK){
 881              		.loc 1 570 3 view .LVU215
 570:Core/Src/main.c ****   if(halStatus != HAL_OK){
 882              		.loc 1 570 65 is_stmt 0 view .LVU216
 883 007a 2046     		mov	r0, r4
 884 007c FFF7FEFF 		bl	strlen
 885              	.LVL44:
 570:Core/Src/main.c ****   if(halStatus != HAL_OK){
 886              		.loc 1 570 15 discriminator 1 view .LVU217
 887 0080 4FF0FF33 		mov	r3, #-1
 888 0084 82B2     		uxth	r2, r0
 889 0086 2146     		mov	r1, r4
 890 0088 3D48     		ldr	r0, .L68+36
 891 008a FFF7FEFF 		bl	HAL_UART_Transmit
 892              	.LVL45:
 570:Core/Src/main.c ****   if(halStatus != HAL_OK){
 893              		.loc 1 570 13 discriminator 2 view .LVU218
 894 008e 3D4B     		ldr	r3, .L68+40
 895 0090 1870     		strb	r0, [r3]
 571:Core/Src/main.c ****     next_state  = STATE_ERROR;
ARM GAS  /tmp/ccDHp4gG.s 			page 70


 896              		.loc 1 571 3 is_stmt 1 view .LVU219
 571:Core/Src/main.c ****     next_state  = STATE_ERROR;
 897              		.loc 1 571 5 is_stmt 0 view .LVU220
 898 0092 0028     		cmp	r0, #0
 899 0094 56D1     		bne	.L67
 576:Core/Src/main.c ****     //check if is high for 5 seconds
 900              		.loc 1 576 3 is_stmt 1 view .LVU221
 576:Core/Src/main.c ****     //check if is high for 5 seconds
 901              		.loc 1 576 6 is_stmt 0 view .LVU222
 902 0096 3C4B     		ldr	r3, .L68+44
 903 0098 1B88     		ldrh	r3, [r3]
 576:Core/Src/main.c ****     //check if is high for 5 seconds
 904              		.loc 1 576 5 view .LVU223
 905 009a 002B     		cmp	r3, #0
 906 009c 56D0     		beq	.L62
 578:Core/Src/main.c ****       //warning state
 907              		.loc 1 578 5 is_stmt 1 view .LVU224
 578:Core/Src/main.c ****       //warning state
 908              		.loc 1 578 8 is_stmt 0 view .LVU225
 909 009e FFF7FEFF 		bl	HAL_GetTick
 910              	.LVL46:
 578:Core/Src/main.c ****       //warning state
 911              		.loc 1 578 22 discriminator 1 view .LVU226
 912 00a2 3B4B     		ldr	r3, .L68+52
 913 00a4 1B68     		ldr	r3, [r3]
 914 00a6 C01A     		subs	r0, r0, r3
 578:Core/Src/main.c ****       //warning state
 915              		.loc 1 578 7 discriminator 1 view .LVU227
 916 00a8 41F28733 		movw	r3, #4999
 917 00ac 9842     		cmp	r0, r3
 918 00ae 51D9     		bls	.L63
 580:Core/Src/main.c ****     }
 919              		.loc 1 580 7 is_stmt 1 view .LVU228
 580:Core/Src/main.c ****     }
 920              		.loc 1 580 18 is_stmt 0 view .LVU229
 921 00b0 2A4B     		ldr	r3, .L68
 922 00b2 0422     		movs	r2, #4
 923 00b4 1A70     		strb	r2, [r3]
 924 00b6 4DE0     		b	.L63
 925              	.LVL47:
 926              	.L65:
 537:Core/Src/main.c ****     adc_moving_average[buffer_index] = lastAnalogValue;
 927              		.loc 1 537 5 is_stmt 1 view .LVU230
 537:Core/Src/main.c ****     adc_moving_average[buffer_index] = lastAnalogValue;
 928              		.loc 1 537 30 is_stmt 0 view .LVU231
 929 00b8 364E     		ldr	r6, .L68+56
 930 00ba 3188     		ldrh	r1, [r6]
 931 00bc 364F     		ldr	r7, .L68+60
 932 00be 37F811C0 		ldrh	ip, [r7, r1, lsl #1]
 537:Core/Src/main.c ****     adc_moving_average[buffer_index] = lastAnalogValue;
 933              		.loc 1 537 9 view .LVU232
 934 00c2 364D     		ldr	r5, .L68+64
 935 00c4 2868     		ldr	r0, [r5]
 936              	.LVL48:
 537:Core/Src/main.c ****     adc_moving_average[buffer_index] = lastAnalogValue;
 937              		.loc 1 537 9 view .LVU233
 938 00c6 A0EB0C00 		sub	r0, r0, ip
ARM GAS  /tmp/ccDHp4gG.s 			page 71


 939 00ca 2860     		str	r0, [r5]
 538:Core/Src/main.c ****     sum += lastAnalogValue;
 940              		.loc 1 538 5 is_stmt 1 view .LVU234
 538:Core/Src/main.c ****     sum += lastAnalogValue;
 941              		.loc 1 538 38 is_stmt 0 view .LVU235
 942 00cc 27F81140 		strh	r4, [r7, r1, lsl #1]	@ movhi
 539:Core/Src/main.c ****     buffer_index = (buffer_index + 1) % MOVING_AVG_SIZE;
 943              		.loc 1 539 5 is_stmt 1 view .LVU236
 539:Core/Src/main.c ****     buffer_index = (buffer_index + 1) % MOVING_AVG_SIZE;
 944              		.loc 1 539 9 is_stmt 0 view .LVU237
 945 00d0 10FA82F0 		uxtah	r0, r0, r2
 946 00d4 2860     		str	r0, [r5]
 540:Core/Src/main.c ****   }
 947              		.loc 1 540 5 is_stmt 1 view .LVU238
 540:Core/Src/main.c ****   }
 948              		.loc 1 540 34 is_stmt 0 view .LVU239
 949 00d6 481C     		adds	r0, r1, #1
 540:Core/Src/main.c ****   }
 950              		.loc 1 540 39 view .LVU240
 951 00d8 3149     		ldr	r1, .L68+68
 952 00da 81FB0041 		smull	r4, r1, r1, r0
 953 00de 0911     		asrs	r1, r1, #4
 954 00e0 9624     		movs	r4, #150
 955 00e2 04FB1101 		mls	r1, r4, r1, r0
 540:Core/Src/main.c ****   }
 956              		.loc 1 540 18 view .LVU241
 957 00e6 3180     		strh	r1, [r6]	@ movhi
 958 00e8 A7E7     		b	.L55
 959              	.L56:
 960              	.LBB18:
 551:Core/Src/main.c ****     sprintf(msg_buffer, "A: %.3f\r\n", moving_avg);
 961              		.loc 1 551 5 is_stmt 1 view .LVU242
 551:Core/Src/main.c ****     sprintf(msg_buffer, "A: %.3f\r\n", moving_avg);
 962              		.loc 1 551 24 is_stmt 0 view .LVU243
 963 00ea 2C4B     		ldr	r3, .L68+64
 964 00ec D3ED007A 		vldr.32	s15, [r3]	@ int
 965 00f0 F8EE677A 		vcvt.f32.u32	s15, s15
 966              	.LVL49:
 552:Core/Src/main.c ****     break;
 967              		.loc 1 552 5 is_stmt 1 view .LVU244
 968 00f4 9FED2B7A 		vldr.32	s14, .L68+72
 969 00f8 C7EE877A 		vdiv.f32	s15, s15, s14
 970              	.LVL50:
 552:Core/Src/main.c ****     break;
 971              		.loc 1 552 5 is_stmt 0 view .LVU245
 972 00fc 17EE900A 		vmov	r0, s15
 973 0100 FFF7FEFF 		bl	__aeabi_f2d
 974              	.LVL51:
 552:Core/Src/main.c ****     break;
 975              		.loc 1 552 5 view .LVU246
 976 0104 0246     		mov	r2, r0
 977 0106 0B46     		mov	r3, r1
 978 0108 2749     		ldr	r1, .L68+76
 979 010a 1C48     		ldr	r0, .L68+32
 980 010c FFF7FEFF 		bl	sprintf
 981              	.LVL52:
 553:Core/Src/main.c **** 
ARM GAS  /tmp/ccDHp4gG.s 			page 72


 982              		.loc 1 553 5 is_stmt 1 view .LVU247
 983 0110 9DE7     		b	.L58
 984              	.LVL53:
 985              	.L57:
 556:Core/Src/main.c ****     break;
 986              		.loc 1 556 5 view .LVU248
 556:Core/Src/main.c ****     break;
 987              		.loc 1 556 60 is_stmt 0 view .LVU249
 988 0112 164B     		ldr	r3, .L68+16
 989 0114 1C68     		ldr	r4, [r3]
 556:Core/Src/main.c ****     break;
 990              		.loc 1 556 66 view .LVU250
 991 0116 FFF7FEFF 		bl	rand
 992              	.LVL54:
 556:Core/Src/main.c ****     break;
 993              		.loc 1 556 73 discriminator 1 view .LVU251
 994 011a 214A     		ldr	r2, .L68+68
 995 011c 82FB0032 		smull	r3, r2, r2, r0
 996 0120 C317     		asrs	r3, r0, #31
 997 0122 C3EB6213 		rsb	r3, r3, r2, asr #5
 998 0126 4FF49672 		mov	r2, #300
 999 012a 02FB1303 		mls	r3, r2, r3, r0
 556:Core/Src/main.c ****     break;
 1000              		.loc 1 556 39 discriminator 1 view .LVU252
 1001 012e E218     		adds	r2, r4, r3
 556:Core/Src/main.c ****     break;
 1002              		.loc 1 556 5 discriminator 1 view .LVU253
 1003 0130 92B2     		uxth	r2, r2
 1004 0132 1E49     		ldr	r1, .L68+80
 1005 0134 1148     		ldr	r0, .L68+32
 1006 0136 FFF7FEFF 		bl	sprintf
 1007              	.LVL55:
 557:Core/Src/main.c **** 
 1008              		.loc 1 557 5 is_stmt 1 view .LVU254
 1009 013a 88E7     		b	.L58
 1010              	.L66:
 1011              	.LBE18:
 564:Core/Src/main.c ****     return next_state;
 1012              		.loc 1 564 5 view .LVU255
 564:Core/Src/main.c ****     return next_state;
 1013              		.loc 1 564 17 is_stmt 0 view .LVU256
 1014 013c 0220     		movs	r0, #2
 1015 013e 074B     		ldr	r3, .L68
 1016 0140 1870     		strb	r0, [r3]
 565:Core/Src/main.c ****   }
 1017              		.loc 1 565 5 is_stmt 1 view .LVU257
 565:Core/Src/main.c ****   }
 1018              		.loc 1 565 12 is_stmt 0 view .LVU258
 1019 0142 09E0     		b	.L60
 1020              	.L67:
 572:Core/Src/main.c ****     return next_state;
 1021              		.loc 1 572 5 is_stmt 1 view .LVU259
 572:Core/Src/main.c ****     return next_state;
 1022              		.loc 1 572 17 is_stmt 0 view .LVU260
 1023 0144 0220     		movs	r0, #2
 1024 0146 054B     		ldr	r3, .L68
 1025 0148 1870     		strb	r0, [r3]
ARM GAS  /tmp/ccDHp4gG.s 			page 73


 573:Core/Src/main.c ****   }
 1026              		.loc 1 573 5 is_stmt 1 view .LVU261
 573:Core/Src/main.c ****   }
 1027              		.loc 1 573 12 is_stmt 0 view .LVU262
 1028 014a 05E0     		b	.L60
 1029              	.L62:
 584:Core/Src/main.c ****   }
 1030              		.loc 1 584 5 is_stmt 1 view .LVU263
 584:Core/Src/main.c ****   }
 1031              		.loc 1 584 17 is_stmt 0 view .LVU264
 1032 014c FFF7FEFF 		bl	HAL_GetTick
 1033              	.LVL56:
 584:Core/Src/main.c ****   }
 1034              		.loc 1 584 15 discriminator 1 view .LVU265
 1035 0150 0F4B     		ldr	r3, .L68+52
 1036 0152 1860     		str	r0, [r3]
 1037              	.L63:
 587:Core/Src/main.c **** }
 1038              		.loc 1 587 3 is_stmt 1 view .LVU266
 587:Core/Src/main.c **** }
 1039              		.loc 1 587 10 is_stmt 0 view .LVU267
 1040 0154 014B     		ldr	r3, .L68
 1041 0156 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 1042              	.L60:
 588:Core/Src/main.c **** 
 1043              		.loc 1 588 1 view .LVU268
 1044 0158 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1045              	.L69:
 1046 015a 00BF     		.align	2
 1047              	.L68:
 1048 015c 00000000 		.word	next_state
 1049 0160 00000000 		.word	hdma_adc1
 1050 0164 1F85EB51 		.word	1374389535
 1051 0168 00000000 		.word	last_index
 1052 016c 00000000 		.word	adcBuffer
 1053 0170 00000000 		.word	lastAnalogValue
 1054 0174 00000000 		.word	currentFilterMode
 1055 0178 00000000 		.word	.LC3
 1056 017c 00000000 		.word	msg_buffer
 1057 0180 00000000 		.word	huart2
 1058 0184 00000000 		.word	halStatus
 1059 0188 00000000 		.word	lastDigitalValue
 1060 018c 20000000 		.word	.LC6
 1061 0190 00000000 		.word	lastTimer
 1062 0194 00000000 		.word	buffer_index
 1063 0198 00000000 		.word	adc_moving_average
 1064 019c 00000000 		.word	sum
 1065 01a0 B5814E1B 		.word	458129845
 1066 01a4 00001643 		.word	1125515264
 1067 01a8 08000000 		.word	.LC4
 1068 01ac 14000000 		.word	.LC5
 1069              		.cfi_endproc
 1070              	.LFE235:
 1072              		.section	.text.HAL_GPIO_EXTI_Callback,"ax",%progbits
 1073              		.align	1
 1074              		.global	HAL_GPIO_EXTI_Callback
 1075              		.syntax unified
ARM GAS  /tmp/ccDHp4gG.s 			page 74


 1076              		.thumb
 1077              		.thumb_func
 1079              	HAL_GPIO_EXTI_Callback:
 1080              	.LVL57:
 1081              	.LFB223:
 108:Core/Src/main.c ****   if(GPIO_Pin == GPIO_PIN_2){
 1082              		.loc 1 108 47 is_stmt 1 view -0
 1083              		.cfi_startproc
 1084              		@ args = 0, pretend = 0, frame = 0
 1085              		@ frame_needed = 0, uses_anonymous_args = 0
 108:Core/Src/main.c ****   if(GPIO_Pin == GPIO_PIN_2){
 1086              		.loc 1 108 47 is_stmt 0 view .LVU270
 1087 0000 08B5     		push	{r3, lr}
 1088              		.cfi_def_cfa_offset 8
 1089              		.cfi_offset 3, -8
 1090              		.cfi_offset 14, -4
 109:Core/Src/main.c ****     lastDigitalValue = HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_2);
 1091              		.loc 1 109 3 is_stmt 1 view .LVU271
 109:Core/Src/main.c ****     lastDigitalValue = HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_2);
 1092              		.loc 1 109 5 is_stmt 0 view .LVU272
 1093 0002 0428     		cmp	r0, #4
 1094 0004 03D0     		beq	.L79
 112:Core/Src/main.c ****     if(current_state == STATE_WAIT_REQUEST || current_state == STATE_PAUSE){
 1095              		.loc 1 112 8 is_stmt 1 view .LVU273
 112:Core/Src/main.c ****     if(current_state == STATE_WAIT_REQUEST || current_state == STATE_PAUSE){
 1096              		.loc 1 112 10 is_stmt 0 view .LVU274
 1097 0006 B0F5005F 		cmp	r0, #8192
 1098 000a 07D0     		beq	.L80
 1099              	.LVL58:
 1100              	.L70:
 127:Core/Src/main.c **** 
 1101              		.loc 1 127 1 view .LVU275
 1102 000c 08BD     		pop	{r3, pc}
 1103              	.LVL59:
 1104              	.L79:
 110:Core/Src/main.c ****   }
 1105              		.loc 1 110 5 is_stmt 1 view .LVU276
 110:Core/Src/main.c ****   }
 1106              		.loc 1 110 24 is_stmt 0 view .LVU277
 1107 000e 0421     		movs	r1, #4
 1108 0010 1948     		ldr	r0, .L81
 1109              	.LVL60:
 110:Core/Src/main.c ****   }
 1110              		.loc 1 110 24 view .LVU278
 1111 0012 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1112              	.LVL61:
 110:Core/Src/main.c ****   }
 1113              		.loc 1 110 22 discriminator 1 view .LVU279
 1114 0016 194B     		ldr	r3, .L81+4
 1115 0018 1880     		strh	r0, [r3]	@ movhi
 1116 001a F7E7     		b	.L70
 1117              	.LVL62:
 1118              	.L80:
 113:Core/Src/main.c ****       //change state to listening and restore dma
 1119              		.loc 1 113 5 is_stmt 1 view .LVU280
 113:Core/Src/main.c ****       //change state to listening and restore dma
 1120              		.loc 1 113 22 is_stmt 0 view .LVU281
ARM GAS  /tmp/ccDHp4gG.s 			page 75


 1121 001c 184B     		ldr	r3, .L81+8
 1122 001e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1123 0020 013B     		subs	r3, r3, #1
 1124 0022 042B     		cmp	r3, #4
 1125 0024 F2D8     		bhi	.L70
 1126 0026 01A2     		adr	r2, .L74
 1127 0028 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1128              		.p2align 2
 1129              	.L74:
 1130 002c 41000000 		.word	.L73+1
 1131 0030 75000000 		.word	.L76+1
 1132 0034 69000000 		.word	.L75+1
 1133 0038 0D000000 		.word	.L70+1
 1134 003c 41000000 		.word	.L73+1
 1135              		.p2align 1
 1136              	.L73:
 115:Core/Src/main.c ****       HAL_ADC_Start_DMA(&hadc1, adcBuffer, ADC_BUFFER_SIZE);
 1137              		.loc 1 115 7 is_stmt 1 view .LVU282
 115:Core/Src/main.c ****       HAL_ADC_Start_DMA(&hadc1, adcBuffer, ADC_BUFFER_SIZE);
 1138              		.loc 1 115 34 is_stmt 0 view .LVU283
 1139 0040 0323     		movs	r3, #3
 1140 0042 104A     		ldr	r2, .L81+12
 1141 0044 1370     		strb	r3, [r2]
 115:Core/Src/main.c ****       HAL_ADC_Start_DMA(&hadc1, adcBuffer, ADC_BUFFER_SIZE);
 1142              		.loc 1 115 21 view .LVU284
 1143 0046 0E4A     		ldr	r2, .L81+8
 1144 0048 1370     		strb	r3, [r2]
 116:Core/Src/main.c ****       HAL_GPIO_WritePin(GPIOC, GPIO_PIN_5, GPIO_PIN_SET);
 1145              		.loc 1 116 7 is_stmt 1 view .LVU285
 1146 004a 4FF49672 		mov	r2, #300
 1147 004e 0E49     		ldr	r1, .L81+16
 1148 0050 0E48     		ldr	r0, .L81+20
 1149              	.LVL63:
 116:Core/Src/main.c ****       HAL_GPIO_WritePin(GPIOC, GPIO_PIN_5, GPIO_PIN_SET);
 1150              		.loc 1 116 7 is_stmt 0 view .LVU286
 1151 0052 FFF7FEFF 		bl	HAL_ADC_Start_DMA
 1152              	.LVL64:
 117:Core/Src/main.c ****       sendRequest = 0;
 1153              		.loc 1 117 7 is_stmt 1 view .LVU287
 1154 0056 0122     		movs	r2, #1
 1155 0058 2021     		movs	r1, #32
 1156 005a 0748     		ldr	r0, .L81
 1157 005c FFF7FEFF 		bl	HAL_GPIO_WritePin
 1158              	.LVL65:
 118:Core/Src/main.c ****     }else if(current_state == STATE_LISTENING){
 1159              		.loc 1 118 7 view .LVU288
 118:Core/Src/main.c ****     }else if(current_state == STATE_LISTENING){
 1160              		.loc 1 118 19 is_stmt 0 view .LVU289
 1161 0060 0B4B     		ldr	r3, .L81+24
 1162 0062 0022     		movs	r2, #0
 1163 0064 1A70     		strb	r2, [r3]
 1164 0066 D1E7     		b	.L70
 1165              	.LVL66:
 1166              	.L75:
 121:Core/Src/main.c ****     }else if(current_state == STATE_ERROR){
 1167              		.loc 1 121 7 is_stmt 1 view .LVU290
 121:Core/Src/main.c ****     }else if(current_state == STATE_ERROR){
ARM GAS  /tmp/ccDHp4gG.s 			page 76


 1168              		.loc 1 121 34 is_stmt 0 view .LVU291
 1169 0068 0523     		movs	r3, #5
 1170 006a 064A     		ldr	r2, .L81+12
 1171 006c 1370     		strb	r3, [r2]
 121:Core/Src/main.c ****     }else if(current_state == STATE_ERROR){
 1172              		.loc 1 121 21 view .LVU292
 1173 006e 044A     		ldr	r2, .L81+8
 1174 0070 1370     		strb	r3, [r2]
 1175 0072 CBE7     		b	.L70
 1176              	.L76:
 124:Core/Src/main.c ****     }
 1177              		.loc 1 124 7 is_stmt 1 view .LVU293
 1178 0074 FFF7FEFF 		bl	__NVIC_SystemReset
 1179              	.LVL67:
 1180              	.L82:
 124:Core/Src/main.c ****     }
 1181              		.loc 1 124 7 is_stmt 0 view .LVU294
 1182              		.align	2
 1183              	.L81:
 1184 0078 00080240 		.word	1073874944
 1185 007c 00000000 		.word	lastDigitalValue
 1186 0080 00000000 		.word	current_state
 1187 0084 00000000 		.word	next_state
 1188 0088 00000000 		.word	adcBuffer
 1189 008c 00000000 		.word	hadc1
 1190 0090 00000000 		.word	sendRequest
 1191              		.cfi_endproc
 1192              	.LFE223:
 1194              		.section	.rodata.handle_cli_command.str1.4,"aMS",%progbits,1
 1195              		.align	2
 1196              	.LC7:
 1197 0000 72617700 		.ascii	"raw\000"
 1198              		.align	2
 1199              	.LC8:
 1200 0004 6D6F7669 		.ascii	"moving average\000"
 1200      6E672061 
 1200      76657261 
 1200      676500
 1201 0013 00       		.align	2
 1202              	.LC9:
 1203 0014 72616E64 		.ascii	"random noise\000"
 1203      6F6D206E 
 1203      6F697365 
 1203      00
 1204              		.section	.text.handle_cli_command,"ax",%progbits
 1205              		.align	1
 1206              		.global	handle_cli_command
 1207              		.syntax unified
 1208              		.thumb
 1209              		.thumb_func
 1211              	handle_cli_command:
 1212              	.LFB224:
 139:Core/Src/main.c ****     if (strcmp(cli_command, "raw") == 0) {
 1213              		.loc 1 139 31 is_stmt 1 view -0
 1214              		.cfi_startproc
 1215              		@ args = 0, pretend = 0, frame = 0
 1216              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccDHp4gG.s 			page 77


 1217 0000 08B5     		push	{r3, lr}
 1218              		.cfi_def_cfa_offset 8
 1219              		.cfi_offset 3, -8
 1220              		.cfi_offset 14, -4
 140:Core/Src/main.c ****         currentFilterMode = RAW;
 1221              		.loc 1 140 5 view .LVU296
 140:Core/Src/main.c ****         currentFilterMode = RAW;
 1222              		.loc 1 140 9 is_stmt 0 view .LVU297
 1223 0002 1449     		ldr	r1, .L90
 1224 0004 1448     		ldr	r0, .L90+4
 1225 0006 FFF7FEFF 		bl	strcmp
 1226              	.LVL68:
 140:Core/Src/main.c ****         currentFilterMode = RAW;
 1227              		.loc 1 140 8 discriminator 1 view .LVU298
 1228 000a 48B9     		cbnz	r0, .L84
 141:Core/Src/main.c ****     } else if (strcmp(cli_command, "moving average") == 0) {
 1229              		.loc 1 141 9 is_stmt 1 view .LVU299
 141:Core/Src/main.c ****     } else if (strcmp(cli_command, "moving average") == 0) {
 1230              		.loc 1 141 27 is_stmt 0 view .LVU300
 1231 000c 134B     		ldr	r3, .L90+8
 1232 000e 0022     		movs	r2, #0
 1233 0010 1A70     		strb	r2, [r3]
 1234              	.L85:
 152:Core/Src/main.c ****     return 0;
 1235              		.loc 1 152 5 is_stmt 1 view .LVU301
 1236 0012 3222     		movs	r2, #50
 1237 0014 0021     		movs	r1, #0
 1238 0016 1048     		ldr	r0, .L90+4
 1239 0018 FFF7FEFF 		bl	memset
 1240              	.LVL69:
 153:Core/Src/main.c **** }
 1241              		.loc 1 153 5 view .LVU302
 153:Core/Src/main.c **** }
 1242              		.loc 1 153 12 is_stmt 0 view .LVU303
 1243 001c 0020     		movs	r0, #0
 1244              	.L88:
 154:Core/Src/main.c **** 
 1245              		.loc 1 154 1 view .LVU304
 1246 001e 08BD     		pop	{r3, pc}
 1247              	.L84:
 142:Core/Src/main.c ****         currentFilterMode = MOVING_AVERAGE;
 1248              		.loc 1 142 12 is_stmt 1 view .LVU305
 142:Core/Src/main.c ****         currentFilterMode = MOVING_AVERAGE;
 1249              		.loc 1 142 16 is_stmt 0 view .LVU306
 1250 0020 0F49     		ldr	r1, .L90+12
 1251 0022 0D48     		ldr	r0, .L90+4
 1252 0024 FFF7FEFF 		bl	strcmp
 1253              	.LVL70:
 142:Core/Src/main.c ****         currentFilterMode = MOVING_AVERAGE;
 1254              		.loc 1 142 15 discriminator 1 view .LVU307
 1255 0028 18B9     		cbnz	r0, .L86
 143:Core/Src/main.c ****     } else if (strcmp(cli_command, "random noise") == 0) {
 1256              		.loc 1 143 9 is_stmt 1 view .LVU308
 143:Core/Src/main.c ****     } else if (strcmp(cli_command, "random noise") == 0) {
 1257              		.loc 1 143 27 is_stmt 0 view .LVU309
 1258 002a 0C4B     		ldr	r3, .L90+8
 1259 002c 0122     		movs	r2, #1
ARM GAS  /tmp/ccDHp4gG.s 			page 78


 1260 002e 1A70     		strb	r2, [r3]
 1261 0030 EFE7     		b	.L85
 1262              	.L86:
 144:Core/Src/main.c ****         currentFilterMode = RANDOM_NOISE;
 1263              		.loc 1 144 12 is_stmt 1 view .LVU310
 144:Core/Src/main.c ****         currentFilterMode = RANDOM_NOISE;
 1264              		.loc 1 144 16 is_stmt 0 view .LVU311
 1265 0032 0C49     		ldr	r1, .L90+16
 1266 0034 0848     		ldr	r0, .L90+4
 1267 0036 FFF7FEFF 		bl	strcmp
 1268              	.LVL71:
 144:Core/Src/main.c ****         currentFilterMode = RANDOM_NOISE;
 1269              		.loc 1 144 15 discriminator 1 view .LVU312
 1270 003a 18B9     		cbnz	r0, .L87
 145:Core/Src/main.c ****     } else {
 1271              		.loc 1 145 9 is_stmt 1 view .LVU313
 145:Core/Src/main.c ****     } else {
 1272              		.loc 1 145 27 is_stmt 0 view .LVU314
 1273 003c 074B     		ldr	r3, .L90+8
 1274 003e 0222     		movs	r2, #2
 1275 0040 1A70     		strb	r2, [r3]
 1276 0042 E6E7     		b	.L85
 1277              	.L87:
 148:Core/Src/main.c ****         return 1;
 1278              		.loc 1 148 9 is_stmt 1 view .LVU315
 1279 0044 3222     		movs	r2, #50
 1280 0046 0021     		movs	r1, #0
 1281 0048 0348     		ldr	r0, .L90+4
 1282 004a FFF7FEFF 		bl	memset
 1283              	.LVL72:
 149:Core/Src/main.c ****     }
 1284              		.loc 1 149 9 view .LVU316
 149:Core/Src/main.c ****     }
 1285              		.loc 1 149 16 is_stmt 0 view .LVU317
 1286 004e 0120     		movs	r0, #1
 1287 0050 E5E7     		b	.L88
 1288              	.L91:
 1289 0052 00BF     		.align	2
 1290              	.L90:
 1291 0054 00000000 		.word	.LC7
 1292 0058 00000000 		.word	cli_command
 1293 005c 00000000 		.word	currentFilterMode
 1294 0060 04000000 		.word	.LC8
 1295 0064 14000000 		.word	.LC9
 1296              		.cfi_endproc
 1297              	.LFE224:
 1299              		.section	.rodata.HAL_UARTEx_RxEventCallback.str1.4,"aMS",%progbits,1
 1300              		.align	2
 1301              	.LC10:
 1302 0000 436F6D6D 		.ascii	"Command not valid. Try again.\015\012\000"
 1302      616E6420 
 1302      6E6F7420 
 1302      76616C69 
 1302      642E2054 
 1303              		.align	2
 1304              	.LC11:
 1305 0020 4E657720 		.ascii	"New filter mode: %d\015\012\000"
ARM GAS  /tmp/ccDHp4gG.s 			page 79


 1305      66696C74 
 1305      6572206D 
 1305      6F64653A 
 1305      2025640D 
 1306              		.section	.text.HAL_UARTEx_RxEventCallback,"ax",%progbits
 1307              		.align	1
 1308              		.global	HAL_UARTEx_RxEventCallback
 1309              		.syntax unified
 1310              		.thumb
 1311              		.thumb_func
 1313              	HAL_UARTEx_RxEventCallback:
 1314              	.LVL73:
 1315              	.LFB225:
 161:Core/Src/main.c ****   uint8_t unknownComand = handle_cli_command();
 1316              		.loc 1 161 1 is_stmt 1 view -0
 1317              		.cfi_startproc
 1318              		@ args = 0, pretend = 0, frame = 0
 1319              		@ frame_needed = 0, uses_anonymous_args = 0
 161:Core/Src/main.c ****   uint8_t unknownComand = handle_cli_command();
 1320              		.loc 1 161 1 is_stmt 0 view .LVU319
 1321 0000 38B5     		push	{r3, r4, r5, lr}
 1322              		.cfi_def_cfa_offset 16
 1323              		.cfi_offset 3, -16
 1324              		.cfi_offset 4, -12
 1325              		.cfi_offset 5, -8
 1326              		.cfi_offset 14, -4
 162:Core/Src/main.c **** 
 1327              		.loc 1 162 3 is_stmt 1 view .LVU320
 162:Core/Src/main.c **** 
 1328              		.loc 1 162 27 is_stmt 0 view .LVU321
 1329 0002 FFF7FEFF 		bl	handle_cli_command
 1330              	.LVL74:
 164:Core/Src/main.c ****     sprintf(msg_buffer, "Command not valid. Try again.\r\n");
 1331              		.loc 1 164 3 is_stmt 1 view .LVU322
 164:Core/Src/main.c ****     sprintf(msg_buffer, "Command not valid. Try again.\r\n");
 1332              		.loc 1 164 5 is_stmt 0 view .LVU323
 1333 0006 48B3     		cbz	r0, .L93
 165:Core/Src/main.c ****     HAL_UART_Transmit(&huart2, (uint8_t *)msg_buffer, strlen(msg_buffer), HAL_MAX_DELAY);
 1334              		.loc 1 165 5 is_stmt 1 view .LVU324
 1335 0008 234D     		ldr	r5, .L96
 1336 000a AC46     		mov	ip, r5
 1337 000c 234C     		ldr	r4, .L96+4
 1338 000e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 1339              	.LVL75:
 165:Core/Src/main.c ****     HAL_UART_Transmit(&huart2, (uint8_t *)msg_buffer, strlen(msg_buffer), HAL_MAX_DELAY);
 1340              		.loc 1 165 5 is_stmt 0 view .LVU325
 1341 0010 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 1342 0014 94E80F00 		ldm	r4, {r0, r1, r2, r3}
 1343 0018 8CE80F00 		stm	ip, {r0, r1, r2, r3}
 166:Core/Src/main.c ****     sprintf(msg_buffer, "C:\r\n");//send comand request to user
 1344              		.loc 1 166 5 is_stmt 1 view .LVU326
 166:Core/Src/main.c ****     sprintf(msg_buffer, "C:\r\n");//send comand request to user
 1345              		.loc 1 166 55 is_stmt 0 view .LVU327
 1346 001c 2846     		mov	r0, r5
 1347 001e FFF7FEFF 		bl	strlen
 1348              	.LVL76:
 166:Core/Src/main.c ****     sprintf(msg_buffer, "C:\r\n");//send comand request to user
ARM GAS  /tmp/ccDHp4gG.s 			page 80


 1349              		.loc 1 166 5 discriminator 1 view .LVU328
 1350 0022 1F4C     		ldr	r4, .L96+8
 1351 0024 4FF0FF33 		mov	r3, #-1
 1352 0028 82B2     		uxth	r2, r0
 1353 002a 2946     		mov	r1, r5
 1354 002c 2046     		mov	r0, r4
 1355 002e FFF7FEFF 		bl	HAL_UART_Transmit
 1356              	.LVL77:
 167:Core/Src/main.c ****     HAL_UART_Transmit(&huart2, (uint8_t *)msg_buffer, strlen(msg_buffer), HAL_MAX_DELAY);  
 1357              		.loc 1 167 5 is_stmt 1 view .LVU329
 1358 0032 1C4B     		ldr	r3, .L96+12
 1359 0034 93E80300 		ldm	r3, {r0, r1}
 1360 0038 2860     		str	r0, [r5]
 1361 003a 2971     		strb	r1, [r5, #4]
 168:Core/Src/main.c ****   }
 1362              		.loc 1 168 5 view .LVU330
 168:Core/Src/main.c ****   }
 1363              		.loc 1 168 55 is_stmt 0 view .LVU331
 1364 003c 2846     		mov	r0, r5
 1365 003e FFF7FEFF 		bl	strlen
 1366              	.LVL78:
 168:Core/Src/main.c ****   }
 1367              		.loc 1 168 5 discriminator 1 view .LVU332
 1368 0042 4FF0FF33 		mov	r3, #-1
 1369 0046 82B2     		uxth	r2, r0
 1370 0048 2946     		mov	r1, r5
 1371 004a 2046     		mov	r0, r4
 1372 004c FFF7FEFF 		bl	HAL_UART_Transmit
 1373              	.LVL79:
 1374              	.L94:
 179:Core/Src/main.c **** }
 1375              		.loc 1 179 3 is_stmt 1 view .LVU333
 1376 0050 3222     		movs	r2, #50
 1377 0052 1549     		ldr	r1, .L96+16
 1378 0054 1248     		ldr	r0, .L96+8
 1379 0056 FFF7FEFF 		bl	HAL_UARTEx_ReceiveToIdle_IT
 1380              	.LVL80:
 180:Core/Src/main.c **** 
 1381              		.loc 1 180 1 is_stmt 0 view .LVU334
 1382 005a 38BD     		pop	{r3, r4, r5, pc}
 1383              	.LVL81:
 1384              	.L93:
 171:Core/Src/main.c ****     HAL_UART_Transmit(&huart2, (uint8_t *)msg_buffer, strlen(msg_buffer), HAL_MAX_DELAY);
 1385              		.loc 1 171 5 is_stmt 1 view .LVU335
 1386 005c 0E4C     		ldr	r4, .L96
 1387 005e 134B     		ldr	r3, .L96+20
 1388 0060 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1389 0062 1349     		ldr	r1, .L96+24
 1390 0064 2046     		mov	r0, r4
 1391              	.LVL82:
 171:Core/Src/main.c ****     HAL_UART_Transmit(&huart2, (uint8_t *)msg_buffer, strlen(msg_buffer), HAL_MAX_DELAY);
 1392              		.loc 1 171 5 is_stmt 0 view .LVU336
 1393 0066 FFF7FEFF 		bl	sprintf
 1394              	.LVL83:
 172:Core/Src/main.c ****     sendRequest = 1;
 1395              		.loc 1 172 5 is_stmt 1 view .LVU337
 172:Core/Src/main.c ****     sendRequest = 1;
ARM GAS  /tmp/ccDHp4gG.s 			page 81


 1396              		.loc 1 172 55 is_stmt 0 view .LVU338
 1397 006a 2046     		mov	r0, r4
 1398 006c FFF7FEFF 		bl	strlen
 1399              	.LVL84:
 172:Core/Src/main.c ****     sendRequest = 1;
 1400              		.loc 1 172 5 discriminator 1 view .LVU339
 1401 0070 4FF0FF33 		mov	r3, #-1
 1402 0074 82B2     		uxth	r2, r0
 1403 0076 2146     		mov	r1, r4
 1404 0078 0948     		ldr	r0, .L96+8
 1405 007a FFF7FEFF 		bl	HAL_UART_Transmit
 1406              	.LVL85:
 173:Core/Src/main.c ****     disableInterrupt = 0;
 1407              		.loc 1 173 5 is_stmt 1 view .LVU340
 173:Core/Src/main.c ****     disableInterrupt = 0;
 1408              		.loc 1 173 17 is_stmt 0 view .LVU341
 1409 007e 0D4B     		ldr	r3, .L96+28
 1410 0080 0122     		movs	r2, #1
 1411 0082 1A70     		strb	r2, [r3]
 174:Core/Src/main.c ****     HAL_ADC_Start_DMA(&hadc1, adcBuffer, ADC_BUFFER_SIZE);
 1412              		.loc 1 174 5 is_stmt 1 view .LVU342
 174:Core/Src/main.c ****     HAL_ADC_Start_DMA(&hadc1, adcBuffer, ADC_BUFFER_SIZE);
 1413              		.loc 1 174 22 is_stmt 0 view .LVU343
 1414 0084 0C4B     		ldr	r3, .L96+32
 1415 0086 0022     		movs	r2, #0
 1416 0088 1A70     		strb	r2, [r3]
 175:Core/Src/main.c ****   }
 1417              		.loc 1 175 5 is_stmt 1 view .LVU344
 1418 008a 4FF49672 		mov	r2, #300
 1419 008e 0B49     		ldr	r1, .L96+36
 1420 0090 0B48     		ldr	r0, .L96+40
 1421 0092 FFF7FEFF 		bl	HAL_ADC_Start_DMA
 1422              	.LVL86:
 1423 0096 DBE7     		b	.L94
 1424              	.L97:
 1425              		.align	2
 1426              	.L96:
 1427 0098 00000000 		.word	msg_buffer
 1428 009c 00000000 		.word	.LC10
 1429 00a0 00000000 		.word	huart2
 1430 00a4 00000000 		.word	.LC1
 1431 00a8 00000000 		.word	cli_command
 1432 00ac 00000000 		.word	currentFilterMode
 1433 00b0 20000000 		.word	.LC11
 1434 00b4 00000000 		.word	sendRequest
 1435 00b8 00000000 		.word	disableInterrupt
 1436 00bc 00000000 		.word	adcBuffer
 1437 00c0 00000000 		.word	hadc1
 1438              		.cfi_endproc
 1439              	.LFE225:
 1441              		.section	.text.run_state,"ax",%progbits
 1442              		.align	1
 1443              		.global	run_state
 1444              		.syntax unified
 1445              		.thumb
 1446              		.thumb_func
 1448              	run_state:
ARM GAS  /tmp/ccDHp4gG.s 			page 82


 1449              	.LVL87:
 1450              	.LFB238:
 640:Core/Src/main.c **** 
 641:Core/Src/main.c **** 
 642:Core/Src/main.c **** 
 643:Core/Src/main.c **** /*  ____  _        _        
 644:Core/Src/main.c ****  * / ___|| |_ __ _| |_ ___  
 645:Core/Src/main.c ****  * \___ \| __/ _` | __/ _ \
 646:Core/Src/main.c ****  *  ___) | || (_| | ||  __/ 
 647:Core/Src/main.c ****  * |____/ \__\__,_|\__\___| 
 648:Core/Src/main.c ****  *                          
 649:Core/Src/main.c ****  *                                              
 650:Core/Src/main.c ****  *  _ __ ___   __ _ _ __   __ _  __ _  ___ _ __ 
 651:Core/Src/main.c ****  * | '_ ` _ \ / _` | '_ \ / _` |/ _` |/ _ \ '__|
 652:Core/Src/main.c ****  * | | | | | | (_| | | | | (_| | (_| |  __/ |   
 653:Core/Src/main.c ****  * |_| |_| |_|\__,_|_| |_|\__,_|\__, |\___|_|   
 654:Core/Src/main.c ****  *                              |___/           
 655:Core/Src/main.c ****  */
 656:Core/Src/main.c **** 
 657:Core/Src/main.c **** state_t run_state(state_data_t *data) {
 1451              		.loc 1 657 39 view -0
 1452              		.cfi_startproc
 1453              		@ args = 0, pretend = 0, frame = 0
 1454              		@ frame_needed = 0, uses_anonymous_args = 0
 1455              		.loc 1 657 39 is_stmt 0 view .LVU346
 1456 0000 08B5     		push	{r3, lr}
 1457              		.cfi_def_cfa_offset 8
 1458              		.cfi_offset 3, -8
 1459              		.cfi_offset 14, -4
 658:Core/Src/main.c ****   state_t new_state = state_table[current_state](data);
 1460              		.loc 1 658 3 is_stmt 1 view .LVU347
 1461              		.loc 1 658 34 is_stmt 0 view .LVU348
 1462 0002 064B     		ldr	r3, .L102
 1463 0004 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1464 0006 064B     		ldr	r3, .L102+4
 1465 0008 53F82230 		ldr	r3, [r3, r2, lsl #2]
 1466              		.loc 1 658 23 view .LVU349
 1467 000c 9847     		blx	r3
 1468              	.LVL88:
 659:Core/Src/main.c ****   if (new_state == NO_CHANGE) new_state = current_state;
 1469              		.loc 1 659 3 is_stmt 1 view .LVU350
 1470              		.loc 1 659 6 is_stmt 0 view .LVU351
 1471 000e 0728     		cmp	r0, #7
 1472 0010 00D0     		beq	.L101
 1473              	.L99:
 660:Core/Src/main.c ****   return new_state;
 1474              		.loc 1 660 3 is_stmt 1 view .LVU352
 661:Core/Src/main.c **** };
 1475              		.loc 1 661 1 is_stmt 0 view .LVU353
 1476 0012 08BD     		pop	{r3, pc}
 1477              	.L101:
 659:Core/Src/main.c ****   if (new_state == NO_CHANGE) new_state = current_state;
 1478              		.loc 1 659 31 is_stmt 1 discriminator 1 view .LVU354
 659:Core/Src/main.c ****   if (new_state == NO_CHANGE) new_state = current_state;
 1479              		.loc 1 659 41 is_stmt 0 discriminator 1 view .LVU355
 1480 0014 014B     		ldr	r3, .L102
 1481 0016 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
ARM GAS  /tmp/ccDHp4gG.s 			page 83


 1482              	.LVL89:
 659:Core/Src/main.c ****   if (new_state == NO_CHANGE) new_state = current_state;
 1483              		.loc 1 659 41 discriminator 1 view .LVU356
 1484 0018 FBE7     		b	.L99
 1485              	.L103:
 1486 001a 00BF     		.align	2
 1487              	.L102:
 1488 001c 00000000 		.word	current_state
 1489 0020 00000000 		.word	state_table
 1490              		.cfi_endproc
 1491              	.LFE238:
 1493              		.section	.text.main,"ax",%progbits
 1494              		.align	1
 1495              		.global	main
 1496              		.syntax unified
 1497              		.thumb
 1498              		.thumb_func
 1500              	main:
 1501              	.LFB226:
 189:Core/Src/main.c ****   /* Infinite loop */
 1502              		.loc 1 189 1 is_stmt 1 view -0
 1503              		.cfi_startproc
 1504              		@ Volatile: function does not return.
 1505              		@ args = 0, pretend = 0, frame = 0
 1506              		@ frame_needed = 0, uses_anonymous_args = 0
 1507 0000 08B5     		push	{r3, lr}
 1508              		.cfi_def_cfa_offset 8
 1509              		.cfi_offset 3, -8
 1510              		.cfi_offset 14, -4
 1511              	.L105:
 193:Core/Src/main.c ****   {
 1512              		.loc 1 193 3 view .LVU358
 198:Core/Src/main.c ****   }
 1513              		.loc 1 198 5 discriminator 1 view .LVU359
 198:Core/Src/main.c ****   }
 1514              		.loc 1 198 21 is_stmt 0 discriminator 1 view .LVU360
 1515 0002 0020     		movs	r0, #0
 1516 0004 FFF7FEFF 		bl	run_state
 1517              	.LVL90:
 198:Core/Src/main.c ****   }
 1518              		.loc 1 198 19 discriminator 1 view .LVU361
 1519 0008 014B     		ldr	r3, .L107
 1520 000a 1870     		strb	r0, [r3]
 193:Core/Src/main.c ****   {
 1521              		.loc 1 193 9 is_stmt 1 view .LVU362
 1522 000c F9E7     		b	.L105
 1523              	.L108:
 1524 000e 00BF     		.align	2
 1525              	.L107:
 1526 0010 00000000 		.word	current_state
 1527              		.cfi_endproc
 1528              	.LFE226:
 1530              		.section	.text.Error_Handler,"ax",%progbits
 1531              		.align	1
 1532              		.global	Error_Handler
 1533              		.syntax unified
 1534              		.thumb
ARM GAS  /tmp/ccDHp4gG.s 			page 84


 1535              		.thumb_func
 1537              	Error_Handler:
 1538              	.LFB239:
 662:Core/Src/main.c **** 
 663:Core/Src/main.c **** /* USER CODE END 4 */
 664:Core/Src/main.c **** 
 665:Core/Src/main.c **** /**
 666:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 667:Core/Src/main.c ****   * @retval None
 668:Core/Src/main.c ****   */
 669:Core/Src/main.c **** void Error_Handler(void)
 670:Core/Src/main.c **** {
 1539              		.loc 1 670 1 view -0
 1540              		.cfi_startproc
 1541              		@ args = 0, pretend = 0, frame = 0
 1542              		@ frame_needed = 0, uses_anonymous_args = 0
 1543              		@ link register save eliminated.
 671:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 672:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 673:Core/Src/main.c ****   next_state = STATE_ERROR;
 1544              		.loc 1 673 3 view .LVU364
 1545              		.loc 1 673 14 is_stmt 0 view .LVU365
 1546 0000 024B     		ldr	r3, .L110
 1547 0002 0222     		movs	r2, #2
 1548 0004 1A70     		strb	r2, [r3]
 674:Core/Src/main.c ****   return
 1549              		.loc 1 674 3 is_stmt 1 view .LVU366
 1550              	.LBB19:
 1551              	.LBI19:
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 274:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 278:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 285:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 289:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 295:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 298:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
ARM GAS  /tmp/ccDHp4gG.s 			page 85


 300:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 307:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 308:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 309:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 312:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 318:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 322:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 323:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 324:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 327:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 328:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 343:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 344:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 348:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
 349:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
 350:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 351:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 354:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 355:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccDHp4gG.s 			page 86


 357:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 359:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 362:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 363:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 366:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 367:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 371:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 375:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 381:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 388:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
 389:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
 390:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 391:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 394:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 395:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 396:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 398:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 405:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****      is non-zero".
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****      single CLZ instruction.
 413:Drivers/CMSIS/Include/cmsis_gcc.h ****    */
ARM GAS  /tmp/ccDHp4gG.s 			page 87


 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (value == 0U)
 415:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****     return 32U;
 417:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 418:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_clz(value);
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 420:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 421:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 422:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 424:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 426:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 427:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
 428:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
 429:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 430:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 431:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDREXB(volatile uint8_t *addr)
 433:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 435:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 436:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 439:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 440:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 441:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 442:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 444:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 445:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 446:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 447:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 448:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
 450:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
 451:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 452:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDREXH(volatile uint16_t *addr)
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 456:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 457:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 459:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
 460:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 461:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 462:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 464:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 465:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  /tmp/ccDHp4gG.s 			page 88


 471:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
 472:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 486:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 491:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 492:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 493:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *addr)
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 495:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 498:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 499:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 500:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 501:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 502:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
 504:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 506:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 507:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 508:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 509:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXH(uint16_t value, volatile uint16_t *addr)
 511:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 513:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 516:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 520:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
 521:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
 522:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
ARM GAS  /tmp/ccDHp4gG.s 			page 89


 528:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 533:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 537:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Remove the exclusive lock
 538:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Removes the exclusive lock which is created by LDREX.
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 540:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __CLREX(void)
 541:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 542:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("clrex" ::: "memory");
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 544:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 545:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 546:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 548:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 552:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 553:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 554:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 557:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 558:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (1..32)
 559:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 560:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SSAT(ARG1, ARG2) \
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 564:Drivers/CMSIS/Include/cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
 565:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("ssat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 568:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 569:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 571:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 572:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 573:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 574:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (0..31)
 575:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 576:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 577:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __USAT(ARG1, ARG2) \
 578:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 579:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 580:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("usat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 582:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 583:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 584:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccDHp4gG.s 			page 90


 585:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 586:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 587:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right with Extend (32 bit)
 588:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Moves each bit of a bitstring right by one bit.
 589:Drivers/CMSIS/Include/cmsis_gcc.h ****            The carry input is shifted in at the left end of the bitstring.
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to rotate
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 592:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 593:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RRX(uint32_t value)
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 595:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 596:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 597:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rrx %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 598:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 599:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 600:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 601:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 603:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (8 bit)
 604:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 8 bit value.
 605:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 606:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 608:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDRBT(volatile uint8_t *ptr)
 609:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 610:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 611:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 612:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, %1" : "=r" (result) : "Q" (*ptr) );
 614:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 615:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 616:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 617:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 618:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 621:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 622:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 623:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 625:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (16 bit)
 626:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 16 bit values.
 627:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 628:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 629:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 630:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDRHT(volatile uint16_t *ptr)
 631:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 633:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 634:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, %1" : "=r" (result) : "Q" (*ptr) );
 636:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 637:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 638:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 639:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 640:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 641:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/ccDHp4gG.s 			page 91


 642:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 643:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 644:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 647:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (32 bit)
 648:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 32 bit values.
 649:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 650:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 652:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDRT(volatile uint32_t *ptr)
 653:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 654:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 655:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrt %0, %1" : "=r" (result) : "Q" (*ptr) );
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 658:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 661:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (8 bit)
 663:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 8 bit values.
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 665:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 666:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 667:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRBT(uint8_t value, volatile uint8_t *ptr)
 668:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 669:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strbt %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 673:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (16 bit)
 675:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 16 bit values.
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 677:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 679:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRHT(uint16_t value, volatile uint16_t *ptr)
 680:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 681:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strht %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 682:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 683:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 684:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 685:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 686:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (32 bit)
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 32 bit values.
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 689:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 690:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRT(uint32_t value, volatile uint32_t *ptr)
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 693:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strt %1, %0" : "=Q" (*ptr) : "r" (value) );
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 695:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 696:Drivers/CMSIS/Include/cmsis_gcc.h **** #else  /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 698:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
ARM GAS  /tmp/ccDHp4gG.s 			page 92


 699:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 700:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 702:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 703:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 704:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (1..32)
 705:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 706:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 707:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int32_t __SSAT(int32_t val, uint32_t sat)
 708:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   if ((sat >= 1U) && (sat <= 32U))
 710:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 711:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t max = (int32_t)((1U << (sat - 1U)) - 1U);
 712:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t min = -1 - max ;
 713:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > max)
 714:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 715:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 716:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 717:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < min)
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****       return min;
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 721:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   return val;
 723:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 724:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 726:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 727:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (0..31)
 730:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 731:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 732:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAT(int32_t val, uint32_t sat)
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 734:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (sat <= 31U)
 735:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 736:Drivers/CMSIS/Include/cmsis_gcc.h ****     const uint32_t max = ((1U << sat) - 1U);
 737:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > (int32_t)max)
 738:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < 0)
 742:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****       return 0U;
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 746:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (uint32_t)val;
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 749:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 751:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 752:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 753:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 754:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 755:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
ARM GAS  /tmp/ccDHp4gG.s 			page 93


 756:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 757:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (8 bit)
 758:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB instruction for 8 bit value.
 759:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 760:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 761:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 762:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAB(volatile uint8_t *ptr)
 763:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 765:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldab %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 767:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 768:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 769:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 772:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (16 bit)
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH instruction for 16 bit values.
 774:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 775:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 777:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAH(volatile uint16_t *ptr)
 778:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 779:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 781:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldah %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 782:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 784:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 785:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 787:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (32 bit)
 788:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA instruction for 32 bit values.
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDA(volatile uint32_t *ptr)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 795:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 796:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("lda %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 797:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 799:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 800:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 802:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (8 bit)
 803:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB instruction for 8 bit values.
 804:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 805:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 806:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 807:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLB(uint8_t value, volatile uint8_t *ptr)
 808:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 809:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlb %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 810:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 811:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccDHp4gG.s 			page 94


 813:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 814:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (16 bit)
 815:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH instruction for 16 bit values.
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 817:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 818:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 819:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLH(uint16_t value, volatile uint16_t *ptr)
 820:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 821:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlh %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 825:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 826:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (32 bit)
 827:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL instruction for 32 bit values.
 828:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 829:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 830:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 831:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STL(uint32_t value, volatile uint32_t *ptr)
 832:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 833:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stl %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 834:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 835:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 836:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 838:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (8 bit)
 839:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB exclusive instruction for 8 bit value.
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 842:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 843:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAEXB(volatile uint8_t *ptr)
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 845:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 846:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 847:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexb %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 848:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 849:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 853:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (16 bit)
 854:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH exclusive instruction for 16 bit values.
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 857:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 858:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAEXH(volatile uint16_t *ptr)
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 860:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 861:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexh %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 863:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 864:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 865:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 867:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 868:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (32 bit)
 869:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA exclusive instruction for 32 bit values.
ARM GAS  /tmp/ccDHp4gG.s 			page 95


 870:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 871:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 872:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 873:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDAEX(volatile uint32_t *ptr)
 874:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 875:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 876:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaex %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 878:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 879:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 882:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 883:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (8 bit)
 884:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB exclusive instruction for 8 bit values.
 885:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 886:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 888:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 889:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 890:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXB(uint8_t value, volatile uint8_t *ptr)
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 892:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 894:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexb %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 895:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 896:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 897:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 898:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (16 bit)
 901:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH exclusive instruction for 16 bit values.
 902:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 903:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 904:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 905:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 906:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 907:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXH(uint16_t value, volatile uint16_t *ptr)
 908:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 909:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexh %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 912:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 913:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 914:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 915:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 916:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 917:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (32 bit)
 918:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL exclusive instruction for 32 bit values.
 919:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 920:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 922:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEX(uint32_t value, volatile uint32_t *ptr)
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 926:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
ARM GAS  /tmp/ccDHp4gG.s 			page 96


 927:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 928:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlex %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "memo
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 930:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 931:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 932:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 933:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 935:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@}*/ /* end of group CMSIS_Core_InstructionInterface */
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 937:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 939:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 940:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 943:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 945:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 946:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing special-purpose register PRIMASK.
 947:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 948:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 949:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 950:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 952:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 953:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 954:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 956:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
 958:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 959:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 960:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 1552              		.loc 3 960 27 view .LVU367
 1553              	.LBB20:
 961:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 962:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 1554              		.loc 3 962 3 view .LVU368
 1555              		.syntax unified
 1556              	@ 962 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1557 0006 72B6     		cpsid i
 1558              	@ 0 "" 2
 1559              		.thumb
 1560              		.syntax unified
 1561              	.LBE20:
 1562              	.LBE19:
 675:Core/Src/main.c ****   __disable_irq();
 676:Core/Src/main.c ****   while (1)
 677:Core/Src/main.c ****   {
 678:Core/Src/main.c ****   }
 679:Core/Src/main.c ****   /* USER CODE END Error_Handler_Debug */
 680:Core/Src/main.c **** }
 1563              		.loc 1 680 1 is_stmt 0 view .LVU369
 1564 0008 7047     		bx	lr
 1565              	.L111:
 1566 000a 00BF     		.align	2
ARM GAS  /tmp/ccDHp4gG.s 			page 97


 1567              	.L110:
 1568 000c 00000000 		.word	next_state
 1569              		.cfi_endproc
 1570              	.LFE239:
 1572              		.section	.text.SystemClock_Config,"ax",%progbits
 1573              		.align	1
 1574              		.global	SystemClock_Config
 1575              		.syntax unified
 1576              		.thumb
 1577              		.thumb_func
 1579              	SystemClock_Config:
 1580              	.LFB227:
 208:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 1581              		.loc 1 208 1 is_stmt 1 view -0
 1582              		.cfi_startproc
 1583              		@ args = 0, pretend = 0, frame = 80
 1584              		@ frame_needed = 0, uses_anonymous_args = 0
 1585 0000 00B5     		push	{lr}
 1586              		.cfi_def_cfa_offset 4
 1587              		.cfi_offset 14, -4
 1588 0002 95B0     		sub	sp, sp, #84
 1589              		.cfi_def_cfa_offset 88
 209:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1590              		.loc 1 209 3 view .LVU371
 209:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1591              		.loc 1 209 22 is_stmt 0 view .LVU372
 1592 0004 3022     		movs	r2, #48
 1593 0006 0021     		movs	r1, #0
 1594 0008 08A8     		add	r0, sp, #32
 1595 000a FFF7FEFF 		bl	memset
 1596              	.LVL91:
 210:Core/Src/main.c **** 
 1597              		.loc 1 210 3 is_stmt 1 view .LVU373
 210:Core/Src/main.c **** 
 1598              		.loc 1 210 22 is_stmt 0 view .LVU374
 1599 000e 0023     		movs	r3, #0
 1600 0010 0393     		str	r3, [sp, #12]
 1601 0012 0493     		str	r3, [sp, #16]
 1602 0014 0593     		str	r3, [sp, #20]
 1603 0016 0693     		str	r3, [sp, #24]
 1604 0018 0793     		str	r3, [sp, #28]
 214:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1605              		.loc 1 214 3 is_stmt 1 view .LVU375
 1606              	.LBB21:
 214:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1607              		.loc 1 214 3 view .LVU376
 1608 001a 0193     		str	r3, [sp, #4]
 214:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1609              		.loc 1 214 3 view .LVU377
 1610 001c 1F4A     		ldr	r2, .L118
 1611 001e 116C     		ldr	r1, [r2, #64]
 1612 0020 41F08051 		orr	r1, r1, #268435456
 1613 0024 1164     		str	r1, [r2, #64]
 214:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1614              		.loc 1 214 3 view .LVU378
 1615 0026 126C     		ldr	r2, [r2, #64]
 1616 0028 02F08052 		and	r2, r2, #268435456
ARM GAS  /tmp/ccDHp4gG.s 			page 98


 1617 002c 0192     		str	r2, [sp, #4]
 214:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1618              		.loc 1 214 3 view .LVU379
 1619 002e 019A     		ldr	r2, [sp, #4]
 1620              	.LBE21:
 214:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1621              		.loc 1 214 3 view .LVU380
 215:Core/Src/main.c **** 
 1622              		.loc 1 215 3 view .LVU381
 1623              	.LBB22:
 215:Core/Src/main.c **** 
 1624              		.loc 1 215 3 view .LVU382
 1625 0030 0293     		str	r3, [sp, #8]
 215:Core/Src/main.c **** 
 1626              		.loc 1 215 3 view .LVU383
 1627 0032 1B4A     		ldr	r2, .L118+4
 1628 0034 1168     		ldr	r1, [r2]
 1629 0036 41F44041 		orr	r1, r1, #49152
 1630 003a 1160     		str	r1, [r2]
 215:Core/Src/main.c **** 
 1631              		.loc 1 215 3 view .LVU384
 1632 003c 1268     		ldr	r2, [r2]
 1633 003e 02F44042 		and	r2, r2, #49152
 1634 0042 0292     		str	r2, [sp, #8]
 215:Core/Src/main.c **** 
 1635              		.loc 1 215 3 view .LVU385
 1636 0044 029A     		ldr	r2, [sp, #8]
 1637              	.LBE22:
 215:Core/Src/main.c **** 
 1638              		.loc 1 215 3 view .LVU386
 220:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1639              		.loc 1 220 3 view .LVU387
 220:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1640              		.loc 1 220 36 is_stmt 0 view .LVU388
 1641 0046 0221     		movs	r1, #2
 1642 0048 0891     		str	r1, [sp, #32]
 221:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1643              		.loc 1 221 3 is_stmt 1 view .LVU389
 221:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1644              		.loc 1 221 30 is_stmt 0 view .LVU390
 1645 004a 0122     		movs	r2, #1
 1646 004c 0B92     		str	r2, [sp, #44]
 222:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1647              		.loc 1 222 3 is_stmt 1 view .LVU391
 222:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1648              		.loc 1 222 41 is_stmt 0 view .LVU392
 1649 004e 1022     		movs	r2, #16
 1650 0050 0C92     		str	r2, [sp, #48]
 223:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 1651              		.loc 1 223 3 is_stmt 1 view .LVU393
 223:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 1652              		.loc 1 223 34 is_stmt 0 view .LVU394
 1653 0052 0E91     		str	r1, [sp, #56]
 224:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 16;
 1654              		.loc 1 224 3 is_stmt 1 view .LVU395
 224:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 16;
 1655              		.loc 1 224 35 is_stmt 0 view .LVU396
ARM GAS  /tmp/ccDHp4gG.s 			page 99


 1656 0054 0F93     		str	r3, [sp, #60]
 225:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 336;
 1657              		.loc 1 225 3 is_stmt 1 view .LVU397
 225:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 336;
 1658              		.loc 1 225 30 is_stmt 0 view .LVU398
 1659 0056 1092     		str	r2, [sp, #64]
 226:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 1660              		.loc 1 226 3 is_stmt 1 view .LVU399
 226:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 1661              		.loc 1 226 30 is_stmt 0 view .LVU400
 1662 0058 4FF4A873 		mov	r3, #336
 1663 005c 1193     		str	r3, [sp, #68]
 227:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 1664              		.loc 1 227 3 is_stmt 1 view .LVU401
 227:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 1665              		.loc 1 227 30 is_stmt 0 view .LVU402
 1666 005e 0423     		movs	r3, #4
 1667 0060 1293     		str	r3, [sp, #72]
 228:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1668              		.loc 1 228 3 is_stmt 1 view .LVU403
 228:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1669              		.loc 1 228 30 is_stmt 0 view .LVU404
 1670 0062 1393     		str	r3, [sp, #76]
 229:Core/Src/main.c ****   {
 1671              		.loc 1 229 3 is_stmt 1 view .LVU405
 229:Core/Src/main.c ****   {
 1672              		.loc 1 229 7 is_stmt 0 view .LVU406
 1673 0064 08A8     		add	r0, sp, #32
 1674 0066 FFF7FEFF 		bl	HAL_RCC_OscConfig
 1675              	.LVL92:
 229:Core/Src/main.c ****   {
 1676              		.loc 1 229 6 discriminator 1 view .LVU407
 1677 006a 80B9     		cbnz	r0, .L116
 1678              	.L113:
 236:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1679              		.loc 1 236 3 is_stmt 1 view .LVU408
 236:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1680              		.loc 1 236 31 is_stmt 0 view .LVU409
 1681 006c 0F23     		movs	r3, #15
 1682 006e 0393     		str	r3, [sp, #12]
 238:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1683              		.loc 1 238 3 is_stmt 1 view .LVU410
 238:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1684              		.loc 1 238 34 is_stmt 0 view .LVU411
 1685 0070 0221     		movs	r1, #2
 1686 0072 0491     		str	r1, [sp, #16]
 239:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 1687              		.loc 1 239 3 is_stmt 1 view .LVU412
 239:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 1688              		.loc 1 239 35 is_stmt 0 view .LVU413
 1689 0074 0023     		movs	r3, #0
 1690 0076 0593     		str	r3, [sp, #20]
 240:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1691              		.loc 1 240 3 is_stmt 1 view .LVU414
 240:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1692              		.loc 1 240 36 is_stmt 0 view .LVU415
 1693 0078 4FF48052 		mov	r2, #4096
ARM GAS  /tmp/ccDHp4gG.s 			page 100


 1694 007c 0692     		str	r2, [sp, #24]
 241:Core/Src/main.c **** 
 1695              		.loc 1 241 3 is_stmt 1 view .LVU416
 241:Core/Src/main.c **** 
 1696              		.loc 1 241 36 is_stmt 0 view .LVU417
 1697 007e 0793     		str	r3, [sp, #28]
 243:Core/Src/main.c ****   {
 1698              		.loc 1 243 3 is_stmt 1 view .LVU418
 243:Core/Src/main.c ****   {
 1699              		.loc 1 243 7 is_stmt 0 view .LVU419
 1700 0080 03A8     		add	r0, sp, #12
 1701 0082 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1702              	.LVL93:
 243:Core/Src/main.c ****   {
 1703              		.loc 1 243 6 discriminator 1 view .LVU420
 1704 0086 28B9     		cbnz	r0, .L117
 1705              	.L112:
 247:Core/Src/main.c **** 
 1706              		.loc 1 247 1 view .LVU421
 1707 0088 15B0     		add	sp, sp, #84
 1708              		.cfi_remember_state
 1709              		.cfi_def_cfa_offset 4
 1710              		@ sp needed
 1711 008a 5DF804FB 		ldr	pc, [sp], #4
 1712              	.L116:
 1713              		.cfi_restore_state
 231:Core/Src/main.c ****   }
 1714              		.loc 1 231 5 is_stmt 1 view .LVU422
 1715 008e FFF7FEFF 		bl	Error_Handler
 1716              	.LVL94:
 1717 0092 EBE7     		b	.L113
 1718              	.L117:
 245:Core/Src/main.c ****   }
 1719              		.loc 1 245 5 view .LVU423
 1720 0094 FFF7FEFF 		bl	Error_Handler
 1721              	.LVL95:
 247:Core/Src/main.c **** 
 1722              		.loc 1 247 1 is_stmt 0 view .LVU424
 1723 0098 F6E7     		b	.L112
 1724              	.L119:
 1725 009a 00BF     		.align	2
 1726              	.L118:
 1727 009c 00380240 		.word	1073887232
 1728 00a0 00700040 		.word	1073770496
 1729              		.cfi_endproc
 1730              	.LFE227:
 1732              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 1733              		.align	1
 1734              		.syntax unified
 1735              		.thumb
 1736              		.thumb_func
 1738              	MX_USART2_UART_Init:
 1739              	.LFB229:
 307:Core/Src/main.c **** 
 1740              		.loc 1 307 1 is_stmt 1 view -0
 1741              		.cfi_startproc
 1742              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccDHp4gG.s 			page 101


 1743              		@ frame_needed = 0, uses_anonymous_args = 0
 1744 0000 08B5     		push	{r3, lr}
 1745              		.cfi_def_cfa_offset 8
 1746              		.cfi_offset 3, -8
 1747              		.cfi_offset 14, -4
 316:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 1748              		.loc 1 316 3 view .LVU426
 316:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 1749              		.loc 1 316 19 is_stmt 0 view .LVU427
 1750 0002 0A48     		ldr	r0, .L124
 1751 0004 0A4B     		ldr	r3, .L124+4
 1752 0006 0360     		str	r3, [r0]
 317:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 1753              		.loc 1 317 3 is_stmt 1 view .LVU428
 317:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 1754              		.loc 1 317 24 is_stmt 0 view .LVU429
 1755 0008 4FF4E133 		mov	r3, #115200
 1756 000c 4360     		str	r3, [r0, #4]
 318:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 1757              		.loc 1 318 3 is_stmt 1 view .LVU430
 318:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 1758              		.loc 1 318 26 is_stmt 0 view .LVU431
 1759 000e 0023     		movs	r3, #0
 1760 0010 8360     		str	r3, [r0, #8]
 319:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 1761              		.loc 1 319 3 is_stmt 1 view .LVU432
 319:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 1762              		.loc 1 319 24 is_stmt 0 view .LVU433
 1763 0012 C360     		str	r3, [r0, #12]
 320:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 1764              		.loc 1 320 3 is_stmt 1 view .LVU434
 320:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 1765              		.loc 1 320 22 is_stmt 0 view .LVU435
 1766 0014 0361     		str	r3, [r0, #16]
 321:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1767              		.loc 1 321 3 is_stmt 1 view .LVU436
 321:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1768              		.loc 1 321 20 is_stmt 0 view .LVU437
 1769 0016 0C22     		movs	r2, #12
 1770 0018 4261     		str	r2, [r0, #20]
 322:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 1771              		.loc 1 322 3 is_stmt 1 view .LVU438
 322:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 1772              		.loc 1 322 25 is_stmt 0 view .LVU439
 1773 001a 8361     		str	r3, [r0, #24]
 323:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 1774              		.loc 1 323 3 is_stmt 1 view .LVU440
 323:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 1775              		.loc 1 323 28 is_stmt 0 view .LVU441
 1776 001c C361     		str	r3, [r0, #28]
 324:Core/Src/main.c ****   {
 1777              		.loc 1 324 3 is_stmt 1 view .LVU442
 324:Core/Src/main.c ****   {
 1778              		.loc 1 324 7 is_stmt 0 view .LVU443
 1779 001e FFF7FEFF 		bl	HAL_UART_Init
 1780              	.LVL96:
 324:Core/Src/main.c ****   {
ARM GAS  /tmp/ccDHp4gG.s 			page 102


 1781              		.loc 1 324 6 discriminator 1 view .LVU444
 1782 0022 00B9     		cbnz	r0, .L123
 1783              	.L120:
 332:Core/Src/main.c **** 
 1784              		.loc 1 332 1 view .LVU445
 1785 0024 08BD     		pop	{r3, pc}
 1786              	.L123:
 326:Core/Src/main.c ****   }
 1787              		.loc 1 326 5 is_stmt 1 view .LVU446
 1788 0026 FFF7FEFF 		bl	Error_Handler
 1789              	.LVL97:
 332:Core/Src/main.c **** 
 1790              		.loc 1 332 1 is_stmt 0 view .LVU447
 1791 002a FBE7     		b	.L120
 1792              	.L125:
 1793              		.align	2
 1794              	.L124:
 1795 002c 00000000 		.word	huart2
 1796 0030 00440040 		.word	1073759232
 1797              		.cfi_endproc
 1798              	.LFE229:
 1800              		.section	.text.MX_ADC1_Init,"ax",%progbits
 1801              		.align	1
 1802              		.syntax unified
 1803              		.thumb
 1804              		.thumb_func
 1806              	MX_ADC1_Init:
 1807              	.LFB228:
 255:Core/Src/main.c **** 
 1808              		.loc 1 255 1 is_stmt 1 view -0
 1809              		.cfi_startproc
 1810              		@ args = 0, pretend = 0, frame = 16
 1811              		@ frame_needed = 0, uses_anonymous_args = 0
 1812 0000 00B5     		push	{lr}
 1813              		.cfi_def_cfa_offset 4
 1814              		.cfi_offset 14, -4
 1815 0002 85B0     		sub	sp, sp, #20
 1816              		.cfi_def_cfa_offset 24
 261:Core/Src/main.c **** 
 1817              		.loc 1 261 3 view .LVU449
 261:Core/Src/main.c **** 
 1818              		.loc 1 261 26 is_stmt 0 view .LVU450
 1819 0004 0023     		movs	r3, #0
 1820 0006 0093     		str	r3, [sp]
 1821 0008 0193     		str	r3, [sp, #4]
 1822 000a 0293     		str	r3, [sp, #8]
 1823 000c 0393     		str	r3, [sp, #12]
 269:Core/Src/main.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 1824              		.loc 1 269 3 is_stmt 1 view .LVU451
 269:Core/Src/main.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 1825              		.loc 1 269 18 is_stmt 0 view .LVU452
 1826 000e 1548     		ldr	r0, .L132
 1827 0010 154A     		ldr	r2, .L132+4
 1828 0012 0260     		str	r2, [r0]
 270:Core/Src/main.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 1829              		.loc 1 270 3 is_stmt 1 view .LVU453
 270:Core/Src/main.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
ARM GAS  /tmp/ccDHp4gG.s 			page 103


 1830              		.loc 1 270 29 is_stmt 0 view .LVU454
 1831 0014 4FF48032 		mov	r2, #65536
 1832 0018 4260     		str	r2, [r0, #4]
 271:Core/Src/main.c ****   hadc1.Init.ScanConvMode = DISABLE;
 1833              		.loc 1 271 3 is_stmt 1 view .LVU455
 271:Core/Src/main.c ****   hadc1.Init.ScanConvMode = DISABLE;
 1834              		.loc 1 271 25 is_stmt 0 view .LVU456
 1835 001a 8360     		str	r3, [r0, #8]
 272:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = ENABLE;
 1836              		.loc 1 272 3 is_stmt 1 view .LVU457
 272:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = ENABLE;
 1837              		.loc 1 272 27 is_stmt 0 view .LVU458
 1838 001c 0361     		str	r3, [r0, #16]
 273:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 1839              		.loc 1 273 3 is_stmt 1 view .LVU459
 273:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 1840              		.loc 1 273 33 is_stmt 0 view .LVU460
 1841 001e 0122     		movs	r2, #1
 1842 0020 0276     		strb	r2, [r0, #24]
 274:Core/Src/main.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 1843              		.loc 1 274 3 is_stmt 1 view .LVU461
 274:Core/Src/main.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 1844              		.loc 1 274 36 is_stmt 0 view .LVU462
 1845 0022 80F82030 		strb	r3, [r0, #32]
 275:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 1846              		.loc 1 275 3 is_stmt 1 view .LVU463
 275:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 1847              		.loc 1 275 35 is_stmt 0 view .LVU464
 1848 0026 C362     		str	r3, [r0, #44]
 276:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 1849              		.loc 1 276 3 is_stmt 1 view .LVU465
 276:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 1850              		.loc 1 276 31 is_stmt 0 view .LVU466
 1851 0028 1049     		ldr	r1, .L132+8
 1852 002a 8162     		str	r1, [r0, #40]
 277:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 1;
 1853              		.loc 1 277 3 is_stmt 1 view .LVU467
 277:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 1;
 1854              		.loc 1 277 24 is_stmt 0 view .LVU468
 1855 002c C360     		str	r3, [r0, #12]
 278:Core/Src/main.c ****   hadc1.Init.DMAContinuousRequests = ENABLE;
 1856              		.loc 1 278 3 is_stmt 1 view .LVU469
 278:Core/Src/main.c ****   hadc1.Init.DMAContinuousRequests = ENABLE;
 1857              		.loc 1 278 30 is_stmt 0 view .LVU470
 1858 002e C261     		str	r2, [r0, #28]
 279:Core/Src/main.c ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 1859              		.loc 1 279 3 is_stmt 1 view .LVU471
 279:Core/Src/main.c ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 1860              		.loc 1 279 36 is_stmt 0 view .LVU472
 1861 0030 80F83020 		strb	r2, [r0, #48]
 280:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 1862              		.loc 1 280 3 is_stmt 1 view .LVU473
 280:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 1863              		.loc 1 280 27 is_stmt 0 view .LVU474
 1864 0034 4261     		str	r2, [r0, #20]
 281:Core/Src/main.c ****   {
 1865              		.loc 1 281 3 is_stmt 1 view .LVU475
ARM GAS  /tmp/ccDHp4gG.s 			page 104


 281:Core/Src/main.c ****   {
 1866              		.loc 1 281 7 is_stmt 0 view .LVU476
 1867 0036 FFF7FEFF 		bl	HAL_ADC_Init
 1868              	.LVL98:
 281:Core/Src/main.c ****   {
 1869              		.loc 1 281 6 discriminator 1 view .LVU477
 1870 003a 60B9     		cbnz	r0, .L130
 1871              	.L127:
 288:Core/Src/main.c ****   sConfig.Rank = 1;
 1872              		.loc 1 288 3 is_stmt 1 view .LVU478
 288:Core/Src/main.c ****   sConfig.Rank = 1;
 1873              		.loc 1 288 19 is_stmt 0 view .LVU479
 1874 003c 0023     		movs	r3, #0
 1875 003e 0093     		str	r3, [sp]
 289:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 1876              		.loc 1 289 3 is_stmt 1 view .LVU480
 289:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 1877              		.loc 1 289 16 is_stmt 0 view .LVU481
 1878 0040 0122     		movs	r2, #1
 1879 0042 0192     		str	r2, [sp, #4]
 290:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 1880              		.loc 1 290 3 is_stmt 1 view .LVU482
 290:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 1881              		.loc 1 290 24 is_stmt 0 view .LVU483
 1882 0044 0293     		str	r3, [sp, #8]
 291:Core/Src/main.c ****   {
 1883              		.loc 1 291 3 is_stmt 1 view .LVU484
 291:Core/Src/main.c ****   {
 1884              		.loc 1 291 7 is_stmt 0 view .LVU485
 1885 0046 6946     		mov	r1, sp
 1886 0048 0648     		ldr	r0, .L132
 1887 004a FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 1888              	.LVL99:
 291:Core/Src/main.c ****   {
 1889              		.loc 1 291 6 discriminator 1 view .LVU486
 1890 004e 28B9     		cbnz	r0, .L131
 1891              	.L126:
 299:Core/Src/main.c **** 
 1892              		.loc 1 299 1 view .LVU487
 1893 0050 05B0     		add	sp, sp, #20
 1894              		.cfi_remember_state
 1895              		.cfi_def_cfa_offset 4
 1896              		@ sp needed
 1897 0052 5DF804FB 		ldr	pc, [sp], #4
 1898              	.L130:
 1899              		.cfi_restore_state
 283:Core/Src/main.c ****   }
 1900              		.loc 1 283 5 is_stmt 1 view .LVU488
 1901 0056 FFF7FEFF 		bl	Error_Handler
 1902              	.LVL100:
 1903 005a EFE7     		b	.L127
 1904              	.L131:
 293:Core/Src/main.c ****   }
 1905              		.loc 1 293 5 view .LVU489
 1906 005c FFF7FEFF 		bl	Error_Handler
 1907              	.LVL101:
 299:Core/Src/main.c **** 
ARM GAS  /tmp/ccDHp4gG.s 			page 105


 1908              		.loc 1 299 1 is_stmt 0 view .LVU490
 1909 0060 F6E7     		b	.L126
 1910              	.L133:
 1911 0062 00BF     		.align	2
 1912              	.L132:
 1913 0064 00000000 		.word	hadc1
 1914 0068 00200140 		.word	1073815552
 1915 006c 0100000F 		.word	251658241
 1916              		.cfi_endproc
 1917              	.LFE228:
 1919              		.section	.text.do_init,"ax",%progbits
 1920              		.align	1
 1921              		.global	do_init
 1922              		.syntax unified
 1923              		.thumb
 1924              		.thumb_func
 1926              	do_init:
 1927              	.LVL102:
 1928              	.LFB232:
 436:Core/Src/main.c ****   next_state = STATE_WAIT_REQUEST;
 1929              		.loc 1 436 37 is_stmt 1 view -0
 1930              		.cfi_startproc
 1931              		@ args = 0, pretend = 0, frame = 0
 1932              		@ frame_needed = 0, uses_anonymous_args = 0
 436:Core/Src/main.c ****   next_state = STATE_WAIT_REQUEST;
 1933              		.loc 1 436 37 is_stmt 0 view .LVU492
 1934 0000 08B5     		push	{r3, lr}
 1935              		.cfi_def_cfa_offset 8
 1936              		.cfi_offset 3, -8
 1937              		.cfi_offset 14, -4
 437:Core/Src/main.c ****   
 1938              		.loc 1 437 3 is_stmt 1 view .LVU493
 437:Core/Src/main.c ****   
 1939              		.loc 1 437 14 is_stmt 0 view .LVU494
 1940 0002 1E4B     		ldr	r3, .L143
 1941 0004 0122     		movs	r2, #1
 1942 0006 1A70     		strb	r2, [r3]
 441:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 1943              		.loc 1 441 3 is_stmt 1 view .LVU495
 441:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 1944              		.loc 1 441 9 is_stmt 0 view .LVU496
 1945 0008 0020     		movs	r0, #0
 1946              	.LVL103:
 441:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 1947              		.loc 1 441 9 view .LVU497
 1948 000a FFF7FEFF 		bl	time
 1949              	.LVL104:
 441:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 1950              		.loc 1 441 3 discriminator 1 view .LVU498
 1951 000e FFF7FEFF 		bl	srand
 1952              	.LVL105:
 443:Core/Src/main.c **** 
 1953              		.loc 1 443 3 is_stmt 1 view .LVU499
 443:Core/Src/main.c **** 
 1954              		.loc 1 443 15 is_stmt 0 view .LVU500
 1955 0012 FFF7FEFF 		bl	HAL_Init
 1956              	.LVL106:
ARM GAS  /tmp/ccDHp4gG.s 			page 106


 443:Core/Src/main.c **** 
 1957              		.loc 1 443 13 discriminator 1 view .LVU501
 1958 0016 1A4B     		ldr	r3, .L143+4
 1959 0018 1870     		strb	r0, [r3]
 445:Core/Src/main.c ****     next_state  = STATE_ERROR;
 1960              		.loc 1 445 3 is_stmt 1 view .LVU502
 445:Core/Src/main.c ****     next_state  = STATE_ERROR;
 1961              		.loc 1 445 5 is_stmt 0 view .LVU503
 1962 001a 10BB     		cbnz	r0, .L140
 451:Core/Src/main.c **** 
 1963              		.loc 1 451 3 is_stmt 1 view .LVU504
 1964 001c FFF7FEFF 		bl	SystemClock_Config
 1965              	.LVL107:
 454:Core/Src/main.c ****   MX_DMA_Init();
 1966              		.loc 1 454 3 view .LVU505
 1967 0020 FFF7FEFF 		bl	MX_GPIO_Init
 1968              	.LVL108:
 455:Core/Src/main.c ****   MX_USART2_UART_Init();
 1969              		.loc 1 455 3 view .LVU506
 1970 0024 FFF7FEFF 		bl	MX_DMA_Init
 1971              	.LVL109:
 456:Core/Src/main.c ****   MX_ADC1_Init();
 1972              		.loc 1 456 3 view .LVU507
 1973 0028 FFF7FEFF 		bl	MX_USART2_UART_Init
 1974              	.LVL110:
 457:Core/Src/main.c **** 
 1975              		.loc 1 457 3 view .LVU508
 1976 002c FFF7FEFF 		bl	MX_ADC1_Init
 1977              	.LVL111:
 460:Core/Src/main.c ****   if(halStatus != HAL_OK){
 1978              		.loc 1 460 3 view .LVU509
 460:Core/Src/main.c ****   if(halStatus != HAL_OK){
 1979              		.loc 1 460 15 is_stmt 0 view .LVU510
 1980 0030 4FF49672 		mov	r2, #300
 1981 0034 1349     		ldr	r1, .L143+8
 1982 0036 1448     		ldr	r0, .L143+12
 1983 0038 FFF7FEFF 		bl	HAL_ADC_Start_DMA
 1984              	.LVL112:
 460:Core/Src/main.c ****   if(halStatus != HAL_OK){
 1985              		.loc 1 460 13 discriminator 1 view .LVU511
 1986 003c 104B     		ldr	r3, .L143+4
 1987 003e 1870     		strb	r0, [r3]
 461:Core/Src/main.c ****     next_state  = STATE_ERROR;
 1988              		.loc 1 461 3 is_stmt 1 view .LVU512
 461:Core/Src/main.c ****     next_state  = STATE_ERROR;
 1989              		.loc 1 461 5 is_stmt 0 view .LVU513
 1990 0040 98B9     		cbnz	r0, .L141
 466:Core/Src/main.c ****   if(halStatus != HAL_OK){
 1991              		.loc 1 466 3 is_stmt 1 view .LVU514
 466:Core/Src/main.c ****   if(halStatus != HAL_OK){
 1992              		.loc 1 466 15 is_stmt 0 view .LVU515
 1993 0042 3222     		movs	r2, #50
 1994 0044 1149     		ldr	r1, .L143+16
 1995 0046 1248     		ldr	r0, .L143+20
 1996 0048 FFF7FEFF 		bl	HAL_UARTEx_ReceiveToIdle_IT
 1997              	.LVL113:
 466:Core/Src/main.c ****   if(halStatus != HAL_OK){
ARM GAS  /tmp/ccDHp4gG.s 			page 107


 1998              		.loc 1 466 13 discriminator 1 view .LVU516
 1999 004c 0C4B     		ldr	r3, .L143+4
 2000 004e 1870     		strb	r0, [r3]
 467:Core/Src/main.c ****     next_state  = STATE_ERROR;
 2001              		.loc 1 467 3 is_stmt 1 view .LVU517
 467:Core/Src/main.c ****     next_state  = STATE_ERROR;
 2002              		.loc 1 467 5 is_stmt 0 view .LVU518
 2003 0050 78B9     		cbnz	r0, .L142
 472:Core/Src/main.c ****   next_state = STATE_WAIT_REQUEST;
 2004              		.loc 1 472 3 is_stmt 1 view .LVU519
 472:Core/Src/main.c ****   next_state = STATE_WAIT_REQUEST;
 2005              		.loc 1 472 15 is_stmt 0 view .LVU520
 2006 0052 FFF7FEFF 		bl	HAL_GetTick
 2007              	.LVL114:
 472:Core/Src/main.c ****   next_state = STATE_WAIT_REQUEST;
 2008              		.loc 1 472 13 discriminator 1 view .LVU521
 2009 0056 0F4B     		ldr	r3, .L143+24
 2010 0058 1860     		str	r0, [r3]
 473:Core/Src/main.c **** 
 2011              		.loc 1 473 3 is_stmt 1 view .LVU522
 473:Core/Src/main.c **** 
 2012              		.loc 1 473 14 is_stmt 0 view .LVU523
 2013 005a 0120     		movs	r0, #1
 2014 005c 074B     		ldr	r3, .L143
 2015 005e 1870     		strb	r0, [r3]
 475:Core/Src/main.c **** }
 2016              		.loc 1 475 3 is_stmt 1 view .LVU524
 475:Core/Src/main.c **** }
 2017              		.loc 1 475 10 is_stmt 0 view .LVU525
 2018 0060 02E0     		b	.L136
 2019              	.L140:
 446:Core/Src/main.c ****     return next_state;
 2020              		.loc 1 446 5 is_stmt 1 view .LVU526
 446:Core/Src/main.c ****     return next_state;
 2021              		.loc 1 446 17 is_stmt 0 view .LVU527
 2022 0062 0220     		movs	r0, #2
 2023 0064 054B     		ldr	r3, .L143
 2024 0066 1870     		strb	r0, [r3]
 447:Core/Src/main.c ****   }
 2025              		.loc 1 447 5 is_stmt 1 view .LVU528
 2026              	.L136:
 476:Core/Src/main.c **** 
 2027              		.loc 1 476 1 is_stmt 0 view .LVU529
 2028 0068 08BD     		pop	{r3, pc}
 2029              	.L141:
 462:Core/Src/main.c ****     return next_state;
 2030              		.loc 1 462 5 is_stmt 1 view .LVU530
 462:Core/Src/main.c ****     return next_state;
 2031              		.loc 1 462 17 is_stmt 0 view .LVU531
 2032 006a 0220     		movs	r0, #2
 2033 006c 034B     		ldr	r3, .L143
 2034 006e 1870     		strb	r0, [r3]
 463:Core/Src/main.c ****   }
 2035              		.loc 1 463 5 is_stmt 1 view .LVU532
 463:Core/Src/main.c ****   }
 2036              		.loc 1 463 12 is_stmt 0 view .LVU533
 2037 0070 FAE7     		b	.L136
ARM GAS  /tmp/ccDHp4gG.s 			page 108


 2038              	.L142:
 468:Core/Src/main.c ****     return next_state;
 2039              		.loc 1 468 5 is_stmt 1 view .LVU534
 468:Core/Src/main.c ****     return next_state;
 2040              		.loc 1 468 17 is_stmt 0 view .LVU535
 2041 0072 0220     		movs	r0, #2
 2042 0074 014B     		ldr	r3, .L143
 2043 0076 1870     		strb	r0, [r3]
 469:Core/Src/main.c ****   }
 2044              		.loc 1 469 5 is_stmt 1 view .LVU536
 469:Core/Src/main.c ****   }
 2045              		.loc 1 469 12 is_stmt 0 view .LVU537
 2046 0078 F6E7     		b	.L136
 2047              	.L144:
 2048 007a 00BF     		.align	2
 2049              	.L143:
 2050 007c 00000000 		.word	next_state
 2051 0080 00000000 		.word	halStatus
 2052 0084 00000000 		.word	adcBuffer
 2053 0088 00000000 		.word	hadc1
 2054 008c 00000000 		.word	cli_command
 2055 0090 00000000 		.word	huart2
 2056 0094 00000000 		.word	lastTimer
 2057              		.cfi_endproc
 2058              	.LFE232:
 2060              		.global	state_table
 2061              		.section	.rodata.state_table,"a"
 2062              		.align	2
 2065              	state_table:
 2066 0000 00000000 		.word	do_init
 2067 0004 00000000 		.word	do_wait_request
 2068 0008 00000000 		.word	do_error
 2069 000c 00000000 		.word	do_listening
 2070 0010 00000000 		.word	do_warning
 2071 0014 00000000 		.word	do_pause
 2072              		.global	state_names
 2073              		.section	.rodata.str1.4,"aMS",%progbits,1
 2074              		.align	2
 2075              	.LC12:
 2076 0000 696E6974 		.ascii	"init\000"
 2076      00
 2077 0005 000000   		.align	2
 2078              	.LC13:
 2079 0008 77616974 		.ascii	"wait_request\000"
 2079      5F726571 
 2079      75657374 
 2079      00
 2080 0015 000000   		.align	2
 2081              	.LC14:
 2082 0018 6572726F 		.ascii	"error\000"
 2082      7200
 2083 001e 0000     		.align	2
 2084              	.LC15:
 2085 0020 6C697374 		.ascii	"listening\000"
 2085      656E696E 
 2085      6700
 2086 002a 0000     		.align	2
ARM GAS  /tmp/ccDHp4gG.s 			page 109


 2087              	.LC16:
 2088 002c 7761726E 		.ascii	"warning\000"
 2088      696E6700 
 2089              		.align	2
 2090              	.LC17:
 2091 0034 70617573 		.ascii	"pause\000"
 2091      6500
 2092              		.section	.data.state_names,"aw"
 2093              		.align	2
 2096              	state_names:
 2097 0000 00000000 		.word	.LC12
 2098 0004 08000000 		.word	.LC13
 2099 0008 18000000 		.word	.LC14
 2100 000c 20000000 		.word	.LC15
 2101 0010 2C000000 		.word	.LC16
 2102 0014 34000000 		.word	.LC17
 2103              		.global	msg_buffer
 2104              		.section	.bss.msg_buffer,"aw",%nobits
 2105              		.align	2
 2108              	msg_buffer:
 2109 0000 00000000 		.space	50
 2109      00000000 
 2109      00000000 
 2109      00000000 
 2109      00000000 
 2110              		.global	sendRequest
 2111              		.section	.bss.sendRequest,"aw",%nobits
 2114              	sendRequest:
 2115 0000 00       		.space	1
 2116              		.global	cli_command
 2117              		.section	.bss.cli_command,"aw",%nobits
 2118              		.align	2
 2121              	cli_command:
 2122 0000 00000000 		.space	50
 2122      00000000 
 2122      00000000 
 2122      00000000 
 2122      00000000 
 2123              		.global	currentFilterMode
 2124              		.section	.bss.currentFilterMode,"aw",%nobits
 2127              	currentFilterMode:
 2128 0000 00       		.space	1
 2129              		.global	isWarningState
 2130              		.section	.bss.isWarningState,"aw",%nobits
 2133              	isWarningState:
 2134 0000 00       		.space	1
 2135              		.global	lastTimer
 2136              		.section	.bss.lastTimer,"aw",%nobits
 2137              		.align	2
 2140              	lastTimer:
 2141 0000 00000000 		.space	4
 2142              		.global	sum
 2143              		.section	.bss.sum,"aw",%nobits
 2144              		.align	2
 2147              	sum:
 2148 0000 00000000 		.space	4
 2149              		.global	buffer_index
ARM GAS  /tmp/ccDHp4gG.s 			page 110


 2150              		.section	.bss.buffer_index,"aw",%nobits
 2151              		.align	1
 2154              	buffer_index:
 2155 0000 0000     		.space	2
 2156              		.global	adc_moving_average
 2157              		.section	.bss.adc_moving_average,"aw",%nobits
 2158              		.align	2
 2161              	adc_moving_average:
 2162 0000 00000000 		.space	300
 2162      00000000 
 2162      00000000 
 2162      00000000 
 2162      00000000 
 2163              		.global	disableInterrupt
 2164              		.section	.bss.disableInterrupt,"aw",%nobits
 2167              	disableInterrupt:
 2168 0000 00       		.space	1
 2169              		.global	adcBuffer
 2170              		.section	.bss.adcBuffer,"aw",%nobits
 2171              		.align	2
 2174              	adcBuffer:
 2175 0000 00000000 		.space	1200
 2175      00000000 
 2175      00000000 
 2175      00000000 
 2175      00000000 
 2176              		.global	last_index
 2177              		.section	.bss.last_index,"aw",%nobits
 2178              		.align	1
 2181              	last_index:
 2182 0000 0000     		.space	2
 2183              		.global	lastDigitalValue
 2184              		.section	.bss.lastDigitalValue,"aw",%nobits
 2185              		.align	1
 2188              	lastDigitalValue:
 2189 0000 0000     		.space	2
 2190              		.global	lastAnalogValue
 2191              		.section	.bss.lastAnalogValue,"aw",%nobits
 2192              		.align	1
 2195              	lastAnalogValue:
 2196 0000 0000     		.space	2
 2197              		.global	next_state
 2198              		.section	.data.next_state,"aw"
 2201              	next_state:
 2202 0000 01       		.byte	1
 2203              		.global	current_state
 2204              		.section	.bss.current_state,"aw",%nobits
 2207              	current_state:
 2208 0000 00       		.space	1
 2209              		.global	halStatus
 2210              		.section	.bss.halStatus,"aw",%nobits
 2213              	halStatus:
 2214 0000 00       		.space	1
 2215              		.global	huart2
 2216              		.section	.bss.huart2,"aw",%nobits
 2217              		.align	2
 2220              	huart2:
ARM GAS  /tmp/ccDHp4gG.s 			page 111


 2221 0000 00000000 		.space	72
 2221      00000000 
 2221      00000000 
 2221      00000000 
 2221      00000000 
 2222              		.global	hdma_adc1
 2223              		.section	.bss.hdma_adc1,"aw",%nobits
 2224              		.align	2
 2227              	hdma_adc1:
 2228 0000 00000000 		.space	96
 2228      00000000 
 2228      00000000 
 2228      00000000 
 2228      00000000 
 2229              		.global	hadc1
 2230              		.section	.bss.hadc1,"aw",%nobits
 2231              		.align	2
 2234              	hadc1:
 2235 0000 00000000 		.space	72
 2235      00000000 
 2235      00000000 
 2235      00000000 
 2235      00000000 
 2236              		.text
 2237              	.Letext0:
 2238              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f411xe.h"
 2239              		.file 5 "/home/dorijan/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/arm-n
 2240              		.file 6 "/home/dorijan/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/arm-n
 2241              		.file 7 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 2242              		.file 8 "/home/dorijan/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/arm-n
 2243              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 2244              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 2245              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 2246              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 2247              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 2248              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_adc.h"
 2249              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 2250              		.file 16 "Core/Src/scheme.h"
 2251              		.file 17 "/home/dorijan/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/arm-
 2252              		.file 18 "/home/dorijan/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/arm-
 2253              		.file 19 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 2254              		.file 20 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 2255              		.file 21 "/home/dorijan/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/arm-
 2256              		.file 22 "/home/dorijan/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/arm-
 2257              		.file 23 "/home/dorijan/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/arm-
 2258              		.file 24 "/home/dorijan/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/arm-
 2259              		.file 25 "<built-in>"
ARM GAS  /tmp/ccDHp4gG.s 			page 112


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
     /tmp/ccDHp4gG.s:21     .text.__NVIC_SystemReset:00000000 $t
     /tmp/ccDHp4gG.s:26     .text.__NVIC_SystemReset:00000000 __NVIC_SystemReset
     /tmp/ccDHp4gG.s:89     .text.__NVIC_SystemReset:0000001c $d
     /tmp/ccDHp4gG.s:95     .rodata.do_warning.str1.4:00000000 $d
     /tmp/ccDHp4gG.s:99     .text.do_warning:00000000 $t
     /tmp/ccDHp4gG.s:105    .text.do_warning:00000000 do_warning
     /tmp/ccDHp4gG.s:174    .text.do_warning:00000048 $d
     /tmp/ccDHp4gG.s:2201   .data.next_state:00000000 next_state
     /tmp/ccDHp4gG.s:2108   .bss.msg_buffer:00000000 msg_buffer
     /tmp/ccDHp4gG.s:2220   .bss.huart2:00000000 huart2
     /tmp/ccDHp4gG.s:2213   .bss.halStatus:00000000 halStatus
     /tmp/ccDHp4gG.s:184    .text.MX_GPIO_Init:00000000 $t
     /tmp/ccDHp4gG.s:189    .text.MX_GPIO_Init:00000000 MX_GPIO_Init
     /tmp/ccDHp4gG.s:363    .text.MX_GPIO_Init:000000d4 $d
     /tmp/ccDHp4gG.s:370    .text.MX_DMA_Init:00000000 $t
     /tmp/ccDHp4gG.s:375    .text.MX_DMA_Init:00000000 MX_DMA_Init
     /tmp/ccDHp4gG.s:421    .text.MX_DMA_Init:00000030 $d
     /tmp/ccDHp4gG.s:426    .rodata.do_wait_request.str1.4:00000000 $d
     /tmp/ccDHp4gG.s:430    .text.do_wait_request:00000000 $t
     /tmp/ccDHp4gG.s:436    .text.do_wait_request:00000000 do_wait_request
     /tmp/ccDHp4gG.s:544    .text.do_wait_request:0000006c $d
     /tmp/ccDHp4gG.s:2114   .bss.sendRequest:00000000 sendRequest
     /tmp/ccDHp4gG.s:2234   .bss.hadc1:00000000 hadc1
     /tmp/ccDHp4gG.s:556    .rodata.do_error.str1.4:00000000 $d
     /tmp/ccDHp4gG.s:560    .text.do_error:00000000 $t
     /tmp/ccDHp4gG.s:566    .text.do_error:00000000 do_error
     /tmp/ccDHp4gG.s:623    .text.do_error:00000040 $d
     /tmp/ccDHp4gG.s:633    .text.do_pause:00000000 $t
     /tmp/ccDHp4gG.s:639    .text.do_pause:00000000 do_pause
     /tmp/ccDHp4gG.s:750    .text.do_pause:00000074 $d
     /tmp/ccDHp4gG.s:762    .rodata.do_listening.str1.4:00000000 $d
     /tmp/ccDHp4gG.s:776    .text.do_listening:00000000 $t
     /tmp/ccDHp4gG.s:782    .text.do_listening:00000000 do_listening
     /tmp/ccDHp4gG.s:1048   .text.do_listening:0000015c $d
     /tmp/ccDHp4gG.s:2227   .bss.hdma_adc1:00000000 hdma_adc1
     /tmp/ccDHp4gG.s:2181   .bss.last_index:00000000 last_index
     /tmp/ccDHp4gG.s:2174   .bss.adcBuffer:00000000 adcBuffer
     /tmp/ccDHp4gG.s:2195   .bss.lastAnalogValue:00000000 lastAnalogValue
     /tmp/ccDHp4gG.s:2127   .bss.currentFilterMode:00000000 currentFilterMode
     /tmp/ccDHp4gG.s:2188   .bss.lastDigitalValue:00000000 lastDigitalValue
     /tmp/ccDHp4gG.s:2140   .bss.lastTimer:00000000 lastTimer
     /tmp/ccDHp4gG.s:2154   .bss.buffer_index:00000000 buffer_index
     /tmp/ccDHp4gG.s:2161   .bss.adc_moving_average:00000000 adc_moving_average
     /tmp/ccDHp4gG.s:2147   .bss.sum:00000000 sum
     /tmp/ccDHp4gG.s:1073   .text.HAL_GPIO_EXTI_Callback:00000000 $t
     /tmp/ccDHp4gG.s:1079   .text.HAL_GPIO_EXTI_Callback:00000000 HAL_GPIO_EXTI_Callback
     /tmp/ccDHp4gG.s:1130   .text.HAL_GPIO_EXTI_Callback:0000002c $d
     /tmp/ccDHp4gG.s:1135   .text.HAL_GPIO_EXTI_Callback:00000040 $t
     /tmp/ccDHp4gG.s:1184   .text.HAL_GPIO_EXTI_Callback:00000078 $d
     /tmp/ccDHp4gG.s:2207   .bss.current_state:00000000 current_state
     /tmp/ccDHp4gG.s:1195   .rodata.handle_cli_command.str1.4:00000000 $d
     /tmp/ccDHp4gG.s:1205   .text.handle_cli_command:00000000 $t
     /tmp/ccDHp4gG.s:1211   .text.handle_cli_command:00000000 handle_cli_command
     /tmp/ccDHp4gG.s:1291   .text.handle_cli_command:00000054 $d
     /tmp/ccDHp4gG.s:2121   .bss.cli_command:00000000 cli_command
ARM GAS  /tmp/ccDHp4gG.s 			page 113


     /tmp/ccDHp4gG.s:1300   .rodata.HAL_UARTEx_RxEventCallback.str1.4:00000000 $d
     /tmp/ccDHp4gG.s:1307   .text.HAL_UARTEx_RxEventCallback:00000000 $t
     /tmp/ccDHp4gG.s:1313   .text.HAL_UARTEx_RxEventCallback:00000000 HAL_UARTEx_RxEventCallback
     /tmp/ccDHp4gG.s:1427   .text.HAL_UARTEx_RxEventCallback:00000098 $d
     /tmp/ccDHp4gG.s:2167   .bss.disableInterrupt:00000000 disableInterrupt
     /tmp/ccDHp4gG.s:1442   .text.run_state:00000000 $t
     /tmp/ccDHp4gG.s:1448   .text.run_state:00000000 run_state
     /tmp/ccDHp4gG.s:1488   .text.run_state:0000001c $d
     /tmp/ccDHp4gG.s:2065   .rodata.state_table:00000000 state_table
     /tmp/ccDHp4gG.s:1494   .text.main:00000000 $t
     /tmp/ccDHp4gG.s:1500   .text.main:00000000 main
     /tmp/ccDHp4gG.s:1526   .text.main:00000010 $d
     /tmp/ccDHp4gG.s:1531   .text.Error_Handler:00000000 $t
     /tmp/ccDHp4gG.s:1537   .text.Error_Handler:00000000 Error_Handler
     /tmp/ccDHp4gG.s:1568   .text.Error_Handler:0000000c $d
     /tmp/ccDHp4gG.s:1573   .text.SystemClock_Config:00000000 $t
     /tmp/ccDHp4gG.s:1579   .text.SystemClock_Config:00000000 SystemClock_Config
     /tmp/ccDHp4gG.s:1727   .text.SystemClock_Config:0000009c $d
     /tmp/ccDHp4gG.s:1733   .text.MX_USART2_UART_Init:00000000 $t
     /tmp/ccDHp4gG.s:1738   .text.MX_USART2_UART_Init:00000000 MX_USART2_UART_Init
     /tmp/ccDHp4gG.s:1795   .text.MX_USART2_UART_Init:0000002c $d
     /tmp/ccDHp4gG.s:1801   .text.MX_ADC1_Init:00000000 $t
     /tmp/ccDHp4gG.s:1806   .text.MX_ADC1_Init:00000000 MX_ADC1_Init
     /tmp/ccDHp4gG.s:1913   .text.MX_ADC1_Init:00000064 $d
     /tmp/ccDHp4gG.s:1920   .text.do_init:00000000 $t
     /tmp/ccDHp4gG.s:1926   .text.do_init:00000000 do_init
     /tmp/ccDHp4gG.s:2050   .text.do_init:0000007c $d
     /tmp/ccDHp4gG.s:2062   .rodata.state_table:00000000 $d
     /tmp/ccDHp4gG.s:2096   .data.state_names:00000000 state_names
     /tmp/ccDHp4gG.s:2074   .rodata.str1.4:00000000 $d
     /tmp/ccDHp4gG.s:2093   .data.state_names:00000000 $d
     /tmp/ccDHp4gG.s:2105   .bss.msg_buffer:00000000 $d
     /tmp/ccDHp4gG.s:2115   .bss.sendRequest:00000000 $d
     /tmp/ccDHp4gG.s:2118   .bss.cli_command:00000000 $d
     /tmp/ccDHp4gG.s:2128   .bss.currentFilterMode:00000000 $d
     /tmp/ccDHp4gG.s:2133   .bss.isWarningState:00000000 isWarningState
     /tmp/ccDHp4gG.s:2134   .bss.isWarningState:00000000 $d
     /tmp/ccDHp4gG.s:2137   .bss.lastTimer:00000000 $d
     /tmp/ccDHp4gG.s:2144   .bss.sum:00000000 $d
     /tmp/ccDHp4gG.s:2151   .bss.buffer_index:00000000 $d
     /tmp/ccDHp4gG.s:2158   .bss.adc_moving_average:00000000 $d
     /tmp/ccDHp4gG.s:2168   .bss.disableInterrupt:00000000 $d
     /tmp/ccDHp4gG.s:2171   .bss.adcBuffer:00000000 $d
     /tmp/ccDHp4gG.s:2178   .bss.last_index:00000000 $d
     /tmp/ccDHp4gG.s:2185   .bss.lastDigitalValue:00000000 $d
     /tmp/ccDHp4gG.s:2192   .bss.lastAnalogValue:00000000 $d
     /tmp/ccDHp4gG.s:2208   .bss.current_state:00000000 $d
     /tmp/ccDHp4gG.s:2214   .bss.halStatus:00000000 $d
     /tmp/ccDHp4gG.s:2217   .bss.huart2:00000000 $d
     /tmp/ccDHp4gG.s:2224   .bss.hdma_adc1:00000000 $d
     /tmp/ccDHp4gG.s:2231   .bss.hadc1:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
strlen
HAL_UART_Transmit
HAL_GPIO_Init
ARM GAS  /tmp/ccDHp4gG.s 			page 114


HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_ADC_Stop_DMA
HAL_GPIO_TogglePin
HAL_Delay
__aeabi_f2d
sprintf
HAL_GetTick
rand
HAL_GPIO_ReadPin
HAL_ADC_Start_DMA
strcmp
memset
HAL_UARTEx_ReceiveToIdle_IT
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_UART_Init
HAL_ADC_Init
HAL_ADC_ConfigChannel
time
srand
HAL_Init
