ARM GAS  /tmp/ccEpMq7M.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/main.c"
  20              		.section	.text.__NVIC_SystemReset,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	__NVIC_SystemReset:
  27              	.LFB121:
  28              		.file 2 "Drivers/CMSIS/Include/core_cm4.h"
   1:Drivers/CMSIS/Include/core_cm4.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/core_cm4.h ****  * @file     core_cm4.h
   3:Drivers/CMSIS/Include/core_cm4.h ****  * @brief    CMSIS Cortex-M4 Core Peripheral Access Layer Header File
   4:Drivers/CMSIS/Include/core_cm4.h ****  * @version  V5.1.2
   5:Drivers/CMSIS/Include/core_cm4.h ****  * @date     04. June 2021
   6:Drivers/CMSIS/Include/core_cm4.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/core_cm4.h **** /*
   8:Drivers/CMSIS/Include/core_cm4.h ****  * Copyright (c) 2009-2020 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/core_cm4.h ****  *
  10:Drivers/CMSIS/Include/core_cm4.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/core_cm4.h ****  *
  12:Drivers/CMSIS/Include/core_cm4.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/core_cm4.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/core_cm4.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/core_cm4.h ****  *
  16:Drivers/CMSIS/Include/core_cm4.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/core_cm4.h ****  *
  18:Drivers/CMSIS/Include/core_cm4.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/core_cm4.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/core_cm4.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/core_cm4.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/core_cm4.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/core_cm4.h ****  */
  24:Drivers/CMSIS/Include/core_cm4.h **** 
  25:Drivers/CMSIS/Include/core_cm4.h **** #if   defined ( __ICCARM__ )
  26:Drivers/CMSIS/Include/core_cm4.h ****   #pragma system_include         /* treat file as system include file for MISRA check */
  27:Drivers/CMSIS/Include/core_cm4.h **** #elif defined (__clang__)
  28:Drivers/CMSIS/Include/core_cm4.h ****   #pragma clang system_header   /* treat file as system include file */
  29:Drivers/CMSIS/Include/core_cm4.h **** #endif
  30:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/ccEpMq7M.s 			page 2


  31:Drivers/CMSIS/Include/core_cm4.h **** #ifndef __CORE_CM4_H_GENERIC
  32:Drivers/CMSIS/Include/core_cm4.h **** #define __CORE_CM4_H_GENERIC
  33:Drivers/CMSIS/Include/core_cm4.h **** 
  34:Drivers/CMSIS/Include/core_cm4.h **** #include <stdint.h>
  35:Drivers/CMSIS/Include/core_cm4.h **** 
  36:Drivers/CMSIS/Include/core_cm4.h **** #ifdef __cplusplus
  37:Drivers/CMSIS/Include/core_cm4.h ****  extern "C" {
  38:Drivers/CMSIS/Include/core_cm4.h **** #endif
  39:Drivers/CMSIS/Include/core_cm4.h **** 
  40:Drivers/CMSIS/Include/core_cm4.h **** /**
  41:Drivers/CMSIS/Include/core_cm4.h ****   \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  42:Drivers/CMSIS/Include/core_cm4.h ****   CMSIS violates the following MISRA-C:2004 rules:
  43:Drivers/CMSIS/Include/core_cm4.h **** 
  44:Drivers/CMSIS/Include/core_cm4.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  45:Drivers/CMSIS/Include/core_cm4.h ****      Function definitions in header files are used to allow 'inlining'.
  46:Drivers/CMSIS/Include/core_cm4.h **** 
  47:Drivers/CMSIS/Include/core_cm4.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  48:Drivers/CMSIS/Include/core_cm4.h ****      Unions are used for effective representation of core registers.
  49:Drivers/CMSIS/Include/core_cm4.h **** 
  50:Drivers/CMSIS/Include/core_cm4.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  51:Drivers/CMSIS/Include/core_cm4.h ****      Function-like macros are used to allow more efficient code.
  52:Drivers/CMSIS/Include/core_cm4.h ****  */
  53:Drivers/CMSIS/Include/core_cm4.h **** 
  54:Drivers/CMSIS/Include/core_cm4.h **** 
  55:Drivers/CMSIS/Include/core_cm4.h **** /*******************************************************************************
  56:Drivers/CMSIS/Include/core_cm4.h ****  *                 CMSIS definitions
  57:Drivers/CMSIS/Include/core_cm4.h ****  ******************************************************************************/
  58:Drivers/CMSIS/Include/core_cm4.h **** /**
  59:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup Cortex_M4
  60:Drivers/CMSIS/Include/core_cm4.h ****   @{
  61:Drivers/CMSIS/Include/core_cm4.h ****  */
  62:Drivers/CMSIS/Include/core_cm4.h **** 
  63:Drivers/CMSIS/Include/core_cm4.h **** #include "cmsis_version.h"
  64:Drivers/CMSIS/Include/core_cm4.h **** 
  65:Drivers/CMSIS/Include/core_cm4.h **** /* CMSIS CM4 definitions */
  66:Drivers/CMSIS/Include/core_cm4.h **** #define __CM4_CMSIS_VERSION_MAIN  (__CM_CMSIS_VERSION_MAIN)              /*!< \deprecated [31:16] C
  67:Drivers/CMSIS/Include/core_cm4.h **** #define __CM4_CMSIS_VERSION_SUB   (__CM_CMSIS_VERSION_SUB)               /*!< \deprecated [15:0]  C
  68:Drivers/CMSIS/Include/core_cm4.h **** #define __CM4_CMSIS_VERSION       ((__CM4_CMSIS_VERSION_MAIN << 16U) | \
  69:Drivers/CMSIS/Include/core_cm4.h ****                                     __CM4_CMSIS_VERSION_SUB           )  /*!< \deprecated CMSIS HAL
  70:Drivers/CMSIS/Include/core_cm4.h **** 
  71:Drivers/CMSIS/Include/core_cm4.h **** #define __CORTEX_M                (4U)                                   /*!< Cortex-M Core */
  72:Drivers/CMSIS/Include/core_cm4.h **** 
  73:Drivers/CMSIS/Include/core_cm4.h **** /** __FPU_USED indicates whether an FPU is used or not.
  74:Drivers/CMSIS/Include/core_cm4.h ****     For this, __FPU_PRESENT has to be checked prior to making use of FPU specific registers and fun
  75:Drivers/CMSIS/Include/core_cm4.h **** */
  76:Drivers/CMSIS/Include/core_cm4.h **** #if defined ( __CC_ARM )
  77:Drivers/CMSIS/Include/core_cm4.h ****   #if defined __TARGET_FPU_VFP
  78:Drivers/CMSIS/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
  79:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
  80:Drivers/CMSIS/Include/core_cm4.h ****     #else
  81:Drivers/CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
  82:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
  83:Drivers/CMSIS/Include/core_cm4.h ****     #endif
  84:Drivers/CMSIS/Include/core_cm4.h ****   #else
  85:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
  86:Drivers/CMSIS/Include/core_cm4.h ****   #endif
  87:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/ccEpMq7M.s 			page 3


  88:Drivers/CMSIS/Include/core_cm4.h **** #elif defined (__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  89:Drivers/CMSIS/Include/core_cm4.h ****   #if defined __ARM_FP
  90:Drivers/CMSIS/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
  91:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
  92:Drivers/CMSIS/Include/core_cm4.h ****     #else
  93:Drivers/CMSIS/Include/core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
  94:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
  95:Drivers/CMSIS/Include/core_cm4.h ****     #endif
  96:Drivers/CMSIS/Include/core_cm4.h ****   #else
  97:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
  98:Drivers/CMSIS/Include/core_cm4.h ****   #endif
  99:Drivers/CMSIS/Include/core_cm4.h **** 
 100:Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __GNUC__ )
 101:Drivers/CMSIS/Include/core_cm4.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
 102:Drivers/CMSIS/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 103:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
 104:Drivers/CMSIS/Include/core_cm4.h ****     #else
 105:Drivers/CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 106:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
 107:Drivers/CMSIS/Include/core_cm4.h ****     #endif
 108:Drivers/CMSIS/Include/core_cm4.h ****   #else
 109:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
 110:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 111:Drivers/CMSIS/Include/core_cm4.h **** 
 112:Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __ICCARM__ )
 113:Drivers/CMSIS/Include/core_cm4.h ****   #if defined __ARMVFP__
 114:Drivers/CMSIS/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 115:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
 116:Drivers/CMSIS/Include/core_cm4.h ****     #else
 117:Drivers/CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 118:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
 119:Drivers/CMSIS/Include/core_cm4.h ****     #endif
 120:Drivers/CMSIS/Include/core_cm4.h ****   #else
 121:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
 122:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 123:Drivers/CMSIS/Include/core_cm4.h **** 
 124:Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __TI_ARM__ )
 125:Drivers/CMSIS/Include/core_cm4.h ****   #if defined __TI_VFP_SUPPORT__
 126:Drivers/CMSIS/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 127:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
 128:Drivers/CMSIS/Include/core_cm4.h ****     #else
 129:Drivers/CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 130:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
 131:Drivers/CMSIS/Include/core_cm4.h ****     #endif
 132:Drivers/CMSIS/Include/core_cm4.h ****   #else
 133:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
 134:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 135:Drivers/CMSIS/Include/core_cm4.h **** 
 136:Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __TASKING__ )
 137:Drivers/CMSIS/Include/core_cm4.h ****   #if defined __FPU_VFP__
 138:Drivers/CMSIS/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 139:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
 140:Drivers/CMSIS/Include/core_cm4.h ****     #else
 141:Drivers/CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 142:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
 143:Drivers/CMSIS/Include/core_cm4.h ****     #endif
 144:Drivers/CMSIS/Include/core_cm4.h ****   #else
ARM GAS  /tmp/ccEpMq7M.s 			page 4


 145:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
 146:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 147:Drivers/CMSIS/Include/core_cm4.h **** 
 148:Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __CSMC__ )
 149:Drivers/CMSIS/Include/core_cm4.h ****   #if ( __CSMC__ & 0x400U)
 150:Drivers/CMSIS/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 151:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
 152:Drivers/CMSIS/Include/core_cm4.h ****     #else
 153:Drivers/CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 154:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
 155:Drivers/CMSIS/Include/core_cm4.h ****     #endif
 156:Drivers/CMSIS/Include/core_cm4.h ****   #else
 157:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
 158:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 159:Drivers/CMSIS/Include/core_cm4.h **** 
 160:Drivers/CMSIS/Include/core_cm4.h **** #endif
 161:Drivers/CMSIS/Include/core_cm4.h **** 
 162:Drivers/CMSIS/Include/core_cm4.h **** #include "cmsis_compiler.h"               /* CMSIS compiler specific defines */
 163:Drivers/CMSIS/Include/core_cm4.h **** 
 164:Drivers/CMSIS/Include/core_cm4.h **** 
 165:Drivers/CMSIS/Include/core_cm4.h **** #ifdef __cplusplus
 166:Drivers/CMSIS/Include/core_cm4.h **** }
 167:Drivers/CMSIS/Include/core_cm4.h **** #endif
 168:Drivers/CMSIS/Include/core_cm4.h **** 
 169:Drivers/CMSIS/Include/core_cm4.h **** #endif /* __CORE_CM4_H_GENERIC */
 170:Drivers/CMSIS/Include/core_cm4.h **** 
 171:Drivers/CMSIS/Include/core_cm4.h **** #ifndef __CMSIS_GENERIC
 172:Drivers/CMSIS/Include/core_cm4.h **** 
 173:Drivers/CMSIS/Include/core_cm4.h **** #ifndef __CORE_CM4_H_DEPENDANT
 174:Drivers/CMSIS/Include/core_cm4.h **** #define __CORE_CM4_H_DEPENDANT
 175:Drivers/CMSIS/Include/core_cm4.h **** 
 176:Drivers/CMSIS/Include/core_cm4.h **** #ifdef __cplusplus
 177:Drivers/CMSIS/Include/core_cm4.h ****  extern "C" {
 178:Drivers/CMSIS/Include/core_cm4.h **** #endif
 179:Drivers/CMSIS/Include/core_cm4.h **** 
 180:Drivers/CMSIS/Include/core_cm4.h **** /* check device defines and use defaults */
 181:Drivers/CMSIS/Include/core_cm4.h **** #if defined __CHECK_DEVICE_DEFINES
 182:Drivers/CMSIS/Include/core_cm4.h ****   #ifndef __CM4_REV
 183:Drivers/CMSIS/Include/core_cm4.h ****     #define __CM4_REV               0x0000U
 184:Drivers/CMSIS/Include/core_cm4.h ****     #warning "__CM4_REV not defined in device header file; using default!"
 185:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 186:Drivers/CMSIS/Include/core_cm4.h **** 
 187:Drivers/CMSIS/Include/core_cm4.h ****   #ifndef __FPU_PRESENT
 188:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_PRESENT             0U
 189:Drivers/CMSIS/Include/core_cm4.h ****     #warning "__FPU_PRESENT not defined in device header file; using default!"
 190:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 191:Drivers/CMSIS/Include/core_cm4.h **** 
 192:Drivers/CMSIS/Include/core_cm4.h ****   #ifndef __MPU_PRESENT
 193:Drivers/CMSIS/Include/core_cm4.h ****     #define __MPU_PRESENT             0U
 194:Drivers/CMSIS/Include/core_cm4.h ****     #warning "__MPU_PRESENT not defined in device header file; using default!"
 195:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 196:Drivers/CMSIS/Include/core_cm4.h **** 
 197:Drivers/CMSIS/Include/core_cm4.h ****   #ifndef __VTOR_PRESENT
 198:Drivers/CMSIS/Include/core_cm4.h ****     #define __VTOR_PRESENT             1U
 199:Drivers/CMSIS/Include/core_cm4.h ****     #warning "__VTOR_PRESENT not defined in device header file; using default!"
 200:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 201:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/ccEpMq7M.s 			page 5


 202:Drivers/CMSIS/Include/core_cm4.h ****   #ifndef __NVIC_PRIO_BITS
 203:Drivers/CMSIS/Include/core_cm4.h ****     #define __NVIC_PRIO_BITS          3U
 204:Drivers/CMSIS/Include/core_cm4.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 205:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 206:Drivers/CMSIS/Include/core_cm4.h **** 
 207:Drivers/CMSIS/Include/core_cm4.h ****   #ifndef __Vendor_SysTickConfig
 208:Drivers/CMSIS/Include/core_cm4.h ****     #define __Vendor_SysTickConfig    0U
 209:Drivers/CMSIS/Include/core_cm4.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 210:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 211:Drivers/CMSIS/Include/core_cm4.h **** #endif
 212:Drivers/CMSIS/Include/core_cm4.h **** 
 213:Drivers/CMSIS/Include/core_cm4.h **** /* IO definitions (access restrictions to peripheral registers) */
 214:Drivers/CMSIS/Include/core_cm4.h **** /**
 215:Drivers/CMSIS/Include/core_cm4.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 216:Drivers/CMSIS/Include/core_cm4.h **** 
 217:Drivers/CMSIS/Include/core_cm4.h ****     <strong>IO Type Qualifiers</strong> are used
 218:Drivers/CMSIS/Include/core_cm4.h ****     \li to specify the access to peripheral variables.
 219:Drivers/CMSIS/Include/core_cm4.h ****     \li for automatic generation of peripheral register debug information.
 220:Drivers/CMSIS/Include/core_cm4.h **** */
 221:Drivers/CMSIS/Include/core_cm4.h **** #ifdef __cplusplus
 222:Drivers/CMSIS/Include/core_cm4.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions */
 223:Drivers/CMSIS/Include/core_cm4.h **** #else
 224:Drivers/CMSIS/Include/core_cm4.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions */
 225:Drivers/CMSIS/Include/core_cm4.h **** #endif
 226:Drivers/CMSIS/Include/core_cm4.h **** #define     __O     volatile             /*!< Defines 'write only' permissions */
 227:Drivers/CMSIS/Include/core_cm4.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions */
 228:Drivers/CMSIS/Include/core_cm4.h **** 
 229:Drivers/CMSIS/Include/core_cm4.h **** /* following defines should be used for structure members */
 230:Drivers/CMSIS/Include/core_cm4.h **** #define     __IM     volatile const      /*! Defines 'read only' structure member permissions */
 231:Drivers/CMSIS/Include/core_cm4.h **** #define     __OM     volatile            /*! Defines 'write only' structure member permissions */
 232:Drivers/CMSIS/Include/core_cm4.h **** #define     __IOM    volatile            /*! Defines 'read / write' structure member permissions */
 233:Drivers/CMSIS/Include/core_cm4.h **** 
 234:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group Cortex_M4 */
 235:Drivers/CMSIS/Include/core_cm4.h **** 
 236:Drivers/CMSIS/Include/core_cm4.h **** 
 237:Drivers/CMSIS/Include/core_cm4.h **** 
 238:Drivers/CMSIS/Include/core_cm4.h **** /*******************************************************************************
 239:Drivers/CMSIS/Include/core_cm4.h ****  *                 Register Abstraction
 240:Drivers/CMSIS/Include/core_cm4.h ****   Core Register contain:
 241:Drivers/CMSIS/Include/core_cm4.h ****   - Core Register
 242:Drivers/CMSIS/Include/core_cm4.h ****   - Core NVIC Register
 243:Drivers/CMSIS/Include/core_cm4.h ****   - Core SCB Register
 244:Drivers/CMSIS/Include/core_cm4.h ****   - Core SysTick Register
 245:Drivers/CMSIS/Include/core_cm4.h ****   - Core Debug Register
 246:Drivers/CMSIS/Include/core_cm4.h ****   - Core MPU Register
 247:Drivers/CMSIS/Include/core_cm4.h ****   - Core FPU Register
 248:Drivers/CMSIS/Include/core_cm4.h ****  ******************************************************************************/
 249:Drivers/CMSIS/Include/core_cm4.h **** /**
 250:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_core_register Defines and Type Definitions
 251:Drivers/CMSIS/Include/core_cm4.h ****   \brief Type definitions and defines for Cortex-M processor based devices.
 252:Drivers/CMSIS/Include/core_cm4.h **** */
 253:Drivers/CMSIS/Include/core_cm4.h **** 
 254:Drivers/CMSIS/Include/core_cm4.h **** /**
 255:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup    CMSIS_core_register
 256:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup   CMSIS_CORE  Status and Control Registers
 257:Drivers/CMSIS/Include/core_cm4.h ****   \brief      Core Register type definitions.
 258:Drivers/CMSIS/Include/core_cm4.h ****   @{
ARM GAS  /tmp/ccEpMq7M.s 			page 6


 259:Drivers/CMSIS/Include/core_cm4.h ****  */
 260:Drivers/CMSIS/Include/core_cm4.h **** 
 261:Drivers/CMSIS/Include/core_cm4.h **** /**
 262:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Union type to access the Application Program Status Register (APSR).
 263:Drivers/CMSIS/Include/core_cm4.h ****  */
 264:Drivers/CMSIS/Include/core_cm4.h **** typedef union
 265:Drivers/CMSIS/Include/core_cm4.h **** {
 266:Drivers/CMSIS/Include/core_cm4.h ****   struct
 267:Drivers/CMSIS/Include/core_cm4.h ****   {
 268:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved0:16;              /*!< bit:  0..15  Reserved */
 269:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 270:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved1:7;               /*!< bit: 20..26  Reserved */
 271:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 272:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 273:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 274:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 275:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 276:Drivers/CMSIS/Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 277:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 278:Drivers/CMSIS/Include/core_cm4.h **** } APSR_Type;
 279:Drivers/CMSIS/Include/core_cm4.h **** 
 280:Drivers/CMSIS/Include/core_cm4.h **** /* APSR Register Definitions */
 281:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_N_Pos                         31U                                            /*!< APSR
 282:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_N_Msk                         (1UL << APSR_N_Pos)                            /*!< APSR
 283:Drivers/CMSIS/Include/core_cm4.h **** 
 284:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_Z_Pos                         30U                                            /*!< APSR
 285:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_Z_Msk                         (1UL << APSR_Z_Pos)                            /*!< APSR
 286:Drivers/CMSIS/Include/core_cm4.h **** 
 287:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_C_Pos                         29U                                            /*!< APSR
 288:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_C_Msk                         (1UL << APSR_C_Pos)                            /*!< APSR
 289:Drivers/CMSIS/Include/core_cm4.h **** 
 290:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_V_Pos                         28U                                            /*!< APSR
 291:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_V_Msk                         (1UL << APSR_V_Pos)                            /*!< APSR
 292:Drivers/CMSIS/Include/core_cm4.h **** 
 293:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_Q_Pos                         27U                                            /*!< APSR
 294:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_Q_Msk                         (1UL << APSR_Q_Pos)                            /*!< APSR
 295:Drivers/CMSIS/Include/core_cm4.h **** 
 296:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_GE_Pos                        16U                                            /*!< APSR
 297:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_GE_Msk                        (0xFUL << APSR_GE_Pos)                         /*!< APSR
 298:Drivers/CMSIS/Include/core_cm4.h **** 
 299:Drivers/CMSIS/Include/core_cm4.h **** 
 300:Drivers/CMSIS/Include/core_cm4.h **** /**
 301:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Union type to access the Interrupt Program Status Register (IPSR).
 302:Drivers/CMSIS/Include/core_cm4.h ****  */
 303:Drivers/CMSIS/Include/core_cm4.h **** typedef union
 304:Drivers/CMSIS/Include/core_cm4.h **** {
 305:Drivers/CMSIS/Include/core_cm4.h ****   struct
 306:Drivers/CMSIS/Include/core_cm4.h ****   {
 307:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 308:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved */
 309:Drivers/CMSIS/Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 310:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 311:Drivers/CMSIS/Include/core_cm4.h **** } IPSR_Type;
 312:Drivers/CMSIS/Include/core_cm4.h **** 
 313:Drivers/CMSIS/Include/core_cm4.h **** /* IPSR Register Definitions */
 314:Drivers/CMSIS/Include/core_cm4.h **** #define IPSR_ISR_Pos                        0U                                            /*!< IPSR
 315:Drivers/CMSIS/Include/core_cm4.h **** #define IPSR_ISR_Msk                       (0x1FFUL /*<< IPSR_ISR_Pos*/)                  /*!< IPSR
ARM GAS  /tmp/ccEpMq7M.s 			page 7


 316:Drivers/CMSIS/Include/core_cm4.h **** 
 317:Drivers/CMSIS/Include/core_cm4.h **** 
 318:Drivers/CMSIS/Include/core_cm4.h **** /**
 319:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 320:Drivers/CMSIS/Include/core_cm4.h ****  */
 321:Drivers/CMSIS/Include/core_cm4.h **** typedef union
 322:Drivers/CMSIS/Include/core_cm4.h **** {
 323:Drivers/CMSIS/Include/core_cm4.h ****   struct
 324:Drivers/CMSIS/Include/core_cm4.h ****   {
 325:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 326:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved0:1;               /*!< bit:      9  Reserved */
 327:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t ICI_IT_1:6;                 /*!< bit: 10..15  ICI/IT part 1 */
 328:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 329:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved1:4;               /*!< bit: 20..23  Reserved */
 330:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit */
 331:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t ICI_IT_2:2;                 /*!< bit: 25..26  ICI/IT part 2 */
 332:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 333:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 334:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 335:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 336:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 337:Drivers/CMSIS/Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 338:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 339:Drivers/CMSIS/Include/core_cm4.h **** } xPSR_Type;
 340:Drivers/CMSIS/Include/core_cm4.h **** 
 341:Drivers/CMSIS/Include/core_cm4.h **** /* xPSR Register Definitions */
 342:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_N_Pos                         31U                                            /*!< xPSR
 343:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_N_Msk                         (1UL << xPSR_N_Pos)                            /*!< xPSR
 344:Drivers/CMSIS/Include/core_cm4.h **** 
 345:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_Z_Pos                         30U                                            /*!< xPSR
 346:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_Z_Msk                         (1UL << xPSR_Z_Pos)                            /*!< xPSR
 347:Drivers/CMSIS/Include/core_cm4.h **** 
 348:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_C_Pos                         29U                                            /*!< xPSR
 349:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_C_Msk                         (1UL << xPSR_C_Pos)                            /*!< xPSR
 350:Drivers/CMSIS/Include/core_cm4.h **** 
 351:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_V_Pos                         28U                                            /*!< xPSR
 352:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_V_Msk                         (1UL << xPSR_V_Pos)                            /*!< xPSR
 353:Drivers/CMSIS/Include/core_cm4.h **** 
 354:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_Q_Pos                         27U                                            /*!< xPSR
 355:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_Q_Msk                         (1UL << xPSR_Q_Pos)                            /*!< xPSR
 356:Drivers/CMSIS/Include/core_cm4.h **** 
 357:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_ICI_IT_2_Pos                  25U                                            /*!< xPSR
 358:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_ICI_IT_2_Msk                  (3UL << xPSR_ICI_IT_2_Pos)                     /*!< xPSR
 359:Drivers/CMSIS/Include/core_cm4.h **** 
 360:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_T_Pos                         24U                                            /*!< xPSR
 361:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_T_Msk                         (1UL << xPSR_T_Pos)                            /*!< xPSR
 362:Drivers/CMSIS/Include/core_cm4.h **** 
 363:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_GE_Pos                        16U                                            /*!< xPSR
 364:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_GE_Msk                        (0xFUL << xPSR_GE_Pos)                         /*!< xPSR
 365:Drivers/CMSIS/Include/core_cm4.h **** 
 366:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_ICI_IT_1_Pos                  10U                                            /*!< xPSR
 367:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_ICI_IT_1_Msk                  (0x3FUL << xPSR_ICI_IT_1_Pos)                  /*!< xPSR
 368:Drivers/CMSIS/Include/core_cm4.h **** 
 369:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_ISR_Pos                        0U                                            /*!< xPSR
 370:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_ISR_Msk                       (0x1FFUL /*<< xPSR_ISR_Pos*/)                  /*!< xPSR
 371:Drivers/CMSIS/Include/core_cm4.h **** 
 372:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/ccEpMq7M.s 			page 8


 373:Drivers/CMSIS/Include/core_cm4.h **** /**
 374:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Union type to access the Control Registers (CONTROL).
 375:Drivers/CMSIS/Include/core_cm4.h ****  */
 376:Drivers/CMSIS/Include/core_cm4.h **** typedef union
 377:Drivers/CMSIS/Include/core_cm4.h **** {
 378:Drivers/CMSIS/Include/core_cm4.h ****   struct
 379:Drivers/CMSIS/Include/core_cm4.h ****   {
 380:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t nPRIV:1;                    /*!< bit:      0  Execution privilege in Thread mode */
 381:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used */
 382:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t FPCA:1;                     /*!< bit:      2  FP extension active flag */
 383:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved0:29;              /*!< bit:  3..31  Reserved */
 384:Drivers/CMSIS/Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 385:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 386:Drivers/CMSIS/Include/core_cm4.h **** } CONTROL_Type;
 387:Drivers/CMSIS/Include/core_cm4.h **** 
 388:Drivers/CMSIS/Include/core_cm4.h **** /* CONTROL Register Definitions */
 389:Drivers/CMSIS/Include/core_cm4.h **** #define CONTROL_FPCA_Pos                    2U                                            /*!< CONT
 390:Drivers/CMSIS/Include/core_cm4.h **** #define CONTROL_FPCA_Msk                   (1UL << CONTROL_FPCA_Pos)                      /*!< CONT
 391:Drivers/CMSIS/Include/core_cm4.h **** 
 392:Drivers/CMSIS/Include/core_cm4.h **** #define CONTROL_SPSEL_Pos                   1U                                            /*!< CONT
 393:Drivers/CMSIS/Include/core_cm4.h **** #define CONTROL_SPSEL_Msk                  (1UL << CONTROL_SPSEL_Pos)                     /*!< CONT
 394:Drivers/CMSIS/Include/core_cm4.h **** 
 395:Drivers/CMSIS/Include/core_cm4.h **** #define CONTROL_nPRIV_Pos                   0U                                            /*!< CONT
 396:Drivers/CMSIS/Include/core_cm4.h **** #define CONTROL_nPRIV_Msk                  (1UL /*<< CONTROL_nPRIV_Pos*/)                 /*!< CONT
 397:Drivers/CMSIS/Include/core_cm4.h **** 
 398:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_CORE */
 399:Drivers/CMSIS/Include/core_cm4.h **** 
 400:Drivers/CMSIS/Include/core_cm4.h **** 
 401:Drivers/CMSIS/Include/core_cm4.h **** /**
 402:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup    CMSIS_core_register
 403:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 404:Drivers/CMSIS/Include/core_cm4.h ****   \brief      Type definitions for the NVIC Registers
 405:Drivers/CMSIS/Include/core_cm4.h ****   @{
 406:Drivers/CMSIS/Include/core_cm4.h ****  */
 407:Drivers/CMSIS/Include/core_cm4.h **** 
 408:Drivers/CMSIS/Include/core_cm4.h **** /**
 409:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 410:Drivers/CMSIS/Include/core_cm4.h ****  */
 411:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
 412:Drivers/CMSIS/Include/core_cm4.h **** {
 413:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ISER[8U];               /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register */
 414:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[24U];
 415:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ICER[8U];               /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 416:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED1[24U];
 417:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ISPR[8U];               /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register *
 418:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED2[24U];
 419:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ICPR[8U];               /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 420:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED3[24U];
 421:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t IABR[8U];               /*!< Offset: 0x200 (R/W)  Interrupt Active bit Register */
 422:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED4[56U];
 423:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint8_t  IP[240U];               /*!< Offset: 0x300 (R/W)  Interrupt Priority Register (8Bi
 424:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED5[644U];
 425:Drivers/CMSIS/Include/core_cm4.h ****   __OM  uint32_t STIR;                   /*!< Offset: 0xE00 ( /W)  Software Trigger Interrupt Regis
 426:Drivers/CMSIS/Include/core_cm4.h **** }  NVIC_Type;
 427:Drivers/CMSIS/Include/core_cm4.h **** 
 428:Drivers/CMSIS/Include/core_cm4.h **** /* Software Triggered Interrupt Register Definitions */
 429:Drivers/CMSIS/Include/core_cm4.h **** #define NVIC_STIR_INTID_Pos                 0U                                         /*!< STIR: I
ARM GAS  /tmp/ccEpMq7M.s 			page 9


 430:Drivers/CMSIS/Include/core_cm4.h **** #define NVIC_STIR_INTID_Msk                (0x1FFUL /*<< NVIC_STIR_INTID_Pos*/)        /*!< STIR: I
 431:Drivers/CMSIS/Include/core_cm4.h **** 
 432:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_NVIC */
 433:Drivers/CMSIS/Include/core_cm4.h **** 
 434:Drivers/CMSIS/Include/core_cm4.h **** 
 435:Drivers/CMSIS/Include/core_cm4.h **** /**
 436:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 437:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_SCB     System Control Block (SCB)
 438:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the System Control Block Registers
 439:Drivers/CMSIS/Include/core_cm4.h ****   @{
 440:Drivers/CMSIS/Include/core_cm4.h ****  */
 441:Drivers/CMSIS/Include/core_cm4.h **** 
 442:Drivers/CMSIS/Include/core_cm4.h **** /**
 443:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the System Control Block (SCB).
 444:Drivers/CMSIS/Include/core_cm4.h ****  */
 445:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
 446:Drivers/CMSIS/Include/core_cm4.h **** {
 447:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t CPUID;                  /*!< Offset: 0x000 (R/ )  CPUID Base Register */
 448:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ICSR;                   /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 449:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t VTOR;                   /*!< Offset: 0x008 (R/W)  Vector Table Offset Register */
 450:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t AIRCR;                  /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 451:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t SCR;                    /*!< Offset: 0x010 (R/W)  System Control Register */
 452:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CCR;                    /*!< Offset: 0x014 (R/W)  Configuration Control Register *
 453:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint8_t  SHP[12U];               /*!< Offset: 0x018 (R/W)  System Handlers Priority Registe
 454:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t SHCSR;                  /*!< Offset: 0x024 (R/W)  System Handler Control and State
 455:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CFSR;                   /*!< Offset: 0x028 (R/W)  Configurable Fault Status Regist
 456:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t HFSR;                   /*!< Offset: 0x02C (R/W)  HardFault Status Register */
 457:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t DFSR;                   /*!< Offset: 0x030 (R/W)  Debug Fault Status Register */
 458:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t MMFAR;                  /*!< Offset: 0x034 (R/W)  MemManage Fault Address Register
 459:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t BFAR;                   /*!< Offset: 0x038 (R/W)  BusFault Address Register */
 460:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t AFSR;                   /*!< Offset: 0x03C (R/W)  Auxiliary Fault Status Register 
 461:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PFR[2U];                /*!< Offset: 0x040 (R/ )  Processor Feature Register */
 462:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t DFR;                    /*!< Offset: 0x048 (R/ )  Debug Feature Register */
 463:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t ADR;                    /*!< Offset: 0x04C (R/ )  Auxiliary Feature Register */
 464:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t MMFR[4U];               /*!< Offset: 0x050 (R/ )  Memory Model Feature Register */
 465:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t ISAR[5U];               /*!< Offset: 0x060 (R/ )  Instruction Set Attributes Regis
 466:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[5U];
 467:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CPACR;                  /*!< Offset: 0x088 (R/W)  Coprocessor Access Control Regis
 468:Drivers/CMSIS/Include/core_cm4.h **** } SCB_Type;
 469:Drivers/CMSIS/Include/core_cm4.h **** 
 470:Drivers/CMSIS/Include/core_cm4.h **** /* SCB CPUID Register Definitions */
 471:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24U                                            /*!< SCB 
 472:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 473:Drivers/CMSIS/Include/core_cm4.h **** 
 474:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_VARIANT_Pos              20U                                            /*!< SCB 
 475:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 476:Drivers/CMSIS/Include/core_cm4.h **** 
 477:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16U                                            /*!< SCB 
 478:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 479:Drivers/CMSIS/Include/core_cm4.h **** 
 480:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_PARTNO_Pos                4U                                            /*!< SCB 
 481:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 482:Drivers/CMSIS/Include/core_cm4.h **** 
 483:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_REVISION_Pos              0U                                            /*!< SCB 
 484:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL /*<< SCB_CPUID_REVISION_Pos*/)          /*!< SCB 
 485:Drivers/CMSIS/Include/core_cm4.h **** 
 486:Drivers/CMSIS/Include/core_cm4.h **** /* SCB Interrupt Control State Register Definitions */
ARM GAS  /tmp/ccEpMq7M.s 			page 10


 487:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Pos            31U                                            /*!< SCB 
 488:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 489:Drivers/CMSIS/Include/core_cm4.h **** 
 490:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSVSET_Pos             28U                                            /*!< SCB 
 491:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 492:Drivers/CMSIS/Include/core_cm4.h **** 
 493:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Pos             27U                                            /*!< SCB 
 494:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 495:Drivers/CMSIS/Include/core_cm4.h **** 
 496:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSTSET_Pos             26U                                            /*!< SCB 
 497:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 498:Drivers/CMSIS/Include/core_cm4.h **** 
 499:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Pos             25U                                            /*!< SCB 
 500:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 501:Drivers/CMSIS/Include/core_cm4.h **** 
 502:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23U                                            /*!< SCB 
 503:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 504:Drivers/CMSIS/Include/core_cm4.h **** 
 505:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_ISRPENDING_Pos            22U                                            /*!< SCB 
 506:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 507:Drivers/CMSIS/Include/core_cm4.h **** 
 508:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_VECTPENDING_Pos           12U                                            /*!< SCB 
 509:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 510:Drivers/CMSIS/Include/core_cm4.h **** 
 511:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_RETTOBASE_Pos             11U                                            /*!< SCB 
 512:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_RETTOBASE_Msk             (1UL << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 513:Drivers/CMSIS/Include/core_cm4.h **** 
 514:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Pos             0U                                            /*!< SCB 
 515:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL /*<< SCB_ICSR_VECTACTIVE_Pos*/)       /*!< SCB 
 516:Drivers/CMSIS/Include/core_cm4.h **** 
 517:Drivers/CMSIS/Include/core_cm4.h **** /* SCB Vector Table Offset Register Definitions */
 518:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_VTOR_TBLOFF_Pos                 7U                                            /*!< SCB 
 519:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_VTOR_TBLOFF_Msk                (0x1FFFFFFUL << SCB_VTOR_TBLOFF_Pos)           /*!< SCB 
 520:Drivers/CMSIS/Include/core_cm4.h **** 
 521:Drivers/CMSIS/Include/core_cm4.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 522:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTKEY_Pos              16U                                            /*!< SCB 
 523:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 524:Drivers/CMSIS/Include/core_cm4.h **** 
 525:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16U                                            /*!< SCB 
 526:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 527:Drivers/CMSIS/Include/core_cm4.h **** 
 528:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Pos            15U                                            /*!< SCB 
 529:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 530:Drivers/CMSIS/Include/core_cm4.h **** 
 531:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Pos              8U                                            /*!< SCB 
 532:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7UL << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 533:Drivers/CMSIS/Include/core_cm4.h **** 
 534:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2U                                            /*!< SCB 
 535:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 536:Drivers/CMSIS/Include/core_cm4.h **** 
 537:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1U                                            /*!< SCB 
 538:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 539:Drivers/CMSIS/Include/core_cm4.h **** 
 540:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTRESET_Pos             0U                                            /*!< SCB 
 541:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTRESET_Msk            (1UL /*<< SCB_AIRCR_VECTRESET_Pos*/)           /*!< SCB 
 542:Drivers/CMSIS/Include/core_cm4.h **** 
 543:Drivers/CMSIS/Include/core_cm4.h **** /* SCB System Control Register Definitions */
ARM GAS  /tmp/ccEpMq7M.s 			page 11


 544:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SEVONPEND_Pos               4U                                            /*!< SCB 
 545:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 546:Drivers/CMSIS/Include/core_cm4.h **** 
 547:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Pos               2U                                            /*!< SCB 
 548:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 549:Drivers/CMSIS/Include/core_cm4.h **** 
 550:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1U                                            /*!< SCB 
 551:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 552:Drivers/CMSIS/Include/core_cm4.h **** 
 553:Drivers/CMSIS/Include/core_cm4.h **** /* SCB Configuration Control Register Definitions */
 554:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_STKALIGN_Pos                9U                                            /*!< SCB 
 555:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 556:Drivers/CMSIS/Include/core_cm4.h **** 
 557:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Pos               8U                                            /*!< SCB 
 558:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1UL << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 559:Drivers/CMSIS/Include/core_cm4.h **** 
 560:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Pos               4U                                            /*!< SCB 
 561:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1UL << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 562:Drivers/CMSIS/Include/core_cm4.h **** 
 563:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3U                                            /*!< SCB 
 564:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 565:Drivers/CMSIS/Include/core_cm4.h **** 
 566:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_USERSETMPEND_Pos            1U                                            /*!< SCB 
 567:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_USERSETMPEND_Msk           (1UL << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 568:Drivers/CMSIS/Include/core_cm4.h **** 
 569:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0U                                            /*!< SCB 
 570:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1UL /*<< SCB_CCR_NONBASETHRDENA_Pos*/)        /*!< SCB 
 571:Drivers/CMSIS/Include/core_cm4.h **** 
 572:Drivers/CMSIS/Include/core_cm4.h **** /* SCB System Handler Control and State Register Definitions */
 573:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18U                                            /*!< SCB 
 574:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1UL << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 575:Drivers/CMSIS/Include/core_cm4.h **** 
 576:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17U                                            /*!< SCB 
 577:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1UL << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 578:Drivers/CMSIS/Include/core_cm4.h **** 
 579:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16U                                            /*!< SCB 
 580:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1UL << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 581:Drivers/CMSIS/Include/core_cm4.h **** 
 582:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15U                                            /*!< SCB 
 583:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 584:Drivers/CMSIS/Include/core_cm4.h **** 
 585:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14U                                            /*!< SCB 
 586:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1UL << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 587:Drivers/CMSIS/Include/core_cm4.h **** 
 588:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13U                                            /*!< SCB 
 589:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1UL << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 590:Drivers/CMSIS/Include/core_cm4.h **** 
 591:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12U                                            /*!< SCB 
 592:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1UL << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 593:Drivers/CMSIS/Include/core_cm4.h **** 
 594:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11U                                            /*!< SCB 
 595:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1UL << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 596:Drivers/CMSIS/Include/core_cm4.h **** 
 597:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Pos            10U                                            /*!< SCB 
 598:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1UL << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 599:Drivers/CMSIS/Include/core_cm4.h **** 
 600:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MONITORACT_Pos            8U                                            /*!< SCB 
ARM GAS  /tmp/ccEpMq7M.s 			page 12


 601:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MONITORACT_Msk           (1UL << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 602:Drivers/CMSIS/Include/core_cm4.h **** 
 603:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Pos             7U                                            /*!< SCB 
 604:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1UL << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 605:Drivers/CMSIS/Include/core_cm4.h **** 
 606:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3U                                            /*!< SCB 
 607:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1UL << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 608:Drivers/CMSIS/Include/core_cm4.h **** 
 609:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1U                                            /*!< SCB 
 610:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1UL << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 611:Drivers/CMSIS/Include/core_cm4.h **** 
 612:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0U                                            /*!< SCB 
 613:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1UL /*<< SCB_SHCSR_MEMFAULTACT_Pos*/)         /*!< SCB 
 614:Drivers/CMSIS/Include/core_cm4.h **** 
 615:Drivers/CMSIS/Include/core_cm4.h **** /* SCB Configurable Fault Status Register Definitions */
 616:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Pos            16U                                            /*!< SCB 
 617:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFUL << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 618:Drivers/CMSIS/Include/core_cm4.h **** 
 619:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8U                                            /*!< SCB 
 620:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFUL << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 621:Drivers/CMSIS/Include/core_cm4.h **** 
 622:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0U                                            /*!< SCB 
 623:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFUL /*<< SCB_CFSR_MEMFAULTSR_Pos*/)        /*!< SCB 
 624:Drivers/CMSIS/Include/core_cm4.h **** 
 625:Drivers/CMSIS/Include/core_cm4.h **** /* MemManage Fault Status Register (part of SCB Configurable Fault Status Register) */
 626:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MMARVALID_Pos             (SCB_CFSR_MEMFAULTSR_Pos + 7U)                 /*!< SCB 
 627:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MMARVALID_Msk             (1UL << SCB_CFSR_MMARVALID_Pos)                /*!< SCB 
 628:Drivers/CMSIS/Include/core_cm4.h **** 
 629:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MLSPERR_Pos               (SCB_CFSR_MEMFAULTSR_Pos + 5U)                 /*!< SCB 
 630:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MLSPERR_Msk               (1UL << SCB_CFSR_MLSPERR_Pos)                  /*!< SCB 
 631:Drivers/CMSIS/Include/core_cm4.h **** 
 632:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MSTKERR_Pos               (SCB_CFSR_MEMFAULTSR_Pos + 4U)                 /*!< SCB 
 633:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MSTKERR_Msk               (1UL << SCB_CFSR_MSTKERR_Pos)                  /*!< SCB 
 634:Drivers/CMSIS/Include/core_cm4.h **** 
 635:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MUNSTKERR_Pos             (SCB_CFSR_MEMFAULTSR_Pos + 3U)                 /*!< SCB 
 636:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MUNSTKERR_Msk             (1UL << SCB_CFSR_MUNSTKERR_Pos)                /*!< SCB 
 637:Drivers/CMSIS/Include/core_cm4.h **** 
 638:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_DACCVIOL_Pos              (SCB_CFSR_MEMFAULTSR_Pos + 1U)                 /*!< SCB 
 639:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_DACCVIOL_Msk              (1UL << SCB_CFSR_DACCVIOL_Pos)                 /*!< SCB 
 640:Drivers/CMSIS/Include/core_cm4.h **** 
 641:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_IACCVIOL_Pos              (SCB_CFSR_MEMFAULTSR_Pos + 0U)                 /*!< SCB 
 642:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_IACCVIOL_Msk              (1UL /*<< SCB_CFSR_IACCVIOL_Pos*/)             /*!< SCB 
 643:Drivers/CMSIS/Include/core_cm4.h **** 
 644:Drivers/CMSIS/Include/core_cm4.h **** /* BusFault Status Register (part of SCB Configurable Fault Status Register) */
 645:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_BFARVALID_Pos            (SCB_CFSR_BUSFAULTSR_Pos + 7U)                  /*!< SCB 
 646:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_BFARVALID_Msk            (1UL << SCB_CFSR_BFARVALID_Pos)                 /*!< SCB 
 647:Drivers/CMSIS/Include/core_cm4.h **** 
 648:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_LSPERR_Pos               (SCB_CFSR_BUSFAULTSR_Pos + 5U)                  /*!< SCB 
 649:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_LSPERR_Msk               (1UL << SCB_CFSR_LSPERR_Pos)                    /*!< SCB 
 650:Drivers/CMSIS/Include/core_cm4.h **** 
 651:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_STKERR_Pos               (SCB_CFSR_BUSFAULTSR_Pos + 4U)                  /*!< SCB 
 652:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_STKERR_Msk               (1UL << SCB_CFSR_STKERR_Pos)                    /*!< SCB 
 653:Drivers/CMSIS/Include/core_cm4.h **** 
 654:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_UNSTKERR_Pos             (SCB_CFSR_BUSFAULTSR_Pos + 3U)                  /*!< SCB 
 655:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_UNSTKERR_Msk             (1UL << SCB_CFSR_UNSTKERR_Pos)                  /*!< SCB 
 656:Drivers/CMSIS/Include/core_cm4.h **** 
 657:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_IMPRECISERR_Pos          (SCB_CFSR_BUSFAULTSR_Pos + 2U)                  /*!< SCB 
ARM GAS  /tmp/ccEpMq7M.s 			page 13


 658:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_IMPRECISERR_Msk          (1UL << SCB_CFSR_IMPRECISERR_Pos)               /*!< SCB 
 659:Drivers/CMSIS/Include/core_cm4.h **** 
 660:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_PRECISERR_Pos            (SCB_CFSR_BUSFAULTSR_Pos + 1U)                  /*!< SCB 
 661:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_PRECISERR_Msk            (1UL << SCB_CFSR_PRECISERR_Pos)                 /*!< SCB 
 662:Drivers/CMSIS/Include/core_cm4.h **** 
 663:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_IBUSERR_Pos              (SCB_CFSR_BUSFAULTSR_Pos + 0U)                  /*!< SCB 
 664:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_IBUSERR_Msk              (1UL << SCB_CFSR_IBUSERR_Pos)                   /*!< SCB 
 665:Drivers/CMSIS/Include/core_cm4.h **** 
 666:Drivers/CMSIS/Include/core_cm4.h **** /* UsageFault Status Register (part of SCB Configurable Fault Status Register) */
 667:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_DIVBYZERO_Pos            (SCB_CFSR_USGFAULTSR_Pos + 9U)                  /*!< SCB 
 668:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_DIVBYZERO_Msk            (1UL << SCB_CFSR_DIVBYZERO_Pos)                 /*!< SCB 
 669:Drivers/CMSIS/Include/core_cm4.h **** 
 670:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_UNALIGNED_Pos            (SCB_CFSR_USGFAULTSR_Pos + 8U)                  /*!< SCB 
 671:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_UNALIGNED_Msk            (1UL << SCB_CFSR_UNALIGNED_Pos)                 /*!< SCB 
 672:Drivers/CMSIS/Include/core_cm4.h **** 
 673:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_NOCP_Pos                 (SCB_CFSR_USGFAULTSR_Pos + 3U)                  /*!< SCB 
 674:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_NOCP_Msk                 (1UL << SCB_CFSR_NOCP_Pos)                      /*!< SCB 
 675:Drivers/CMSIS/Include/core_cm4.h **** 
 676:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_INVPC_Pos                (SCB_CFSR_USGFAULTSR_Pos + 2U)                  /*!< SCB 
 677:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_INVPC_Msk                (1UL << SCB_CFSR_INVPC_Pos)                     /*!< SCB 
 678:Drivers/CMSIS/Include/core_cm4.h **** 
 679:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_INVSTATE_Pos             (SCB_CFSR_USGFAULTSR_Pos + 1U)                  /*!< SCB 
 680:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_INVSTATE_Msk             (1UL << SCB_CFSR_INVSTATE_Pos)                  /*!< SCB 
 681:Drivers/CMSIS/Include/core_cm4.h **** 
 682:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_UNDEFINSTR_Pos           (SCB_CFSR_USGFAULTSR_Pos + 0U)                  /*!< SCB 
 683:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_UNDEFINSTR_Msk           (1UL << SCB_CFSR_UNDEFINSTR_Pos)                /*!< SCB 
 684:Drivers/CMSIS/Include/core_cm4.h **** 
 685:Drivers/CMSIS/Include/core_cm4.h **** /* SCB Hard Fault Status Register Definitions */
 686:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Pos              31U                                            /*!< SCB 
 687:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1UL << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 688:Drivers/CMSIS/Include/core_cm4.h **** 
 689:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_FORCED_Pos                30U                                            /*!< SCB 
 690:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_FORCED_Msk                (1UL << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 691:Drivers/CMSIS/Include/core_cm4.h **** 
 692:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_VECTTBL_Pos                1U                                            /*!< SCB 
 693:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_VECTTBL_Msk               (1UL << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 694:Drivers/CMSIS/Include/core_cm4.h **** 
 695:Drivers/CMSIS/Include/core_cm4.h **** /* SCB Debug Fault Status Register Definitions */
 696:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_EXTERNAL_Pos               4U                                            /*!< SCB 
 697:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_EXTERNAL_Msk              (1UL << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 698:Drivers/CMSIS/Include/core_cm4.h **** 
 699:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_VCATCH_Pos                 3U                                            /*!< SCB 
 700:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_VCATCH_Msk                (1UL << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 701:Drivers/CMSIS/Include/core_cm4.h **** 
 702:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_DWTTRAP_Pos                2U                                            /*!< SCB 
 703:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_DWTTRAP_Msk               (1UL << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 704:Drivers/CMSIS/Include/core_cm4.h **** 
 705:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_BKPT_Pos                   1U                                            /*!< SCB 
 706:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_BKPT_Msk                  (1UL << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 707:Drivers/CMSIS/Include/core_cm4.h **** 
 708:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_HALTED_Pos                 0U                                            /*!< SCB 
 709:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_HALTED_Msk                (1UL /*<< SCB_DFSR_HALTED_Pos*/)               /*!< SCB 
 710:Drivers/CMSIS/Include/core_cm4.h **** 
 711:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_SCB */
 712:Drivers/CMSIS/Include/core_cm4.h **** 
 713:Drivers/CMSIS/Include/core_cm4.h **** 
 714:Drivers/CMSIS/Include/core_cm4.h **** /**
ARM GAS  /tmp/ccEpMq7M.s 			page 14


 715:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 716:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_SCnSCB System Controls not in SCB (SCnSCB)
 717:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the System Control and ID Register not in the SCB
 718:Drivers/CMSIS/Include/core_cm4.h ****   @{
 719:Drivers/CMSIS/Include/core_cm4.h ****  */
 720:Drivers/CMSIS/Include/core_cm4.h **** 
 721:Drivers/CMSIS/Include/core_cm4.h **** /**
 722:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the System Control and ID Register not in the SCB.
 723:Drivers/CMSIS/Include/core_cm4.h ****  */
 724:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
 725:Drivers/CMSIS/Include/core_cm4.h **** {
 726:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[1U];
 727:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t ICTR;                   /*!< Offset: 0x004 (R/ )  Interrupt Controller Type Regist
 728:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ACTLR;                  /*!< Offset: 0x008 (R/W)  Auxiliary Control Register */
 729:Drivers/CMSIS/Include/core_cm4.h **** } SCnSCB_Type;
 730:Drivers/CMSIS/Include/core_cm4.h **** 
 731:Drivers/CMSIS/Include/core_cm4.h **** /* Interrupt Controller Type Register Definitions */
 732:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Pos         0U                                         /*!< ICTR: I
 733:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Msk        (0xFUL /*<< SCnSCB_ICTR_INTLINESNUM_Pos*/)  /*!< ICTR: I
 734:Drivers/CMSIS/Include/core_cm4.h **** 
 735:Drivers/CMSIS/Include/core_cm4.h **** /* Auxiliary Control Register Definitions */
 736:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Pos            9U                                         /*!< ACTLR: 
 737:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Msk           (1UL << SCnSCB_ACTLR_DISOOFP_Pos)           /*!< ACTLR: 
 738:Drivers/CMSIS/Include/core_cm4.h **** 
 739:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Pos            8U                                         /*!< ACTLR: 
 740:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Msk           (1UL << SCnSCB_ACTLR_DISFPCA_Pos)           /*!< ACTLR: 
 741:Drivers/CMSIS/Include/core_cm4.h **** 
 742:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Pos            2U                                         /*!< ACTLR: 
 743:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Msk           (1UL << SCnSCB_ACTLR_DISFOLD_Pos)           /*!< ACTLR: 
 744:Drivers/CMSIS/Include/core_cm4.h **** 
 745:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Pos         1U                                         /*!< ACTLR: 
 746:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Msk        (1UL << SCnSCB_ACTLR_DISDEFWBUF_Pos)        /*!< ACTLR: 
 747:Drivers/CMSIS/Include/core_cm4.h **** 
 748:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Pos         0U                                         /*!< ACTLR: 
 749:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Msk        (1UL /*<< SCnSCB_ACTLR_DISMCYCINT_Pos*/)    /*!< ACTLR: 
 750:Drivers/CMSIS/Include/core_cm4.h **** 
 751:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_SCnotSCB */
 752:Drivers/CMSIS/Include/core_cm4.h **** 
 753:Drivers/CMSIS/Include/core_cm4.h **** 
 754:Drivers/CMSIS/Include/core_cm4.h **** /**
 755:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 756:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 757:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the System Timer Registers.
 758:Drivers/CMSIS/Include/core_cm4.h ****   @{
 759:Drivers/CMSIS/Include/core_cm4.h ****  */
 760:Drivers/CMSIS/Include/core_cm4.h **** 
 761:Drivers/CMSIS/Include/core_cm4.h **** /**
 762:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the System Timer (SysTick).
 763:Drivers/CMSIS/Include/core_cm4.h ****  */
 764:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
 765:Drivers/CMSIS/Include/core_cm4.h **** {
 766:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 767:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t LOAD;                   /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register */
 768:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t VAL;                    /*!< Offset: 0x008 (R/W)  SysTick Current Value Register *
 769:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t CALIB;                  /*!< Offset: 0x00C (R/ )  SysTick Calibration Register */
 770:Drivers/CMSIS/Include/core_cm4.h **** } SysTick_Type;
 771:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/ccEpMq7M.s 			page 15


 772:Drivers/CMSIS/Include/core_cm4.h **** /* SysTick Control / Status Register Definitions */
 773:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16U                                            /*!< SysT
 774:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 775:Drivers/CMSIS/Include/core_cm4.h **** 
 776:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2U                                            /*!< SysT
 777:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 778:Drivers/CMSIS/Include/core_cm4.h **** 
 779:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_TICKINT_Pos            1U                                            /*!< SysT
 780:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 781:Drivers/CMSIS/Include/core_cm4.h **** 
 782:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_ENABLE_Pos             0U                                            /*!< SysT
 783:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL /*<< SysTick_CTRL_ENABLE_Pos*/)           /*!< SysT
 784:Drivers/CMSIS/Include/core_cm4.h **** 
 785:Drivers/CMSIS/Include/core_cm4.h **** /* SysTick Reload Register Definitions */
 786:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_LOAD_RELOAD_Pos             0U                                            /*!< SysT
 787:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL /*<< SysTick_LOAD_RELOAD_Pos*/)    /*!< SysT
 788:Drivers/CMSIS/Include/core_cm4.h **** 
 789:Drivers/CMSIS/Include/core_cm4.h **** /* SysTick Current Register Definitions */
 790:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_VAL_CURRENT_Pos             0U                                            /*!< SysT
 791:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL /*<< SysTick_VAL_CURRENT_Pos*/)    /*!< SysT
 792:Drivers/CMSIS/Include/core_cm4.h **** 
 793:Drivers/CMSIS/Include/core_cm4.h **** /* SysTick Calibration Register Definitions */
 794:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_NOREF_Pos            31U                                            /*!< SysT
 795:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 796:Drivers/CMSIS/Include/core_cm4.h **** 
 797:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_SKEW_Pos             30U                                            /*!< SysT
 798:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 799:Drivers/CMSIS/Include/core_cm4.h **** 
 800:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_TENMS_Pos             0U                                            /*!< SysT
 801:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL /*<< SysTick_CALIB_TENMS_Pos*/)    /*!< SysT
 802:Drivers/CMSIS/Include/core_cm4.h **** 
 803:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_SysTick */
 804:Drivers/CMSIS/Include/core_cm4.h **** 
 805:Drivers/CMSIS/Include/core_cm4.h **** 
 806:Drivers/CMSIS/Include/core_cm4.h **** /**
 807:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 808:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_ITM     Instrumentation Trace Macrocell (ITM)
 809:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Instrumentation Trace Macrocell (ITM)
 810:Drivers/CMSIS/Include/core_cm4.h ****   @{
 811:Drivers/CMSIS/Include/core_cm4.h ****  */
 812:Drivers/CMSIS/Include/core_cm4.h **** 
 813:Drivers/CMSIS/Include/core_cm4.h **** /**
 814:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Instrumentation Trace Macrocell Register (ITM).
 815:Drivers/CMSIS/Include/core_cm4.h ****  */
 816:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
 817:Drivers/CMSIS/Include/core_cm4.h **** {
 818:Drivers/CMSIS/Include/core_cm4.h ****   __OM  union
 819:Drivers/CMSIS/Include/core_cm4.h ****   {
 820:Drivers/CMSIS/Include/core_cm4.h ****     __OM  uint8_t    u8;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 8-bit */
 821:Drivers/CMSIS/Include/core_cm4.h ****     __OM  uint16_t   u16;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 16-bit */
 822:Drivers/CMSIS/Include/core_cm4.h ****     __OM  uint32_t   u32;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 32-bit */
 823:Drivers/CMSIS/Include/core_cm4.h ****   }  PORT [32U];                         /*!< Offset: 0x000 ( /W)  ITM Stimulus Port Registers */
 824:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[864U];
 825:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t TER;                    /*!< Offset: 0xE00 (R/W)  ITM Trace Enable Register */
 826:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED1[15U];
 827:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t TPR;                    /*!< Offset: 0xE40 (R/W)  ITM Trace Privilege Register */
 828:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED2[15U];
ARM GAS  /tmp/ccEpMq7M.s 			page 16


 829:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t TCR;                    /*!< Offset: 0xE80 (R/W)  ITM Trace Control Register */
 830:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED3[32U];
 831:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED4[43U];
 832:Drivers/CMSIS/Include/core_cm4.h ****   __OM  uint32_t LAR;                    /*!< Offset: 0xFB0 ( /W)  ITM Lock Access Register */
 833:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t LSR;                    /*!< Offset: 0xFB4 (R/ )  ITM Lock Status Register */
 834:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED5[6U];
 835:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID4;                   /*!< Offset: 0xFD0 (R/ )  ITM Peripheral Identification Re
 836:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID5;                   /*!< Offset: 0xFD4 (R/ )  ITM Peripheral Identification Re
 837:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID6;                   /*!< Offset: 0xFD8 (R/ )  ITM Peripheral Identification Re
 838:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID7;                   /*!< Offset: 0xFDC (R/ )  ITM Peripheral Identification Re
 839:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID0;                   /*!< Offset: 0xFE0 (R/ )  ITM Peripheral Identification Re
 840:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID1;                   /*!< Offset: 0xFE4 (R/ )  ITM Peripheral Identification Re
 841:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID2;                   /*!< Offset: 0xFE8 (R/ )  ITM Peripheral Identification Re
 842:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID3;                   /*!< Offset: 0xFEC (R/ )  ITM Peripheral Identification Re
 843:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t CID0;                   /*!< Offset: 0xFF0 (R/ )  ITM Component  Identification Re
 844:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t CID1;                   /*!< Offset: 0xFF4 (R/ )  ITM Component  Identification Re
 845:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t CID2;                   /*!< Offset: 0xFF8 (R/ )  ITM Component  Identification Re
 846:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t CID3;                   /*!< Offset: 0xFFC (R/ )  ITM Component  Identification Re
 847:Drivers/CMSIS/Include/core_cm4.h **** } ITM_Type;
 848:Drivers/CMSIS/Include/core_cm4.h **** 
 849:Drivers/CMSIS/Include/core_cm4.h **** /* ITM Trace Privilege Register Definitions */
 850:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TPR_PRIVMASK_Pos                0U                                            /*!< ITM 
 851:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFFFFFFFFUL /*<< ITM_TPR_PRIVMASK_Pos*/)     /*!< ITM 
 852:Drivers/CMSIS/Include/core_cm4.h **** 
 853:Drivers/CMSIS/Include/core_cm4.h **** /* ITM Trace Control Register Definitions */
 854:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_BUSY_Pos                   23U                                            /*!< ITM 
 855:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_BUSY_Msk                   (1UL << ITM_TCR_BUSY_Pos)                      /*!< ITM 
 856:Drivers/CMSIS/Include/core_cm4.h **** 
 857:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TraceBusID_Pos             16U                                            /*!< ITM 
 858:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TraceBusID_Msk             (0x7FUL << ITM_TCR_TraceBusID_Pos)             /*!< ITM 
 859:Drivers/CMSIS/Include/core_cm4.h **** 
 860:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_GTSFREQ_Pos                10U                                            /*!< ITM 
 861:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_GTSFREQ_Msk                (3UL << ITM_TCR_GTSFREQ_Pos)                   /*!< ITM 
 862:Drivers/CMSIS/Include/core_cm4.h **** 
 863:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TSPrescale_Pos              8U                                            /*!< ITM 
 864:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TSPrescale_Msk             (3UL << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
 865:Drivers/CMSIS/Include/core_cm4.h **** 
 866:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_SWOENA_Pos                  4U                                            /*!< ITM 
 867:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_SWOENA_Msk                 (1UL << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
 868:Drivers/CMSIS/Include/core_cm4.h **** 
 869:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_DWTENA_Pos                  3U                                            /*!< ITM 
 870:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_DWTENA_Msk                 (1UL << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
 871:Drivers/CMSIS/Include/core_cm4.h **** 
 872:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_SYNCENA_Pos                 2U                                            /*!< ITM 
 873:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_SYNCENA_Msk                (1UL << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
 874:Drivers/CMSIS/Include/core_cm4.h **** 
 875:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TSENA_Pos                   1U                                            /*!< ITM 
 876:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TSENA_Msk                  (1UL << ITM_TCR_TSENA_Pos)                     /*!< ITM 
 877:Drivers/CMSIS/Include/core_cm4.h **** 
 878:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_ITMENA_Pos                  0U                                            /*!< ITM 
 879:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_ITMENA_Msk                 (1UL /*<< ITM_TCR_ITMENA_Pos*/)                /*!< ITM 
 880:Drivers/CMSIS/Include/core_cm4.h **** 
 881:Drivers/CMSIS/Include/core_cm4.h **** /* ITM Lock Status Register Definitions */
 882:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_LSR_ByteAcc_Pos                 2U                                            /*!< ITM 
 883:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_LSR_ByteAcc_Msk                (1UL << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
 884:Drivers/CMSIS/Include/core_cm4.h **** 
 885:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_LSR_Access_Pos                  1U                                            /*!< ITM 
ARM GAS  /tmp/ccEpMq7M.s 			page 17


 886:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_LSR_Access_Msk                 (1UL << ITM_LSR_Access_Pos)                    /*!< ITM 
 887:Drivers/CMSIS/Include/core_cm4.h **** 
 888:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_LSR_Present_Pos                 0U                                            /*!< ITM 
 889:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_LSR_Present_Msk                (1UL /*<< ITM_LSR_Present_Pos*/)               /*!< ITM 
 890:Drivers/CMSIS/Include/core_cm4.h **** 
 891:Drivers/CMSIS/Include/core_cm4.h **** /*@}*/ /* end of group CMSIS_ITM */
 892:Drivers/CMSIS/Include/core_cm4.h **** 
 893:Drivers/CMSIS/Include/core_cm4.h **** 
 894:Drivers/CMSIS/Include/core_cm4.h **** /**
 895:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 896:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_DWT     Data Watchpoint and Trace (DWT)
 897:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Data Watchpoint and Trace (DWT)
 898:Drivers/CMSIS/Include/core_cm4.h ****   @{
 899:Drivers/CMSIS/Include/core_cm4.h ****  */
 900:Drivers/CMSIS/Include/core_cm4.h **** 
 901:Drivers/CMSIS/Include/core_cm4.h **** /**
 902:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Data Watchpoint and Trace Register (DWT).
 903:Drivers/CMSIS/Include/core_cm4.h ****  */
 904:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
 905:Drivers/CMSIS/Include/core_cm4.h **** {
 906:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  Control Register */
 907:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CYCCNT;                 /*!< Offset: 0x004 (R/W)  Cycle Count Register */
 908:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CPICNT;                 /*!< Offset: 0x008 (R/W)  CPI Count Register */
 909:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t EXCCNT;                 /*!< Offset: 0x00C (R/W)  Exception Overhead Count Registe
 910:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t SLEEPCNT;               /*!< Offset: 0x010 (R/W)  Sleep Count Register */
 911:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t LSUCNT;                 /*!< Offset: 0x014 (R/W)  LSU Count Register */
 912:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FOLDCNT;                /*!< Offset: 0x018 (R/W)  Folded-instruction Count Registe
 913:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PCSR;                   /*!< Offset: 0x01C (R/ )  Program Counter Sample Register 
 914:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t COMP0;                  /*!< Offset: 0x020 (R/W)  Comparator Register 0 */
 915:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t MASK0;                  /*!< Offset: 0x024 (R/W)  Mask Register 0 */
 916:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FUNCTION0;              /*!< Offset: 0x028 (R/W)  Function Register 0 */
 917:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[1U];
 918:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t COMP1;                  /*!< Offset: 0x030 (R/W)  Comparator Register 1 */
 919:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t MASK1;                  /*!< Offset: 0x034 (R/W)  Mask Register 1 */
 920:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FUNCTION1;              /*!< Offset: 0x038 (R/W)  Function Register 1 */
 921:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED1[1U];
 922:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t COMP2;                  /*!< Offset: 0x040 (R/W)  Comparator Register 2 */
 923:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t MASK2;                  /*!< Offset: 0x044 (R/W)  Mask Register 2 */
 924:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FUNCTION2;              /*!< Offset: 0x048 (R/W)  Function Register 2 */
 925:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED2[1U];
 926:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t COMP3;                  /*!< Offset: 0x050 (R/W)  Comparator Register 3 */
 927:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t MASK3;                  /*!< Offset: 0x054 (R/W)  Mask Register 3 */
 928:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FUNCTION3;              /*!< Offset: 0x058 (R/W)  Function Register 3 */
 929:Drivers/CMSIS/Include/core_cm4.h **** } DWT_Type;
 930:Drivers/CMSIS/Include/core_cm4.h **** 
 931:Drivers/CMSIS/Include/core_cm4.h **** /* DWT Control Register Definitions */
 932:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NUMCOMP_Pos               28U                                         /*!< DWT CTR
 933:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NUMCOMP_Msk               (0xFUL << DWT_CTRL_NUMCOMP_Pos)             /*!< DWT CTR
 934:Drivers/CMSIS/Include/core_cm4.h **** 
 935:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Pos              27U                                         /*!< DWT CTR
 936:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Msk              (0x1UL << DWT_CTRL_NOTRCPKT_Pos)            /*!< DWT CTR
 937:Drivers/CMSIS/Include/core_cm4.h **** 
 938:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Pos             26U                                         /*!< DWT CTR
 939:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Msk             (0x1UL << DWT_CTRL_NOEXTTRIG_Pos)           /*!< DWT CTR
 940:Drivers/CMSIS/Include/core_cm4.h **** 
 941:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Pos              25U                                         /*!< DWT CTR
 942:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Msk              (0x1UL << DWT_CTRL_NOCYCCNT_Pos)            /*!< DWT CTR
ARM GAS  /tmp/ccEpMq7M.s 			page 18


 943:Drivers/CMSIS/Include/core_cm4.h **** 
 944:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Pos              24U                                         /*!< DWT CTR
 945:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Msk              (0x1UL << DWT_CTRL_NOPRFCNT_Pos)            /*!< DWT CTR
 946:Drivers/CMSIS/Include/core_cm4.h **** 
 947:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Pos             22U                                         /*!< DWT CTR
 948:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Msk             (0x1UL << DWT_CTRL_CYCEVTENA_Pos)           /*!< DWT CTR
 949:Drivers/CMSIS/Include/core_cm4.h **** 
 950:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Pos            21U                                         /*!< DWT CTR
 951:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Msk            (0x1UL << DWT_CTRL_FOLDEVTENA_Pos)          /*!< DWT CTR
 952:Drivers/CMSIS/Include/core_cm4.h **** 
 953:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Pos             20U                                         /*!< DWT CTR
 954:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Msk             (0x1UL << DWT_CTRL_LSUEVTENA_Pos)           /*!< DWT CTR
 955:Drivers/CMSIS/Include/core_cm4.h **** 
 956:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Pos           19U                                         /*!< DWT CTR
 957:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Msk           (0x1UL << DWT_CTRL_SLEEPEVTENA_Pos)         /*!< DWT CTR
 958:Drivers/CMSIS/Include/core_cm4.h **** 
 959:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Pos             18U                                         /*!< DWT CTR
 960:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Msk             (0x1UL << DWT_CTRL_EXCEVTENA_Pos)           /*!< DWT CTR
 961:Drivers/CMSIS/Include/core_cm4.h **** 
 962:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Pos             17U                                         /*!< DWT CTR
 963:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Msk             (0x1UL << DWT_CTRL_CPIEVTENA_Pos)           /*!< DWT CTR
 964:Drivers/CMSIS/Include/core_cm4.h **** 
 965:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Pos             16U                                         /*!< DWT CTR
 966:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Msk             (0x1UL << DWT_CTRL_EXCTRCENA_Pos)           /*!< DWT CTR
 967:Drivers/CMSIS/Include/core_cm4.h **** 
 968:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Pos            12U                                         /*!< DWT CTR
 969:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Msk            (0x1UL << DWT_CTRL_PCSAMPLENA_Pos)          /*!< DWT CTR
 970:Drivers/CMSIS/Include/core_cm4.h **** 
 971:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_SYNCTAP_Pos               10U                                         /*!< DWT CTR
 972:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_SYNCTAP_Msk               (0x3UL << DWT_CTRL_SYNCTAP_Pos)             /*!< DWT CTR
 973:Drivers/CMSIS/Include/core_cm4.h **** 
 974:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCTAP_Pos                 9U                                         /*!< DWT CTR
 975:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCTAP_Msk                (0x1UL << DWT_CTRL_CYCTAP_Pos)              /*!< DWT CTR
 976:Drivers/CMSIS/Include/core_cm4.h **** 
 977:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_POSTINIT_Pos               5U                                         /*!< DWT CTR
 978:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_POSTINIT_Msk              (0xFUL << DWT_CTRL_POSTINIT_Pos)            /*!< DWT CTR
 979:Drivers/CMSIS/Include/core_cm4.h **** 
 980:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_POSTPRESET_Pos             1U                                         /*!< DWT CTR
 981:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_POSTPRESET_Msk            (0xFUL << DWT_CTRL_POSTPRESET_Pos)          /*!< DWT CTR
 982:Drivers/CMSIS/Include/core_cm4.h **** 
 983:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Pos              0U                                         /*!< DWT CTR
 984:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Msk             (0x1UL /*<< DWT_CTRL_CYCCNTENA_Pos*/)       /*!< DWT CTR
 985:Drivers/CMSIS/Include/core_cm4.h **** 
 986:Drivers/CMSIS/Include/core_cm4.h **** /* DWT CPI Count Register Definitions */
 987:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CPICNT_CPICNT_Pos               0U                                         /*!< DWT CPI
 988:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CPICNT_CPICNT_Msk              (0xFFUL /*<< DWT_CPICNT_CPICNT_Pos*/)       /*!< DWT CPI
 989:Drivers/CMSIS/Include/core_cm4.h **** 
 990:Drivers/CMSIS/Include/core_cm4.h **** /* DWT Exception Overhead Count Register Definitions */
 991:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Pos               0U                                         /*!< DWT EXC
 992:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Msk              (0xFFUL /*<< DWT_EXCCNT_EXCCNT_Pos*/)       /*!< DWT EXC
 993:Drivers/CMSIS/Include/core_cm4.h **** 
 994:Drivers/CMSIS/Include/core_cm4.h **** /* DWT Sleep Count Register Definitions */
 995:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Pos           0U                                         /*!< DWT SLE
 996:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Msk          (0xFFUL /*<< DWT_SLEEPCNT_SLEEPCNT_Pos*/)   /*!< DWT SLE
 997:Drivers/CMSIS/Include/core_cm4.h **** 
 998:Drivers/CMSIS/Include/core_cm4.h **** /* DWT LSU Count Register Definitions */
 999:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Pos               0U                                         /*!< DWT LSU
ARM GAS  /tmp/ccEpMq7M.s 			page 19


1000:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Msk              (0xFFUL /*<< DWT_LSUCNT_LSUCNT_Pos*/)       /*!< DWT LSU
1001:Drivers/CMSIS/Include/core_cm4.h **** 
1002:Drivers/CMSIS/Include/core_cm4.h **** /* DWT Folded-instruction Count Register Definitions */
1003:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Pos             0U                                         /*!< DWT FOL
1004:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Msk            (0xFFUL /*<< DWT_FOLDCNT_FOLDCNT_Pos*/)     /*!< DWT FOL
1005:Drivers/CMSIS/Include/core_cm4.h **** 
1006:Drivers/CMSIS/Include/core_cm4.h **** /* DWT Comparator Mask Register Definitions */
1007:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_MASK_MASK_Pos                   0U                                         /*!< DWT MAS
1008:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_MASK_MASK_Msk                  (0x1FUL /*<< DWT_MASK_MASK_Pos*/)           /*!< DWT MAS
1009:Drivers/CMSIS/Include/core_cm4.h **** 
1010:Drivers/CMSIS/Include/core_cm4.h **** /* DWT Comparator Function Register Definitions */
1011:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_MATCHED_Pos           24U                                         /*!< DWT FUN
1012:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_MATCHED_Msk           (0x1UL << DWT_FUNCTION_MATCHED_Pos)         /*!< DWT FUN
1013:Drivers/CMSIS/Include/core_cm4.h **** 
1014:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Pos        16U                                         /*!< DWT FUN
1015:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR1_Pos)      /*!< DWT FUN
1016:Drivers/CMSIS/Include/core_cm4.h **** 
1017:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Pos        12U                                         /*!< DWT FUN
1018:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR0_Pos)      /*!< DWT FUN
1019:Drivers/CMSIS/Include/core_cm4.h **** 
1020:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Pos         10U                                         /*!< DWT FUN
1021:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Msk         (0x3UL << DWT_FUNCTION_DATAVSIZE_Pos)       /*!< DWT FUN
1022:Drivers/CMSIS/Include/core_cm4.h **** 
1023:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Pos            9U                                         /*!< DWT FUN
1024:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Msk           (0x1UL << DWT_FUNCTION_LNK1ENA_Pos)         /*!< DWT FUN
1025:Drivers/CMSIS/Include/core_cm4.h **** 
1026:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Pos         8U                                         /*!< DWT FUN
1027:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Msk        (0x1UL << DWT_FUNCTION_DATAVMATCH_Pos)      /*!< DWT FUN
1028:Drivers/CMSIS/Include/core_cm4.h **** 
1029:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Pos           7U                                         /*!< DWT FUN
1030:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Msk          (0x1UL << DWT_FUNCTION_CYCMATCH_Pos)        /*!< DWT FUN
1031:Drivers/CMSIS/Include/core_cm4.h **** 
1032:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Pos          5U                                         /*!< DWT FUN
1033:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Msk         (0x1UL << DWT_FUNCTION_EMITRANGE_Pos)       /*!< DWT FUN
1034:Drivers/CMSIS/Include/core_cm4.h **** 
1035:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Pos           0U                                         /*!< DWT FUN
1036:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Msk          (0xFUL /*<< DWT_FUNCTION_FUNCTION_Pos*/)    /*!< DWT FUN
1037:Drivers/CMSIS/Include/core_cm4.h **** 
1038:Drivers/CMSIS/Include/core_cm4.h **** /*@}*/ /* end of group CMSIS_DWT */
1039:Drivers/CMSIS/Include/core_cm4.h **** 
1040:Drivers/CMSIS/Include/core_cm4.h **** 
1041:Drivers/CMSIS/Include/core_cm4.h **** /**
1042:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
1043:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_TPI     Trace Port Interface (TPI)
1044:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Trace Port Interface (TPI)
1045:Drivers/CMSIS/Include/core_cm4.h ****   @{
1046:Drivers/CMSIS/Include/core_cm4.h ****  */
1047:Drivers/CMSIS/Include/core_cm4.h **** 
1048:Drivers/CMSIS/Include/core_cm4.h **** /**
1049:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Trace Port Interface Register (TPI).
1050:Drivers/CMSIS/Include/core_cm4.h ****  */
1051:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
1052:Drivers/CMSIS/Include/core_cm4.h **** {
1053:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t SSPSR;                  /*!< Offset: 0x000 (R/ )  Supported Parallel Port Size Reg
1054:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CSPSR;                  /*!< Offset: 0x004 (R/W)  Current Parallel Port Size Regis
1055:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[2U];
1056:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ACPR;                   /*!< Offset: 0x010 (R/W)  Asynchronous Clock Prescaler Reg
ARM GAS  /tmp/ccEpMq7M.s 			page 20


1057:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED1[55U];
1058:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t SPPR;                   /*!< Offset: 0x0F0 (R/W)  Selected Pin Protocol Register *
1059:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED2[131U];
1060:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t FFSR;                   /*!< Offset: 0x300 (R/ )  Formatter and Flush Status Regis
1061:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FFCR;                   /*!< Offset: 0x304 (R/W)  Formatter and Flush Control Regi
1062:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t FSCR;                   /*!< Offset: 0x308 (R/ )  Formatter Synchronization Counte
1063:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED3[759U];
1064:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t TRIGGER;                /*!< Offset: 0xEE8 (R/ )  TRIGGER Register */
1065:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t FIFO0;                  /*!< Offset: 0xEEC (R/ )  Integration ETM Data */
1066:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t ITATBCTR2;              /*!< Offset: 0xEF0 (R/ )  ITATBCTR2 */
1067:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED4[1U];
1068:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t ITATBCTR0;              /*!< Offset: 0xEF8 (R/ )  ITATBCTR0 */
1069:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t FIFO1;                  /*!< Offset: 0xEFC (R/ )  Integration ITM Data */
1070:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ITCTRL;                 /*!< Offset: 0xF00 (R/W)  Integration Mode Control */
1071:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED5[39U];
1072:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CLAIMSET;               /*!< Offset: 0xFA0 (R/W)  Claim tag set */
1073:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CLAIMCLR;               /*!< Offset: 0xFA4 (R/W)  Claim tag clear */
1074:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED7[8U];
1075:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t DEVID;                  /*!< Offset: 0xFC8 (R/ )  TPIU_DEVID */
1076:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t DEVTYPE;                /*!< Offset: 0xFCC (R/ )  TPIU_DEVTYPE */
1077:Drivers/CMSIS/Include/core_cm4.h **** } TPI_Type;
1078:Drivers/CMSIS/Include/core_cm4.h **** 
1079:Drivers/CMSIS/Include/core_cm4.h **** /* TPI Asynchronous Clock Prescaler Register Definitions */
1080:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ACPR_PRESCALER_Pos              0U                                         /*!< TPI ACP
1081:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ACPR_PRESCALER_Msk             (0x1FFFUL /*<< TPI_ACPR_PRESCALER_Pos*/)    /*!< TPI ACP
1082:Drivers/CMSIS/Include/core_cm4.h **** 
1083:Drivers/CMSIS/Include/core_cm4.h **** /* TPI Selected Pin Protocol Register Definitions */
1084:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_SPPR_TXMODE_Pos                 0U                                         /*!< TPI SPP
1085:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_SPPR_TXMODE_Msk                (0x3UL /*<< TPI_SPPR_TXMODE_Pos*/)          /*!< TPI SPP
1086:Drivers/CMSIS/Include/core_cm4.h **** 
1087:Drivers/CMSIS/Include/core_cm4.h **** /* TPI Formatter and Flush Status Register Definitions */
1088:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FtNonStop_Pos              3U                                         /*!< TPI FFS
1089:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FtNonStop_Msk             (0x1UL << TPI_FFSR_FtNonStop_Pos)           /*!< TPI FFS
1090:Drivers/CMSIS/Include/core_cm4.h **** 
1091:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_TCPresent_Pos              2U                                         /*!< TPI FFS
1092:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_TCPresent_Msk             (0x1UL << TPI_FFSR_TCPresent_Pos)           /*!< TPI FFS
1093:Drivers/CMSIS/Include/core_cm4.h **** 
1094:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FtStopped_Pos              1U                                         /*!< TPI FFS
1095:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FtStopped_Msk             (0x1UL << TPI_FFSR_FtStopped_Pos)           /*!< TPI FFS
1096:Drivers/CMSIS/Include/core_cm4.h **** 
1097:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FlInProg_Pos               0U                                         /*!< TPI FFS
1098:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FlInProg_Msk              (0x1UL /*<< TPI_FFSR_FlInProg_Pos*/)        /*!< TPI FFS
1099:Drivers/CMSIS/Include/core_cm4.h **** 
1100:Drivers/CMSIS/Include/core_cm4.h **** /* TPI Formatter and Flush Control Register Definitions */
1101:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFCR_TrigIn_Pos                 8U                                         /*!< TPI FFC
1102:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFCR_TrigIn_Msk                (0x1UL << TPI_FFCR_TrigIn_Pos)              /*!< TPI FFC
1103:Drivers/CMSIS/Include/core_cm4.h **** 
1104:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFCR_EnFCont_Pos                1U                                         /*!< TPI FFC
1105:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFCR_EnFCont_Msk               (0x1UL << TPI_FFCR_EnFCont_Pos)             /*!< TPI FFC
1106:Drivers/CMSIS/Include/core_cm4.h **** 
1107:Drivers/CMSIS/Include/core_cm4.h **** /* TPI TRIGGER Register Definitions */
1108:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Pos             0U                                         /*!< TPI TRI
1109:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Msk            (0x1UL /*<< TPI_TRIGGER_TRIGGER_Pos*/)      /*!< TPI TRI
1110:Drivers/CMSIS/Include/core_cm4.h **** 
1111:Drivers/CMSIS/Include/core_cm4.h **** /* TPI Integration ETM Data Register Definitions (FIFO0) */
1112:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1113:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Msk          (0x1UL << TPI_FIFO0_ITM_ATVALID_Pos)        /*!< TPI FIF
ARM GAS  /tmp/ccEpMq7M.s 			page 21


1114:Drivers/CMSIS/Include/core_cm4.h **** 
1115:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1116:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Msk        (0x3UL << TPI_FIFO0_ITM_bytecount_Pos)      /*!< TPI FIF
1117:Drivers/CMSIS/Include/core_cm4.h **** 
1118:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1119:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Msk          (0x1UL << TPI_FIFO0_ETM_ATVALID_Pos)        /*!< TPI FIF
1120:Drivers/CMSIS/Include/core_cm4.h **** 
1121:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1122:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Msk        (0x3UL << TPI_FIFO0_ETM_bytecount_Pos)      /*!< TPI FIF
1123:Drivers/CMSIS/Include/core_cm4.h **** 
1124:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM2_Pos                 16U                                         /*!< TPI FIF
1125:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM2_Msk                 (0xFFUL << TPI_FIFO0_ETM2_Pos)              /*!< TPI FIF
1126:Drivers/CMSIS/Include/core_cm4.h **** 
1127:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM1_Pos                  8U                                         /*!< TPI FIF
1128:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM1_Msk                 (0xFFUL << TPI_FIFO0_ETM1_Pos)              /*!< TPI FIF
1129:Drivers/CMSIS/Include/core_cm4.h **** 
1130:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM0_Pos                  0U                                         /*!< TPI FIF
1131:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM0_Msk                 (0xFFUL /*<< TPI_FIFO0_ETM0_Pos*/)          /*!< TPI FIF
1132:Drivers/CMSIS/Include/core_cm4.h **** 
1133:Drivers/CMSIS/Include/core_cm4.h **** /* TPI ITATBCTR2 Register Definitions */
1134:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY2_Pos          0U                                         /*!< TPI ITA
1135:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY2_Msk         (0x1UL /*<< TPI_ITATBCTR2_ATREADY2_Pos*/)   /*!< TPI ITA
1136:Drivers/CMSIS/Include/core_cm4.h **** 
1137:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY1_Pos          0U                                         /*!< TPI ITA
1138:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY1_Msk         (0x1UL /*<< TPI_ITATBCTR2_ATREADY1_Pos*/)   /*!< TPI ITA
1139:Drivers/CMSIS/Include/core_cm4.h **** 
1140:Drivers/CMSIS/Include/core_cm4.h **** /* TPI Integration ITM Data Register Definitions (FIFO1) */
1141:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1142:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Msk          (0x1UL << TPI_FIFO1_ITM_ATVALID_Pos)        /*!< TPI FIF
1143:Drivers/CMSIS/Include/core_cm4.h **** 
1144:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1145:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Msk        (0x3UL << TPI_FIFO1_ITM_bytecount_Pos)      /*!< TPI FIF
1146:Drivers/CMSIS/Include/core_cm4.h **** 
1147:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1148:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Msk          (0x1UL << TPI_FIFO1_ETM_ATVALID_Pos)        /*!< TPI FIF
1149:Drivers/CMSIS/Include/core_cm4.h **** 
1150:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1151:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Msk        (0x3UL << TPI_FIFO1_ETM_bytecount_Pos)      /*!< TPI FIF
1152:Drivers/CMSIS/Include/core_cm4.h **** 
1153:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM2_Pos                 16U                                         /*!< TPI FIF
1154:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM2_Msk                 (0xFFUL << TPI_FIFO1_ITM2_Pos)              /*!< TPI FIF
1155:Drivers/CMSIS/Include/core_cm4.h **** 
1156:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM1_Pos                  8U                                         /*!< TPI FIF
1157:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM1_Msk                 (0xFFUL << TPI_FIFO1_ITM1_Pos)              /*!< TPI FIF
1158:Drivers/CMSIS/Include/core_cm4.h **** 
1159:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM0_Pos                  0U                                         /*!< TPI FIF
1160:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM0_Msk                 (0xFFUL /*<< TPI_FIFO1_ITM0_Pos*/)          /*!< TPI FIF
1161:Drivers/CMSIS/Include/core_cm4.h **** 
1162:Drivers/CMSIS/Include/core_cm4.h **** /* TPI ITATBCTR0 Register Definitions */
1163:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY2_Pos          0U                                         /*!< TPI ITA
1164:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY2_Msk         (0x1UL /*<< TPI_ITATBCTR0_ATREADY2_Pos*/)   /*!< TPI ITA
1165:Drivers/CMSIS/Include/core_cm4.h **** 
1166:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY1_Pos          0U                                         /*!< TPI ITA
1167:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY1_Msk         (0x1UL /*<< TPI_ITATBCTR0_ATREADY1_Pos*/)   /*!< TPI ITA
1168:Drivers/CMSIS/Include/core_cm4.h **** 
1169:Drivers/CMSIS/Include/core_cm4.h **** /* TPI Integration Mode Control Register Definitions */
1170:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITCTRL_Mode_Pos                 0U                                         /*!< TPI ITC
ARM GAS  /tmp/ccEpMq7M.s 			page 22


1171:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITCTRL_Mode_Msk                (0x3UL /*<< TPI_ITCTRL_Mode_Pos*/)          /*!< TPI ITC
1172:Drivers/CMSIS/Include/core_cm4.h **** 
1173:Drivers/CMSIS/Include/core_cm4.h **** /* TPI DEVID Register Definitions */
1174:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_NRZVALID_Pos             11U                                         /*!< TPI DEV
1175:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_NRZVALID_Msk             (0x1UL << TPI_DEVID_NRZVALID_Pos)           /*!< TPI DEV
1176:Drivers/CMSIS/Include/core_cm4.h **** 
1177:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_MANCVALID_Pos            10U                                         /*!< TPI DEV
1178:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_MANCVALID_Msk            (0x1UL << TPI_DEVID_MANCVALID_Pos)          /*!< TPI DEV
1179:Drivers/CMSIS/Include/core_cm4.h **** 
1180:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_PTINVALID_Pos             9U                                         /*!< TPI DEV
1181:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_PTINVALID_Msk            (0x1UL << TPI_DEVID_PTINVALID_Pos)          /*!< TPI DEV
1182:Drivers/CMSIS/Include/core_cm4.h **** 
1183:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_MinBufSz_Pos              6U                                         /*!< TPI DEV
1184:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_MinBufSz_Msk             (0x7UL << TPI_DEVID_MinBufSz_Pos)           /*!< TPI DEV
1185:Drivers/CMSIS/Include/core_cm4.h **** 
1186:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_AsynClkIn_Pos             5U                                         /*!< TPI DEV
1187:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_AsynClkIn_Msk            (0x1UL << TPI_DEVID_AsynClkIn_Pos)          /*!< TPI DEV
1188:Drivers/CMSIS/Include/core_cm4.h **** 
1189:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_NrTraceInput_Pos          0U                                         /*!< TPI DEV
1190:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_NrTraceInput_Msk         (0x1FUL /*<< TPI_DEVID_NrTraceInput_Pos*/)  /*!< TPI DEV
1191:Drivers/CMSIS/Include/core_cm4.h **** 
1192:Drivers/CMSIS/Include/core_cm4.h **** /* TPI DEVTYPE Register Definitions */
1193:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVTYPE_SubType_Pos             4U                                         /*!< TPI DEV
1194:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVTYPE_SubType_Msk            (0xFUL /*<< TPI_DEVTYPE_SubType_Pos*/)      /*!< TPI DEV
1195:Drivers/CMSIS/Include/core_cm4.h **** 
1196:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVTYPE_MajorType_Pos           0U                                         /*!< TPI DEV
1197:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVTYPE_MajorType_Msk          (0xFUL << TPI_DEVTYPE_MajorType_Pos)        /*!< TPI DEV
1198:Drivers/CMSIS/Include/core_cm4.h **** 
1199:Drivers/CMSIS/Include/core_cm4.h **** /*@}*/ /* end of group CMSIS_TPI */
1200:Drivers/CMSIS/Include/core_cm4.h **** 
1201:Drivers/CMSIS/Include/core_cm4.h **** 
1202:Drivers/CMSIS/Include/core_cm4.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1203:Drivers/CMSIS/Include/core_cm4.h **** /**
1204:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
1205:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_MPU     Memory Protection Unit (MPU)
1206:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Memory Protection Unit (MPU)
1207:Drivers/CMSIS/Include/core_cm4.h ****   @{
1208:Drivers/CMSIS/Include/core_cm4.h ****  */
1209:Drivers/CMSIS/Include/core_cm4.h **** 
1210:Drivers/CMSIS/Include/core_cm4.h **** /**
1211:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Memory Protection Unit (MPU).
1212:Drivers/CMSIS/Include/core_cm4.h ****  */
1213:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
1214:Drivers/CMSIS/Include/core_cm4.h **** {
1215:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t TYPE;                   /*!< Offset: 0x000 (R/ )  MPU Type Register */
1216:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x004 (R/W)  MPU Control Register */
1217:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RNR;                    /*!< Offset: 0x008 (R/W)  MPU Region RNRber Register */
1218:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RBAR;                   /*!< Offset: 0x00C (R/W)  MPU Region Base Address Register
1219:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RASR;                   /*!< Offset: 0x010 (R/W)  MPU Region Attribute and Size Re
1220:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RBAR_A1;                /*!< Offset: 0x014 (R/W)  MPU Alias 1 Region Base Address 
1221:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RASR_A1;                /*!< Offset: 0x018 (R/W)  MPU Alias 1 Region Attribute and
1222:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RBAR_A2;                /*!< Offset: 0x01C (R/W)  MPU Alias 2 Region Base Address 
1223:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RASR_A2;                /*!< Offset: 0x020 (R/W)  MPU Alias 2 Region Attribute and
1224:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RBAR_A3;                /*!< Offset: 0x024 (R/W)  MPU Alias 3 Region Base Address 
1225:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RASR_A3;                /*!< Offset: 0x028 (R/W)  MPU Alias 3 Region Attribute and
1226:Drivers/CMSIS/Include/core_cm4.h **** } MPU_Type;
1227:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/ccEpMq7M.s 			page 23


1228:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_RALIASES                  4U
1229:Drivers/CMSIS/Include/core_cm4.h **** 
1230:Drivers/CMSIS/Include/core_cm4.h **** /* MPU Type Register Definitions */
1231:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_IREGION_Pos               16U                                            /*!< MPU 
1232:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_IREGION_Msk               (0xFFUL << MPU_TYPE_IREGION_Pos)               /*!< MPU 
1233:Drivers/CMSIS/Include/core_cm4.h **** 
1234:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_DREGION_Pos                8U                                            /*!< MPU 
1235:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_DREGION_Msk               (0xFFUL << MPU_TYPE_DREGION_Pos)               /*!< MPU 
1236:Drivers/CMSIS/Include/core_cm4.h **** 
1237:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_SEPARATE_Pos               0U                                            /*!< MPU 
1238:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_SEPARATE_Msk              (1UL /*<< MPU_TYPE_SEPARATE_Pos*/)             /*!< MPU 
1239:Drivers/CMSIS/Include/core_cm4.h **** 
1240:Drivers/CMSIS/Include/core_cm4.h **** /* MPU Control Register Definitions */
1241:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2U                                            /*!< MPU 
1242:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1UL << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
1243:Drivers/CMSIS/Include/core_cm4.h **** 
1244:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_HFNMIENA_Pos               1U                                            /*!< MPU 
1245:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_HFNMIENA_Msk              (1UL << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
1246:Drivers/CMSIS/Include/core_cm4.h **** 
1247:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_ENABLE_Pos                 0U                                            /*!< MPU 
1248:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_ENABLE_Msk                (1UL /*<< MPU_CTRL_ENABLE_Pos*/)               /*!< MPU 
1249:Drivers/CMSIS/Include/core_cm4.h **** 
1250:Drivers/CMSIS/Include/core_cm4.h **** /* MPU Region Number Register Definitions */
1251:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RNR_REGION_Pos                  0U                                            /*!< MPU 
1252:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RNR_REGION_Msk                 (0xFFUL /*<< MPU_RNR_REGION_Pos*/)             /*!< MPU 
1253:Drivers/CMSIS/Include/core_cm4.h **** 
1254:Drivers/CMSIS/Include/core_cm4.h **** /* MPU Region Base Address Register Definitions */
1255:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_ADDR_Pos                   5U                                            /*!< MPU 
1256:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFUL << MPU_RBAR_ADDR_Pos)             /*!< MPU 
1257:Drivers/CMSIS/Include/core_cm4.h **** 
1258:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_VALID_Pos                  4U                                            /*!< MPU 
1259:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_VALID_Msk                 (1UL << MPU_RBAR_VALID_Pos)                    /*!< MPU 
1260:Drivers/CMSIS/Include/core_cm4.h **** 
1261:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_REGION_Pos                 0U                                            /*!< MPU 
1262:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_REGION_Msk                (0xFUL /*<< MPU_RBAR_REGION_Pos*/)             /*!< MPU 
1263:Drivers/CMSIS/Include/core_cm4.h **** 
1264:Drivers/CMSIS/Include/core_cm4.h **** /* MPU Region Attribute and Size Register Definitions */
1265:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_ATTRS_Pos                 16U                                            /*!< MPU 
1266:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_ATTRS_Msk                 (0xFFFFUL << MPU_RASR_ATTRS_Pos)               /*!< MPU 
1267:Drivers/CMSIS/Include/core_cm4.h **** 
1268:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_XN_Pos                    28U                                            /*!< MPU 
1269:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_XN_Msk                    (1UL << MPU_RASR_XN_Pos)                       /*!< MPU 
1270:Drivers/CMSIS/Include/core_cm4.h **** 
1271:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_AP_Pos                    24U                                            /*!< MPU 
1272:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_AP_Msk                    (0x7UL << MPU_RASR_AP_Pos)                     /*!< MPU 
1273:Drivers/CMSIS/Include/core_cm4.h **** 
1274:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_TEX_Pos                   19U                                            /*!< MPU 
1275:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_TEX_Msk                   (0x7UL << MPU_RASR_TEX_Pos)                    /*!< MPU 
1276:Drivers/CMSIS/Include/core_cm4.h **** 
1277:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_S_Pos                     18U                                            /*!< MPU 
1278:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_S_Msk                     (1UL << MPU_RASR_S_Pos)                        /*!< MPU 
1279:Drivers/CMSIS/Include/core_cm4.h **** 
1280:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_C_Pos                     17U                                            /*!< MPU 
1281:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_C_Msk                     (1UL << MPU_RASR_C_Pos)                        /*!< MPU 
1282:Drivers/CMSIS/Include/core_cm4.h **** 
1283:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_B_Pos                     16U                                            /*!< MPU 
1284:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_B_Msk                     (1UL << MPU_RASR_B_Pos)                        /*!< MPU 
ARM GAS  /tmp/ccEpMq7M.s 			page 24


1285:Drivers/CMSIS/Include/core_cm4.h **** 
1286:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_SRD_Pos                    8U                                            /*!< MPU 
1287:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_SRD_Msk                   (0xFFUL << MPU_RASR_SRD_Pos)                   /*!< MPU 
1288:Drivers/CMSIS/Include/core_cm4.h **** 
1289:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_SIZE_Pos                   1U                                            /*!< MPU 
1290:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_SIZE_Msk                  (0x1FUL << MPU_RASR_SIZE_Pos)                  /*!< MPU 
1291:Drivers/CMSIS/Include/core_cm4.h **** 
1292:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_ENABLE_Pos                 0U                                            /*!< MPU 
1293:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_ENABLE_Msk                (1UL /*<< MPU_RASR_ENABLE_Pos*/)               /*!< MPU 
1294:Drivers/CMSIS/Include/core_cm4.h **** 
1295:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_MPU */
1296:Drivers/CMSIS/Include/core_cm4.h **** #endif /* defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U) */
1297:Drivers/CMSIS/Include/core_cm4.h **** 
1298:Drivers/CMSIS/Include/core_cm4.h **** 
1299:Drivers/CMSIS/Include/core_cm4.h **** /**
1300:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
1301:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_FPU     Floating Point Unit (FPU)
1302:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Floating Point Unit (FPU)
1303:Drivers/CMSIS/Include/core_cm4.h ****   @{
1304:Drivers/CMSIS/Include/core_cm4.h ****  */
1305:Drivers/CMSIS/Include/core_cm4.h **** 
1306:Drivers/CMSIS/Include/core_cm4.h **** /**
1307:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Floating Point Unit (FPU).
1308:Drivers/CMSIS/Include/core_cm4.h ****  */
1309:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
1310:Drivers/CMSIS/Include/core_cm4.h **** {
1311:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[1U];
1312:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FPCCR;                  /*!< Offset: 0x004 (R/W)  Floating-Point Context Control R
1313:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FPCAR;                  /*!< Offset: 0x008 (R/W)  Floating-Point Context Address R
1314:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FPDSCR;                 /*!< Offset: 0x00C (R/W)  Floating-Point Default Status Co
1315:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t MVFR0;                  /*!< Offset: 0x010 (R/ )  Media and FP Feature Register 0 
1316:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t MVFR1;                  /*!< Offset: 0x014 (R/ )  Media and FP Feature Register 1 
1317:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t MVFR2;                  /*!< Offset: 0x018 (R/ )  Media and FP Feature Register 2 
1318:Drivers/CMSIS/Include/core_cm4.h **** } FPU_Type;
1319:Drivers/CMSIS/Include/core_cm4.h **** 
1320:Drivers/CMSIS/Include/core_cm4.h **** /* Floating-Point Context Control Register Definitions */
1321:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_ASPEN_Pos                31U                                            /*!< FPCC
1322:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_ASPEN_Msk                (1UL << FPU_FPCCR_ASPEN_Pos)                   /*!< FPCC
1323:Drivers/CMSIS/Include/core_cm4.h **** 
1324:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_LSPEN_Pos                30U                                            /*!< FPCC
1325:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_LSPEN_Msk                (1UL << FPU_FPCCR_LSPEN_Pos)                   /*!< FPCC
1326:Drivers/CMSIS/Include/core_cm4.h **** 
1327:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_MONRDY_Pos                8U                                            /*!< FPCC
1328:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_MONRDY_Msk               (1UL << FPU_FPCCR_MONRDY_Pos)                  /*!< FPCC
1329:Drivers/CMSIS/Include/core_cm4.h **** 
1330:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_BFRDY_Pos                 6U                                            /*!< FPCC
1331:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_BFRDY_Msk                (1UL << FPU_FPCCR_BFRDY_Pos)                   /*!< FPCC
1332:Drivers/CMSIS/Include/core_cm4.h **** 
1333:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_MMRDY_Pos                 5U                                            /*!< FPCC
1334:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_MMRDY_Msk                (1UL << FPU_FPCCR_MMRDY_Pos)                   /*!< FPCC
1335:Drivers/CMSIS/Include/core_cm4.h **** 
1336:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_HFRDY_Pos                 4U                                            /*!< FPCC
1337:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_HFRDY_Msk                (1UL << FPU_FPCCR_HFRDY_Pos)                   /*!< FPCC
1338:Drivers/CMSIS/Include/core_cm4.h **** 
1339:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_THREAD_Pos                3U                                            /*!< FPCC
1340:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_THREAD_Msk               (1UL << FPU_FPCCR_THREAD_Pos)                  /*!< FPCC
1341:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/ccEpMq7M.s 			page 25


1342:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_USER_Pos                  1U                                            /*!< FPCC
1343:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_USER_Msk                 (1UL << FPU_FPCCR_USER_Pos)                    /*!< FPCC
1344:Drivers/CMSIS/Include/core_cm4.h **** 
1345:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_LSPACT_Pos                0U                                            /*!< FPCC
1346:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_LSPACT_Msk               (1UL /*<< FPU_FPCCR_LSPACT_Pos*/)              /*!< FPCC
1347:Drivers/CMSIS/Include/core_cm4.h **** 
1348:Drivers/CMSIS/Include/core_cm4.h **** /* Floating-Point Context Address Register Definitions */
1349:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCAR_ADDRESS_Pos               3U                                            /*!< FPCA
1350:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCAR_ADDRESS_Msk              (0x1FFFFFFFUL << FPU_FPCAR_ADDRESS_Pos)        /*!< FPCA
1351:Drivers/CMSIS/Include/core_cm4.h **** 
1352:Drivers/CMSIS/Include/core_cm4.h **** /* Floating-Point Default Status Control Register Definitions */
1353:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_AHP_Pos                 26U                                            /*!< FPDS
1354:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_AHP_Msk                 (1UL << FPU_FPDSCR_AHP_Pos)                    /*!< FPDS
1355:Drivers/CMSIS/Include/core_cm4.h **** 
1356:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_DN_Pos                  25U                                            /*!< FPDS
1357:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_DN_Msk                  (1UL << FPU_FPDSCR_DN_Pos)                     /*!< FPDS
1358:Drivers/CMSIS/Include/core_cm4.h **** 
1359:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_FZ_Pos                  24U                                            /*!< FPDS
1360:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_FZ_Msk                  (1UL << FPU_FPDSCR_FZ_Pos)                     /*!< FPDS
1361:Drivers/CMSIS/Include/core_cm4.h **** 
1362:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_RMode_Pos               22U                                            /*!< FPDS
1363:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_RMode_Msk               (3UL << FPU_FPDSCR_RMode_Pos)                  /*!< FPDS
1364:Drivers/CMSIS/Include/core_cm4.h **** 
1365:Drivers/CMSIS/Include/core_cm4.h **** /* Media and FP Feature Register 0 Definitions */
1366:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Pos    28U                                            /*!< MVFR
1367:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Msk    (0xFUL << FPU_MVFR0_FP_rounding_modes_Pos)     /*!< MVFR
1368:Drivers/CMSIS/Include/core_cm4.h **** 
1369:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Short_vectors_Pos        24U                                            /*!< MVFR
1370:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Short_vectors_Msk        (0xFUL << FPU_MVFR0_Short_vectors_Pos)         /*!< MVFR
1371:Drivers/CMSIS/Include/core_cm4.h **** 
1372:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Square_root_Pos          20U                                            /*!< MVFR
1373:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Square_root_Msk          (0xFUL << FPU_MVFR0_Square_root_Pos)           /*!< MVFR
1374:Drivers/CMSIS/Include/core_cm4.h **** 
1375:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Divide_Pos               16U                                            /*!< MVFR
1376:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Divide_Msk               (0xFUL << FPU_MVFR0_Divide_Pos)                /*!< MVFR
1377:Drivers/CMSIS/Include/core_cm4.h **** 
1378:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Pos    12U                                            /*!< MVFR
1379:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Msk    (0xFUL << FPU_MVFR0_FP_excep_trapping_Pos)     /*!< MVFR
1380:Drivers/CMSIS/Include/core_cm4.h **** 
1381:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Double_precision_Pos      8U                                            /*!< MVFR
1382:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Double_precision_Msk     (0xFUL << FPU_MVFR0_Double_precision_Pos)      /*!< MVFR
1383:Drivers/CMSIS/Include/core_cm4.h **** 
1384:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Single_precision_Pos      4U                                            /*!< MVFR
1385:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Single_precision_Msk     (0xFUL << FPU_MVFR0_Single_precision_Pos)      /*!< MVFR
1386:Drivers/CMSIS/Include/core_cm4.h **** 
1387:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Pos      0U                                            /*!< MVFR
1388:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Msk     (0xFUL /*<< FPU_MVFR0_A_SIMD_registers_Pos*/)  /*!< MVFR
1389:Drivers/CMSIS/Include/core_cm4.h **** 
1390:Drivers/CMSIS/Include/core_cm4.h **** /* Media and FP Feature Register 1 Definitions */
1391:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Pos         28U                                            /*!< MVFR
1392:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Msk         (0xFUL << FPU_MVFR1_FP_fused_MAC_Pos)          /*!< MVFR
1393:Drivers/CMSIS/Include/core_cm4.h **** 
1394:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Pos              24U                                            /*!< MVFR
1395:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Msk              (0xFUL << FPU_MVFR1_FP_HPFP_Pos)               /*!< MVFR
1396:Drivers/CMSIS/Include/core_cm4.h **** 
1397:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Pos            4U                                            /*!< MVFR
1398:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Msk           (0xFUL << FPU_MVFR1_D_NaN_mode_Pos)            /*!< MVFR
ARM GAS  /tmp/ccEpMq7M.s 			page 26


1399:Drivers/CMSIS/Include/core_cm4.h **** 
1400:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Pos              0U                                            /*!< MVFR
1401:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Msk             (0xFUL /*<< FPU_MVFR1_FtZ_mode_Pos*/)          /*!< MVFR
1402:Drivers/CMSIS/Include/core_cm4.h **** 
1403:Drivers/CMSIS/Include/core_cm4.h **** /* Media and FP Feature Register 2 Definitions */
1404:Drivers/CMSIS/Include/core_cm4.h **** 
1405:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR2_VFP_Misc_Pos              4U                                            /*!< MVFR
1406:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR2_VFP_Misc_Msk             (0xFUL << FPU_MVFR2_VFP_Misc_Pos)              /*!< MVFR
1407:Drivers/CMSIS/Include/core_cm4.h **** 
1408:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_FPU */
1409:Drivers/CMSIS/Include/core_cm4.h **** 
1410:Drivers/CMSIS/Include/core_cm4.h **** 
1411:Drivers/CMSIS/Include/core_cm4.h **** /**
1412:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
1413:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
1414:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Core Debug Registers
1415:Drivers/CMSIS/Include/core_cm4.h ****   @{
1416:Drivers/CMSIS/Include/core_cm4.h ****  */
1417:Drivers/CMSIS/Include/core_cm4.h **** 
1418:Drivers/CMSIS/Include/core_cm4.h **** /**
1419:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Core Debug Register (CoreDebug).
1420:Drivers/CMSIS/Include/core_cm4.h ****  */
1421:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
1422:Drivers/CMSIS/Include/core_cm4.h **** {
1423:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t DHCSR;                  /*!< Offset: 0x000 (R/W)  Debug Halting Control and Status
1424:Drivers/CMSIS/Include/core_cm4.h ****   __OM  uint32_t DCRSR;                  /*!< Offset: 0x004 ( /W)  Debug Core Register Selector Reg
1425:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t DCRDR;                  /*!< Offset: 0x008 (R/W)  Debug Core Register Data Registe
1426:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t DEMCR;                  /*!< Offset: 0x00C (R/W)  Debug Exception and Monitor Cont
1427:Drivers/CMSIS/Include/core_cm4.h **** } CoreDebug_Type;
1428:Drivers/CMSIS/Include/core_cm4.h **** 
1429:Drivers/CMSIS/Include/core_cm4.h **** /* Debug Halting Control and Status Register Definitions */
1430:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16U                                            /*!< Core
1431:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFUL << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
1432:Drivers/CMSIS/Include/core_cm4.h **** 
1433:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25U                                            /*!< Core
1434:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1UL << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
1435:Drivers/CMSIS/Include/core_cm4.h **** 
1436:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24U                                            /*!< Core
1437:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1UL << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
1438:Drivers/CMSIS/Include/core_cm4.h **** 
1439:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19U                                            /*!< Core
1440:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1UL << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
1441:Drivers/CMSIS/Include/core_cm4.h **** 
1442:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18U                                            /*!< Core
1443:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1UL << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
1444:Drivers/CMSIS/Include/core_cm4.h **** 
1445:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17U                                            /*!< Core
1446:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1UL << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
1447:Drivers/CMSIS/Include/core_cm4.h **** 
1448:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16U                                            /*!< Core
1449:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1UL << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
1450:Drivers/CMSIS/Include/core_cm4.h **** 
1451:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5U                                            /*!< Core
1452:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1UL << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
1453:Drivers/CMSIS/Include/core_cm4.h **** 
1454:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3U                                            /*!< Core
1455:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1UL << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
ARM GAS  /tmp/ccEpMq7M.s 			page 27


1456:Drivers/CMSIS/Include/core_cm4.h **** 
1457:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2U                                            /*!< Core
1458:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1UL << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
1459:Drivers/CMSIS/Include/core_cm4.h **** 
1460:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1U                                            /*!< Core
1461:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1UL << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
1462:Drivers/CMSIS/Include/core_cm4.h **** 
1463:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0U                                            /*!< Core
1464:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1UL /*<< CoreDebug_DHCSR_C_DEBUGEN_Pos*/)     /*!< Core
1465:Drivers/CMSIS/Include/core_cm4.h **** 
1466:Drivers/CMSIS/Include/core_cm4.h **** /* Debug Core Register Selector Register Definitions */
1467:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16U                                            /*!< Core
1468:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1UL << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
1469:Drivers/CMSIS/Include/core_cm4.h **** 
1470:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0U                                            /*!< Core
1471:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1FUL /*<< CoreDebug_DCRSR_REGSEL_Pos*/)     /*!< Core
1472:Drivers/CMSIS/Include/core_cm4.h **** 
1473:Drivers/CMSIS/Include/core_cm4.h **** /* Debug Exception and Monitor Control Register Definitions */
1474:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24U                                            /*!< Core
1475:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1UL << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
1476:Drivers/CMSIS/Include/core_cm4.h **** 
1477:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19U                                            /*!< Core
1478:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1UL << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
1479:Drivers/CMSIS/Include/core_cm4.h **** 
1480:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18U                                            /*!< Core
1481:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1UL << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
1482:Drivers/CMSIS/Include/core_cm4.h **** 
1483:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17U                                            /*!< Core
1484:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1UL << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
1485:Drivers/CMSIS/Include/core_cm4.h **** 
1486:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16U                                            /*!< Core
1487:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1UL << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
1488:Drivers/CMSIS/Include/core_cm4.h **** 
1489:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10U                                            /*!< Core
1490:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1UL << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
1491:Drivers/CMSIS/Include/core_cm4.h **** 
1492:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9U                                            /*!< Core
1493:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1UL << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
1494:Drivers/CMSIS/Include/core_cm4.h **** 
1495:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8U                                            /*!< Core
1496:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1UL << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
1497:Drivers/CMSIS/Include/core_cm4.h **** 
1498:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7U                                            /*!< Core
1499:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1UL << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
1500:Drivers/CMSIS/Include/core_cm4.h **** 
1501:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6U                                            /*!< Core
1502:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1UL << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
1503:Drivers/CMSIS/Include/core_cm4.h **** 
1504:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5U                                            /*!< Core
1505:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1UL << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
1506:Drivers/CMSIS/Include/core_cm4.h **** 
1507:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4U                                            /*!< Core
1508:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1UL << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
1509:Drivers/CMSIS/Include/core_cm4.h **** 
1510:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0U                                            /*!< Core
1511:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1UL /*<< CoreDebug_DEMCR_VC_CORERESET_Pos*/)  /*!< Core
1512:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/ccEpMq7M.s 			page 28


1513:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_CoreDebug */
1514:Drivers/CMSIS/Include/core_cm4.h **** 
1515:Drivers/CMSIS/Include/core_cm4.h **** 
1516:Drivers/CMSIS/Include/core_cm4.h **** /**
1517:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup    CMSIS_core_register
1518:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup   CMSIS_core_bitfield     Core register bit field macros
1519:Drivers/CMSIS/Include/core_cm4.h ****   \brief      Macros for use with bit field definitions (xxx_Pos, xxx_Msk).
1520:Drivers/CMSIS/Include/core_cm4.h ****   @{
1521:Drivers/CMSIS/Include/core_cm4.h ****  */
1522:Drivers/CMSIS/Include/core_cm4.h **** 
1523:Drivers/CMSIS/Include/core_cm4.h **** /**
1524:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Mask and shift a bit field value for use in a register bit range.
1525:Drivers/CMSIS/Include/core_cm4.h ****   \param[in] field  Name of the register bit field.
1526:Drivers/CMSIS/Include/core_cm4.h ****   \param[in] value  Value of the bit field. This parameter is interpreted as an uint32_t type.
1527:Drivers/CMSIS/Include/core_cm4.h ****   \return           Masked and shifted value.
1528:Drivers/CMSIS/Include/core_cm4.h **** */
1529:Drivers/CMSIS/Include/core_cm4.h **** #define _VAL2FLD(field, value)    (((uint32_t)(value) << field ## _Pos) & field ## _Msk)
1530:Drivers/CMSIS/Include/core_cm4.h **** 
1531:Drivers/CMSIS/Include/core_cm4.h **** /**
1532:Drivers/CMSIS/Include/core_cm4.h ****   \brief     Mask and shift a register value to extract a bit filed value.
1533:Drivers/CMSIS/Include/core_cm4.h ****   \param[in] field  Name of the register bit field.
1534:Drivers/CMSIS/Include/core_cm4.h ****   \param[in] value  Value of register. This parameter is interpreted as an uint32_t type.
1535:Drivers/CMSIS/Include/core_cm4.h ****   \return           Masked and shifted bit field value.
1536:Drivers/CMSIS/Include/core_cm4.h **** */
1537:Drivers/CMSIS/Include/core_cm4.h **** #define _FLD2VAL(field, value)    (((uint32_t)(value) & field ## _Msk) >> field ## _Pos)
1538:Drivers/CMSIS/Include/core_cm4.h **** 
1539:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_core_bitfield */
1540:Drivers/CMSIS/Include/core_cm4.h **** 
1541:Drivers/CMSIS/Include/core_cm4.h **** 
1542:Drivers/CMSIS/Include/core_cm4.h **** /**
1543:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup    CMSIS_core_register
1544:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup   CMSIS_core_base     Core Definitions
1545:Drivers/CMSIS/Include/core_cm4.h ****   \brief      Definitions for base addresses, unions, and structures.
1546:Drivers/CMSIS/Include/core_cm4.h ****   @{
1547:Drivers/CMSIS/Include/core_cm4.h ****  */
1548:Drivers/CMSIS/Include/core_cm4.h **** 
1549:Drivers/CMSIS/Include/core_cm4.h **** /* Memory mapping of Core Hardware */
1550:Drivers/CMSIS/Include/core_cm4.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
1551:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_BASE            (0xE0000000UL)                            /*!< ITM Base Address */
1552:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_BASE            (0xE0001000UL)                            /*!< DWT Base Address */
1553:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_BASE            (0xE0040000UL)                            /*!< TPI Base Address */
1554:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_BASE      (0xE000EDF0UL)                            /*!< Core Debug Base Address 
1555:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address */
1556:Drivers/CMSIS/Include/core_cm4.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address */
1557:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
1558:Drivers/CMSIS/Include/core_cm4.h **** 
1559:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB              ((SCnSCB_Type    *)     SCS_BASE      )   /*!< System control Register 
1560:Drivers/CMSIS/Include/core_cm4.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
1561:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
1562:Drivers/CMSIS/Include/core_cm4.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
1563:Drivers/CMSIS/Include/core_cm4.h **** #define ITM                 ((ITM_Type       *)     ITM_BASE      )   /*!< ITM configuration struct
1564:Drivers/CMSIS/Include/core_cm4.h **** #define DWT                 ((DWT_Type       *)     DWT_BASE      )   /*!< DWT configuration struct
1565:Drivers/CMSIS/Include/core_cm4.h **** #define TPI                 ((TPI_Type       *)     TPI_BASE      )   /*!< TPI configuration struct
1566:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
1567:Drivers/CMSIS/Include/core_cm4.h **** 
1568:Drivers/CMSIS/Include/core_cm4.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1569:Drivers/CMSIS/Include/core_cm4.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90UL)                    /*!< Memory Protection Unit *
ARM GAS  /tmp/ccEpMq7M.s 			page 29


1570:Drivers/CMSIS/Include/core_cm4.h ****   #define MPU               ((MPU_Type       *)     MPU_BASE      )   /*!< Memory Protection Unit *
1571:Drivers/CMSIS/Include/core_cm4.h **** #endif
1572:Drivers/CMSIS/Include/core_cm4.h **** 
1573:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_BASE            (SCS_BASE +  0x0F30UL)                    /*!< Floating Point Unit */
1574:Drivers/CMSIS/Include/core_cm4.h **** #define FPU                 ((FPU_Type       *)     FPU_BASE      )   /*!< Floating Point Unit */
1575:Drivers/CMSIS/Include/core_cm4.h **** 
1576:Drivers/CMSIS/Include/core_cm4.h **** /*@} */
1577:Drivers/CMSIS/Include/core_cm4.h **** 
1578:Drivers/CMSIS/Include/core_cm4.h **** 
1579:Drivers/CMSIS/Include/core_cm4.h **** 
1580:Drivers/CMSIS/Include/core_cm4.h **** /*******************************************************************************
1581:Drivers/CMSIS/Include/core_cm4.h ****  *                Hardware Abstraction Layer
1582:Drivers/CMSIS/Include/core_cm4.h ****   Core Function Interface contains:
1583:Drivers/CMSIS/Include/core_cm4.h ****   - Core NVIC Functions
1584:Drivers/CMSIS/Include/core_cm4.h ****   - Core SysTick Functions
1585:Drivers/CMSIS/Include/core_cm4.h ****   - Core Debug Functions
1586:Drivers/CMSIS/Include/core_cm4.h ****   - Core Register Access Functions
1587:Drivers/CMSIS/Include/core_cm4.h ****  ******************************************************************************/
1588:Drivers/CMSIS/Include/core_cm4.h **** /**
1589:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
1590:Drivers/CMSIS/Include/core_cm4.h **** */
1591:Drivers/CMSIS/Include/core_cm4.h **** 
1592:Drivers/CMSIS/Include/core_cm4.h **** 
1593:Drivers/CMSIS/Include/core_cm4.h **** 
1594:Drivers/CMSIS/Include/core_cm4.h **** /* ##########################   NVIC functions  #################################### */
1595:Drivers/CMSIS/Include/core_cm4.h **** /**
1596:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_Core_FunctionInterface
1597:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_Core_NVICFunctions NVIC Functions
1598:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Functions that manage interrupts and exceptions via the NVIC.
1599:Drivers/CMSIS/Include/core_cm4.h ****   @{
1600:Drivers/CMSIS/Include/core_cm4.h ****  */
1601:Drivers/CMSIS/Include/core_cm4.h **** 
1602:Drivers/CMSIS/Include/core_cm4.h **** #ifdef CMSIS_NVIC_VIRTUAL
1603:Drivers/CMSIS/Include/core_cm4.h ****   #ifndef CMSIS_NVIC_VIRTUAL_HEADER_FILE
1604:Drivers/CMSIS/Include/core_cm4.h ****     #define CMSIS_NVIC_VIRTUAL_HEADER_FILE "cmsis_nvic_virtual.h"
1605:Drivers/CMSIS/Include/core_cm4.h ****   #endif
1606:Drivers/CMSIS/Include/core_cm4.h ****   #include CMSIS_NVIC_VIRTUAL_HEADER_FILE
1607:Drivers/CMSIS/Include/core_cm4.h **** #else
1608:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_SetPriorityGrouping    __NVIC_SetPriorityGrouping
1609:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_GetPriorityGrouping    __NVIC_GetPriorityGrouping
1610:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_EnableIRQ              __NVIC_EnableIRQ
1611:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_GetEnableIRQ           __NVIC_GetEnableIRQ
1612:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_DisableIRQ             __NVIC_DisableIRQ
1613:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_GetPendingIRQ          __NVIC_GetPendingIRQ
1614:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_SetPendingIRQ          __NVIC_SetPendingIRQ
1615:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_ClearPendingIRQ        __NVIC_ClearPendingIRQ
1616:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_GetActive              __NVIC_GetActive
1617:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_SetPriority            __NVIC_SetPriority
1618:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_GetPriority            __NVIC_GetPriority
1619:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_SystemReset            __NVIC_SystemReset
1620:Drivers/CMSIS/Include/core_cm4.h **** #endif /* CMSIS_NVIC_VIRTUAL */
1621:Drivers/CMSIS/Include/core_cm4.h **** 
1622:Drivers/CMSIS/Include/core_cm4.h **** #ifdef CMSIS_VECTAB_VIRTUAL
1623:Drivers/CMSIS/Include/core_cm4.h ****   #ifndef CMSIS_VECTAB_VIRTUAL_HEADER_FILE
1624:Drivers/CMSIS/Include/core_cm4.h ****     #define CMSIS_VECTAB_VIRTUAL_HEADER_FILE "cmsis_vectab_virtual.h"
1625:Drivers/CMSIS/Include/core_cm4.h ****   #endif
1626:Drivers/CMSIS/Include/core_cm4.h ****   #include CMSIS_VECTAB_VIRTUAL_HEADER_FILE
ARM GAS  /tmp/ccEpMq7M.s 			page 30


1627:Drivers/CMSIS/Include/core_cm4.h **** #else
1628:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_SetVector              __NVIC_SetVector
1629:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_GetVector              __NVIC_GetVector
1630:Drivers/CMSIS/Include/core_cm4.h **** #endif  /* (CMSIS_VECTAB_VIRTUAL) */
1631:Drivers/CMSIS/Include/core_cm4.h **** 
1632:Drivers/CMSIS/Include/core_cm4.h **** #define NVIC_USER_IRQ_OFFSET          16
1633:Drivers/CMSIS/Include/core_cm4.h **** 
1634:Drivers/CMSIS/Include/core_cm4.h **** 
1635:Drivers/CMSIS/Include/core_cm4.h **** /* The following EXC_RETURN values are saved the LR on exception entry */
1636:Drivers/CMSIS/Include/core_cm4.h **** #define EXC_RETURN_HANDLER         (0xFFFFFFF1UL)     /* return to Handler mode, uses MSP after ret
1637:Drivers/CMSIS/Include/core_cm4.h **** #define EXC_RETURN_THREAD_MSP      (0xFFFFFFF9UL)     /* return to Thread mode, uses MSP after retu
1638:Drivers/CMSIS/Include/core_cm4.h **** #define EXC_RETURN_THREAD_PSP      (0xFFFFFFFDUL)     /* return to Thread mode, uses PSP after retu
1639:Drivers/CMSIS/Include/core_cm4.h **** #define EXC_RETURN_HANDLER_FPU     (0xFFFFFFE1UL)     /* return to Handler mode, uses MSP after ret
1640:Drivers/CMSIS/Include/core_cm4.h **** #define EXC_RETURN_THREAD_MSP_FPU  (0xFFFFFFE9UL)     /* return to Thread mode, uses MSP after retu
1641:Drivers/CMSIS/Include/core_cm4.h **** #define EXC_RETURN_THREAD_PSP_FPU  (0xFFFFFFEDUL)     /* return to Thread mode, uses PSP after retu
1642:Drivers/CMSIS/Include/core_cm4.h **** 
1643:Drivers/CMSIS/Include/core_cm4.h **** 
1644:Drivers/CMSIS/Include/core_cm4.h **** /**
1645:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Set Priority Grouping
1646:Drivers/CMSIS/Include/core_cm4.h ****   \details Sets the priority grouping field using the required unlock sequence.
1647:Drivers/CMSIS/Include/core_cm4.h ****            The parameter PriorityGroup is assigned to the field SCB->AIRCR [10:8] PRIGROUP field.
1648:Drivers/CMSIS/Include/core_cm4.h ****            Only values from 0..7 are used.
1649:Drivers/CMSIS/Include/core_cm4.h ****            In case of a conflict between priority grouping and available
1650:Drivers/CMSIS/Include/core_cm4.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1651:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      PriorityGroup  Priority grouping field.
1652:Drivers/CMSIS/Include/core_cm4.h ****  */
1653:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1654:Drivers/CMSIS/Include/core_cm4.h **** {
1655:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t reg_value;
1656:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 a
1657:Drivers/CMSIS/Include/core_cm4.h **** 
1658:Drivers/CMSIS/Include/core_cm4.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
1659:Drivers/CMSIS/Include/core_cm4.h ****   reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to chan
1660:Drivers/CMSIS/Include/core_cm4.h ****   reg_value  =  (reg_value                                   |
1661:Drivers/CMSIS/Include/core_cm4.h ****                 ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
1662:Drivers/CMSIS/Include/core_cm4.h ****                 (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key a
1663:Drivers/CMSIS/Include/core_cm4.h ****   SCB->AIRCR =  reg_value;
1664:Drivers/CMSIS/Include/core_cm4.h **** }
1665:Drivers/CMSIS/Include/core_cm4.h **** 
1666:Drivers/CMSIS/Include/core_cm4.h **** 
1667:Drivers/CMSIS/Include/core_cm4.h **** /**
1668:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Get Priority Grouping
1669:Drivers/CMSIS/Include/core_cm4.h ****   \details Reads the priority grouping field from the NVIC Interrupt Controller.
1670:Drivers/CMSIS/Include/core_cm4.h ****   \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
1671:Drivers/CMSIS/Include/core_cm4.h ****  */
1672:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
1673:Drivers/CMSIS/Include/core_cm4.h **** {
1674:Drivers/CMSIS/Include/core_cm4.h ****   return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
1675:Drivers/CMSIS/Include/core_cm4.h **** }
1676:Drivers/CMSIS/Include/core_cm4.h **** 
1677:Drivers/CMSIS/Include/core_cm4.h **** 
1678:Drivers/CMSIS/Include/core_cm4.h **** /**
1679:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Enable Interrupt
1680:Drivers/CMSIS/Include/core_cm4.h ****   \details Enables a device specific interrupt in the NVIC interrupt controller.
1681:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1682:Drivers/CMSIS/Include/core_cm4.h ****   \note    IRQn must not be negative.
1683:Drivers/CMSIS/Include/core_cm4.h ****  */
ARM GAS  /tmp/ccEpMq7M.s 			page 31


1684:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
1685:Drivers/CMSIS/Include/core_cm4.h **** {
1686:Drivers/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1687:Drivers/CMSIS/Include/core_cm4.h ****   {
1688:Drivers/CMSIS/Include/core_cm4.h ****     __COMPILER_BARRIER();
1689:Drivers/CMSIS/Include/core_cm4.h ****     NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1690:Drivers/CMSIS/Include/core_cm4.h ****     __COMPILER_BARRIER();
1691:Drivers/CMSIS/Include/core_cm4.h ****   }
1692:Drivers/CMSIS/Include/core_cm4.h **** }
1693:Drivers/CMSIS/Include/core_cm4.h **** 
1694:Drivers/CMSIS/Include/core_cm4.h **** 
1695:Drivers/CMSIS/Include/core_cm4.h **** /**
1696:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Get Interrupt Enable status
1697:Drivers/CMSIS/Include/core_cm4.h ****   \details Returns a device specific interrupt enable status from the NVIC interrupt controller.
1698:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1699:Drivers/CMSIS/Include/core_cm4.h ****   \return             0  Interrupt is not enabled.
1700:Drivers/CMSIS/Include/core_cm4.h ****   \return             1  Interrupt is enabled.
1701:Drivers/CMSIS/Include/core_cm4.h ****   \note    IRQn must not be negative.
1702:Drivers/CMSIS/Include/core_cm4.h ****  */
1703:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetEnableIRQ(IRQn_Type IRQn)
1704:Drivers/CMSIS/Include/core_cm4.h **** {
1705:Drivers/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1706:Drivers/CMSIS/Include/core_cm4.h ****   {
1707:Drivers/CMSIS/Include/core_cm4.h ****     return((uint32_t)(((NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1708:Drivers/CMSIS/Include/core_cm4.h ****   }
1709:Drivers/CMSIS/Include/core_cm4.h ****   else
1710:Drivers/CMSIS/Include/core_cm4.h ****   {
1711:Drivers/CMSIS/Include/core_cm4.h ****     return(0U);
1712:Drivers/CMSIS/Include/core_cm4.h ****   }
1713:Drivers/CMSIS/Include/core_cm4.h **** }
1714:Drivers/CMSIS/Include/core_cm4.h **** 
1715:Drivers/CMSIS/Include/core_cm4.h **** 
1716:Drivers/CMSIS/Include/core_cm4.h **** /**
1717:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Disable Interrupt
1718:Drivers/CMSIS/Include/core_cm4.h ****   \details Disables a device specific interrupt in the NVIC interrupt controller.
1719:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1720:Drivers/CMSIS/Include/core_cm4.h ****   \note    IRQn must not be negative.
1721:Drivers/CMSIS/Include/core_cm4.h ****  */
1722:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
1723:Drivers/CMSIS/Include/core_cm4.h **** {
1724:Drivers/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1725:Drivers/CMSIS/Include/core_cm4.h ****   {
1726:Drivers/CMSIS/Include/core_cm4.h ****     NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1727:Drivers/CMSIS/Include/core_cm4.h ****     __DSB();
1728:Drivers/CMSIS/Include/core_cm4.h ****     __ISB();
1729:Drivers/CMSIS/Include/core_cm4.h ****   }
1730:Drivers/CMSIS/Include/core_cm4.h **** }
1731:Drivers/CMSIS/Include/core_cm4.h **** 
1732:Drivers/CMSIS/Include/core_cm4.h **** 
1733:Drivers/CMSIS/Include/core_cm4.h **** /**
1734:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Get Pending Interrupt
1735:Drivers/CMSIS/Include/core_cm4.h ****   \details Reads the NVIC pending register and returns the pending bit for the specified device spe
1736:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1737:Drivers/CMSIS/Include/core_cm4.h ****   \return             0  Interrupt status is not pending.
1738:Drivers/CMSIS/Include/core_cm4.h ****   \return             1  Interrupt status is pending.
1739:Drivers/CMSIS/Include/core_cm4.h ****   \note    IRQn must not be negative.
1740:Drivers/CMSIS/Include/core_cm4.h ****  */
ARM GAS  /tmp/ccEpMq7M.s 			page 32


1741:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetPendingIRQ(IRQn_Type IRQn)
1742:Drivers/CMSIS/Include/core_cm4.h **** {
1743:Drivers/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1744:Drivers/CMSIS/Include/core_cm4.h ****   {
1745:Drivers/CMSIS/Include/core_cm4.h ****     return((uint32_t)(((NVIC->ISPR[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1746:Drivers/CMSIS/Include/core_cm4.h ****   }
1747:Drivers/CMSIS/Include/core_cm4.h ****   else
1748:Drivers/CMSIS/Include/core_cm4.h ****   {
1749:Drivers/CMSIS/Include/core_cm4.h ****     return(0U);
1750:Drivers/CMSIS/Include/core_cm4.h ****   }
1751:Drivers/CMSIS/Include/core_cm4.h **** }
1752:Drivers/CMSIS/Include/core_cm4.h **** 
1753:Drivers/CMSIS/Include/core_cm4.h **** 
1754:Drivers/CMSIS/Include/core_cm4.h **** /**
1755:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Set Pending Interrupt
1756:Drivers/CMSIS/Include/core_cm4.h ****   \details Sets the pending bit of a device specific interrupt in the NVIC pending register.
1757:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1758:Drivers/CMSIS/Include/core_cm4.h ****   \note    IRQn must not be negative.
1759:Drivers/CMSIS/Include/core_cm4.h ****  */
1760:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void __NVIC_SetPendingIRQ(IRQn_Type IRQn)
1761:Drivers/CMSIS/Include/core_cm4.h **** {
1762:Drivers/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1763:Drivers/CMSIS/Include/core_cm4.h ****   {
1764:Drivers/CMSIS/Include/core_cm4.h ****     NVIC->ISPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1765:Drivers/CMSIS/Include/core_cm4.h ****   }
1766:Drivers/CMSIS/Include/core_cm4.h **** }
1767:Drivers/CMSIS/Include/core_cm4.h **** 
1768:Drivers/CMSIS/Include/core_cm4.h **** 
1769:Drivers/CMSIS/Include/core_cm4.h **** /**
1770:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Clear Pending Interrupt
1771:Drivers/CMSIS/Include/core_cm4.h ****   \details Clears the pending bit of a device specific interrupt in the NVIC pending register.
1772:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1773:Drivers/CMSIS/Include/core_cm4.h ****   \note    IRQn must not be negative.
1774:Drivers/CMSIS/Include/core_cm4.h ****  */
1775:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void __NVIC_ClearPendingIRQ(IRQn_Type IRQn)
1776:Drivers/CMSIS/Include/core_cm4.h **** {
1777:Drivers/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1778:Drivers/CMSIS/Include/core_cm4.h ****   {
1779:Drivers/CMSIS/Include/core_cm4.h ****     NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1780:Drivers/CMSIS/Include/core_cm4.h ****   }
1781:Drivers/CMSIS/Include/core_cm4.h **** }
1782:Drivers/CMSIS/Include/core_cm4.h **** 
1783:Drivers/CMSIS/Include/core_cm4.h **** 
1784:Drivers/CMSIS/Include/core_cm4.h **** /**
1785:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Get Active Interrupt
1786:Drivers/CMSIS/Include/core_cm4.h ****   \details Reads the active register in the NVIC and returns the active bit for the device specific
1787:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1788:Drivers/CMSIS/Include/core_cm4.h ****   \return             0  Interrupt status is not active.
1789:Drivers/CMSIS/Include/core_cm4.h ****   \return             1  Interrupt status is active.
1790:Drivers/CMSIS/Include/core_cm4.h ****   \note    IRQn must not be negative.
1791:Drivers/CMSIS/Include/core_cm4.h ****  */
1792:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetActive(IRQn_Type IRQn)
1793:Drivers/CMSIS/Include/core_cm4.h **** {
1794:Drivers/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1795:Drivers/CMSIS/Include/core_cm4.h ****   {
1796:Drivers/CMSIS/Include/core_cm4.h ****     return((uint32_t)(((NVIC->IABR[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1797:Drivers/CMSIS/Include/core_cm4.h ****   }
ARM GAS  /tmp/ccEpMq7M.s 			page 33


1798:Drivers/CMSIS/Include/core_cm4.h ****   else
1799:Drivers/CMSIS/Include/core_cm4.h ****   {
1800:Drivers/CMSIS/Include/core_cm4.h ****     return(0U);
1801:Drivers/CMSIS/Include/core_cm4.h ****   }
1802:Drivers/CMSIS/Include/core_cm4.h **** }
1803:Drivers/CMSIS/Include/core_cm4.h **** 
1804:Drivers/CMSIS/Include/core_cm4.h **** 
1805:Drivers/CMSIS/Include/core_cm4.h **** /**
1806:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Set Interrupt Priority
1807:Drivers/CMSIS/Include/core_cm4.h ****   \details Sets the priority of a device specific interrupt or a processor exception.
1808:Drivers/CMSIS/Include/core_cm4.h ****            The interrupt number can be positive to specify a device specific interrupt,
1809:Drivers/CMSIS/Include/core_cm4.h ****            or negative to specify a processor exception.
1810:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Interrupt number.
1811:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]  priority  Priority to set.
1812:Drivers/CMSIS/Include/core_cm4.h ****   \note    The priority cannot be set for every processor exception.
1813:Drivers/CMSIS/Include/core_cm4.h ****  */
1814:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
1815:Drivers/CMSIS/Include/core_cm4.h **** {
1816:Drivers/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1817:Drivers/CMSIS/Include/core_cm4.h ****   {
1818:Drivers/CMSIS/Include/core_cm4.h ****     NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (u
1819:Drivers/CMSIS/Include/core_cm4.h ****   }
1820:Drivers/CMSIS/Include/core_cm4.h ****   else
1821:Drivers/CMSIS/Include/core_cm4.h ****   {
1822:Drivers/CMSIS/Include/core_cm4.h ****     SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (u
1823:Drivers/CMSIS/Include/core_cm4.h ****   }
1824:Drivers/CMSIS/Include/core_cm4.h **** }
1825:Drivers/CMSIS/Include/core_cm4.h **** 
1826:Drivers/CMSIS/Include/core_cm4.h **** 
1827:Drivers/CMSIS/Include/core_cm4.h **** /**
1828:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Get Interrupt Priority
1829:Drivers/CMSIS/Include/core_cm4.h ****   \details Reads the priority of a device specific interrupt or a processor exception.
1830:Drivers/CMSIS/Include/core_cm4.h ****            The interrupt number can be positive to specify a device specific interrupt,
1831:Drivers/CMSIS/Include/core_cm4.h ****            or negative to specify a processor exception.
1832:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]   IRQn  Interrupt number.
1833:Drivers/CMSIS/Include/core_cm4.h ****   \return             Interrupt Priority.
1834:Drivers/CMSIS/Include/core_cm4.h ****                       Value is aligned automatically to the implemented priority bits of the microc
1835:Drivers/CMSIS/Include/core_cm4.h ****  */
1836:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetPriority(IRQn_Type IRQn)
1837:Drivers/CMSIS/Include/core_cm4.h **** {
1838:Drivers/CMSIS/Include/core_cm4.h **** 
1839:Drivers/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1840:Drivers/CMSIS/Include/core_cm4.h ****   {
1841:Drivers/CMSIS/Include/core_cm4.h ****     return(((uint32_t)NVIC->IP[((uint32_t)IRQn)]               >> (8U - __NVIC_PRIO_BITS)));
1842:Drivers/CMSIS/Include/core_cm4.h ****   }
1843:Drivers/CMSIS/Include/core_cm4.h ****   else
1844:Drivers/CMSIS/Include/core_cm4.h ****   {
1845:Drivers/CMSIS/Include/core_cm4.h ****     return(((uint32_t)SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] >> (8U - __NVIC_PRIO_BITS)));
1846:Drivers/CMSIS/Include/core_cm4.h ****   }
1847:Drivers/CMSIS/Include/core_cm4.h **** }
1848:Drivers/CMSIS/Include/core_cm4.h **** 
1849:Drivers/CMSIS/Include/core_cm4.h **** 
1850:Drivers/CMSIS/Include/core_cm4.h **** /**
1851:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Encode Priority
1852:Drivers/CMSIS/Include/core_cm4.h ****   \details Encodes the priority for an interrupt with the given priority group,
1853:Drivers/CMSIS/Include/core_cm4.h ****            preemptive priority value, and subpriority value.
1854:Drivers/CMSIS/Include/core_cm4.h ****            In case of a conflict between priority grouping and available
ARM GAS  /tmp/ccEpMq7M.s 			page 34


1855:Drivers/CMSIS/Include/core_cm4.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1856:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]     PriorityGroup  Used priority group.
1857:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
1858:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]       SubPriority  Subpriority value (starting from 0).
1859:Drivers/CMSIS/Include/core_cm4.h ****   \return                        Encoded priority. Value can be used in the function \ref NVIC_SetP
1860:Drivers/CMSIS/Include/core_cm4.h ****  */
1861:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uin
1862:Drivers/CMSIS/Include/core_cm4.h **** {
1863:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
1864:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t PreemptPriorityBits;
1865:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t SubPriorityBits;
1866:Drivers/CMSIS/Include/core_cm4.h **** 
1867:Drivers/CMSIS/Include/core_cm4.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
1868:Drivers/CMSIS/Include/core_cm4.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
1869:Drivers/CMSIS/Include/core_cm4.h **** 
1870:Drivers/CMSIS/Include/core_cm4.h ****   return (
1871:Drivers/CMSIS/Include/core_cm4.h ****            ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits
1872:Drivers/CMSIS/Include/core_cm4.h ****            ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
1873:Drivers/CMSIS/Include/core_cm4.h ****          );
1874:Drivers/CMSIS/Include/core_cm4.h **** }
1875:Drivers/CMSIS/Include/core_cm4.h **** 
1876:Drivers/CMSIS/Include/core_cm4.h **** 
1877:Drivers/CMSIS/Include/core_cm4.h **** /**
1878:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Decode Priority
1879:Drivers/CMSIS/Include/core_cm4.h ****   \details Decodes an interrupt priority value with a given priority group to
1880:Drivers/CMSIS/Include/core_cm4.h ****            preemptive priority value and subpriority value.
1881:Drivers/CMSIS/Include/core_cm4.h ****            In case of a conflict between priority grouping and available
1882:Drivers/CMSIS/Include/core_cm4.h ****            priority bits (__NVIC_PRIO_BITS) the smallest possible priority group is set.
1883:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]         Priority   Priority value, which can be retrieved with the function \ref NVIC
1884:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]     PriorityGroup  Used priority group.
1885:Drivers/CMSIS/Include/core_cm4.h ****   \param [out] pPreemptPriority  Preemptive priority value (starting from 0).
1886:Drivers/CMSIS/Include/core_cm4.h ****   \param [out]     pSubPriority  Subpriority value (starting from 0).
1887:Drivers/CMSIS/Include/core_cm4.h ****  */
1888:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void NVIC_DecodePriority (uint32_t Priority, uint32_t PriorityGroup, uint32_t* cons
1889:Drivers/CMSIS/Include/core_cm4.h **** {
1890:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
1891:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t PreemptPriorityBits;
1892:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t SubPriorityBits;
1893:Drivers/CMSIS/Include/core_cm4.h **** 
1894:Drivers/CMSIS/Include/core_cm4.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
1895:Drivers/CMSIS/Include/core_cm4.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
1896:Drivers/CMSIS/Include/core_cm4.h **** 
1897:Drivers/CMSIS/Include/core_cm4.h ****   *pPreemptPriority = (Priority >> SubPriorityBits) & (uint32_t)((1UL << (PreemptPriorityBits)) - 1
1898:Drivers/CMSIS/Include/core_cm4.h ****   *pSubPriority     = (Priority                   ) & (uint32_t)((1UL << (SubPriorityBits    )) - 1
1899:Drivers/CMSIS/Include/core_cm4.h **** }
1900:Drivers/CMSIS/Include/core_cm4.h **** 
1901:Drivers/CMSIS/Include/core_cm4.h **** 
1902:Drivers/CMSIS/Include/core_cm4.h **** /**
1903:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Set Interrupt Vector
1904:Drivers/CMSIS/Include/core_cm4.h ****   \details Sets an interrupt vector in SRAM based interrupt vector table.
1905:Drivers/CMSIS/Include/core_cm4.h ****            The interrupt number can be positive to specify a device specific interrupt,
1906:Drivers/CMSIS/Include/core_cm4.h ****            or negative to specify a processor exception.
1907:Drivers/CMSIS/Include/core_cm4.h ****            VTOR must been relocated to SRAM before.
1908:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]   IRQn      Interrupt number
1909:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]   vector    Address of interrupt handler function
1910:Drivers/CMSIS/Include/core_cm4.h ****  */
1911:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void __NVIC_SetVector(IRQn_Type IRQn, uint32_t vector)
ARM GAS  /tmp/ccEpMq7M.s 			page 35


1912:Drivers/CMSIS/Include/core_cm4.h **** {
1913:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t *vectors = (uint32_t *)SCB->VTOR;
1914:Drivers/CMSIS/Include/core_cm4.h ****   vectors[(int32_t)IRQn + NVIC_USER_IRQ_OFFSET] = vector;
1915:Drivers/CMSIS/Include/core_cm4.h ****   /* ARM Application Note 321 states that the M4 does not require the architectural barrier */
1916:Drivers/CMSIS/Include/core_cm4.h **** }
1917:Drivers/CMSIS/Include/core_cm4.h **** 
1918:Drivers/CMSIS/Include/core_cm4.h **** 
1919:Drivers/CMSIS/Include/core_cm4.h **** /**
1920:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Get Interrupt Vector
1921:Drivers/CMSIS/Include/core_cm4.h ****   \details Reads an interrupt vector from interrupt vector table.
1922:Drivers/CMSIS/Include/core_cm4.h ****            The interrupt number can be positive to specify a device specific interrupt,
1923:Drivers/CMSIS/Include/core_cm4.h ****            or negative to specify a processor exception.
1924:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]   IRQn      Interrupt number.
1925:Drivers/CMSIS/Include/core_cm4.h ****   \return                 Address of interrupt handler function
1926:Drivers/CMSIS/Include/core_cm4.h ****  */
1927:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetVector(IRQn_Type IRQn)
1928:Drivers/CMSIS/Include/core_cm4.h **** {
1929:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t *vectors = (uint32_t *)SCB->VTOR;
1930:Drivers/CMSIS/Include/core_cm4.h ****   return vectors[(int32_t)IRQn + NVIC_USER_IRQ_OFFSET];
1931:Drivers/CMSIS/Include/core_cm4.h **** }
1932:Drivers/CMSIS/Include/core_cm4.h **** 
1933:Drivers/CMSIS/Include/core_cm4.h **** 
1934:Drivers/CMSIS/Include/core_cm4.h **** /**
1935:Drivers/CMSIS/Include/core_cm4.h ****   \brief   System Reset
1936:Drivers/CMSIS/Include/core_cm4.h ****   \details Initiates a system reset request to reset the MCU.
1937:Drivers/CMSIS/Include/core_cm4.h ****  */
1938:Drivers/CMSIS/Include/core_cm4.h **** __NO_RETURN __STATIC_INLINE void __NVIC_SystemReset(void)
1939:Drivers/CMSIS/Include/core_cm4.h **** {
  29              		.loc 2 1939 1 view -0
  30              		.cfi_startproc
  31              		@ Volatile: function does not return.
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
1940:Drivers/CMSIS/Include/core_cm4.h ****   __DSB();                                                          /* Ensure all outstanding memor
  35              		.loc 2 1940 3 view .LVU1
  36              	.LBB6:
  37              	.LBI6:
  38              		.file 3 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.4.1
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     27. May 2021
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2021 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
ARM GAS  /tmp/ccEpMq7M.s 			page 36


  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
ARM GAS  /tmp/ccEpMq7M.s 			page 37


  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  /tmp/ccEpMq7M.s 			page 38


 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute__((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_SEAL
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_SEAL              __StackSeal
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 189:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccEpMq7M.s 			page 39


 190:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_SIZE
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_SIZE      8U
 192:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_VALUE
 195:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_VALUE     0xFEF5EDA5FEF5EDA5ULL
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_STACKSEAL_S (uint32_t* stackTop) {
 200:Drivers/CMSIS/Include/cmsis_gcc.h ****   *((uint64_t *)stackTop) = __TZ_STACK_SEAL_VALUE;
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 203:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 204:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 208:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 209:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 212:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 213:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 215:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 216:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 217:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 223:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 225:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 226:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 227:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 229:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 230:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 233:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi":::"memory")
 235:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 239:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 240:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 241:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe":::"memory")
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 244:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 245:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
ARM GAS  /tmp/ccEpMq7M.s 			page 40


 247:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 248:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 253:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 254:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 255:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 258:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 259:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 265:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
  39              		.loc 3 269 27 view .LVU2
  40              	.LBB7:
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
  41              		.loc 3 271 3 view .LVU3
  42              		.syntax unified
  43              	@ 271 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
  44 0000 BFF34F8F 		dsb 0xF
  45              	@ 0 "" 2
  46              		.thumb
  47              		.syntax unified
  48              	.LBE7:
  49              	.LBE6:
1941:Drivers/CMSIS/Include/core_cm4.h ****                                                                        buffered write are completed
1942:Drivers/CMSIS/Include/core_cm4.h ****   SCB->AIRCR  = (uint32_t)((0x5FAUL << SCB_AIRCR_VECTKEY_Pos)    |
  50              		.loc 2 1942 3 view .LVU4
1943:Drivers/CMSIS/Include/core_cm4.h ****                            (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
  51              		.loc 2 1943 32 is_stmt 0 view .LVU5
  52 0004 0549     		ldr	r1, .L3
  53 0006 CA68     		ldr	r2, [r1, #12]
  54              		.loc 2 1943 40 view .LVU6
  55 0008 02F4E062 		and	r2, r2, #1792
1942:Drivers/CMSIS/Include/core_cm4.h ****                            (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
  56              		.loc 2 1942 17 view .LVU7
  57 000c 044B     		ldr	r3, .L3+4
  58 000e 1343     		orrs	r3, r3, r2
1942:Drivers/CMSIS/Include/core_cm4.h ****                            (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
  59              		.loc 2 1942 15 view .LVU8
  60 0010 CB60     		str	r3, [r1, #12]
1944:Drivers/CMSIS/Include/core_cm4.h ****                             SCB_AIRCR_SYSRESETREQ_Msk    );         /* Keep priority group unchange
1945:Drivers/CMSIS/Include/core_cm4.h ****   __DSB();                                                          /* Ensure completion of memory 
  61              		.loc 2 1945 3 is_stmt 1 view .LVU9
  62              	.LBB8:
  63              	.LBI8:
ARM GAS  /tmp/ccEpMq7M.s 			page 41


 269:Drivers/CMSIS/Include/cmsis_gcc.h **** {
  64              		.loc 3 269 27 view .LVU10
  65              	.LBB9:
  66              		.loc 3 271 3 view .LVU11
  67              		.syntax unified
  68              	@ 271 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
  69 0012 BFF34F8F 		dsb 0xF
  70              	@ 0 "" 2
  71              		.thumb
  72              		.syntax unified
  73              	.L2:
  74              	.LBE9:
  75              	.LBE8:
1946:Drivers/CMSIS/Include/core_cm4.h **** 
1947:Drivers/CMSIS/Include/core_cm4.h ****   for(;;)                                                           /* wait until reset */
  76              		.loc 2 1947 3 view .LVU12
1948:Drivers/CMSIS/Include/core_cm4.h ****   {
1949:Drivers/CMSIS/Include/core_cm4.h ****     __NOP();
  77              		.loc 2 1949 5 discriminator 1 view .LVU13
  78              		.syntax unified
  79              	@ 1949 "Drivers/CMSIS/Include/core_cm4.h" 1
  80 0016 00BF     		nop
  81              	@ 0 "" 2
1947:Drivers/CMSIS/Include/core_cm4.h ****   {
  82              		.loc 2 1947 3 view .LVU14
  83              		.thumb
  84              		.syntax unified
  85 0018 FDE7     		b	.L2
  86              	.L4:
  87 001a 00BF     		.align	2
  88              	.L3:
  89 001c 00ED00E0 		.word	-536810240
  90 0020 0400FA05 		.word	100270084
  91              		.cfi_endproc
  92              	.LFE121:
  94              		.section	.rodata.do_error.str1.4,"aMS",%progbits,1
  95              		.align	2
  96              	.LC0:
  97 0000 4552524F 		.ascii	"ERROR CFSR: %lu\011HFSR: %lu\015\012\000"
  97      52204346 
  97      53523A20 
  97      256C7509 
  97      48465352 
  98              		.section	.text.do_error,"ax",%progbits
  99              		.align	1
 100              		.global	do_error
 101              		.syntax unified
 102              		.thumb
 103              		.thumb_func
 105              	do_error:
 106              	.LVL0:
 107              	.LFB237:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
ARM GAS  /tmp/ccEpMq7M.s 			page 42


   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2024 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** #include "scheme.h"
  25:Core/Src/main.c **** #include <string.h>
  26:Core/Src/main.c **** #include <stdio.h>
  27:Core/Src/main.c **** #include <time.h> //for random values generation
  28:Core/Src/main.c **** #include <stdlib.h>
  29:Core/Src/main.c **** /* USER CODE END Includes */
  30:Core/Src/main.c **** 
  31:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  32:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  33:Core/Src/main.c **** typedef enum {
  34:Core/Src/main.c ****     RAW,
  35:Core/Src/main.c ****     MOVING_AVERAGE,
  36:Core/Src/main.c ****     RANDOM_NOISE
  37:Core/Src/main.c **** } FilterMode;
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* USER CODE END PTD */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  42:Core/Src/main.c **** /* USER CODE BEGIN PD */
  43:Core/Src/main.c **** #define ADC_BUFFER_SIZE 300
  44:Core/Src/main.c **** #define MOVING_AVG_SIZE 150
  45:Core/Src/main.c **** #define BUFFER_SIZE 70
  46:Core/Src/main.c **** #define CLI_BUFFER_SIZE 15
  47:Core/Src/main.c **** #define RANDOM_RANGE 300
  48:Core/Src/main.c **** #define DEBOUNCE_TIME_MS 50
  49:Core/Src/main.c **** #define WARNING_TIMEOUT_MS 5000
  50:Core/Src/main.c **** /* USER CODE END PD */
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  53:Core/Src/main.c **** /* USER CODE BEGIN PM */
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** /* USER CODE END PM */
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  58:Core/Src/main.c **** ADC_HandleTypeDef hadc1;
  59:Core/Src/main.c **** DMA_HandleTypeDef hdma_adc1;
  60:Core/Src/main.c **** 
  61:Core/Src/main.c **** TIM_HandleTypeDef htim3;
  62:Core/Src/main.c **** TIM_HandleTypeDef htim4;
ARM GAS  /tmp/ccEpMq7M.s 			page 43


  63:Core/Src/main.c **** 
  64:Core/Src/main.c **** UART_HandleTypeDef huart2;
  65:Core/Src/main.c **** 
  66:Core/Src/main.c **** /* USER CODE BEGIN PV */
  67:Core/Src/main.c **** //digital and analog variables
  68:Core/Src/main.c **** uint16_t lastAnalogValue = 0; 
  69:Core/Src/main.c **** uint16_t lastDigitalValue = 0;
  70:Core/Src/main.c **** 
  71:Core/Src/main.c **** uint16_t last_index = 0;//position of last written element on buffer
  72:Core/Src/main.c **** uint32_t adcBuffer[ADC_BUFFER_SIZE];//data structure for dma
  73:Core/Src/main.c **** 
  74:Core/Src/main.c **** //moving average variables
  75:Core/Src/main.c **** uint16_t adc_moving_average[MOVING_AVG_SIZE];
  76:Core/Src/main.c **** uint16_t buffer_index_moving_average = 0;
  77:Core/Src/main.c **** uint32_t sum = 0;
  78:Core/Src/main.c **** 
  79:Core/Src/main.c **** //millis for warning state
  80:Core/Src/main.c **** uint32_t lastTimer = 0;
  81:Core/Src/main.c **** uint32_t lastButtonPress = 0;//to avoid debouncing
  82:Core/Src/main.c **** 
  83:Core/Src/main.c **** //filter mode for data variables
  84:Core/Src/main.c **** FilterMode currentFilterMode = RAW;
  85:Core/Src/main.c **** char cli_command[CLI_BUFFER_SIZE];
  86:Core/Src/main.c **** uint8_t is_request_sended = 0;
  87:Core/Src/main.c **** 
  88:Core/Src/main.c **** //debug/info variables
  89:Core/Src/main.c **** char msg_buffer[BUFFER_SIZE];//buffer for serial msg
  90:Core/Src/main.c **** 
  91:Core/Src/main.c **** //state machine variables
  92:Core/Src/main.c **** // State human-readable names
  93:Core/Src/main.c **** const char *state_names[] = {"init", "wait_request", "error", "listening", "warning", "pause"};
  94:Core/Src/main.c **** 
  95:Core/Src/main.c **** // List of state functions
  96:Core/Src/main.c **** state_func_t *const state_table[NUM_STATES] = {
  97:Core/Src/main.c ****   do_init,         // in state init
  98:Core/Src/main.c ****   do_wait_request, // in state wait_request
  99:Core/Src/main.c ****   do_error,        // in state error
 100:Core/Src/main.c ****   do_listening,    // in state listening
 101:Core/Src/main.c ****   do_warning,      // in state warning
 102:Core/Src/main.c ****   do_pause,        // in state pause
 103:Core/Src/main.c **** };
 104:Core/Src/main.c **** 
 105:Core/Src/main.c **** HAL_StatusTypeDef halStatus = HAL_OK;
 106:Core/Src/main.c **** state_t current_state = STATE_INIT;
 107:Core/Src/main.c **** state_t next_state = STATE_WAIT_REQUEST;
 108:Core/Src/main.c **** state_t new_state = STATE_WAIT_REQUEST;
 109:Core/Src/main.c **** uint8_t is_running_error_timer = 0;
 110:Core/Src/main.c **** 
 111:Core/Src/main.c **** /* USER CODE END PV */
 112:Core/Src/main.c **** 
 113:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
 114:Core/Src/main.c **** void SystemClock_Config(void);
 115:Core/Src/main.c **** static void MX_GPIO_Init(void);
 116:Core/Src/main.c **** static void MX_DMA_Init(void);
 117:Core/Src/main.c **** static void MX_USART2_UART_Init(void);
 118:Core/Src/main.c **** static void MX_ADC1_Init(void);
 119:Core/Src/main.c **** static void MX_TIM3_Init(void);
ARM GAS  /tmp/ccEpMq7M.s 			page 44


 120:Core/Src/main.c **** static void MX_TIM4_Init(void);
 121:Core/Src/main.c **** /* USER CODE BEGIN PFP */
 122:Core/Src/main.c **** 
 123:Core/Src/main.c **** /* USER CODE END PFP */
 124:Core/Src/main.c **** 
 125:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
 126:Core/Src/main.c **** /* USER CODE BEGIN 0 */
 127:Core/Src/main.c **** 
 128:Core/Src/main.c **** /**
 129:Core/Src/main.c ****  * timers interrupt
 130:Core/Src/main.c ****  */
 131:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef* htim){
 132:Core/Src/main.c ****   if(htim->Instance == TIM3){
 133:Core/Src/main.c ****     //toggle pause state led
 134:Core/Src/main.c ****     HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_5);
 135:Core/Src/main.c ****   } else if(htim->Instance == TIM4){
 136:Core/Src/main.c ****     //toggle error state led
 137:Core/Src/main.c ****     HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_5);
 138:Core/Src/main.c ****   }
 139:Core/Src/main.c **** }
 140:Core/Src/main.c **** 
 141:Core/Src/main.c **** /**
 142:Core/Src/main.c ****  * Callback function for gpio digital input
 143:Core/Src/main.c ****  */
 144:Core/Src/main.c **** void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin){
 145:Core/Src/main.c ****   if(GPIO_Pin == GPIO_PIN_2){
 146:Core/Src/main.c ****     //DIGITAL VALUE SENSOR
 147:Core/Src/main.c ****     lastDigitalValue = HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_2);
 148:Core/Src/main.c ****   }
 149:Core/Src/main.c ****   else if(GPIO_Pin == GPIO_PIN_13){
 150:Core/Src/main.c ****     //USER BUTTON
 151:Core/Src/main.c ****     uint32_t currentTime = HAL_GetTick();
 152:Core/Src/main.c **** 
 153:Core/Src/main.c ****     //check for debouncing
 154:Core/Src/main.c ****     if ((currentTime - lastButtonPress) < DEBOUNCE_TIME_MS){
 155:Core/Src/main.c ****       return;//ignore interupt
 156:Core/Src/main.c ****     }
 157:Core/Src/main.c ****     lastButtonPress = currentTime;
 158:Core/Src/main.c **** 
 159:Core/Src/main.c ****     if(current_state == STATE_WAIT_REQUEST || current_state == STATE_PAUSE){
 160:Core/Src/main.c ****       //change state to listening
 161:Core/Src/main.c ****       current_state = next_state = new_state = STATE_LISTENING;
 162:Core/Src/main.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, GPIO_PIN_SET);
 163:Core/Src/main.c ****       halStatus = HAL_UART_AbortReceive_IT(&huart2);//deactivate cli
 164:Core/Src/main.c ****       if(halStatus != HAL_OK){
 165:Core/Src/main.c ****         next_state = STATE_ERROR;
 166:Core/Src/main.c ****         return;
 167:Core/Src/main.c ****       }
 168:Core/Src/main.c ****       lastTimer = HAL_GetTick();
 169:Core/Src/main.c **** 
 170:Core/Src/main.c ****       //stop all timers
 171:Core/Src/main.c ****       halStatus = HAL_TIM_Base_Stop_IT(&htim3);
 172:Core/Src/main.c ****       if(halStatus != HAL_OK){
 173:Core/Src/main.c ****         next_state = STATE_ERROR;
 174:Core/Src/main.c ****         return;
 175:Core/Src/main.c ****       }
 176:Core/Src/main.c **** 
ARM GAS  /tmp/ccEpMq7M.s 			page 45


 177:Core/Src/main.c ****       halStatus = HAL_TIM_Base_Stop_IT(&htim4);
 178:Core/Src/main.c ****       if(halStatus != HAL_OK){
 179:Core/Src/main.c ****         next_state = STATE_ERROR;
 180:Core/Src/main.c ****         return;
 181:Core/Src/main.c ****       }
 182:Core/Src/main.c ****     }else if(current_state == STATE_LISTENING){
 183:Core/Src/main.c ****       //change state to pause
 184:Core/Src/main.c ****       current_state = next_state = new_state = STATE_PAUSE;
 185:Core/Src/main.c ****       //start timer
 186:Core/Src/main.c ****       HAL_TIM_Base_Start_IT(&htim3);
 187:Core/Src/main.c ****     }else if(current_state == STATE_WARNING){
 188:Core/Src/main.c ****       //change state to wait request
 189:Core/Src/main.c ****       current_state = next_state = STATE_WAIT_REQUEST;
 190:Core/Src/main.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, GPIO_PIN_RESET);
 191:Core/Src/main.c ****       //stop all timers
 192:Core/Src/main.c ****       halStatus = HAL_TIM_Base_Stop_IT(&htim3);
 193:Core/Src/main.c ****       if(halStatus != HAL_OK){
 194:Core/Src/main.c ****         next_state = STATE_ERROR;
 195:Core/Src/main.c ****         return;
 196:Core/Src/main.c ****       }
 197:Core/Src/main.c ****       halStatus = HAL_TIM_Base_Stop_IT(&htim4);
 198:Core/Src/main.c ****       if(halStatus != HAL_OK){
 199:Core/Src/main.c ****         next_state = STATE_ERROR;
 200:Core/Src/main.c ****         return;
 201:Core/Src/main.c ****       }
 202:Core/Src/main.c ****     }else if(current_state == STATE_ERROR){
 203:Core/Src/main.c ****       //reset the board
 204:Core/Src/main.c ****       is_running_error_timer = 0;
 205:Core/Src/main.c ****       NVIC_SystemReset();
 206:Core/Src/main.c ****     }
 207:Core/Src/main.c **** 
 208:Core/Src/main.c ****     lastTimer = HAL_GetTick();//reset timer
 209:Core/Src/main.c ****   }
 210:Core/Src/main.c **** }
 211:Core/Src/main.c **** 
 212:Core/Src/main.c **** /**
 213:Core/Src/main.c **** Based on the user input, change the filter mode.
 214:Core/Src/main.c **** If the command is unknown, the current filter is not changed but
 215:Core/Src/main.c **** a false value is returned
 216:Core/Src/main.c **** */
 217:Core/Src/main.c **** u_int8_t handle_cli_command(){
 218:Core/Src/main.c ****     if (strcmp(cli_command, "raw") == 0) {
 219:Core/Src/main.c ****         currentFilterMode = RAW;
 220:Core/Src/main.c ****     } else if (strcmp(cli_command, "moving average") == 0) {
 221:Core/Src/main.c ****         currentFilterMode = MOVING_AVERAGE;
 222:Core/Src/main.c ****     } else if (strcmp(cli_command, "random noise") == 0) {
 223:Core/Src/main.c ****         currentFilterMode = RANDOM_NOISE;
 224:Core/Src/main.c ****     } else {
 225:Core/Src/main.c ****         //comand not recognized
 226:Core/Src/main.c ****         memset(cli_command, '\0', sizeof(cli_command)); 
 227:Core/Src/main.c ****         return 1;
 228:Core/Src/main.c ****     }
 229:Core/Src/main.c ****     //clear buffer
 230:Core/Src/main.c ****     memset(cli_command, '\0', sizeof(cli_command)); 
 231:Core/Src/main.c ****     return 0;
 232:Core/Src/main.c **** }
 233:Core/Src/main.c **** 
ARM GAS  /tmp/ccEpMq7M.s 			page 46


 234:Core/Src/main.c **** /**
 235:Core/Src/main.c ****  * Callback function to handle the receiving of a command from the user
 236:Core/Src/main.c ****  */
 237:Core/Src/main.c **** void HAL_UARTEx_RxEventCallback(UART_HandleTypeDef *huart, uint16_t Size)
 238:Core/Src/main.c **** {
 239:Core/Src/main.c ****   //if we are not in pause or wait request state, ignore the command received
 240:Core/Src/main.c ****   //wait for next input
 241:Core/Src/main.c ****   if(current_state!= STATE_PAUSE && current_state != STATE_WAIT_REQUEST){
 242:Core/Src/main.c ****     memset(cli_command, '\0', sizeof(cli_command)); 
 243:Core/Src/main.c ****     return;
 244:Core/Src/main.c ****   }
 245:Core/Src/main.c **** 
 246:Core/Src/main.c ****   //check if command is unknown or not
 247:Core/Src/main.c ****   uint8_t unknownComand = handle_cli_command();
 248:Core/Src/main.c **** 
 249:Core/Src/main.c ****   if(unknownComand){
 250:Core/Src/main.c ****     sprintf(msg_buffer, "Command not valid. No change to filter mode.\r\n");
 251:Core/Src/main.c ****     HAL_UART_Transmit(&huart2, (uint8_t *)msg_buffer, strlen(msg_buffer), HAL_MAX_DELAY);
 252:Core/Src/main.c ****   }
 253:Core/Src/main.c ****   else{
 254:Core/Src/main.c ****     sprintf(msg_buffer, "Filter mode modified!\r\n");
 255:Core/Src/main.c ****     HAL_UART_Transmit(&huart2, (uint8_t *)msg_buffer, strlen(msg_buffer), HAL_MAX_DELAY);
 256:Core/Src/main.c ****   }
 257:Core/Src/main.c **** 
 258:Core/Src/main.c ****   //wait for next input
 259:Core/Src/main.c ****   halStatus = HAL_UARTEx_ReceiveToIdle_IT(&huart2, (uint8_t *)cli_command, BUFFER_SIZE);
 260:Core/Src/main.c ****   if(halStatus != HAL_OK){
 261:Core/Src/main.c ****     next_state = STATE_ERROR;
 262:Core/Src/main.c ****   }
 263:Core/Src/main.c **** }
 264:Core/Src/main.c **** 
 265:Core/Src/main.c **** /* USER CODE END 0 */
 266:Core/Src/main.c **** 
 267:Core/Src/main.c **** /**
 268:Core/Src/main.c ****   * @brief  The application entry point.
 269:Core/Src/main.c ****   * @retval int
 270:Core/Src/main.c ****   */
 271:Core/Src/main.c **** int main(void)
 272:Core/Src/main.c **** {
 273:Core/Src/main.c **** 
 274:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 275:Core/Src/main.c **** 
 276:Core/Src/main.c ****   /* USER CODE END 1 */
 277:Core/Src/main.c **** 
 278:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 279:Core/Src/main.c **** 
 280:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 281:Core/Src/main.c **** 
 282:Core/Src/main.c ****   /* USER CODE END Init */
 283:Core/Src/main.c **** 
 284:Core/Src/main.c **** 
 285:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 286:Core/Src/main.c **** 
 287:Core/Src/main.c ****   /* USER CODE END SysInit */
 288:Core/Src/main.c **** 
 289:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 290:Core/Src/main.c **** 
ARM GAS  /tmp/ccEpMq7M.s 			page 47


 291:Core/Src/main.c ****   /* USER CODE END 2 */
 292:Core/Src/main.c **** 
 293:Core/Src/main.c ****   /* Infinite loop */
 294:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 295:Core/Src/main.c ****   while (1)
 296:Core/Src/main.c ****   {
 297:Core/Src/main.c ****     /* USER CODE END WHILE */
 298:Core/Src/main.c **** 
 299:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 300:Core/Src/main.c ****     current_state = run_state(NULL);
 301:Core/Src/main.c ****   }
 302:Core/Src/main.c ****   /* USER CODE END 3 */
 303:Core/Src/main.c **** }
 304:Core/Src/main.c **** 
 305:Core/Src/main.c **** /**
 306:Core/Src/main.c ****   * @brief System Clock Configuration
 307:Core/Src/main.c ****   * @retval None
 308:Core/Src/main.c ****   */
 309:Core/Src/main.c **** void SystemClock_Config(void)
 310:Core/Src/main.c **** {
 311:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 312:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 313:Core/Src/main.c **** 
 314:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 315:Core/Src/main.c ****   */
 316:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 317:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 318:Core/Src/main.c **** 
 319:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 320:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 321:Core/Src/main.c ****   */
 322:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 323:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 324:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 325:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 326:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 327:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 16;
 328:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 336;
 329:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 330:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 331:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 332:Core/Src/main.c ****   {
 333:Core/Src/main.c ****     Error_Handler();
 334:Core/Src/main.c ****   }
 335:Core/Src/main.c **** 
 336:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 337:Core/Src/main.c ****   */
 338:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 339:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 340:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 341:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 342:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 343:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 344:Core/Src/main.c **** 
 345:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 346:Core/Src/main.c ****   {
 347:Core/Src/main.c ****     Error_Handler();
ARM GAS  /tmp/ccEpMq7M.s 			page 48


 348:Core/Src/main.c ****   }
 349:Core/Src/main.c **** }
 350:Core/Src/main.c **** 
 351:Core/Src/main.c **** /**
 352:Core/Src/main.c ****   * @brief ADC1 Initialization Function
 353:Core/Src/main.c ****   * @param None
 354:Core/Src/main.c ****   * @retval None
 355:Core/Src/main.c ****   */
 356:Core/Src/main.c **** static void MX_ADC1_Init(void)
 357:Core/Src/main.c **** {
 358:Core/Src/main.c **** 
 359:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 0 */
 360:Core/Src/main.c **** 
 361:Core/Src/main.c ****   /* USER CODE END ADC1_Init 0 */
 362:Core/Src/main.c **** 
 363:Core/Src/main.c ****   ADC_ChannelConfTypeDef sConfig = {0};
 364:Core/Src/main.c **** 
 365:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 1 */
 366:Core/Src/main.c **** 
 367:Core/Src/main.c ****   /* USER CODE END ADC1_Init 1 */
 368:Core/Src/main.c **** 
 369:Core/Src/main.c ****   /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of con
 370:Core/Src/main.c ****   */
 371:Core/Src/main.c ****   hadc1.Instance = ADC1;
 372:Core/Src/main.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 373:Core/Src/main.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 374:Core/Src/main.c ****   hadc1.Init.ScanConvMode = DISABLE;
 375:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = ENABLE;
 376:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 377:Core/Src/main.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 378:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 379:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 380:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 1;
 381:Core/Src/main.c ****   hadc1.Init.DMAContinuousRequests = ENABLE;
 382:Core/Src/main.c ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 383:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 384:Core/Src/main.c ****   {
 385:Core/Src/main.c ****     Error_Handler();
 386:Core/Src/main.c ****   }
 387:Core/Src/main.c **** 
 388:Core/Src/main.c ****   /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and it
 389:Core/Src/main.c ****   */
 390:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_0;
 391:Core/Src/main.c ****   sConfig.Rank = 1;
 392:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 393:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 394:Core/Src/main.c ****   {
 395:Core/Src/main.c ****     Error_Handler();
 396:Core/Src/main.c ****   }
 397:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 2 */
 398:Core/Src/main.c **** 
 399:Core/Src/main.c ****   /* USER CODE END ADC1_Init 2 */
 400:Core/Src/main.c **** 
 401:Core/Src/main.c **** }
 402:Core/Src/main.c **** 
 403:Core/Src/main.c **** /**
 404:Core/Src/main.c ****   * @brief TIM3 Initialization Function
ARM GAS  /tmp/ccEpMq7M.s 			page 49


 405:Core/Src/main.c ****   * @param None
 406:Core/Src/main.c ****   * @retval None
 407:Core/Src/main.c ****   */
 408:Core/Src/main.c **** static void MX_TIM3_Init(void)
 409:Core/Src/main.c **** {
 410:Core/Src/main.c **** 
 411:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 0 */
 412:Core/Src/main.c **** 
 413:Core/Src/main.c ****   /* USER CODE END TIM3_Init 0 */
 414:Core/Src/main.c **** 
 415:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 416:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 417:Core/Src/main.c **** 
 418:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 1 */
 419:Core/Src/main.c **** 
 420:Core/Src/main.c ****   /* USER CODE END TIM3_Init 1 */
 421:Core/Src/main.c ****   htim3.Instance = TIM3;
 422:Core/Src/main.c ****   htim3.Init.Prescaler = 9999;
 423:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 424:Core/Src/main.c ****   htim3.Init.Period = 7199;
 425:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 426:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 427:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 428:Core/Src/main.c ****   {
 429:Core/Src/main.c ****     Error_Handler();
 430:Core/Src/main.c ****   }
 431:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 432:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 433:Core/Src/main.c ****   {
 434:Core/Src/main.c ****     Error_Handler();
 435:Core/Src/main.c ****   }
 436:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 437:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 438:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 439:Core/Src/main.c ****   {
 440:Core/Src/main.c ****     Error_Handler();
 441:Core/Src/main.c ****   }
 442:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 2 */
 443:Core/Src/main.c **** 
 444:Core/Src/main.c ****   /* USER CODE END TIM3_Init 2 */
 445:Core/Src/main.c **** 
 446:Core/Src/main.c **** }
 447:Core/Src/main.c **** 
 448:Core/Src/main.c **** /**
 449:Core/Src/main.c ****   * @brief TIM4 Initialization Function
 450:Core/Src/main.c ****   * @param None
 451:Core/Src/main.c ****   * @retval None
 452:Core/Src/main.c ****   */
 453:Core/Src/main.c **** static void MX_TIM4_Init(void)
 454:Core/Src/main.c **** {
 455:Core/Src/main.c **** 
 456:Core/Src/main.c ****   /* USER CODE BEGIN TIM4_Init 0 */
 457:Core/Src/main.c **** 
 458:Core/Src/main.c ****   /* USER CODE END TIM4_Init 0 */
 459:Core/Src/main.c **** 
 460:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 461:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
ARM GAS  /tmp/ccEpMq7M.s 			page 50


 462:Core/Src/main.c **** 
 463:Core/Src/main.c ****   /* USER CODE BEGIN TIM4_Init 1 */
 464:Core/Src/main.c **** 
 465:Core/Src/main.c ****   /* USER CODE END TIM4_Init 1 */
 466:Core/Src/main.c ****   htim4.Instance = TIM4;
 467:Core/Src/main.c ****   htim4.Init.Prescaler = 9999;
 468:Core/Src/main.c ****   htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 469:Core/Src/main.c ****   htim4.Init.Period = 1679;
 470:Core/Src/main.c ****   htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 471:Core/Src/main.c ****   htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 472:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim4) != HAL_OK)
 473:Core/Src/main.c ****   {
 474:Core/Src/main.c ****     Error_Handler();
 475:Core/Src/main.c ****   }
 476:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 477:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim4, &sClockSourceConfig) != HAL_OK)
 478:Core/Src/main.c ****   {
 479:Core/Src/main.c ****     Error_Handler();
 480:Core/Src/main.c ****   }
 481:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 482:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 483:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 484:Core/Src/main.c ****   {
 485:Core/Src/main.c ****     Error_Handler();
 486:Core/Src/main.c ****   }
 487:Core/Src/main.c ****   /* USER CODE BEGIN TIM4_Init 2 */
 488:Core/Src/main.c **** 
 489:Core/Src/main.c ****   /* USER CODE END TIM4_Init 2 */
 490:Core/Src/main.c **** 
 491:Core/Src/main.c **** }
 492:Core/Src/main.c **** 
 493:Core/Src/main.c **** /**
 494:Core/Src/main.c ****   * @brief USART2 Initialization Function
 495:Core/Src/main.c ****   * @param None
 496:Core/Src/main.c ****   * @retval None
 497:Core/Src/main.c ****   */
 498:Core/Src/main.c **** static void MX_USART2_UART_Init(void)
 499:Core/Src/main.c **** {
 500:Core/Src/main.c **** 
 501:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 0 */
 502:Core/Src/main.c **** 
 503:Core/Src/main.c ****   /* USER CODE END USART2_Init 0 */
 504:Core/Src/main.c **** 
 505:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 1 */
 506:Core/Src/main.c **** 
 507:Core/Src/main.c ****   /* USER CODE END USART2_Init 1 */
 508:Core/Src/main.c ****   huart2.Instance = USART2;
 509:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 510:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 511:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 512:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 513:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 514:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 515:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 516:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 517:Core/Src/main.c ****   {
 518:Core/Src/main.c ****     Error_Handler();
ARM GAS  /tmp/ccEpMq7M.s 			page 51


 519:Core/Src/main.c ****   }
 520:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 2 */
 521:Core/Src/main.c **** 
 522:Core/Src/main.c ****   /* USER CODE END USART2_Init 2 */
 523:Core/Src/main.c **** 
 524:Core/Src/main.c **** }
 525:Core/Src/main.c **** 
 526:Core/Src/main.c **** /**
 527:Core/Src/main.c ****   * Enable DMA controller clock
 528:Core/Src/main.c ****   */
 529:Core/Src/main.c **** static void MX_DMA_Init(void)
 530:Core/Src/main.c **** {
 531:Core/Src/main.c **** 
 532:Core/Src/main.c ****   /* DMA controller clock enable */
 533:Core/Src/main.c ****   __HAL_RCC_DMA2_CLK_ENABLE();
 534:Core/Src/main.c **** 
 535:Core/Src/main.c ****   /* DMA interrupt init */
 536:Core/Src/main.c ****   /* DMA2_Stream0_IRQn interrupt configuration */
 537:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA2_Stream0_IRQn, 0, 0);
 538:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA2_Stream0_IRQn);
 539:Core/Src/main.c **** 
 540:Core/Src/main.c **** }
 541:Core/Src/main.c **** 
 542:Core/Src/main.c **** /**
 543:Core/Src/main.c ****   * @brief GPIO Initialization Function
 544:Core/Src/main.c ****   * @param None
 545:Core/Src/main.c ****   * @retval None
 546:Core/Src/main.c ****   */
 547:Core/Src/main.c **** static void MX_GPIO_Init(void)
 548:Core/Src/main.c **** {
 549:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 550:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 551:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
 552:Core/Src/main.c **** 
 553:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 554:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
 555:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 556:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 557:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 558:Core/Src/main.c **** 
 559:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 560:Core/Src/main.c ****   HAL_GPIO_WritePin(LD2_GPIO_Port, LD2_Pin, GPIO_PIN_RESET);
 561:Core/Src/main.c **** 
 562:Core/Src/main.c ****   /*Configure GPIO pin : B1_Pin */
 563:Core/Src/main.c ****   GPIO_InitStruct.Pin = B1_Pin;
 564:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 565:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 566:Core/Src/main.c ****   HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 567:Core/Src/main.c **** 
 568:Core/Src/main.c ****   /*Configure GPIO pin : PC2 */
 569:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_2;
 570:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING_FALLING;
 571:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 572:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 573:Core/Src/main.c **** 
 574:Core/Src/main.c ****   /*Configure GPIO pin : LD2_Pin */
 575:Core/Src/main.c ****   GPIO_InitStruct.Pin = LD2_Pin;
ARM GAS  /tmp/ccEpMq7M.s 			page 52


 576:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 577:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 578:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 579:Core/Src/main.c ****   HAL_GPIO_Init(LD2_GPIO_Port, &GPIO_InitStruct);
 580:Core/Src/main.c **** 
 581:Core/Src/main.c ****   /* EXTI interrupt init*/
 582:Core/Src/main.c ****   HAL_NVIC_SetPriority(EXTI2_IRQn, 0, 0);
 583:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI2_IRQn);
 584:Core/Src/main.c **** 
 585:Core/Src/main.c ****   HAL_NVIC_SetPriority(EXTI15_10_IRQn, 0, 0);
 586:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI15_10_IRQn);
 587:Core/Src/main.c **** 
 588:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 589:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
 590:Core/Src/main.c **** }
 591:Core/Src/main.c **** 
 592:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 593:Core/Src/main.c **** 
 594:Core/Src/main.c **** // No transition functions
 595:Core/Src/main.c **** 
 596:Core/Src/main.c **** /*  ____  _        _       
 597:Core/Src/main.c ****  * / ___|| |_ __ _| |_ ___ 
 598:Core/Src/main.c ****  * \___ \| __/ _` | __/ _ \
 599:Core/Src/main.c ****  *  ___) | || (_| | ||  __/
 600:Core/Src/main.c ****  * |____/ \__\__,_|\__\___|
 601:Core/Src/main.c ****  *                         
 602:Core/Src/main.c ****  *   __                  _   _                 
 603:Core/Src/main.c ****  *  / _|_   _ _ __   ___| |_(_) ___  _ __  ___ 
 604:Core/Src/main.c ****  * | |_| | | | '_ \ / __| __| |/ _ \| '_ \/ __|
 605:Core/Src/main.c ****  * |  _| |_| | | | | (__| |_| | (_) | | | \__ \
 606:Core/Src/main.c ****  * |_|  \__,_|_| |_|\___|\__|_|\___/|_| |_|___/
 607:Core/Src/main.c ****  */                                             
 608:Core/Src/main.c **** 
 609:Core/Src/main.c **** // Function to be executed in state init
 610:Core/Src/main.c **** // valid return states: STATE_WAIT_REQUEST, STATE_ERROR
 611:Core/Src/main.c **** state_t do_init(state_data_t *data) {
 612:Core/Src/main.c ****   next_state = STATE_WAIT_REQUEST;
 613:Core/Src/main.c ****   is_request_sended = 0;
 614:Core/Src/main.c ****   
 615:Core/Src/main.c ****   srand(time(NULL));//set seed for random number generator
 616:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 617:Core/Src/main.c ****   halStatus = HAL_Init();
 618:Core/Src/main.c **** 
 619:Core/Src/main.c ****   if(halStatus != HAL_OK){
 620:Core/Src/main.c ****     next_state  = STATE_ERROR;
 621:Core/Src/main.c ****     return next_state;
 622:Core/Src/main.c ****   }
 623:Core/Src/main.c **** 
 624:Core/Src/main.c ****   /* Configure the system clock */
 625:Core/Src/main.c ****   SystemClock_Config();
 626:Core/Src/main.c **** 
 627:Core/Src/main.c ****   /* Initialize all configured peripherals */
 628:Core/Src/main.c ****   MX_GPIO_Init();
 629:Core/Src/main.c ****   MX_DMA_Init();
 630:Core/Src/main.c ****   MX_USART2_UART_Init();
 631:Core/Src/main.c ****   MX_ADC1_Init();
 632:Core/Src/main.c ****   MX_TIM3_Init();
ARM GAS  /tmp/ccEpMq7M.s 			page 53


 633:Core/Src/main.c ****   MX_TIM4_Init();
 634:Core/Src/main.c **** 
 635:Core/Src/main.c ****   // Initialize the DMA conversion
 636:Core/Src/main.c ****   halStatus = HAL_ADC_Start_DMA(&hadc1, adcBuffer, ADC_BUFFER_SIZE);
 637:Core/Src/main.c ****   if(halStatus != HAL_OK){
 638:Core/Src/main.c ****     next_state  = STATE_ERROR;
 639:Core/Src/main.c ****     return next_state;
 640:Core/Src/main.c ****   }
 641:Core/Src/main.c **** 
 642:Core/Src/main.c ****   lastTimer = HAL_GetTick();//start time of MCU
 643:Core/Src/main.c **** 
 644:Core/Src/main.c ****   next_state = STATE_WAIT_REQUEST;
 645:Core/Src/main.c ****   return next_state;
 646:Core/Src/main.c **** }
 647:Core/Src/main.c **** 
 648:Core/Src/main.c **** 
 649:Core/Src/main.c **** // Function to be executed in state wait_request
 650:Core/Src/main.c **** // valid return states: STATE_ERROR, STATE_LISTENING
 651:Core/Src/main.c **** state_t do_wait_request(state_data_t *data) {
 652:Core/Src/main.c ****   if(!is_request_sended){
 653:Core/Src/main.c ****     sprintf(msg_buffer, "C:\r\n");//send command request to user
 654:Core/Src/main.c ****     halStatus = HAL_UART_Transmit(&huart2, (uint8_t *)msg_buffer, strlen(msg_buffer), HAL_MAX_DELAY
 655:Core/Src/main.c ****     if(halStatus != HAL_OK){
 656:Core/Src/main.c ****       next_state  = STATE_ERROR;
 657:Core/Src/main.c ****       return next_state;
 658:Core/Src/main.c ****     }
 659:Core/Src/main.c ****     is_request_sended = 1;
 660:Core/Src/main.c **** 
 661:Core/Src/main.c ****     //wait for possible input from user
 662:Core/Src/main.c ****     halStatus = HAL_UARTEx_ReceiveToIdle_IT(&huart2, (u_int8_t *)cli_command, BUFFER_SIZE);
 663:Core/Src/main.c ****     if(halStatus != HAL_OK){
 664:Core/Src/main.c ****       next_state = STATE_ERROR;
 665:Core/Src/main.c ****       return next_state;
 666:Core/Src/main.c ****     }
 667:Core/Src/main.c ****   }
 668:Core/Src/main.c ****   
 669:Core/Src/main.c ****   return next_state;
 670:Core/Src/main.c **** }
 671:Core/Src/main.c **** 
 672:Core/Src/main.c **** 
 673:Core/Src/main.c **** // Function to be executed in state error
 674:Core/Src/main.c **** // valid return states: NO_CHANGE
 675:Core/Src/main.c **** state_t do_error(state_data_t *data) {
 108              		.loc 1 675 38 view -0
 109              		.cfi_startproc
 110              		@ args = 0, pretend = 0, frame = 0
 111              		@ frame_needed = 0, uses_anonymous_args = 0
 112              		.loc 1 675 38 is_stmt 0 view .LVU16
 113 0000 10B5     		push	{r4, lr}
 114              		.cfi_def_cfa_offset 8
 115              		.cfi_offset 4, -8
 116              		.cfi_offset 14, -4
 676:Core/Src/main.c ****   if(!is_running_error_timer){
 117              		.loc 1 676 3 is_stmt 1 view .LVU17
 118              		.loc 1 676 6 is_stmt 0 view .LVU18
 119 0002 174B     		ldr	r3, .L12
 120 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  /tmp/ccEpMq7M.s 			page 54


 121              		.loc 1 676 5 view .LVU19
 122 0006 FBB1     		cbz	r3, .L10
 123              	.LVL1:
 124              	.L6:
 677:Core/Src/main.c ****     HAL_TIM_Base_Start_IT(&htim4);
 678:Core/Src/main.c ****     is_running_error_timer = 1;
 679:Core/Src/main.c ****   }
 680:Core/Src/main.c **** 
 681:Core/Src/main.c ****   if(is_request_sended){
 125              		.loc 1 681 3 is_stmt 1 view .LVU20
 126              		.loc 1 681 6 is_stmt 0 view .LVU21
 127 0008 164B     		ldr	r3, .L12+4
 128 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 129              		.loc 1 681 5 view .LVU22
 130 000c 2BB1     		cbz	r3, .L7
 682:Core/Src/main.c ****     //deactivate cli
 683:Core/Src/main.c ****     halStatus = HAL_UART_AbortReceive_IT(&huart2);
 131              		.loc 1 683 5 is_stmt 1 view .LVU23
 132              		.loc 1 683 17 is_stmt 0 view .LVU24
 133 000e 1648     		ldr	r0, .L12+8
 134 0010 FFF7FEFF 		bl	HAL_UART_AbortReceive_IT
 135              	.LVL2:
 136              		.loc 1 683 15 discriminator 1 view .LVU25
 137 0014 154B     		ldr	r3, .L12+12
 138 0016 1870     		strb	r0, [r3]
 684:Core/Src/main.c ****     if(halStatus != HAL_OK){
 139              		.loc 1 684 5 is_stmt 1 view .LVU26
 140              		.loc 1 684 7 is_stmt 0 view .LVU27
 141 0018 E8B9     		cbnz	r0, .L11
 142              	.L7:
 685:Core/Src/main.c ****       next_state = STATE_ERROR;
 686:Core/Src/main.c ****       return next_state;
 687:Core/Src/main.c ****     }
 688:Core/Src/main.c ****   }
 689:Core/Src/main.c **** 
 690:Core/Src/main.c ****   //retrieve last errors raised
 691:Core/Src/main.c ****   //CFSR (Configurable Fault Status Register)
 692:Core/Src/main.c ****   uint32_t cfsr = SCB->CFSR;
 143              		.loc 1 692 3 is_stmt 1 view .LVU28
 144              		.loc 1 692 12 is_stmt 0 view .LVU29
 145 001a 154B     		ldr	r3, .L12+16
 146 001c 9A6A     		ldr	r2, [r3, #40]
 147              	.LVL3:
 693:Core/Src/main.c ****   //HFSR (HardFault Status Register)
 694:Core/Src/main.c ****   uint32_t hfsr = SCB->HFSR;
 148              		.loc 1 694 3 is_stmt 1 view .LVU30
 149              		.loc 1 694 12 is_stmt 0 view .LVU31
 150 001e DB6A     		ldr	r3, [r3, #44]
 151              	.LVL4:
 695:Core/Src/main.c ****   sprintf(msg_buffer, "ERROR CFSR: %lu\tHFSR: %lu\r\n", cfsr, hfsr);
 152              		.loc 1 695 3 is_stmt 1 view .LVU32
 153 0020 144C     		ldr	r4, .L12+20
 154 0022 1549     		ldr	r1, .L12+24
 155 0024 2046     		mov	r0, r4
 156 0026 FFF7FEFF 		bl	sprintf
 157              	.LVL5:
 696:Core/Src/main.c ****   halStatus = HAL_UART_Transmit(&huart2, (uint8_t *)msg_buffer, strlen(msg_buffer), HAL_MAX_DELAY);
ARM GAS  /tmp/ccEpMq7M.s 			page 55


 158              		.loc 1 696 3 view .LVU33
 159              		.loc 1 696 65 is_stmt 0 view .LVU34
 160 002a 2046     		mov	r0, r4
 161 002c FFF7FEFF 		bl	strlen
 162              	.LVL6:
 163              		.loc 1 696 15 discriminator 1 view .LVU35
 164 0030 4FF0FF33 		mov	r3, #-1
 165 0034 82B2     		uxth	r2, r0
 166 0036 2146     		mov	r1, r4
 167 0038 0B48     		ldr	r0, .L12+8
 168 003a FFF7FEFF 		bl	HAL_UART_Transmit
 169              	.LVL7:
 170              		.loc 1 696 13 discriminator 2 view .LVU36
 171 003e 0B4B     		ldr	r3, .L12+12
 172 0040 1870     		strb	r0, [r3]
 697:Core/Src/main.c **** 
 698:Core/Src/main.c ****   return next_state;
 173              		.loc 1 698 3 is_stmt 1 view .LVU37
 174              		.loc 1 698 10 is_stmt 0 view .LVU38
 175 0042 0E4B     		ldr	r3, .L12+28
 176 0044 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 177              	.LVL8:
 178              	.L8:
 699:Core/Src/main.c **** }
 179              		.loc 1 699 1 view .LVU39
 180 0046 10BD     		pop	{r4, pc}
 181              	.LVL9:
 182              	.L10:
 677:Core/Src/main.c ****     is_running_error_timer = 1;
 183              		.loc 1 677 5 is_stmt 1 view .LVU40
 184 0048 0D48     		ldr	r0, .L12+32
 185              	.LVL10:
 677:Core/Src/main.c ****     is_running_error_timer = 1;
 186              		.loc 1 677 5 is_stmt 0 view .LVU41
 187 004a FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 188              	.LVL11:
 678:Core/Src/main.c ****   }
 189              		.loc 1 678 5 is_stmt 1 view .LVU42
 678:Core/Src/main.c ****   }
 190              		.loc 1 678 28 is_stmt 0 view .LVU43
 191 004e 044B     		ldr	r3, .L12
 192 0050 0122     		movs	r2, #1
 193 0052 1A70     		strb	r2, [r3]
 194 0054 D8E7     		b	.L6
 195              	.L11:
 685:Core/Src/main.c ****       return next_state;
 196              		.loc 1 685 7 is_stmt 1 view .LVU44
 685:Core/Src/main.c ****       return next_state;
 197              		.loc 1 685 18 is_stmt 0 view .LVU45
 198 0056 0220     		movs	r0, #2
 199 0058 084B     		ldr	r3, .L12+28
 200 005a 1870     		strb	r0, [r3]
 686:Core/Src/main.c ****     }
 201              		.loc 1 686 7 is_stmt 1 view .LVU46
 686:Core/Src/main.c ****     }
 202              		.loc 1 686 14 is_stmt 0 view .LVU47
 203 005c F3E7     		b	.L8
ARM GAS  /tmp/ccEpMq7M.s 			page 56


 204              	.L13:
 205 005e 00BF     		.align	2
 206              	.L12:
 207 0060 00000000 		.word	is_running_error_timer
 208 0064 00000000 		.word	is_request_sended
 209 0068 00000000 		.word	huart2
 210 006c 00000000 		.word	halStatus
 211 0070 00ED00E0 		.word	-536810240
 212 0074 00000000 		.word	msg_buffer
 213 0078 00000000 		.word	.LC0
 214 007c 00000000 		.word	next_state
 215 0080 00000000 		.word	htim4
 216              		.cfi_endproc
 217              	.LFE237:
 219              		.section	.rodata.do_warning.str1.4,"aMS",%progbits,1
 220              		.align	2
 221              	.LC1:
 222 0000 5741524E 		.ascii	"WARNING\015\012\000"
 222      494E470D 
 222      0A00
 223              		.section	.text.do_warning,"ax",%progbits
 224              		.align	1
 225              		.global	do_warning
 226              		.syntax unified
 227              		.thumb
 228              		.thumb_func
 230              	do_warning:
 231              	.LVL12:
 232              	.LFB239:
 700:Core/Src/main.c **** 
 701:Core/Src/main.c **** 
 702:Core/Src/main.c **** // Function to be executed in state listening
 703:Core/Src/main.c **** // valid return states: STATE_ERROR, STATE_WARNING, STATE_PAUSE
 704:Core/Src/main.c **** state_t do_listening(state_data_t *data) {
 705:Core/Src/main.c ****   is_request_sended = 0;
 706:Core/Src/main.c **** 
 707:Core/Src/main.c ****   //read latest analog value wrote on buffer
 708:Core/Src/main.c ****   last_index = (BUFFER_SIZE - __HAL_DMA_GET_COUNTER(&hdma_adc1)) % BUFFER_SIZE;
 709:Core/Src/main.c ****   lastAnalogValue = adcBuffer[last_index];
 710:Core/Src/main.c **** 
 711:Core/Src/main.c ****   //update moving average even if not in MOVING_AVERAGE mode
 712:Core/Src/main.c ****   //in order to have the data ready when requested (change of filter mode)
 713:Core/Src/main.c ****   sum -= adc_moving_average[buffer_index_moving_average];
 714:Core/Src/main.c ****   adc_moving_average[buffer_index_moving_average] = lastAnalogValue;
 715:Core/Src/main.c ****   sum += lastAnalogValue;
 716:Core/Src/main.c ****   buffer_index_moving_average = (buffer_index_moving_average + 1) % MOVING_AVG_SIZE;
 717:Core/Src/main.c **** 
 718:Core/Src/main.c ****   //print analog data
 719:Core/Src/main.c ****   switch (currentFilterMode)
 720:Core/Src/main.c ****   {
 721:Core/Src/main.c ****   case RAW:
 722:Core/Src/main.c ****     sprintf(msg_buffer, "A:%hu\r\n", (u_int16_t)lastAnalogValue);
 723:Core/Src/main.c ****     break;
 724:Core/Src/main.c ****   
 725:Core/Src/main.c ****   case MOVING_AVERAGE:
 726:Core/Src/main.c ****     float moving_avg = (float)sum / MOVING_AVG_SIZE;
 727:Core/Src/main.c ****     sprintf(msg_buffer, "A: %.3f\r\n", moving_avg);
ARM GAS  /tmp/ccEpMq7M.s 			page 57


 728:Core/Src/main.c ****     break;
 729:Core/Src/main.c **** 
 730:Core/Src/main.c ****   case RANDOM_NOISE:
 731:Core/Src/main.c ****     sprintf(msg_buffer, "A: %hu\r\n", (u_int16_t)(adcBuffer[0] + rand() % RANDOM_RANGE));
 732:Core/Src/main.c ****     break;
 733:Core/Src/main.c **** 
 734:Core/Src/main.c ****   default:
 735:Core/Src/main.c ****     break;
 736:Core/Src/main.c ****   }
 737:Core/Src/main.c **** 
 738:Core/Src/main.c ****   halStatus = HAL_UART_Transmit(&huart2, (uint8_t *)msg_buffer, strlen(msg_buffer), HAL_MAX_DELAY);
 739:Core/Src/main.c ****   if(halStatus != HAL_OK){
 740:Core/Src/main.c ****     next_state  = STATE_ERROR;
 741:Core/Src/main.c ****     return next_state;
 742:Core/Src/main.c ****   }
 743:Core/Src/main.c **** 
 744:Core/Src/main.c ****   //print digital data
 745:Core/Src/main.c ****   sprintf(msg_buffer, "D: %hu\r\n", lastDigitalValue);
 746:Core/Src/main.c ****   halStatus = HAL_UART_Transmit(&huart2, (uint8_t *)msg_buffer, strlen(msg_buffer), HAL_MAX_DELAY);
 747:Core/Src/main.c ****   if(halStatus != HAL_OK){
 748:Core/Src/main.c ****     next_state  = STATE_ERROR;
 749:Core/Src/main.c ****     return next_state;
 750:Core/Src/main.c ****   }
 751:Core/Src/main.c **** 
 752:Core/Src/main.c ****   if(lastDigitalValue){
 753:Core/Src/main.c ****     //check if digital is high for 5 seconds
 754:Core/Src/main.c ****     if(HAL_GetTick() - lastTimer >= WARNING_TIMEOUT_MS){
 755:Core/Src/main.c ****       //warning state
 756:Core/Src/main.c ****       next_state = STATE_WARNING;
 757:Core/Src/main.c ****       //deactivate cli
 758:Core/Src/main.c ****       halStatus = HAL_UART_AbortReceive_IT(&huart2);
 759:Core/Src/main.c ****       if(halStatus != HAL_OK){
 760:Core/Src/main.c ****         next_state = STATE_ERROR;
 761:Core/Src/main.c ****         return next_state;
 762:Core/Src/main.c ****       }
 763:Core/Src/main.c ****     }
 764:Core/Src/main.c ****   }else{
 765:Core/Src/main.c ****     //reset timer
 766:Core/Src/main.c ****     lastTimer = HAL_GetTick();
 767:Core/Src/main.c ****   }
 768:Core/Src/main.c **** 
 769:Core/Src/main.c ****   return next_state;
 770:Core/Src/main.c **** }
 771:Core/Src/main.c **** 
 772:Core/Src/main.c **** 
 773:Core/Src/main.c **** // Function to be executed in state warning
 774:Core/Src/main.c **** // valid return states: STATE_WAIT_REQUEST, STATE_ERROR
 775:Core/Src/main.c **** state_t do_warning(state_data_t *data) {
 233              		.loc 1 775 40 is_stmt 1 view -0
 234              		.cfi_startproc
 235              		@ args = 0, pretend = 0, frame = 0
 236              		@ frame_needed = 0, uses_anonymous_args = 0
 237              		.loc 1 775 40 is_stmt 0 view .LVU49
 238 0000 10B5     		push	{r4, lr}
 239              		.cfi_def_cfa_offset 8
 240              		.cfi_offset 4, -8
 241              		.cfi_offset 14, -4
ARM GAS  /tmp/ccEpMq7M.s 			page 58


 776:Core/Src/main.c ****   is_request_sended = 0;
 242              		.loc 1 776 3 is_stmt 1 view .LVU50
 243              		.loc 1 776 21 is_stmt 0 view .LVU51
 244 0002 0022     		movs	r2, #0
 245 0004 0F4B     		ldr	r3, .L19
 246 0006 1A70     		strb	r2, [r3]
 777:Core/Src/main.c ****   
 778:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, GPIO_PIN_RESET);
 247              		.loc 1 778 3 is_stmt 1 view .LVU52
 248 0008 2021     		movs	r1, #32
 249 000a 0F48     		ldr	r0, .L19+4
 250              	.LVL13:
 251              		.loc 1 778 3 is_stmt 0 view .LVU53
 252 000c FFF7FEFF 		bl	HAL_GPIO_WritePin
 253              	.LVL14:
 779:Core/Src/main.c ****   sprintf(msg_buffer, "WARNING\r\n");
 254              		.loc 1 779 3 is_stmt 1 view .LVU54
 255 0010 0E4C     		ldr	r4, .L19+8
 256 0012 0F4A     		ldr	r2, .L19+12
 257 0014 2346     		mov	r3, r4
 258 0016 07CA     		ldm	r2, {r0, r1, r2}
 259 0018 03C3     		stmia	r3!, {r0, r1}
 260 001a 1A80     		strh	r2, [r3]	@ movhi
 780:Core/Src/main.c ****   halStatus = HAL_UART_Transmit(&huart2, (uint8_t *)msg_buffer, strlen(msg_buffer), HAL_MAX_DELAY);
 261              		.loc 1 780 3 view .LVU55
 262              		.loc 1 780 65 is_stmt 0 view .LVU56
 263 001c 2046     		mov	r0, r4
 264 001e FFF7FEFF 		bl	strlen
 265              	.LVL15:
 266              		.loc 1 780 15 discriminator 1 view .LVU57
 267 0022 4FF0FF33 		mov	r3, #-1
 268 0026 82B2     		uxth	r2, r0
 269 0028 2146     		mov	r1, r4
 270 002a 0A48     		ldr	r0, .L19+16
 271 002c FFF7FEFF 		bl	HAL_UART_Transmit
 272              	.LVL16:
 273              		.loc 1 780 13 discriminator 2 view .LVU58
 274 0030 094B     		ldr	r3, .L19+20
 275 0032 1870     		strb	r0, [r3]
 781:Core/Src/main.c ****   if(halStatus != HAL_OK){
 276              		.loc 1 781 3 is_stmt 1 view .LVU59
 277              		.loc 1 781 5 is_stmt 0 view .LVU60
 278 0034 10B9     		cbnz	r0, .L18
 782:Core/Src/main.c ****     next_state = STATE_ERROR;
 783:Core/Src/main.c ****     return next_state;
 784:Core/Src/main.c ****   }
 785:Core/Src/main.c **** 
 786:Core/Src/main.c ****   return next_state;
 279              		.loc 1 786 3 is_stmt 1 view .LVU61
 280              		.loc 1 786 10 is_stmt 0 view .LVU62
 281 0036 094B     		ldr	r3, .L19+24
 282 0038 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 283              	.L16:
 787:Core/Src/main.c **** }
 284              		.loc 1 787 1 view .LVU63
 285 003a 10BD     		pop	{r4, pc}
 286              	.L18:
ARM GAS  /tmp/ccEpMq7M.s 			page 59


 782:Core/Src/main.c ****     next_state = STATE_ERROR;
 287              		.loc 1 782 5 is_stmt 1 view .LVU64
 782:Core/Src/main.c ****     next_state = STATE_ERROR;
 288              		.loc 1 782 16 is_stmt 0 view .LVU65
 289 003c 0220     		movs	r0, #2
 290 003e 074B     		ldr	r3, .L19+24
 291 0040 1870     		strb	r0, [r3]
 783:Core/Src/main.c ****   }
 292              		.loc 1 783 5 is_stmt 1 view .LVU66
 783:Core/Src/main.c ****   }
 293              		.loc 1 783 12 is_stmt 0 view .LVU67
 294 0042 FAE7     		b	.L16
 295              	.L20:
 296              		.align	2
 297              	.L19:
 298 0044 00000000 		.word	is_request_sended
 299 0048 00000240 		.word	1073872896
 300 004c 00000000 		.word	msg_buffer
 301 0050 00000000 		.word	.LC1
 302 0054 00000000 		.word	huart2
 303 0058 00000000 		.word	halStatus
 304 005c 00000000 		.word	next_state
 305              		.cfi_endproc
 306              	.LFE239:
 308              		.section	.rodata.do_wait_request.str1.4,"aMS",%progbits,1
 309              		.align	2
 310              	.LC2:
 311 0000 433A0D0A 		.ascii	"C:\015\012\000"
 311      00
 312              		.section	.text.do_wait_request,"ax",%progbits
 313              		.align	1
 314              		.global	do_wait_request
 315              		.syntax unified
 316              		.thumb
 317              		.thumb_func
 319              	do_wait_request:
 320              	.LVL17:
 321              	.LFB236:
 651:Core/Src/main.c ****   if(!is_request_sended){
 322              		.loc 1 651 45 is_stmt 1 view -0
 323              		.cfi_startproc
 324              		@ args = 0, pretend = 0, frame = 0
 325              		@ frame_needed = 0, uses_anonymous_args = 0
 652:Core/Src/main.c ****     sprintf(msg_buffer, "C:\r\n");//send command request to user
 326              		.loc 1 652 3 view .LVU69
 652:Core/Src/main.c ****     sprintf(msg_buffer, "C:\r\n");//send command request to user
 327              		.loc 1 652 6 is_stmt 0 view .LVU70
 328 0000 174B     		ldr	r3, .L33
 329 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 652:Core/Src/main.c ****     sprintf(msg_buffer, "C:\r\n");//send command request to user
 330              		.loc 1 652 5 view .LVU71
 331 0004 13B1     		cbz	r3, .L30
 669:Core/Src/main.c **** }
 332              		.loc 1 669 3 is_stmt 1 view .LVU72
 669:Core/Src/main.c **** }
 333              		.loc 1 669 10 is_stmt 0 view .LVU73
 334 0006 174B     		ldr	r3, .L33+4
ARM GAS  /tmp/ccEpMq7M.s 			page 60


 335 0008 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 336              	.LVL18:
 670:Core/Src/main.c **** 
 337              		.loc 1 670 1 view .LVU74
 338 000a 7047     		bx	lr
 339              	.LVL19:
 340              	.L30:
 651:Core/Src/main.c ****   if(!is_request_sended){
 341              		.loc 1 651 45 view .LVU75
 342 000c 10B5     		push	{r4, lr}
 343              		.cfi_def_cfa_offset 8
 344              		.cfi_offset 4, -8
 345              		.cfi_offset 14, -4
 653:Core/Src/main.c ****     halStatus = HAL_UART_Transmit(&huart2, (uint8_t *)msg_buffer, strlen(msg_buffer), HAL_MAX_DELAY
 346              		.loc 1 653 5 is_stmt 1 view .LVU76
 347 000e 164C     		ldr	r4, .L33+8
 348 0010 164B     		ldr	r3, .L33+12
 349 0012 93E80300 		ldm	r3, {r0, r1}
 350              	.LVL20:
 653:Core/Src/main.c ****     halStatus = HAL_UART_Transmit(&huart2, (uint8_t *)msg_buffer, strlen(msg_buffer), HAL_MAX_DELAY
 351              		.loc 1 653 5 is_stmt 0 view .LVU77
 352 0016 2060     		str	r0, [r4]
 353 0018 2171     		strb	r1, [r4, #4]
 654:Core/Src/main.c ****     if(halStatus != HAL_OK){
 354              		.loc 1 654 5 is_stmt 1 view .LVU78
 654:Core/Src/main.c ****     if(halStatus != HAL_OK){
 355              		.loc 1 654 67 is_stmt 0 view .LVU79
 356 001a 2046     		mov	r0, r4
 357 001c FFF7FEFF 		bl	strlen
 358              	.LVL21:
 654:Core/Src/main.c ****     if(halStatus != HAL_OK){
 359              		.loc 1 654 17 discriminator 1 view .LVU80
 360 0020 4FF0FF33 		mov	r3, #-1
 361 0024 82B2     		uxth	r2, r0
 362 0026 2146     		mov	r1, r4
 363 0028 1148     		ldr	r0, .L33+16
 364 002a FFF7FEFF 		bl	HAL_UART_Transmit
 365              	.LVL22:
 654:Core/Src/main.c ****     if(halStatus != HAL_OK){
 366              		.loc 1 654 15 discriminator 2 view .LVU81
 367 002e 114B     		ldr	r3, .L33+20
 368 0030 1870     		strb	r0, [r3]
 655:Core/Src/main.c ****       next_state  = STATE_ERROR;
 369              		.loc 1 655 5 is_stmt 1 view .LVU82
 655:Core/Src/main.c ****       next_state  = STATE_ERROR;
 370              		.loc 1 655 7 is_stmt 0 view .LVU83
 371 0032 68B9     		cbnz	r0, .L31
 659:Core/Src/main.c **** 
 372              		.loc 1 659 5 is_stmt 1 view .LVU84
 659:Core/Src/main.c **** 
 373              		.loc 1 659 23 is_stmt 0 view .LVU85
 374 0034 0A4B     		ldr	r3, .L33
 375 0036 0122     		movs	r2, #1
 376 0038 1A70     		strb	r2, [r3]
 662:Core/Src/main.c ****     if(halStatus != HAL_OK){
 377              		.loc 1 662 5 is_stmt 1 view .LVU86
 662:Core/Src/main.c ****     if(halStatus != HAL_OK){
ARM GAS  /tmp/ccEpMq7M.s 			page 61


 378              		.loc 1 662 17 is_stmt 0 view .LVU87
 379 003a 4622     		movs	r2, #70
 380 003c 0E49     		ldr	r1, .L33+24
 381 003e 0C48     		ldr	r0, .L33+16
 382 0040 FFF7FEFF 		bl	HAL_UARTEx_ReceiveToIdle_IT
 383              	.LVL23:
 662:Core/Src/main.c ****     if(halStatus != HAL_OK){
 384              		.loc 1 662 15 discriminator 1 view .LVU88
 385 0044 0B4B     		ldr	r3, .L33+20
 386 0046 1870     		strb	r0, [r3]
 663:Core/Src/main.c ****       next_state = STATE_ERROR;
 387              		.loc 1 663 5 is_stmt 1 view .LVU89
 663:Core/Src/main.c ****       next_state = STATE_ERROR;
 388              		.loc 1 663 7 is_stmt 0 view .LVU90
 389 0048 30B9     		cbnz	r0, .L32
 669:Core/Src/main.c **** }
 390              		.loc 1 669 3 is_stmt 1 view .LVU91
 669:Core/Src/main.c **** }
 391              		.loc 1 669 10 is_stmt 0 view .LVU92
 392 004a 064B     		ldr	r3, .L33+4
 393 004c 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 394              	.L24:
 670:Core/Src/main.c **** 
 395              		.loc 1 670 1 view .LVU93
 396 004e 10BD     		pop	{r4, pc}
 397              	.L31:
 656:Core/Src/main.c ****       return next_state;
 398              		.loc 1 656 7 is_stmt 1 view .LVU94
 656:Core/Src/main.c ****       return next_state;
 399              		.loc 1 656 19 is_stmt 0 view .LVU95
 400 0050 0220     		movs	r0, #2
 401 0052 044B     		ldr	r3, .L33+4
 402 0054 1870     		strb	r0, [r3]
 657:Core/Src/main.c ****     }
 403              		.loc 1 657 7 is_stmt 1 view .LVU96
 657:Core/Src/main.c ****     }
 404              		.loc 1 657 14 is_stmt 0 view .LVU97
 405 0056 FAE7     		b	.L24
 406              	.L32:
 664:Core/Src/main.c ****       return next_state;
 407              		.loc 1 664 7 is_stmt 1 view .LVU98
 664:Core/Src/main.c ****       return next_state;
 408              		.loc 1 664 18 is_stmt 0 view .LVU99
 409 0058 0220     		movs	r0, #2
 410 005a 024B     		ldr	r3, .L33+4
 411 005c 1870     		strb	r0, [r3]
 665:Core/Src/main.c ****     }
 412              		.loc 1 665 7 is_stmt 1 view .LVU100
 665:Core/Src/main.c ****     }
 413              		.loc 1 665 14 is_stmt 0 view .LVU101
 414 005e F6E7     		b	.L24
 415              	.L34:
 416              		.align	2
 417              	.L33:
 418 0060 00000000 		.word	is_request_sended
 419 0064 00000000 		.word	next_state
 420 0068 00000000 		.word	msg_buffer
ARM GAS  /tmp/ccEpMq7M.s 			page 62


 421 006c 00000000 		.word	.LC2
 422 0070 00000000 		.word	huart2
 423 0074 00000000 		.word	halStatus
 424 0078 00000000 		.word	cli_command
 425              		.cfi_endproc
 426              	.LFE236:
 428              		.section	.text.do_pause,"ax",%progbits
 429              		.align	1
 430              		.global	do_pause
 431              		.syntax unified
 432              		.thumb
 433              		.thumb_func
 435              	do_pause:
 436              	.LVL24:
 437              	.LFB240:
 788:Core/Src/main.c **** 
 789:Core/Src/main.c **** 
 790:Core/Src/main.c **** // Function to be executed in state pause
 791:Core/Src/main.c **** // valid return states: STATE_ERROR, STATE_LISTENING
 792:Core/Src/main.c **** state_t do_pause(state_data_t *data) {
 438              		.loc 1 792 38 is_stmt 1 view -0
 439              		.cfi_startproc
 440              		@ args = 0, pretend = 0, frame = 0
 441              		@ frame_needed = 0, uses_anonymous_args = 0
 793:Core/Src/main.c ****   if(!is_request_sended){
 442              		.loc 1 793 3 view .LVU103
 443              		.loc 1 793 6 is_stmt 0 view .LVU104
 444 0000 174B     		ldr	r3, .L47
 445 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 446              		.loc 1 793 5 view .LVU105
 447 0004 13B1     		cbz	r3, .L44
 794:Core/Src/main.c ****     sprintf(msg_buffer, "C:\r\n");//send command request to user
 795:Core/Src/main.c ****     halStatus = HAL_UART_Transmit(&huart2, (uint8_t *)msg_buffer, strlen(msg_buffer), HAL_MAX_DELAY
 796:Core/Src/main.c ****     if(halStatus != HAL_OK){
 797:Core/Src/main.c ****       next_state  = STATE_ERROR;
 798:Core/Src/main.c ****       return next_state;
 799:Core/Src/main.c ****     }
 800:Core/Src/main.c ****     is_request_sended = 1;
 801:Core/Src/main.c **** 
 802:Core/Src/main.c ****     //wait for possible user input
 803:Core/Src/main.c ****     halStatus = HAL_UARTEx_ReceiveToIdle_IT(&huart2, (u_int8_t *)cli_command, BUFFER_SIZE);
 804:Core/Src/main.c ****     if(halStatus != HAL_OK){
 805:Core/Src/main.c ****       next_state = STATE_ERROR;
 806:Core/Src/main.c ****       return next_state;
 807:Core/Src/main.c ****     }
 808:Core/Src/main.c ****   }
 809:Core/Src/main.c **** 
 810:Core/Src/main.c ****   return next_state;
 448              		.loc 1 810 3 is_stmt 1 view .LVU106
 449              		.loc 1 810 10 is_stmt 0 view .LVU107
 450 0006 174B     		ldr	r3, .L47+4
 451 0008 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 452              	.LVL25:
 811:Core/Src/main.c **** }
 453              		.loc 1 811 1 view .LVU108
 454 000a 7047     		bx	lr
 455              	.LVL26:
ARM GAS  /tmp/ccEpMq7M.s 			page 63


 456              	.L44:
 792:Core/Src/main.c ****   if(!is_request_sended){
 457              		.loc 1 792 38 view .LVU109
 458 000c 10B5     		push	{r4, lr}
 459              		.cfi_def_cfa_offset 8
 460              		.cfi_offset 4, -8
 461              		.cfi_offset 14, -4
 794:Core/Src/main.c ****     sprintf(msg_buffer, "C:\r\n");//send command request to user
 462              		.loc 1 794 5 is_stmt 1 view .LVU110
 463 000e 164C     		ldr	r4, .L47+8
 464 0010 164B     		ldr	r3, .L47+12
 465 0012 93E80300 		ldm	r3, {r0, r1}
 466              	.LVL27:
 794:Core/Src/main.c ****     sprintf(msg_buffer, "C:\r\n");//send command request to user
 467              		.loc 1 794 5 is_stmt 0 view .LVU111
 468 0016 2060     		str	r0, [r4]
 469 0018 2171     		strb	r1, [r4, #4]
 795:Core/Src/main.c ****     if(halStatus != HAL_OK){
 470              		.loc 1 795 5 is_stmt 1 view .LVU112
 795:Core/Src/main.c ****     if(halStatus != HAL_OK){
 471              		.loc 1 795 67 is_stmt 0 view .LVU113
 472 001a 2046     		mov	r0, r4
 473 001c FFF7FEFF 		bl	strlen
 474              	.LVL28:
 795:Core/Src/main.c ****     if(halStatus != HAL_OK){
 475              		.loc 1 795 17 discriminator 1 view .LVU114
 476 0020 4FF0FF33 		mov	r3, #-1
 477 0024 82B2     		uxth	r2, r0
 478 0026 2146     		mov	r1, r4
 479 0028 1148     		ldr	r0, .L47+16
 480 002a FFF7FEFF 		bl	HAL_UART_Transmit
 481              	.LVL29:
 795:Core/Src/main.c ****     if(halStatus != HAL_OK){
 482              		.loc 1 795 15 discriminator 2 view .LVU115
 483 002e 114B     		ldr	r3, .L47+20
 484 0030 1870     		strb	r0, [r3]
 796:Core/Src/main.c ****       next_state  = STATE_ERROR;
 485              		.loc 1 796 5 is_stmt 1 view .LVU116
 796:Core/Src/main.c ****       next_state  = STATE_ERROR;
 486              		.loc 1 796 7 is_stmt 0 view .LVU117
 487 0032 68B9     		cbnz	r0, .L45
 800:Core/Src/main.c **** 
 488              		.loc 1 800 5 is_stmt 1 view .LVU118
 800:Core/Src/main.c **** 
 489              		.loc 1 800 23 is_stmt 0 view .LVU119
 490 0034 0A4B     		ldr	r3, .L47
 491 0036 0122     		movs	r2, #1
 492 0038 1A70     		strb	r2, [r3]
 803:Core/Src/main.c ****     if(halStatus != HAL_OK){
 493              		.loc 1 803 5 is_stmt 1 view .LVU120
 803:Core/Src/main.c ****     if(halStatus != HAL_OK){
 494              		.loc 1 803 17 is_stmt 0 view .LVU121
 495 003a 4622     		movs	r2, #70
 496 003c 0E49     		ldr	r1, .L47+24
 497 003e 0C48     		ldr	r0, .L47+16
 498 0040 FFF7FEFF 		bl	HAL_UARTEx_ReceiveToIdle_IT
 499              	.LVL30:
ARM GAS  /tmp/ccEpMq7M.s 			page 64


 803:Core/Src/main.c ****     if(halStatus != HAL_OK){
 500              		.loc 1 803 15 discriminator 1 view .LVU122
 501 0044 0B4B     		ldr	r3, .L47+20
 502 0046 1870     		strb	r0, [r3]
 804:Core/Src/main.c ****       next_state = STATE_ERROR;
 503              		.loc 1 804 5 is_stmt 1 view .LVU123
 804:Core/Src/main.c ****       next_state = STATE_ERROR;
 504              		.loc 1 804 7 is_stmt 0 view .LVU124
 505 0048 30B9     		cbnz	r0, .L46
 810:Core/Src/main.c **** }
 506              		.loc 1 810 3 is_stmt 1 view .LVU125
 810:Core/Src/main.c **** }
 507              		.loc 1 810 10 is_stmt 0 view .LVU126
 508 004a 064B     		ldr	r3, .L47+4
 509 004c 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 510              	.L38:
 511              		.loc 1 811 1 view .LVU127
 512 004e 10BD     		pop	{r4, pc}
 513              	.L45:
 797:Core/Src/main.c ****       return next_state;
 514              		.loc 1 797 7 is_stmt 1 view .LVU128
 797:Core/Src/main.c ****       return next_state;
 515              		.loc 1 797 19 is_stmt 0 view .LVU129
 516 0050 0220     		movs	r0, #2
 517 0052 044B     		ldr	r3, .L47+4
 518 0054 1870     		strb	r0, [r3]
 798:Core/Src/main.c ****     }
 519              		.loc 1 798 7 is_stmt 1 view .LVU130
 798:Core/Src/main.c ****     }
 520              		.loc 1 798 14 is_stmt 0 view .LVU131
 521 0056 FAE7     		b	.L38
 522              	.L46:
 805:Core/Src/main.c ****       return next_state;
 523              		.loc 1 805 7 is_stmt 1 view .LVU132
 805:Core/Src/main.c ****       return next_state;
 524              		.loc 1 805 18 is_stmt 0 view .LVU133
 525 0058 0220     		movs	r0, #2
 526 005a 024B     		ldr	r3, .L47+4
 527 005c 1870     		strb	r0, [r3]
 806:Core/Src/main.c ****     }
 528              		.loc 1 806 7 is_stmt 1 view .LVU134
 806:Core/Src/main.c ****     }
 529              		.loc 1 806 14 is_stmt 0 view .LVU135
 530 005e F6E7     		b	.L38
 531              	.L48:
 532              		.align	2
 533              	.L47:
 534 0060 00000000 		.word	is_request_sended
 535 0064 00000000 		.word	next_state
 536 0068 00000000 		.word	msg_buffer
 537 006c 00000000 		.word	.LC2
 538 0070 00000000 		.word	huart2
 539 0074 00000000 		.word	halStatus
 540 0078 00000000 		.word	cli_command
 541              		.cfi_endproc
 542              	.LFE240:
 544              		.section	.text.MX_GPIO_Init,"ax",%progbits
ARM GAS  /tmp/ccEpMq7M.s 			page 65


 545              		.align	1
 546              		.syntax unified
 547              		.thumb
 548              		.thumb_func
 550              	MX_GPIO_Init:
 551              	.LFB234:
 548:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 552              		.loc 1 548 1 is_stmt 1 view -0
 553              		.cfi_startproc
 554              		@ args = 0, pretend = 0, frame = 40
 555              		@ frame_needed = 0, uses_anonymous_args = 0
 556 0000 70B5     		push	{r4, r5, r6, lr}
 557              		.cfi_def_cfa_offset 16
 558              		.cfi_offset 4, -16
 559              		.cfi_offset 5, -12
 560              		.cfi_offset 6, -8
 561              		.cfi_offset 14, -4
 562 0002 8AB0     		sub	sp, sp, #40
 563              		.cfi_def_cfa_offset 56
 549:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 564              		.loc 1 549 3 view .LVU137
 549:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 565              		.loc 1 549 20 is_stmt 0 view .LVU138
 566 0004 0024     		movs	r4, #0
 567 0006 0594     		str	r4, [sp, #20]
 568 0008 0694     		str	r4, [sp, #24]
 569 000a 0794     		str	r4, [sp, #28]
 570 000c 0894     		str	r4, [sp, #32]
 571 000e 0994     		str	r4, [sp, #36]
 554:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 572              		.loc 1 554 3 is_stmt 1 view .LVU139
 573              	.LBB10:
 554:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 574              		.loc 1 554 3 view .LVU140
 575 0010 0194     		str	r4, [sp, #4]
 554:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 576              		.loc 1 554 3 view .LVU141
 577 0012 304B     		ldr	r3, .L51
 578 0014 1A6B     		ldr	r2, [r3, #48]
 579 0016 42F00402 		orr	r2, r2, #4
 580 001a 1A63     		str	r2, [r3, #48]
 554:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 581              		.loc 1 554 3 view .LVU142
 582 001c 1A6B     		ldr	r2, [r3, #48]
 583 001e 02F00402 		and	r2, r2, #4
 584 0022 0192     		str	r2, [sp, #4]
 554:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 585              		.loc 1 554 3 view .LVU143
 586 0024 019A     		ldr	r2, [sp, #4]
 587              	.LBE10:
 554:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 588              		.loc 1 554 3 view .LVU144
 555:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 589              		.loc 1 555 3 view .LVU145
 590              	.LBB11:
 555:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 591              		.loc 1 555 3 view .LVU146
ARM GAS  /tmp/ccEpMq7M.s 			page 66


 592 0026 0294     		str	r4, [sp, #8]
 555:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 593              		.loc 1 555 3 view .LVU147
 594 0028 1A6B     		ldr	r2, [r3, #48]
 595 002a 42F08002 		orr	r2, r2, #128
 596 002e 1A63     		str	r2, [r3, #48]
 555:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 597              		.loc 1 555 3 view .LVU148
 598 0030 1A6B     		ldr	r2, [r3, #48]
 599 0032 02F08002 		and	r2, r2, #128
 600 0036 0292     		str	r2, [sp, #8]
 555:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 601              		.loc 1 555 3 view .LVU149
 602 0038 029A     		ldr	r2, [sp, #8]
 603              	.LBE11:
 555:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 604              		.loc 1 555 3 view .LVU150
 556:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 605              		.loc 1 556 3 view .LVU151
 606              	.LBB12:
 556:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 607              		.loc 1 556 3 view .LVU152
 608 003a 0394     		str	r4, [sp, #12]
 556:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 609              		.loc 1 556 3 view .LVU153
 610 003c 1A6B     		ldr	r2, [r3, #48]
 611 003e 42F00102 		orr	r2, r2, #1
 612 0042 1A63     		str	r2, [r3, #48]
 556:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 613              		.loc 1 556 3 view .LVU154
 614 0044 1A6B     		ldr	r2, [r3, #48]
 615 0046 02F00102 		and	r2, r2, #1
 616 004a 0392     		str	r2, [sp, #12]
 556:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 617              		.loc 1 556 3 view .LVU155
 618 004c 039A     		ldr	r2, [sp, #12]
 619              	.LBE12:
 556:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 620              		.loc 1 556 3 view .LVU156
 557:Core/Src/main.c **** 
 621              		.loc 1 557 3 view .LVU157
 622              	.LBB13:
 557:Core/Src/main.c **** 
 623              		.loc 1 557 3 view .LVU158
 624 004e 0494     		str	r4, [sp, #16]
 557:Core/Src/main.c **** 
 625              		.loc 1 557 3 view .LVU159
 626 0050 1A6B     		ldr	r2, [r3, #48]
 627 0052 42F00202 		orr	r2, r2, #2
 628 0056 1A63     		str	r2, [r3, #48]
 557:Core/Src/main.c **** 
 629              		.loc 1 557 3 view .LVU160
 630 0058 1B6B     		ldr	r3, [r3, #48]
 631 005a 03F00203 		and	r3, r3, #2
 632 005e 0493     		str	r3, [sp, #16]
 557:Core/Src/main.c **** 
 633              		.loc 1 557 3 view .LVU161
ARM GAS  /tmp/ccEpMq7M.s 			page 67


 634 0060 049B     		ldr	r3, [sp, #16]
 635              	.LBE13:
 557:Core/Src/main.c **** 
 636              		.loc 1 557 3 view .LVU162
 560:Core/Src/main.c **** 
 637              		.loc 1 560 3 view .LVU163
 638 0062 1D4D     		ldr	r5, .L51+4
 639 0064 2246     		mov	r2, r4
 640 0066 2021     		movs	r1, #32
 641 0068 2846     		mov	r0, r5
 642 006a FFF7FEFF 		bl	HAL_GPIO_WritePin
 643              	.LVL31:
 563:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 644              		.loc 1 563 3 view .LVU164
 563:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 645              		.loc 1 563 23 is_stmt 0 view .LVU165
 646 006e 4FF40053 		mov	r3, #8192
 647 0072 0593     		str	r3, [sp, #20]
 564:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 648              		.loc 1 564 3 is_stmt 1 view .LVU166
 564:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 649              		.loc 1 564 24 is_stmt 0 view .LVU167
 650 0074 4FF40413 		mov	r3, #2162688
 651 0078 0693     		str	r3, [sp, #24]
 565:Core/Src/main.c ****   HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 652              		.loc 1 565 3 is_stmt 1 view .LVU168
 565:Core/Src/main.c ****   HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 653              		.loc 1 565 24 is_stmt 0 view .LVU169
 654 007a 0794     		str	r4, [sp, #28]
 566:Core/Src/main.c **** 
 655              		.loc 1 566 3 is_stmt 1 view .LVU170
 656 007c 174E     		ldr	r6, .L51+8
 657 007e 05A9     		add	r1, sp, #20
 658 0080 3046     		mov	r0, r6
 659 0082 FFF7FEFF 		bl	HAL_GPIO_Init
 660              	.LVL32:
 569:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING_FALLING;
 661              		.loc 1 569 3 view .LVU171
 569:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING_FALLING;
 662              		.loc 1 569 23 is_stmt 0 view .LVU172
 663 0086 0423     		movs	r3, #4
 664 0088 0593     		str	r3, [sp, #20]
 570:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 665              		.loc 1 570 3 is_stmt 1 view .LVU173
 570:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 666              		.loc 1 570 24 is_stmt 0 view .LVU174
 667 008a 4FF44413 		mov	r3, #3211264
 668 008e 0693     		str	r3, [sp, #24]
 571:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 669              		.loc 1 571 3 is_stmt 1 view .LVU175
 571:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 670              		.loc 1 571 24 is_stmt 0 view .LVU176
 671 0090 0794     		str	r4, [sp, #28]
 572:Core/Src/main.c **** 
 672              		.loc 1 572 3 is_stmt 1 view .LVU177
 673 0092 05A9     		add	r1, sp, #20
 674 0094 3046     		mov	r0, r6
ARM GAS  /tmp/ccEpMq7M.s 			page 68


 675 0096 FFF7FEFF 		bl	HAL_GPIO_Init
 676              	.LVL33:
 575:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 677              		.loc 1 575 3 view .LVU178
 575:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 678              		.loc 1 575 23 is_stmt 0 view .LVU179
 679 009a 2023     		movs	r3, #32
 680 009c 0593     		str	r3, [sp, #20]
 576:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 681              		.loc 1 576 3 is_stmt 1 view .LVU180
 576:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 682              		.loc 1 576 24 is_stmt 0 view .LVU181
 683 009e 0123     		movs	r3, #1
 684 00a0 0693     		str	r3, [sp, #24]
 577:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 685              		.loc 1 577 3 is_stmt 1 view .LVU182
 577:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 686              		.loc 1 577 24 is_stmt 0 view .LVU183
 687 00a2 0794     		str	r4, [sp, #28]
 578:Core/Src/main.c ****   HAL_GPIO_Init(LD2_GPIO_Port, &GPIO_InitStruct);
 688              		.loc 1 578 3 is_stmt 1 view .LVU184
 578:Core/Src/main.c ****   HAL_GPIO_Init(LD2_GPIO_Port, &GPIO_InitStruct);
 689              		.loc 1 578 25 is_stmt 0 view .LVU185
 690 00a4 0894     		str	r4, [sp, #32]
 579:Core/Src/main.c **** 
 691              		.loc 1 579 3 is_stmt 1 view .LVU186
 692 00a6 05A9     		add	r1, sp, #20
 693 00a8 2846     		mov	r0, r5
 694 00aa FFF7FEFF 		bl	HAL_GPIO_Init
 695              	.LVL34:
 582:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI2_IRQn);
 696              		.loc 1 582 3 view .LVU187
 697 00ae 2246     		mov	r2, r4
 698 00b0 2146     		mov	r1, r4
 699 00b2 0820     		movs	r0, #8
 700 00b4 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 701              	.LVL35:
 583:Core/Src/main.c **** 
 702              		.loc 1 583 3 view .LVU188
 703 00b8 0820     		movs	r0, #8
 704 00ba FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 705              	.LVL36:
 585:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI15_10_IRQn);
 706              		.loc 1 585 3 view .LVU189
 707 00be 2246     		mov	r2, r4
 708 00c0 2146     		mov	r1, r4
 709 00c2 2820     		movs	r0, #40
 710 00c4 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 711              	.LVL37:
 586:Core/Src/main.c **** 
 712              		.loc 1 586 3 view .LVU190
 713 00c8 2820     		movs	r0, #40
 714 00ca FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 715              	.LVL38:
 590:Core/Src/main.c **** 
 716              		.loc 1 590 1 is_stmt 0 view .LVU191
 717 00ce 0AB0     		add	sp, sp, #40
ARM GAS  /tmp/ccEpMq7M.s 			page 69


 718              		.cfi_def_cfa_offset 16
 719              		@ sp needed
 720 00d0 70BD     		pop	{r4, r5, r6, pc}
 721              	.L52:
 722 00d2 00BF     		.align	2
 723              	.L51:
 724 00d4 00380240 		.word	1073887232
 725 00d8 00000240 		.word	1073872896
 726 00dc 00080240 		.word	1073874944
 727              		.cfi_endproc
 728              	.LFE234:
 730              		.section	.text.MX_DMA_Init,"ax",%progbits
 731              		.align	1
 732              		.syntax unified
 733              		.thumb
 734              		.thumb_func
 736              	MX_DMA_Init:
 737              	.LFB233:
 530:Core/Src/main.c **** 
 738              		.loc 1 530 1 is_stmt 1 view -0
 739              		.cfi_startproc
 740              		@ args = 0, pretend = 0, frame = 8
 741              		@ frame_needed = 0, uses_anonymous_args = 0
 742 0000 00B5     		push	{lr}
 743              		.cfi_def_cfa_offset 4
 744              		.cfi_offset 14, -4
 745 0002 83B0     		sub	sp, sp, #12
 746              		.cfi_def_cfa_offset 16
 533:Core/Src/main.c **** 
 747              		.loc 1 533 3 view .LVU193
 748              	.LBB14:
 533:Core/Src/main.c **** 
 749              		.loc 1 533 3 view .LVU194
 750 0004 0021     		movs	r1, #0
 751 0006 0191     		str	r1, [sp, #4]
 533:Core/Src/main.c **** 
 752              		.loc 1 533 3 view .LVU195
 753 0008 094B     		ldr	r3, .L55
 754 000a 1A6B     		ldr	r2, [r3, #48]
 755 000c 42F48002 		orr	r2, r2, #4194304
 756 0010 1A63     		str	r2, [r3, #48]
 533:Core/Src/main.c **** 
 757              		.loc 1 533 3 view .LVU196
 758 0012 1B6B     		ldr	r3, [r3, #48]
 759 0014 03F48003 		and	r3, r3, #4194304
 760 0018 0193     		str	r3, [sp, #4]
 533:Core/Src/main.c **** 
 761              		.loc 1 533 3 view .LVU197
 762 001a 019B     		ldr	r3, [sp, #4]
 763              	.LBE14:
 533:Core/Src/main.c **** 
 764              		.loc 1 533 3 view .LVU198
 537:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA2_Stream0_IRQn);
 765              		.loc 1 537 3 view .LVU199
 766 001c 0A46     		mov	r2, r1
 767 001e 3820     		movs	r0, #56
 768 0020 FFF7FEFF 		bl	HAL_NVIC_SetPriority
ARM GAS  /tmp/ccEpMq7M.s 			page 70


 769              	.LVL39:
 538:Core/Src/main.c **** 
 770              		.loc 1 538 3 view .LVU200
 771 0024 3820     		movs	r0, #56
 772 0026 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 773              	.LVL40:
 540:Core/Src/main.c **** 
 774              		.loc 1 540 1 is_stmt 0 view .LVU201
 775 002a 03B0     		add	sp, sp, #12
 776              		.cfi_def_cfa_offset 4
 777              		@ sp needed
 778 002c 5DF804FB 		ldr	pc, [sp], #4
 779              	.L56:
 780              		.align	2
 781              	.L55:
 782 0030 00380240 		.word	1073887232
 783              		.cfi_endproc
 784              	.LFE233:
 786              		.section	.rodata.do_listening.str1.4,"aMS",%progbits,1
 787              		.align	2
 788              	.LC3:
 789 0000 413A2568 		.ascii	"A:%hu\015\012\000"
 789      750D0A00 
 790              		.global	__aeabi_f2d
 791              		.align	2
 792              	.LC4:
 793 0008 413A2025 		.ascii	"A: %.3f\015\012\000"
 793      2E33660D 
 793      0A00
 794 0012 0000     		.align	2
 795              	.LC5:
 796 0014 413A2025 		.ascii	"A: %hu\015\012\000"
 796      68750D0A 
 796      00
 797 001d 000000   		.align	2
 798              	.LC6:
 799 0020 443A2025 		.ascii	"D: %hu\015\012\000"
 799      68750D0A 
 799      00
 800              		.section	.text.do_listening,"ax",%progbits
 801              		.align	1
 802              		.global	do_listening
 803              		.syntax unified
 804              		.thumb
 805              		.thumb_func
 807              	do_listening:
 808              	.LVL41:
 809              	.LFB238:
 704:Core/Src/main.c ****   is_request_sended = 0;
 810              		.loc 1 704 42 is_stmt 1 view -0
 811              		.cfi_startproc
 812              		@ args = 0, pretend = 0, frame = 0
 813              		@ frame_needed = 0, uses_anonymous_args = 0
 704:Core/Src/main.c ****   is_request_sended = 0;
 814              		.loc 1 704 42 is_stmt 0 view .LVU203
 815 0000 70B5     		push	{r4, r5, r6, lr}
 816              		.cfi_def_cfa_offset 16
ARM GAS  /tmp/ccEpMq7M.s 			page 71


 817              		.cfi_offset 4, -16
 818              		.cfi_offset 5, -12
 819              		.cfi_offset 6, -8
 820              		.cfi_offset 14, -4
 705:Core/Src/main.c **** 
 821              		.loc 1 705 3 is_stmt 1 view .LVU204
 705:Core/Src/main.c **** 
 822              		.loc 1 705 21 is_stmt 0 view .LVU205
 823 0002 594B     		ldr	r3, .L69
 824 0004 0022     		movs	r2, #0
 825 0006 1A70     		strb	r2, [r3]
 708:Core/Src/main.c ****   lastAnalogValue = adcBuffer[last_index];
 826              		.loc 1 708 3 is_stmt 1 view .LVU206
 708:Core/Src/main.c ****   lastAnalogValue = adcBuffer[last_index];
 827              		.loc 1 708 31 is_stmt 0 view .LVU207
 828 0008 584B     		ldr	r3, .L69+4
 829 000a 1B68     		ldr	r3, [r3]
 830 000c 5A68     		ldr	r2, [r3, #4]
 708:Core/Src/main.c ****   lastAnalogValue = adcBuffer[last_index];
 831              		.loc 1 708 29 view .LVU208
 832 000e C2F14602 		rsb	r2, r2, #70
 708:Core/Src/main.c ****   lastAnalogValue = adcBuffer[last_index];
 833              		.loc 1 708 66 view .LVU209
 834 0012 5308     		lsrs	r3, r2, #1
 835 0014 5649     		ldr	r1, .L69+8
 836 0016 A1FB0313 		umull	r1, r3, r1, r3
 837 001a 5B09     		lsrs	r3, r3, #5
 838 001c 4621     		movs	r1, #70
 839 001e 01FB1323 		mls	r3, r1, r3, r2
 708:Core/Src/main.c ****   lastAnalogValue = adcBuffer[last_index];
 840              		.loc 1 708 14 view .LVU210
 841 0022 544A     		ldr	r2, .L69+12
 842 0024 1380     		strh	r3, [r2]	@ movhi
 709:Core/Src/main.c **** 
 843              		.loc 1 709 3 is_stmt 1 view .LVU211
 709:Core/Src/main.c **** 
 844              		.loc 1 709 30 is_stmt 0 view .LVU212
 845 0026 9BB2     		uxth	r3, r3
 846 0028 534A     		ldr	r2, .L69+16
 847 002a 52F82320 		ldr	r2, [r2, r3, lsl #2]
 709:Core/Src/main.c **** 
 848              		.loc 1 709 19 view .LVU213
 849 002e 91B2     		uxth	r1, r2
 850 0030 524B     		ldr	r3, .L69+20
 851 0032 1980     		strh	r1, [r3]	@ movhi
 713:Core/Src/main.c ****   adc_moving_average[buffer_index_moving_average] = lastAnalogValue;
 852              		.loc 1 713 3 is_stmt 1 view .LVU214
 713:Core/Src/main.c ****   adc_moving_average[buffer_index_moving_average] = lastAnalogValue;
 853              		.loc 1 713 28 is_stmt 0 view .LVU215
 854 0034 524D     		ldr	r5, .L69+24
 855 0036 2B88     		ldrh	r3, [r5]
 856 0038 524E     		ldr	r6, .L69+28
 857 003a 36F813C0 		ldrh	ip, [r6, r3, lsl #1]
 713:Core/Src/main.c ****   adc_moving_average[buffer_index_moving_average] = lastAnalogValue;
 858              		.loc 1 713 7 view .LVU216
 859 003e 524C     		ldr	r4, .L69+32
 860 0040 2068     		ldr	r0, [r4]
ARM GAS  /tmp/ccEpMq7M.s 			page 72


 861              	.LVL42:
 713:Core/Src/main.c ****   adc_moving_average[buffer_index_moving_average] = lastAnalogValue;
 862              		.loc 1 713 7 view .LVU217
 863 0042 A0EB0C00 		sub	r0, r0, ip
 864 0046 2060     		str	r0, [r4]
 714:Core/Src/main.c ****   sum += lastAnalogValue;
 865              		.loc 1 714 3 is_stmt 1 view .LVU218
 714:Core/Src/main.c ****   sum += lastAnalogValue;
 866              		.loc 1 714 51 is_stmt 0 view .LVU219
 867 0048 26F81310 		strh	r1, [r6, r3, lsl #1]	@ movhi
 715:Core/Src/main.c ****   buffer_index_moving_average = (buffer_index_moving_average + 1) % MOVING_AVG_SIZE;
 868              		.loc 1 715 3 is_stmt 1 view .LVU220
 715:Core/Src/main.c ****   buffer_index_moving_average = (buffer_index_moving_average + 1) % MOVING_AVG_SIZE;
 869              		.loc 1 715 7 is_stmt 0 view .LVU221
 870 004c 0844     		add	r0, r0, r1
 871 004e 2060     		str	r0, [r4]
 716:Core/Src/main.c **** 
 872              		.loc 1 716 3 is_stmt 1 view .LVU222
 716:Core/Src/main.c **** 
 873              		.loc 1 716 62 is_stmt 0 view .LVU223
 874 0050 591C     		adds	r1, r3, #1
 716:Core/Src/main.c **** 
 875              		.loc 1 716 67 view .LVU224
 876 0052 4E4B     		ldr	r3, .L69+36
 877 0054 83FB0143 		smull	r4, r3, r3, r1
 878 0058 1B11     		asrs	r3, r3, #4
 879 005a 9624     		movs	r4, #150
 880 005c 04FB1313 		mls	r3, r4, r3, r1
 716:Core/Src/main.c **** 
 881              		.loc 1 716 31 view .LVU225
 882 0060 2B80     		strh	r3, [r5]	@ movhi
 719:Core/Src/main.c ****   {
 883              		.loc 1 719 3 is_stmt 1 view .LVU226
 884 0062 4B4B     		ldr	r3, .L69+40
 885 0064 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 886 0066 012B     		cmp	r3, #1
 887 0068 46D0     		beq	.L58
 888 006a 022B     		cmp	r3, #2
 889 006c 57D0     		beq	.L59
 890 006e 23B9     		cbnz	r3, .L60
 891              	.LBB15:
 722:Core/Src/main.c ****     break;
 892              		.loc 1 722 5 view .LVU227
 893 0070 92B2     		uxth	r2, r2
 894 0072 4849     		ldr	r1, .L69+44
 895 0074 4848     		ldr	r0, .L69+48
 896 0076 FFF7FEFF 		bl	sprintf
 897              	.LVL43:
 723:Core/Src/main.c ****   
 898              		.loc 1 723 5 view .LVU228
 899              	.L60:
 900              	.LBE15:
 738:Core/Src/main.c ****   if(halStatus != HAL_OK){
 901              		.loc 1 738 3 view .LVU229
 738:Core/Src/main.c ****   if(halStatus != HAL_OK){
 902              		.loc 1 738 65 is_stmt 0 view .LVU230
 903 007a 474C     		ldr	r4, .L69+48
ARM GAS  /tmp/ccEpMq7M.s 			page 73


 904 007c 2046     		mov	r0, r4
 905 007e FFF7FEFF 		bl	strlen
 906              	.LVL44:
 738:Core/Src/main.c ****   if(halStatus != HAL_OK){
 907              		.loc 1 738 15 discriminator 1 view .LVU231
 908 0082 4FF0FF33 		mov	r3, #-1
 909 0086 82B2     		uxth	r2, r0
 910 0088 2146     		mov	r1, r4
 911 008a 4448     		ldr	r0, .L69+52
 912 008c FFF7FEFF 		bl	HAL_UART_Transmit
 913              	.LVL45:
 738:Core/Src/main.c ****   if(halStatus != HAL_OK){
 914              		.loc 1 738 13 discriminator 2 view .LVU232
 915 0090 434B     		ldr	r3, .L69+56
 916 0092 1870     		strb	r0, [r3]
 739:Core/Src/main.c ****     next_state  = STATE_ERROR;
 917              		.loc 1 739 3 is_stmt 1 view .LVU233
 739:Core/Src/main.c ****     next_state  = STATE_ERROR;
 918              		.loc 1 739 5 is_stmt 0 view .LVU234
 919 0094 0028     		cmp	r0, #0
 920 0096 57D1     		bne	.L67
 745:Core/Src/main.c ****   halStatus = HAL_UART_Transmit(&huart2, (uint8_t *)msg_buffer, strlen(msg_buffer), HAL_MAX_DELAY);
 921              		.loc 1 745 3 is_stmt 1 view .LVU235
 922 0098 3F4C     		ldr	r4, .L69+48
 923 009a 424B     		ldr	r3, .L69+60
 924 009c 1A88     		ldrh	r2, [r3]
 925 009e 4249     		ldr	r1, .L69+64
 926 00a0 2046     		mov	r0, r4
 927 00a2 FFF7FEFF 		bl	sprintf
 928              	.LVL46:
 746:Core/Src/main.c ****   if(halStatus != HAL_OK){
 929              		.loc 1 746 3 view .LVU236
 746:Core/Src/main.c ****   if(halStatus != HAL_OK){
 930              		.loc 1 746 65 is_stmt 0 view .LVU237
 931 00a6 2046     		mov	r0, r4
 932 00a8 FFF7FEFF 		bl	strlen
 933              	.LVL47:
 746:Core/Src/main.c ****   if(halStatus != HAL_OK){
 934              		.loc 1 746 15 discriminator 1 view .LVU238
 935 00ac 4FF0FF33 		mov	r3, #-1
 936 00b0 82B2     		uxth	r2, r0
 937 00b2 2146     		mov	r1, r4
 938 00b4 3948     		ldr	r0, .L69+52
 939 00b6 FFF7FEFF 		bl	HAL_UART_Transmit
 940              	.LVL48:
 746:Core/Src/main.c ****   if(halStatus != HAL_OK){
 941              		.loc 1 746 13 discriminator 2 view .LVU239
 942 00ba 394B     		ldr	r3, .L69+56
 943 00bc 1870     		strb	r0, [r3]
 747:Core/Src/main.c ****     next_state  = STATE_ERROR;
 944              		.loc 1 747 3 is_stmt 1 view .LVU240
 747:Core/Src/main.c ****     next_state  = STATE_ERROR;
 945              		.loc 1 747 5 is_stmt 0 view .LVU241
 946 00be 0028     		cmp	r0, #0
 947 00c0 46D1     		bne	.L68
 752:Core/Src/main.c ****     //check if digital is high for 5 seconds
 948              		.loc 1 752 3 is_stmt 1 view .LVU242
ARM GAS  /tmp/ccEpMq7M.s 			page 74


 752:Core/Src/main.c ****     //check if digital is high for 5 seconds
 949              		.loc 1 752 6 is_stmt 0 view .LVU243
 950 00c2 384B     		ldr	r3, .L69+60
 951 00c4 1B88     		ldrh	r3, [r3]
 752:Core/Src/main.c ****     //check if digital is high for 5 seconds
 952              		.loc 1 752 5 view .LVU244
 953 00c6 002B     		cmp	r3, #0
 954 00c8 46D0     		beq	.L64
 754:Core/Src/main.c ****       //warning state
 955              		.loc 1 754 5 is_stmt 1 view .LVU245
 754:Core/Src/main.c ****       //warning state
 956              		.loc 1 754 8 is_stmt 0 view .LVU246
 957 00ca FFF7FEFF 		bl	HAL_GetTick
 958              	.LVL49:
 754:Core/Src/main.c ****       //warning state
 959              		.loc 1 754 22 discriminator 1 view .LVU247
 960 00ce 374B     		ldr	r3, .L69+68
 961 00d0 1B68     		ldr	r3, [r3]
 962 00d2 C01A     		subs	r0, r0, r3
 754:Core/Src/main.c ****       //warning state
 963              		.loc 1 754 7 discriminator 1 view .LVU248
 964 00d4 41F28733 		movw	r3, #4999
 965 00d8 9842     		cmp	r0, r3
 966 00da 41D9     		bls	.L65
 756:Core/Src/main.c ****       //deactivate cli
 967              		.loc 1 756 7 is_stmt 1 view .LVU249
 756:Core/Src/main.c ****       //deactivate cli
 968              		.loc 1 756 18 is_stmt 0 view .LVU250
 969 00dc 344B     		ldr	r3, .L69+72
 970 00de 0422     		movs	r2, #4
 971 00e0 1A70     		strb	r2, [r3]
 758:Core/Src/main.c ****       if(halStatus != HAL_OK){
 972              		.loc 1 758 7 is_stmt 1 view .LVU251
 758:Core/Src/main.c ****       if(halStatus != HAL_OK){
 973              		.loc 1 758 19 is_stmt 0 view .LVU252
 974 00e2 2E48     		ldr	r0, .L69+52
 975 00e4 FFF7FEFF 		bl	HAL_UART_AbortReceive_IT
 976              	.LVL50:
 758:Core/Src/main.c ****       if(halStatus != HAL_OK){
 977              		.loc 1 758 17 discriminator 1 view .LVU253
 978 00e8 2D4B     		ldr	r3, .L69+56
 979 00ea 1870     		strb	r0, [r3]
 759:Core/Src/main.c ****         next_state = STATE_ERROR;
 980              		.loc 1 759 7 is_stmt 1 view .LVU254
 759:Core/Src/main.c ****         next_state = STATE_ERROR;
 981              		.loc 1 759 9 is_stmt 0 view .LVU255
 982 00ec 0028     		cmp	r0, #0
 983 00ee 37D0     		beq	.L65
 760:Core/Src/main.c ****         return next_state;
 984              		.loc 1 760 9 is_stmt 1 view .LVU256
 760:Core/Src/main.c ****         return next_state;
 985              		.loc 1 760 20 is_stmt 0 view .LVU257
 986 00f0 0220     		movs	r0, #2
 987 00f2 2F4B     		ldr	r3, .L69+72
 988 00f4 1870     		strb	r0, [r3]
 761:Core/Src/main.c ****       }
 989              		.loc 1 761 9 is_stmt 1 view .LVU258
ARM GAS  /tmp/ccEpMq7M.s 			page 75


 761:Core/Src/main.c ****       }
 990              		.loc 1 761 16 is_stmt 0 view .LVU259
 991 00f6 35E0     		b	.L62
 992              	.L58:
 993              	.LBB16:
 726:Core/Src/main.c ****     sprintf(msg_buffer, "A: %.3f\r\n", moving_avg);
 994              		.loc 1 726 5 is_stmt 1 view .LVU260
 726:Core/Src/main.c ****     sprintf(msg_buffer, "A: %.3f\r\n", moving_avg);
 995              		.loc 1 726 24 is_stmt 0 view .LVU261
 996 00f8 07EE900A 		vmov	s15, r0	@ int
 997 00fc F8EE677A 		vcvt.f32.u32	s15, s15
 998              	.LVL51:
 727:Core/Src/main.c ****     break;
 999              		.loc 1 727 5 is_stmt 1 view .LVU262
 1000 0100 9FED2C7A 		vldr.32	s14, .L69+76
 1001 0104 C7EE877A 		vdiv.f32	s15, s15, s14
 1002              	.LVL52:
 727:Core/Src/main.c ****     break;
 1003              		.loc 1 727 5 is_stmt 0 view .LVU263
 1004 0108 17EE900A 		vmov	r0, s15
 1005 010c FFF7FEFF 		bl	__aeabi_f2d
 1006              	.LVL53:
 727:Core/Src/main.c ****     break;
 1007              		.loc 1 727 5 view .LVU264
 1008 0110 0246     		mov	r2, r0
 1009 0112 0B46     		mov	r3, r1
 1010 0114 2849     		ldr	r1, .L69+80
 1011 0116 2048     		ldr	r0, .L69+48
 1012 0118 FFF7FEFF 		bl	sprintf
 1013              	.LVL54:
 728:Core/Src/main.c **** 
 1014              		.loc 1 728 5 is_stmt 1 view .LVU265
 1015 011c ADE7     		b	.L60
 1016              	.LVL55:
 1017              	.L59:
 731:Core/Src/main.c ****     break;
 1018              		.loc 1 731 5 view .LVU266
 731:Core/Src/main.c ****     break;
 1019              		.loc 1 731 60 is_stmt 0 view .LVU267
 1020 011e 164B     		ldr	r3, .L69+16
 1021 0120 1C68     		ldr	r4, [r3]
 731:Core/Src/main.c ****     break;
 1022              		.loc 1 731 66 view .LVU268
 1023 0122 FFF7FEFF 		bl	rand
 1024              	.LVL56:
 731:Core/Src/main.c ****     break;
 1025              		.loc 1 731 73 discriminator 1 view .LVU269
 1026 0126 194A     		ldr	r2, .L69+36
 1027 0128 82FB0032 		smull	r3, r2, r2, r0
 1028 012c C317     		asrs	r3, r0, #31
 1029 012e C3EB6213 		rsb	r3, r3, r2, asr #5
 1030 0132 4FF49672 		mov	r2, #300
 1031 0136 02FB1303 		mls	r3, r2, r3, r0
 731:Core/Src/main.c ****     break;
 1032              		.loc 1 731 39 discriminator 1 view .LVU270
 1033 013a E218     		adds	r2, r4, r3
 731:Core/Src/main.c ****     break;
ARM GAS  /tmp/ccEpMq7M.s 			page 76


 1034              		.loc 1 731 5 discriminator 1 view .LVU271
 1035 013c 92B2     		uxth	r2, r2
 1036 013e 1F49     		ldr	r1, .L69+84
 1037 0140 1548     		ldr	r0, .L69+48
 1038 0142 FFF7FEFF 		bl	sprintf
 1039              	.LVL57:
 732:Core/Src/main.c **** 
 1040              		.loc 1 732 5 is_stmt 1 view .LVU272
 1041 0146 98E7     		b	.L60
 1042              	.L67:
 1043              	.LBE16:
 740:Core/Src/main.c ****     return next_state;
 1044              		.loc 1 740 5 view .LVU273
 740:Core/Src/main.c ****     return next_state;
 1045              		.loc 1 740 17 is_stmt 0 view .LVU274
 1046 0148 0220     		movs	r0, #2
 1047 014a 194B     		ldr	r3, .L69+72
 1048 014c 1870     		strb	r0, [r3]
 741:Core/Src/main.c ****   }
 1049              		.loc 1 741 5 is_stmt 1 view .LVU275
 741:Core/Src/main.c ****   }
 1050              		.loc 1 741 12 is_stmt 0 view .LVU276
 1051 014e 09E0     		b	.L62
 1052              	.L68:
 748:Core/Src/main.c ****     return next_state;
 1053              		.loc 1 748 5 is_stmt 1 view .LVU277
 748:Core/Src/main.c ****     return next_state;
 1054              		.loc 1 748 17 is_stmt 0 view .LVU278
 1055 0150 0220     		movs	r0, #2
 1056 0152 174B     		ldr	r3, .L69+72
 1057 0154 1870     		strb	r0, [r3]
 749:Core/Src/main.c ****   }
 1058              		.loc 1 749 5 is_stmt 1 view .LVU279
 749:Core/Src/main.c ****   }
 1059              		.loc 1 749 12 is_stmt 0 view .LVU280
 1060 0156 05E0     		b	.L62
 1061              	.L64:
 766:Core/Src/main.c ****   }
 1062              		.loc 1 766 5 is_stmt 1 view .LVU281
 766:Core/Src/main.c ****   }
 1063              		.loc 1 766 17 is_stmt 0 view .LVU282
 1064 0158 FFF7FEFF 		bl	HAL_GetTick
 1065              	.LVL58:
 766:Core/Src/main.c ****   }
 1066              		.loc 1 766 15 discriminator 1 view .LVU283
 1067 015c 134B     		ldr	r3, .L69+68
 1068 015e 1860     		str	r0, [r3]
 1069              	.L65:
 769:Core/Src/main.c **** }
 1070              		.loc 1 769 3 is_stmt 1 view .LVU284
 769:Core/Src/main.c **** }
 1071              		.loc 1 769 10 is_stmt 0 view .LVU285
 1072 0160 134B     		ldr	r3, .L69+72
 1073 0162 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 1074              	.L62:
 770:Core/Src/main.c **** 
 1075              		.loc 1 770 1 view .LVU286
ARM GAS  /tmp/ccEpMq7M.s 			page 77


 1076 0164 70BD     		pop	{r4, r5, r6, pc}
 1077              	.L70:
 1078 0166 00BF     		.align	2
 1079              	.L69:
 1080 0168 00000000 		.word	is_request_sended
 1081 016c 00000000 		.word	hdma_adc1
 1082 0170 EBA00EEA 		.word	-368140053
 1083 0174 00000000 		.word	last_index
 1084 0178 00000000 		.word	adcBuffer
 1085 017c 00000000 		.word	lastAnalogValue
 1086 0180 00000000 		.word	buffer_index_moving_average
 1087 0184 00000000 		.word	adc_moving_average
 1088 0188 00000000 		.word	sum
 1089 018c B5814E1B 		.word	458129845
 1090 0190 00000000 		.word	currentFilterMode
 1091 0194 00000000 		.word	.LC3
 1092 0198 00000000 		.word	msg_buffer
 1093 019c 00000000 		.word	huart2
 1094 01a0 00000000 		.word	halStatus
 1095 01a4 00000000 		.word	lastDigitalValue
 1096 01a8 20000000 		.word	.LC6
 1097 01ac 00000000 		.word	lastTimer
 1098 01b0 00000000 		.word	next_state
 1099 01b4 00001643 		.word	1125515264
 1100 01b8 08000000 		.word	.LC4
 1101 01bc 14000000 		.word	.LC5
 1102              		.cfi_endproc
 1103              	.LFE238:
 1105              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 1106              		.align	1
 1107              		.global	HAL_TIM_PeriodElapsedCallback
 1108              		.syntax unified
 1109              		.thumb
 1110              		.thumb_func
 1112              	HAL_TIM_PeriodElapsedCallback:
 1113              	.LVL59:
 1114              	.LFB223:
 131:Core/Src/main.c ****   if(htim->Instance == TIM3){
 1115              		.loc 1 131 60 is_stmt 1 view -0
 1116              		.cfi_startproc
 1117              		@ args = 0, pretend = 0, frame = 0
 1118              		@ frame_needed = 0, uses_anonymous_args = 0
 131:Core/Src/main.c ****   if(htim->Instance == TIM3){
 1119              		.loc 1 131 60 is_stmt 0 view .LVU288
 1120 0000 08B5     		push	{r3, lr}
 1121              		.cfi_def_cfa_offset 8
 1122              		.cfi_offset 3, -8
 1123              		.cfi_offset 14, -4
 132:Core/Src/main.c ****     //toggle pause state led
 1124              		.loc 1 132 3 is_stmt 1 view .LVU289
 132:Core/Src/main.c ****     //toggle pause state led
 1125              		.loc 1 132 10 is_stmt 0 view .LVU290
 1126 0002 0368     		ldr	r3, [r0]
 132:Core/Src/main.c ****     //toggle pause state led
 1127              		.loc 1 132 5 view .LVU291
 1128 0004 084A     		ldr	r2, .L77
 1129 0006 9342     		cmp	r3, r2
ARM GAS  /tmp/ccEpMq7M.s 			page 78


 1130 0008 03D0     		beq	.L75
 135:Core/Src/main.c ****     //toggle error state led
 1131              		.loc 1 135 10 is_stmt 1 view .LVU292
 135:Core/Src/main.c ****     //toggle error state led
 1132              		.loc 1 135 12 is_stmt 0 view .LVU293
 1133 000a 084A     		ldr	r2, .L77+4
 1134 000c 9342     		cmp	r3, r2
 1135 000e 05D0     		beq	.L76
 1136              	.LVL60:
 1137              	.L71:
 139:Core/Src/main.c **** 
 1138              		.loc 1 139 1 view .LVU294
 1139 0010 08BD     		pop	{r3, pc}
 1140              	.LVL61:
 1141              	.L75:
 134:Core/Src/main.c ****   } else if(htim->Instance == TIM4){
 1142              		.loc 1 134 5 is_stmt 1 view .LVU295
 1143 0012 2021     		movs	r1, #32
 1144 0014 0648     		ldr	r0, .L77+8
 1145              	.LVL62:
 134:Core/Src/main.c ****   } else if(htim->Instance == TIM4){
 1146              		.loc 1 134 5 is_stmt 0 view .LVU296
 1147 0016 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1148              	.LVL63:
 1149 001a F9E7     		b	.L71
 1150              	.LVL64:
 1151              	.L76:
 137:Core/Src/main.c ****   }
 1152              		.loc 1 137 5 is_stmt 1 view .LVU297
 1153 001c 2021     		movs	r1, #32
 1154 001e 0448     		ldr	r0, .L77+8
 1155              	.LVL65:
 137:Core/Src/main.c ****   }
 1156              		.loc 1 137 5 is_stmt 0 view .LVU298
 1157 0020 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1158              	.LVL66:
 139:Core/Src/main.c **** 
 1159              		.loc 1 139 1 view .LVU299
 1160 0024 F4E7     		b	.L71
 1161              	.L78:
 1162 0026 00BF     		.align	2
 1163              	.L77:
 1164 0028 00040040 		.word	1073742848
 1165 002c 00080040 		.word	1073743872
 1166 0030 00000240 		.word	1073872896
 1167              		.cfi_endproc
 1168              	.LFE223:
 1170              		.section	.text.HAL_GPIO_EXTI_Callback,"ax",%progbits
 1171              		.align	1
 1172              		.global	HAL_GPIO_EXTI_Callback
 1173              		.syntax unified
 1174              		.thumb
 1175              		.thumb_func
 1177              	HAL_GPIO_EXTI_Callback:
 1178              	.LVL67:
 1179              	.LFB224:
 144:Core/Src/main.c ****   if(GPIO_Pin == GPIO_PIN_2){
ARM GAS  /tmp/ccEpMq7M.s 			page 79


 1180              		.loc 1 144 47 is_stmt 1 view -0
 1181              		.cfi_startproc
 1182              		@ args = 0, pretend = 0, frame = 0
 1183              		@ frame_needed = 0, uses_anonymous_args = 0
 144:Core/Src/main.c ****   if(GPIO_Pin == GPIO_PIN_2){
 1184              		.loc 1 144 47 is_stmt 0 view .LVU301
 1185 0000 08B5     		push	{r3, lr}
 1186              		.cfi_def_cfa_offset 8
 1187              		.cfi_offset 3, -8
 1188              		.cfi_offset 14, -4
 145:Core/Src/main.c ****     //DIGITAL VALUE SENSOR
 1189              		.loc 1 145 3 is_stmt 1 view .LVU302
 145:Core/Src/main.c ****     //DIGITAL VALUE SENSOR
 1190              		.loc 1 145 5 is_stmt 0 view .LVU303
 1191 0002 0428     		cmp	r0, #4
 1192 0004 03D0     		beq	.L93
 149:Core/Src/main.c ****     //USER BUTTON
 1193              		.loc 1 149 8 is_stmt 1 view .LVU304
 149:Core/Src/main.c ****     //USER BUTTON
 1194              		.loc 1 149 10 is_stmt 0 view .LVU305
 1195 0006 B0F5005F 		cmp	r0, #8192
 1196 000a 07D0     		beq	.L94
 1197              	.LVL68:
 1198              	.L79:
 210:Core/Src/main.c **** 
 1199              		.loc 1 210 1 view .LVU306
 1200 000c 08BD     		pop	{r3, pc}
 1201              	.LVL69:
 1202              	.L93:
 147:Core/Src/main.c ****   }
 1203              		.loc 1 147 5 is_stmt 1 view .LVU307
 147:Core/Src/main.c ****   }
 1204              		.loc 1 147 24 is_stmt 0 view .LVU308
 1205 000e 0421     		movs	r1, #4
 1206 0010 3C48     		ldr	r0, .L95
 1207              	.LVL70:
 147:Core/Src/main.c ****   }
 1208              		.loc 1 147 24 view .LVU309
 1209 0012 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1210              	.LVL71:
 147:Core/Src/main.c ****   }
 1211              		.loc 1 147 22 discriminator 1 view .LVU310
 1212 0016 3C4B     		ldr	r3, .L95+4
 1213 0018 1880     		strh	r0, [r3]	@ movhi
 1214 001a F7E7     		b	.L79
 1215              	.LVL72:
 1216              	.L94:
 1217              	.LBB17:
 151:Core/Src/main.c **** 
 1218              		.loc 1 151 5 is_stmt 1 view .LVU311
 151:Core/Src/main.c **** 
 1219              		.loc 1 151 28 is_stmt 0 view .LVU312
 1220 001c FFF7FEFF 		bl	HAL_GetTick
 1221              	.LVL73:
 154:Core/Src/main.c ****       return;//ignore interupt
 1222              		.loc 1 154 5 is_stmt 1 view .LVU313
 154:Core/Src/main.c ****       return;//ignore interupt
ARM GAS  /tmp/ccEpMq7M.s 			page 80


 1223              		.loc 1 154 22 is_stmt 0 view .LVU314
 1224 0020 3A4B     		ldr	r3, .L95+8
 1225 0022 1B68     		ldr	r3, [r3]
 1226 0024 C31A     		subs	r3, r0, r3
 154:Core/Src/main.c ****       return;//ignore interupt
 1227              		.loc 1 154 8 view .LVU315
 1228 0026 312B     		cmp	r3, #49
 1229 0028 F0D9     		bls	.L79
 157:Core/Src/main.c **** 
 1230              		.loc 1 157 5 is_stmt 1 view .LVU316
 157:Core/Src/main.c **** 
 1231              		.loc 1 157 21 is_stmt 0 view .LVU317
 1232 002a 384B     		ldr	r3, .L95+8
 1233 002c 1860     		str	r0, [r3]
 159:Core/Src/main.c ****       //change state to listening
 1234              		.loc 1 159 5 is_stmt 1 view .LVU318
 159:Core/Src/main.c ****       //change state to listening
 1235              		.loc 1 159 22 is_stmt 0 view .LVU319
 1236 002e 384B     		ldr	r3, .L95+12
 1237 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1238 0032 013B     		subs	r3, r3, #1
 1239 0034 042B     		cmp	r3, #4
 1240 0036 3CD8     		bhi	.L82
 1241 0038 DFE803F0 		tbb	[pc, r3]
 1242              	.L84:
 1243 003c 03       		.byte	(.L83-.L84)/2
 1244 003d 5F       		.byte	(.L87-.L84)/2
 1245 003e 31       		.byte	(.L86-.L84)/2
 1246 003f 40       		.byte	(.L85-.L84)/2
 1247 0040 03       		.byte	(.L83-.L84)/2
 1248 0041 00       		.p2align 1
 1249              	.L83:
 161:Core/Src/main.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, GPIO_PIN_SET);
 1250              		.loc 1 161 7 is_stmt 1 view .LVU320
 161:Core/Src/main.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, GPIO_PIN_SET);
 1251              		.loc 1 161 46 is_stmt 0 view .LVU321
 1252 0042 0323     		movs	r3, #3
 1253 0044 334A     		ldr	r2, .L95+16
 1254 0046 1370     		strb	r3, [r2]
 161:Core/Src/main.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, GPIO_PIN_SET);
 1255              		.loc 1 161 34 view .LVU322
 1256 0048 334A     		ldr	r2, .L95+20
 1257 004a 1370     		strb	r3, [r2]
 161:Core/Src/main.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, GPIO_PIN_SET);
 1258              		.loc 1 161 21 view .LVU323
 1259 004c 304A     		ldr	r2, .L95+12
 1260 004e 1370     		strb	r3, [r2]
 162:Core/Src/main.c ****       halStatus = HAL_UART_AbortReceive_IT(&huart2);//deactivate cli
 1261              		.loc 1 162 7 is_stmt 1 view .LVU324
 1262 0050 0122     		movs	r2, #1
 1263 0052 2021     		movs	r1, #32
 1264 0054 3148     		ldr	r0, .L95+24
 1265              	.LVL74:
 162:Core/Src/main.c ****       halStatus = HAL_UART_AbortReceive_IT(&huart2);//deactivate cli
 1266              		.loc 1 162 7 is_stmt 0 view .LVU325
 1267 0056 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1268              	.LVL75:
ARM GAS  /tmp/ccEpMq7M.s 			page 81


 163:Core/Src/main.c ****       if(halStatus != HAL_OK){
 1269              		.loc 1 163 7 is_stmt 1 view .LVU326
 163:Core/Src/main.c ****       if(halStatus != HAL_OK){
 1270              		.loc 1 163 19 is_stmt 0 view .LVU327
 1271 005a 3148     		ldr	r0, .L95+28
 1272 005c FFF7FEFF 		bl	HAL_UART_AbortReceive_IT
 1273              	.LVL76:
 163:Core/Src/main.c ****       if(halStatus != HAL_OK){
 1274              		.loc 1 163 17 discriminator 1 view .LVU328
 1275 0060 304B     		ldr	r3, .L95+32
 1276 0062 1870     		strb	r0, [r3]
 164:Core/Src/main.c ****         next_state = STATE_ERROR;
 1277              		.loc 1 164 7 is_stmt 1 view .LVU329
 164:Core/Src/main.c ****         next_state = STATE_ERROR;
 1278              		.loc 1 164 9 is_stmt 0 view .LVU330
 1279 0064 18B1     		cbz	r0, .L88
 165:Core/Src/main.c ****         return;
 1280              		.loc 1 165 9 is_stmt 1 view .LVU331
 165:Core/Src/main.c ****         return;
 1281              		.loc 1 165 20 is_stmt 0 view .LVU332
 1282 0066 2C4B     		ldr	r3, .L95+20
 1283 0068 0222     		movs	r2, #2
 1284 006a 1A70     		strb	r2, [r3]
 166:Core/Src/main.c ****       }
 1285              		.loc 1 166 9 is_stmt 1 view .LVU333
 1286 006c CEE7     		b	.L79
 1287              	.L88:
 168:Core/Src/main.c **** 
 1288              		.loc 1 168 7 view .LVU334
 168:Core/Src/main.c **** 
 1289              		.loc 1 168 19 is_stmt 0 view .LVU335
 1290 006e FFF7FEFF 		bl	HAL_GetTick
 1291              	.LVL77:
 168:Core/Src/main.c **** 
 1292              		.loc 1 168 17 discriminator 1 view .LVU336
 1293 0072 2D4B     		ldr	r3, .L95+36
 1294 0074 1860     		str	r0, [r3]
 171:Core/Src/main.c ****       if(halStatus != HAL_OK){
 1295              		.loc 1 171 7 is_stmt 1 view .LVU337
 171:Core/Src/main.c ****       if(halStatus != HAL_OK){
 1296              		.loc 1 171 19 is_stmt 0 view .LVU338
 1297 0076 2D48     		ldr	r0, .L95+40
 1298 0078 FFF7FEFF 		bl	HAL_TIM_Base_Stop_IT
 1299              	.LVL78:
 171:Core/Src/main.c ****       if(halStatus != HAL_OK){
 1300              		.loc 1 171 17 discriminator 1 view .LVU339
 1301 007c 294B     		ldr	r3, .L95+32
 1302 007e 1870     		strb	r0, [r3]
 172:Core/Src/main.c ****         next_state = STATE_ERROR;
 1303              		.loc 1 172 7 is_stmt 1 view .LVU340
 172:Core/Src/main.c ****         next_state = STATE_ERROR;
 1304              		.loc 1 172 9 is_stmt 0 view .LVU341
 1305 0080 18B1     		cbz	r0, .L89
 173:Core/Src/main.c ****         return;
 1306              		.loc 1 173 9 is_stmt 1 view .LVU342
 173:Core/Src/main.c ****         return;
 1307              		.loc 1 173 20 is_stmt 0 view .LVU343
ARM GAS  /tmp/ccEpMq7M.s 			page 82


 1308 0082 254B     		ldr	r3, .L95+20
 1309 0084 0222     		movs	r2, #2
 1310 0086 1A70     		strb	r2, [r3]
 174:Core/Src/main.c ****       }
 1311              		.loc 1 174 9 is_stmt 1 view .LVU344
 1312 0088 C0E7     		b	.L79
 1313              	.L89:
 177:Core/Src/main.c ****       if(halStatus != HAL_OK){
 1314              		.loc 1 177 7 view .LVU345
 177:Core/Src/main.c ****       if(halStatus != HAL_OK){
 1315              		.loc 1 177 19 is_stmt 0 view .LVU346
 1316 008a 2948     		ldr	r0, .L95+44
 1317 008c FFF7FEFF 		bl	HAL_TIM_Base_Stop_IT
 1318              	.LVL79:
 177:Core/Src/main.c ****       if(halStatus != HAL_OK){
 1319              		.loc 1 177 17 discriminator 1 view .LVU347
 1320 0090 244B     		ldr	r3, .L95+32
 1321 0092 1870     		strb	r0, [r3]
 178:Core/Src/main.c ****         next_state = STATE_ERROR;
 1322              		.loc 1 178 7 is_stmt 1 view .LVU348
 178:Core/Src/main.c ****         next_state = STATE_ERROR;
 1323              		.loc 1 178 9 is_stmt 0 view .LVU349
 1324 0094 68B1     		cbz	r0, .L82
 179:Core/Src/main.c ****         return;
 1325              		.loc 1 179 9 is_stmt 1 view .LVU350
 179:Core/Src/main.c ****         return;
 1326              		.loc 1 179 20 is_stmt 0 view .LVU351
 1327 0096 204B     		ldr	r3, .L95+20
 1328 0098 0222     		movs	r2, #2
 1329 009a 1A70     		strb	r2, [r3]
 180:Core/Src/main.c ****       }
 1330              		.loc 1 180 9 is_stmt 1 view .LVU352
 1331 009c B6E7     		b	.L79
 1332              	.LVL80:
 1333              	.L86:
 184:Core/Src/main.c ****       //start timer
 1334              		.loc 1 184 7 view .LVU353
 184:Core/Src/main.c ****       //start timer
 1335              		.loc 1 184 46 is_stmt 0 view .LVU354
 1336 009e 0523     		movs	r3, #5
 1337 00a0 1C4A     		ldr	r2, .L95+16
 1338 00a2 1370     		strb	r3, [r2]
 184:Core/Src/main.c ****       //start timer
 1339              		.loc 1 184 34 view .LVU355
 1340 00a4 1C4A     		ldr	r2, .L95+20
 1341 00a6 1370     		strb	r3, [r2]
 184:Core/Src/main.c ****       //start timer
 1342              		.loc 1 184 21 view .LVU356
 1343 00a8 194A     		ldr	r2, .L95+12
 1344 00aa 1370     		strb	r3, [r2]
 186:Core/Src/main.c ****     }else if(current_state == STATE_WARNING){
 1345              		.loc 1 186 7 is_stmt 1 view .LVU357
 1346 00ac 1F48     		ldr	r0, .L95+40
 1347              	.LVL81:
 186:Core/Src/main.c ****     }else if(current_state == STATE_WARNING){
 1348              		.loc 1 186 7 is_stmt 0 view .LVU358
 1349 00ae FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
ARM GAS  /tmp/ccEpMq7M.s 			page 83


 1350              	.LVL82:
 1351              	.L82:
 208:Core/Src/main.c ****   }
 1352              		.loc 1 208 5 is_stmt 1 view .LVU359
 208:Core/Src/main.c ****   }
 1353              		.loc 1 208 17 is_stmt 0 view .LVU360
 1354 00b2 FFF7FEFF 		bl	HAL_GetTick
 1355              	.LVL83:
 208:Core/Src/main.c ****   }
 1356              		.loc 1 208 15 discriminator 1 view .LVU361
 1357 00b6 1C4B     		ldr	r3, .L95+36
 1358 00b8 1860     		str	r0, [r3]
 1359 00ba A7E7     		b	.L79
 1360              	.LVL84:
 1361              	.L85:
 189:Core/Src/main.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, GPIO_PIN_RESET);
 1362              		.loc 1 189 7 is_stmt 1 view .LVU362
 189:Core/Src/main.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, GPIO_PIN_RESET);
 1363              		.loc 1 189 34 is_stmt 0 view .LVU363
 1364 00bc 0123     		movs	r3, #1
 1365 00be 164A     		ldr	r2, .L95+20
 1366 00c0 1370     		strb	r3, [r2]
 189:Core/Src/main.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, GPIO_PIN_RESET);
 1367              		.loc 1 189 21 view .LVU364
 1368 00c2 134A     		ldr	r2, .L95+12
 1369 00c4 1370     		strb	r3, [r2]
 190:Core/Src/main.c ****       //stop all timers
 1370              		.loc 1 190 7 is_stmt 1 view .LVU365
 1371 00c6 0022     		movs	r2, #0
 1372 00c8 2021     		movs	r1, #32
 1373 00ca 1448     		ldr	r0, .L95+24
 1374              	.LVL85:
 190:Core/Src/main.c ****       //stop all timers
 1375              		.loc 1 190 7 is_stmt 0 view .LVU366
 1376 00cc FFF7FEFF 		bl	HAL_GPIO_WritePin
 1377              	.LVL86:
 192:Core/Src/main.c ****       if(halStatus != HAL_OK){
 1378              		.loc 1 192 7 is_stmt 1 view .LVU367
 192:Core/Src/main.c ****       if(halStatus != HAL_OK){
 1379              		.loc 1 192 19 is_stmt 0 view .LVU368
 1380 00d0 1648     		ldr	r0, .L95+40
 1381 00d2 FFF7FEFF 		bl	HAL_TIM_Base_Stop_IT
 1382              	.LVL87:
 192:Core/Src/main.c ****       if(halStatus != HAL_OK){
 1383              		.loc 1 192 17 discriminator 1 view .LVU369
 1384 00d6 134B     		ldr	r3, .L95+32
 1385 00d8 1870     		strb	r0, [r3]
 193:Core/Src/main.c ****         next_state = STATE_ERROR;
 1386              		.loc 1 193 7 is_stmt 1 view .LVU370
 193:Core/Src/main.c ****         next_state = STATE_ERROR;
 1387              		.loc 1 193 9 is_stmt 0 view .LVU371
 1388 00da 18B1     		cbz	r0, .L90
 194:Core/Src/main.c ****         return;
 1389              		.loc 1 194 9 is_stmt 1 view .LVU372
 194:Core/Src/main.c ****         return;
 1390              		.loc 1 194 20 is_stmt 0 view .LVU373
 1391 00dc 0E4B     		ldr	r3, .L95+20
ARM GAS  /tmp/ccEpMq7M.s 			page 84


 1392 00de 0222     		movs	r2, #2
 1393 00e0 1A70     		strb	r2, [r3]
 195:Core/Src/main.c ****       }
 1394              		.loc 1 195 9 is_stmt 1 view .LVU374
 1395 00e2 93E7     		b	.L79
 1396              	.L90:
 197:Core/Src/main.c ****       if(halStatus != HAL_OK){
 1397              		.loc 1 197 7 view .LVU375
 197:Core/Src/main.c ****       if(halStatus != HAL_OK){
 1398              		.loc 1 197 19 is_stmt 0 view .LVU376
 1399 00e4 1248     		ldr	r0, .L95+44
 1400 00e6 FFF7FEFF 		bl	HAL_TIM_Base_Stop_IT
 1401              	.LVL88:
 197:Core/Src/main.c ****       if(halStatus != HAL_OK){
 1402              		.loc 1 197 17 discriminator 1 view .LVU377
 1403 00ea 0E4B     		ldr	r3, .L95+32
 1404 00ec 1870     		strb	r0, [r3]
 198:Core/Src/main.c ****         next_state = STATE_ERROR;
 1405              		.loc 1 198 7 is_stmt 1 view .LVU378
 198:Core/Src/main.c ****         next_state = STATE_ERROR;
 1406              		.loc 1 198 9 is_stmt 0 view .LVU379
 1407 00ee 0028     		cmp	r0, #0
 1408 00f0 DFD0     		beq	.L82
 199:Core/Src/main.c ****         return;
 1409              		.loc 1 199 9 is_stmt 1 view .LVU380
 199:Core/Src/main.c ****         return;
 1410              		.loc 1 199 20 is_stmt 0 view .LVU381
 1411 00f2 094B     		ldr	r3, .L95+20
 1412 00f4 0222     		movs	r2, #2
 1413 00f6 1A70     		strb	r2, [r3]
 200:Core/Src/main.c ****       }
 1414              		.loc 1 200 9 is_stmt 1 view .LVU382
 1415 00f8 88E7     		b	.L79
 1416              	.LVL89:
 1417              	.L87:
 204:Core/Src/main.c ****       NVIC_SystemReset();
 1418              		.loc 1 204 7 view .LVU383
 204:Core/Src/main.c ****       NVIC_SystemReset();
 1419              		.loc 1 204 30 is_stmt 0 view .LVU384
 1420 00fa 0E4B     		ldr	r3, .L95+48
 1421 00fc 0022     		movs	r2, #0
 1422 00fe 1A70     		strb	r2, [r3]
 205:Core/Src/main.c ****     }
 1423              		.loc 1 205 7 is_stmt 1 view .LVU385
 1424 0100 FFF7FEFF 		bl	__NVIC_SystemReset
 1425              	.LVL90:
 1426              	.L96:
 205:Core/Src/main.c ****     }
 1427              		.loc 1 205 7 is_stmt 0 view .LVU386
 1428              		.align	2
 1429              	.L95:
 1430 0104 00080240 		.word	1073874944
 1431 0108 00000000 		.word	lastDigitalValue
 1432 010c 00000000 		.word	lastButtonPress
 1433 0110 00000000 		.word	current_state
 1434 0114 00000000 		.word	new_state
 1435 0118 00000000 		.word	next_state
ARM GAS  /tmp/ccEpMq7M.s 			page 85


 1436 011c 00000240 		.word	1073872896
 1437 0120 00000000 		.word	huart2
 1438 0124 00000000 		.word	halStatus
 1439 0128 00000000 		.word	lastTimer
 1440 012c 00000000 		.word	htim3
 1441 0130 00000000 		.word	htim4
 1442 0134 00000000 		.word	is_running_error_timer
 1443              	.LBE17:
 1444              		.cfi_endproc
 1445              	.LFE224:
 1447              		.section	.rodata.handle_cli_command.str1.4,"aMS",%progbits,1
 1448              		.align	2
 1449              	.LC7:
 1450 0000 72617700 		.ascii	"raw\000"
 1451              		.align	2
 1452              	.LC8:
 1453 0004 6D6F7669 		.ascii	"moving average\000"
 1453      6E672061 
 1453      76657261 
 1453      676500
 1454 0013 00       		.align	2
 1455              	.LC9:
 1456 0014 72616E64 		.ascii	"random noise\000"
 1456      6F6D206E 
 1456      6F697365 
 1456      00
 1457              		.section	.text.handle_cli_command,"ax",%progbits
 1458              		.align	1
 1459              		.global	handle_cli_command
 1460              		.syntax unified
 1461              		.thumb
 1462              		.thumb_func
 1464              	handle_cli_command:
 1465              	.LFB225:
 217:Core/Src/main.c ****     if (strcmp(cli_command, "raw") == 0) {
 1466              		.loc 1 217 30 is_stmt 1 view -0
 1467              		.cfi_startproc
 1468              		@ args = 0, pretend = 0, frame = 0
 1469              		@ frame_needed = 0, uses_anonymous_args = 0
 1470 0000 08B5     		push	{r3, lr}
 1471              		.cfi_def_cfa_offset 8
 1472              		.cfi_offset 3, -8
 1473              		.cfi_offset 14, -4
 218:Core/Src/main.c ****         currentFilterMode = RAW;
 1474              		.loc 1 218 5 view .LVU388
 218:Core/Src/main.c ****         currentFilterMode = RAW;
 1475              		.loc 1 218 9 is_stmt 0 view .LVU389
 1476 0002 1549     		ldr	r1, .L104
 1477 0004 1548     		ldr	r0, .L104+4
 1478 0006 FFF7FEFF 		bl	strcmp
 1479              	.LVL91:
 218:Core/Src/main.c ****         currentFilterMode = RAW;
 1480              		.loc 1 218 8 discriminator 1 view .LVU390
 1481 000a 50B9     		cbnz	r0, .L98
 219:Core/Src/main.c ****     } else if (strcmp(cli_command, "moving average") == 0) {
 1482              		.loc 1 219 9 is_stmt 1 view .LVU391
 219:Core/Src/main.c ****     } else if (strcmp(cli_command, "moving average") == 0) {
ARM GAS  /tmp/ccEpMq7M.s 			page 86


 1483              		.loc 1 219 27 is_stmt 0 view .LVU392
 1484 000c 144B     		ldr	r3, .L104+8
 1485 000e 0022     		movs	r2, #0
 1486 0010 1A70     		strb	r2, [r3]
 1487              	.L99:
 230:Core/Src/main.c ****     return 0;
 1488              		.loc 1 230 5 is_stmt 1 view .LVU393
 1489 0012 124B     		ldr	r3, .L104+4
 1490 0014 0020     		movs	r0, #0
 1491 0016 1860     		str	r0, [r3]
 1492 0018 5860     		str	r0, [r3, #4]
 1493 001a 9860     		str	r0, [r3, #8]
 1494 001c C3F80B00 		str	r0, [r3, #11]	@ unaligned
 231:Core/Src/main.c **** }
 1495              		.loc 1 231 5 view .LVU394
 1496              	.L102:
 232:Core/Src/main.c **** 
 1497              		.loc 1 232 1 is_stmt 0 view .LVU395
 1498 0020 08BD     		pop	{r3, pc}
 1499              	.L98:
 220:Core/Src/main.c ****         currentFilterMode = MOVING_AVERAGE;
 1500              		.loc 1 220 12 is_stmt 1 view .LVU396
 220:Core/Src/main.c ****         currentFilterMode = MOVING_AVERAGE;
 1501              		.loc 1 220 16 is_stmt 0 view .LVU397
 1502 0022 1049     		ldr	r1, .L104+12
 1503 0024 0D48     		ldr	r0, .L104+4
 1504 0026 FFF7FEFF 		bl	strcmp
 1505              	.LVL92:
 220:Core/Src/main.c ****         currentFilterMode = MOVING_AVERAGE;
 1506              		.loc 1 220 15 discriminator 1 view .LVU398
 1507 002a 18B9     		cbnz	r0, .L100
 221:Core/Src/main.c ****     } else if (strcmp(cli_command, "random noise") == 0) {
 1508              		.loc 1 221 9 is_stmt 1 view .LVU399
 221:Core/Src/main.c ****     } else if (strcmp(cli_command, "random noise") == 0) {
 1509              		.loc 1 221 27 is_stmt 0 view .LVU400
 1510 002c 0C4B     		ldr	r3, .L104+8
 1511 002e 0122     		movs	r2, #1
 1512 0030 1A70     		strb	r2, [r3]
 1513 0032 EEE7     		b	.L99
 1514              	.L100:
 222:Core/Src/main.c ****         currentFilterMode = RANDOM_NOISE;
 1515              		.loc 1 222 12 is_stmt 1 view .LVU401
 222:Core/Src/main.c ****         currentFilterMode = RANDOM_NOISE;
 1516              		.loc 1 222 16 is_stmt 0 view .LVU402
 1517 0034 0C49     		ldr	r1, .L104+16
 1518 0036 0948     		ldr	r0, .L104+4
 1519 0038 FFF7FEFF 		bl	strcmp
 1520              	.LVL93:
 222:Core/Src/main.c ****         currentFilterMode = RANDOM_NOISE;
 1521              		.loc 1 222 15 discriminator 1 view .LVU403
 1522 003c 18B9     		cbnz	r0, .L101
 223:Core/Src/main.c ****     } else {
 1523              		.loc 1 223 9 is_stmt 1 view .LVU404
 223:Core/Src/main.c ****     } else {
 1524              		.loc 1 223 27 is_stmt 0 view .LVU405
 1525 003e 084B     		ldr	r3, .L104+8
 1526 0040 0222     		movs	r2, #2
ARM GAS  /tmp/ccEpMq7M.s 			page 87


 1527 0042 1A70     		strb	r2, [r3]
 1528 0044 E5E7     		b	.L99
 1529              	.L101:
 226:Core/Src/main.c ****         return 1;
 1530              		.loc 1 226 9 is_stmt 1 view .LVU406
 1531 0046 054B     		ldr	r3, .L104+4
 1532 0048 0022     		movs	r2, #0
 1533 004a 1A60     		str	r2, [r3]
 1534 004c 5A60     		str	r2, [r3, #4]
 1535 004e 9A60     		str	r2, [r3, #8]
 1536 0050 C3F80B20 		str	r2, [r3, #11]	@ unaligned
 227:Core/Src/main.c ****     }
 1537              		.loc 1 227 9 view .LVU407
 227:Core/Src/main.c ****     }
 1538              		.loc 1 227 16 is_stmt 0 view .LVU408
 1539 0054 0120     		movs	r0, #1
 1540 0056 E3E7     		b	.L102
 1541              	.L105:
 1542              		.align	2
 1543              	.L104:
 1544 0058 00000000 		.word	.LC7
 1545 005c 00000000 		.word	cli_command
 1546 0060 00000000 		.word	currentFilterMode
 1547 0064 04000000 		.word	.LC8
 1548 0068 14000000 		.word	.LC9
 1549              		.cfi_endproc
 1550              	.LFE225:
 1552              		.section	.rodata.HAL_UARTEx_RxEventCallback.str1.4,"aMS",%progbits,1
 1553              		.align	2
 1554              	.LC10:
 1555 0000 436F6D6D 		.ascii	"Command not valid. No change to filter mode.\015\012"
 1555      616E6420 
 1555      6E6F7420 
 1555      76616C69 
 1555      642E204E 
 1556 002e 00       		.ascii	"\000"
 1557 002f 00       		.align	2
 1558              	.LC11:
 1559 0030 46696C74 		.ascii	"Filter mode modified!\015\012\000"
 1559      6572206D 
 1559      6F646520 
 1559      6D6F6469 
 1559      66696564 
 1560              		.section	.text.HAL_UARTEx_RxEventCallback,"ax",%progbits
 1561              		.align	1
 1562              		.global	HAL_UARTEx_RxEventCallback
 1563              		.syntax unified
 1564              		.thumb
 1565              		.thumb_func
 1567              	HAL_UARTEx_RxEventCallback:
 1568              	.LVL94:
 1569              	.LFB226:
 238:Core/Src/main.c ****   //if we are not in pause or wait request state, ignore the command received
 1570              		.loc 1 238 1 is_stmt 1 view -0
 1571              		.cfi_startproc
 1572              		@ args = 0, pretend = 0, frame = 0
 1573              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccEpMq7M.s 			page 88


 241:Core/Src/main.c ****     memset(cli_command, '\0', sizeof(cli_command)); 
 1574              		.loc 1 241 3 view .LVU410
 241:Core/Src/main.c ****     memset(cli_command, '\0', sizeof(cli_command)); 
 1575              		.loc 1 241 19 is_stmt 0 view .LVU411
 1576 0000 264B     		ldr	r3, .L115
 1577 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 241:Core/Src/main.c ****     memset(cli_command, '\0', sizeof(cli_command)); 
 1578              		.loc 1 241 5 view .LVU412
 1579 0004 052B     		cmp	r3, #5
 1580 0006 01D0     		beq	.L107
 241:Core/Src/main.c ****     memset(cli_command, '\0', sizeof(cli_command)); 
 1581              		.loc 1 241 34 discriminator 1 view .LVU413
 1582 0008 012B     		cmp	r3, #1
 1583 000a 2BD1     		bne	.L114
 1584              	.L107:
 238:Core/Src/main.c ****   //if we are not in pause or wait request state, ignore the command received
 1585              		.loc 1 238 1 view .LVU414
 1586 000c 70B5     		push	{r4, r5, r6, lr}
 1587              		.cfi_def_cfa_offset 16
 1588              		.cfi_offset 4, -16
 1589              		.cfi_offset 5, -12
 1590              		.cfi_offset 6, -8
 1591              		.cfi_offset 14, -4
 247:Core/Src/main.c **** 
 1592              		.loc 1 247 3 is_stmt 1 view .LVU415
 247:Core/Src/main.c **** 
 1593              		.loc 1 247 27 is_stmt 0 view .LVU416
 1594 000e FFF7FEFF 		bl	handle_cli_command
 1595              	.LVL95:
 249:Core/Src/main.c ****     sprintf(msg_buffer, "Command not valid. No change to filter mode.\r\n");
 1596              		.loc 1 249 3 is_stmt 1 view .LVU417
 249:Core/Src/main.c ****     sprintf(msg_buffer, "Command not valid. No change to filter mode.\r\n");
 1597              		.loc 1 249 5 is_stmt 0 view .LVU418
 1598 0012 78B3     		cbz	r0, .L109
 250:Core/Src/main.c ****     HAL_UART_Transmit(&huart2, (uint8_t *)msg_buffer, strlen(msg_buffer), HAL_MAX_DELAY);
 1599              		.loc 1 250 5 is_stmt 1 view .LVU419
 1600 0014 224D     		ldr	r5, .L115+4
 1601 0016 AC46     		mov	ip, r5
 1602 0018 224C     		ldr	r4, .L115+8
 1603 001a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 1604              	.LVL96:
 250:Core/Src/main.c ****     HAL_UART_Transmit(&huart2, (uint8_t *)msg_buffer, strlen(msg_buffer), HAL_MAX_DELAY);
 1605              		.loc 1 250 5 is_stmt 0 view .LVU420
 1606 001c ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 1607 0020 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 1608 0022 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 1609 0026 94E80F00 		ldm	r4, {r0, r1, r2, r3}
 1610 002a ACE80700 		stmia	ip!, {r0, r1, r2}
 1611 002e 2CF8023B 		strh	r3, [ip], #2	@ movhi
 1612 0032 1B0C     		lsrs	r3, r3, #16
 1613 0034 8CF80030 		strb	r3, [ip]
 251:Core/Src/main.c ****   }
 1614              		.loc 1 251 5 is_stmt 1 view .LVU421
 251:Core/Src/main.c ****   }
 1615              		.loc 1 251 55 is_stmt 0 view .LVU422
 1616 0038 2846     		mov	r0, r5
 1617 003a FFF7FEFF 		bl	strlen
ARM GAS  /tmp/ccEpMq7M.s 			page 89


 1618              	.LVL97:
 251:Core/Src/main.c ****   }
 1619              		.loc 1 251 5 discriminator 1 view .LVU423
 1620 003e 4FF0FF33 		mov	r3, #-1
 1621 0042 82B2     		uxth	r2, r0
 1622 0044 2946     		mov	r1, r5
 1623 0046 1848     		ldr	r0, .L115+12
 1624 0048 FFF7FEFF 		bl	HAL_UART_Transmit
 1625              	.LVL98:
 1626              	.L110:
 259:Core/Src/main.c ****   if(halStatus != HAL_OK){
 1627              		.loc 1 259 3 is_stmt 1 view .LVU424
 259:Core/Src/main.c ****   if(halStatus != HAL_OK){
 1628              		.loc 1 259 15 is_stmt 0 view .LVU425
 1629 004c 4622     		movs	r2, #70
 1630 004e 1749     		ldr	r1, .L115+16
 1631 0050 1548     		ldr	r0, .L115+12
 1632 0052 FFF7FEFF 		bl	HAL_UARTEx_ReceiveToIdle_IT
 1633              	.LVL99:
 259:Core/Src/main.c ****   if(halStatus != HAL_OK){
 1634              		.loc 1 259 13 discriminator 1 view .LVU426
 1635 0056 164B     		ldr	r3, .L115+20
 1636 0058 1870     		strb	r0, [r3]
 260:Core/Src/main.c ****     next_state = STATE_ERROR;
 1637              		.loc 1 260 3 is_stmt 1 view .LVU427
 260:Core/Src/main.c ****     next_state = STATE_ERROR;
 1638              		.loc 1 260 5 is_stmt 0 view .LVU428
 1639 005a 10B1     		cbz	r0, .L106
 261:Core/Src/main.c ****   }
 1640              		.loc 1 261 5 is_stmt 1 view .LVU429
 261:Core/Src/main.c ****   }
 1641              		.loc 1 261 16 is_stmt 0 view .LVU430
 1642 005c 154B     		ldr	r3, .L115+24
 1643 005e 0222     		movs	r2, #2
 1644 0060 1A70     		strb	r2, [r3]
 1645              	.L106:
 263:Core/Src/main.c **** 
 1646              		.loc 1 263 1 view .LVU431
 1647 0062 70BD     		pop	{r4, r5, r6, pc}
 1648              	.LVL100:
 1649              	.L114:
 1650              		.cfi_def_cfa_offset 0
 1651              		.cfi_restore 4
 1652              		.cfi_restore 5
 1653              		.cfi_restore 6
 1654              		.cfi_restore 14
 242:Core/Src/main.c ****     return;
 1655              		.loc 1 242 5 is_stmt 1 view .LVU432
 1656 0064 114B     		ldr	r3, .L115+16
 1657 0066 0022     		movs	r2, #0
 1658 0068 1A60     		str	r2, [r3]
 1659 006a 5A60     		str	r2, [r3, #4]
 1660 006c 9A60     		str	r2, [r3, #8]
 1661 006e C3F80B20 		str	r2, [r3, #11]	@ unaligned
 243:Core/Src/main.c ****   }
 1662              		.loc 1 243 5 view .LVU433
 1663 0072 7047     		bx	lr
ARM GAS  /tmp/ccEpMq7M.s 			page 90


 1664              	.LVL101:
 1665              	.L109:
 1666              		.cfi_def_cfa_offset 16
 1667              		.cfi_offset 4, -16
 1668              		.cfi_offset 5, -12
 1669              		.cfi_offset 6, -8
 1670              		.cfi_offset 14, -4
 254:Core/Src/main.c ****     HAL_UART_Transmit(&huart2, (uint8_t *)msg_buffer, strlen(msg_buffer), HAL_MAX_DELAY);
 1671              		.loc 1 254 5 view .LVU434
 1672 0074 0A4E     		ldr	r6, .L115+4
 1673 0076 3446     		mov	r4, r6
 1674 0078 0F4D     		ldr	r5, .L115+28
 1675 007a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1676              	.LVL102:
 254:Core/Src/main.c ****     HAL_UART_Transmit(&huart2, (uint8_t *)msg_buffer, strlen(msg_buffer), HAL_MAX_DELAY);
 1677              		.loc 1 254 5 is_stmt 0 view .LVU435
 1678 007c 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1679 007e 95E80300 		ldm	r5, {r0, r1}
 1680 0082 84E80300 		stm	r4, {r0, r1}
 255:Core/Src/main.c ****   }
 1681              		.loc 1 255 5 is_stmt 1 view .LVU436
 255:Core/Src/main.c ****   }
 1682              		.loc 1 255 55 is_stmt 0 view .LVU437
 1683 0086 3046     		mov	r0, r6
 1684 0088 FFF7FEFF 		bl	strlen
 1685              	.LVL103:
 255:Core/Src/main.c ****   }
 1686              		.loc 1 255 5 discriminator 1 view .LVU438
 1687 008c 4FF0FF33 		mov	r3, #-1
 1688 0090 82B2     		uxth	r2, r0
 1689 0092 3146     		mov	r1, r6
 1690 0094 0448     		ldr	r0, .L115+12
 1691 0096 FFF7FEFF 		bl	HAL_UART_Transmit
 1692              	.LVL104:
 1693 009a D7E7     		b	.L110
 1694              	.L116:
 1695              		.align	2
 1696              	.L115:
 1697 009c 00000000 		.word	current_state
 1698 00a0 00000000 		.word	msg_buffer
 1699 00a4 00000000 		.word	.LC10
 1700 00a8 00000000 		.word	huart2
 1701 00ac 00000000 		.word	cli_command
 1702 00b0 00000000 		.word	halStatus
 1703 00b4 00000000 		.word	next_state
 1704 00b8 30000000 		.word	.LC11
 1705              		.cfi_endproc
 1706              	.LFE226:
 1708              		.section	.text.run_state,"ax",%progbits
 1709              		.align	1
 1710              		.global	run_state
 1711              		.syntax unified
 1712              		.thumb
 1713              		.thumb_func
 1715              	run_state:
 1716              	.LVL105:
 1717              	.LFB241:
ARM GAS  /tmp/ccEpMq7M.s 			page 91


 812:Core/Src/main.c **** 
 813:Core/Src/main.c **** 
 814:Core/Src/main.c **** 
 815:Core/Src/main.c **** /*  ____  _        _        
 816:Core/Src/main.c ****  * / ___|| |_ __ _| |_ ___  
 817:Core/Src/main.c ****  * \___ \| __/ _` | __/ _ \
 818:Core/Src/main.c ****  *  ___) | || (_| | ||  __/ 
 819:Core/Src/main.c ****  * |____/ \__\__,_|\__\___| 
 820:Core/Src/main.c ****  *                          
 821:Core/Src/main.c ****  *                                              
 822:Core/Src/main.c ****  *  _ __ ___   __ _ _ __   __ _  __ _  ___ _ __ 
 823:Core/Src/main.c ****  * | '_ ` _ \ / _` | '_ \ / _` |/ _` |/ _ \ '__|
 824:Core/Src/main.c ****  * | | | | | | (_| | | | | (_| | (_| |  __/ |   
 825:Core/Src/main.c ****  * |_| |_| |_|\__,_|_| |_|\__,_|\__, |\___|_|   
 826:Core/Src/main.c ****  *                              |___/           
 827:Core/Src/main.c ****  */
 828:Core/Src/main.c **** 
 829:Core/Src/main.c **** state_t run_state(state_data_t *data) {
 1718              		.loc 1 829 39 is_stmt 1 view -0
 1719              		.cfi_startproc
 1720              		@ args = 0, pretend = 0, frame = 0
 1721              		@ frame_needed = 0, uses_anonymous_args = 0
 1722              		.loc 1 829 39 is_stmt 0 view .LVU440
 1723 0000 08B5     		push	{r3, lr}
 1724              		.cfi_def_cfa_offset 8
 1725              		.cfi_offset 3, -8
 1726              		.cfi_offset 14, -4
 830:Core/Src/main.c ****   new_state = state_table[current_state](data);
 1727              		.loc 1 830 3 is_stmt 1 view .LVU441
 1728              		.loc 1 830 26 is_stmt 0 view .LVU442
 1729 0002 0D4B     		ldr	r3, .L123
 1730 0004 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1731 0006 0D4B     		ldr	r3, .L123+4
 1732 0008 53F82230 		ldr	r3, [r3, r2, lsl #2]
 1733              		.loc 1 830 15 view .LVU443
 1734 000c 9847     		blx	r3
 1735              	.LVL106:
 1736              		.loc 1 830 13 discriminator 1 view .LVU444
 1737 000e 0C4B     		ldr	r3, .L123+8
 1738 0010 1870     		strb	r0, [r3]
 831:Core/Src/main.c ****   if (new_state == NO_CHANGE) new_state = current_state;
 1739              		.loc 1 831 3 is_stmt 1 view .LVU445
 1740              		.loc 1 831 6 is_stmt 0 view .LVU446
 1741 0012 0728     		cmp	r0, #7
 1742 0014 08D0     		beq	.L121
 1743              	.L118:
 832:Core/Src/main.c ****   //force state in case of inconsistency due to interrupt
 833:Core/Src/main.c ****   if(current_state == next_state) new_state = current_state;
 1744              		.loc 1 833 3 is_stmt 1 view .LVU447
 1745              		.loc 1 833 20 is_stmt 0 view .LVU448
 1746 0016 084B     		ldr	r3, .L123
 1747 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1748 001a 0A4A     		ldr	r2, .L123+12
 1749 001c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1750              		.loc 1 833 5 view .LVU449
 1751 001e 9342     		cmp	r3, r2
 1752 0020 07D0     		beq	.L122
ARM GAS  /tmp/ccEpMq7M.s 			page 92


 1753              	.L119:
 834:Core/Src/main.c ****   return new_state;
 1754              		.loc 1 834 3 is_stmt 1 view .LVU450
 835:Core/Src/main.c **** };
 1755              		.loc 1 835 1 is_stmt 0 view .LVU451
 1756 0022 074B     		ldr	r3, .L123+8
 1757 0024 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 1758 0026 08BD     		pop	{r3, pc}
 1759              	.L121:
 831:Core/Src/main.c ****   //force state in case of inconsistency due to interrupt
 1760              		.loc 1 831 31 is_stmt 1 discriminator 1 view .LVU452
 831:Core/Src/main.c ****   //force state in case of inconsistency due to interrupt
 1761              		.loc 1 831 41 is_stmt 0 discriminator 1 view .LVU453
 1762 0028 034B     		ldr	r3, .L123
 1763 002a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1764 002c 044B     		ldr	r3, .L123+8
 1765 002e 1A70     		strb	r2, [r3]
 1766 0030 F1E7     		b	.L118
 1767              	.L122:
 833:Core/Src/main.c ****   return new_state;
 1768              		.loc 1 833 35 is_stmt 1 discriminator 1 view .LVU454
 833:Core/Src/main.c ****   return new_state;
 1769              		.loc 1 833 45 is_stmt 0 discriminator 1 view .LVU455
 1770 0032 034A     		ldr	r2, .L123+8
 1771 0034 1370     		strb	r3, [r2]
 1772 0036 F4E7     		b	.L119
 1773              	.L124:
 1774              		.align	2
 1775              	.L123:
 1776 0038 00000000 		.word	current_state
 1777 003c 00000000 		.word	state_table
 1778 0040 00000000 		.word	new_state
 1779 0044 00000000 		.word	next_state
 1780              		.cfi_endproc
 1781              	.LFE241:
 1783              		.section	.text.main,"ax",%progbits
 1784              		.align	1
 1785              		.global	main
 1786              		.syntax unified
 1787              		.thumb
 1788              		.thumb_func
 1790              	main:
 1791              	.LFB227:
 272:Core/Src/main.c **** 
 1792              		.loc 1 272 1 is_stmt 1 view -0
 1793              		.cfi_startproc
 1794              		@ Volatile: function does not return.
 1795              		@ args = 0, pretend = 0, frame = 0
 1796              		@ frame_needed = 0, uses_anonymous_args = 0
 1797 0000 08B5     		push	{r3, lr}
 1798              		.cfi_def_cfa_offset 8
 1799              		.cfi_offset 3, -8
 1800              		.cfi_offset 14, -4
 1801              	.L126:
 295:Core/Src/main.c ****   {
 1802              		.loc 1 295 3 view .LVU457
 300:Core/Src/main.c ****   }
ARM GAS  /tmp/ccEpMq7M.s 			page 93


 1803              		.loc 1 300 5 discriminator 1 view .LVU458
 300:Core/Src/main.c ****   }
 1804              		.loc 1 300 21 is_stmt 0 discriminator 1 view .LVU459
 1805 0002 0020     		movs	r0, #0
 1806 0004 FFF7FEFF 		bl	run_state
 1807              	.LVL107:
 300:Core/Src/main.c ****   }
 1808              		.loc 1 300 19 discriminator 1 view .LVU460
 1809 0008 014B     		ldr	r3, .L128
 1810 000a 1870     		strb	r0, [r3]
 295:Core/Src/main.c ****   {
 1811              		.loc 1 295 9 is_stmt 1 view .LVU461
 1812 000c F9E7     		b	.L126
 1813              	.L129:
 1814 000e 00BF     		.align	2
 1815              	.L128:
 1816 0010 00000000 		.word	current_state
 1817              		.cfi_endproc
 1818              	.LFE227:
 1820              		.section	.text.Error_Handler,"ax",%progbits
 1821              		.align	1
 1822              		.global	Error_Handler
 1823              		.syntax unified
 1824              		.thumb
 1825              		.thumb_func
 1827              	Error_Handler:
 1828              	.LFB242:
 836:Core/Src/main.c **** 
 837:Core/Src/main.c **** /* USER CODE END 4 */
 838:Core/Src/main.c **** 
 839:Core/Src/main.c **** /**
 840:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 841:Core/Src/main.c ****   * @retval None
 842:Core/Src/main.c ****   */
 843:Core/Src/main.c **** void Error_Handler(void)
 844:Core/Src/main.c **** {
 1829              		.loc 1 844 1 view -0
 1830              		.cfi_startproc
 1831              		@ args = 0, pretend = 0, frame = 0
 1832              		@ frame_needed = 0, uses_anonymous_args = 0
 1833 0000 08B5     		push	{r3, lr}
 1834              		.cfi_def_cfa_offset 8
 1835              		.cfi_offset 3, -8
 1836              		.cfi_offset 14, -4
 845:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 846:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 847:Core/Src/main.c ****   /*
 848:Core/Src/main.c ****   in case of a generic error, set the next state as ERROR
 849:Core/Src/main.c ****   */
 850:Core/Src/main.c ****   next_state = STATE_ERROR;
 1837              		.loc 1 850 3 view .LVU463
 1838              		.loc 1 850 14 is_stmt 0 view .LVU464
 1839 0002 054B     		ldr	r3, .L132
 1840 0004 0222     		movs	r2, #2
 1841 0006 1A70     		strb	r2, [r3]
 851:Core/Src/main.c ****   HAL_TIM_Base_Start_IT(&htim4);
 1842              		.loc 1 851 3 is_stmt 1 view .LVU465
ARM GAS  /tmp/ccEpMq7M.s 			page 94


 1843 0008 0448     		ldr	r0, .L132+4
 1844 000a FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 1845              	.LVL108:
 852:Core/Src/main.c ****   HAL_UART_AbortReceive_IT(&huart2);
 1846              		.loc 1 852 3 view .LVU466
 1847 000e 0448     		ldr	r0, .L132+8
 1848 0010 FFF7FEFF 		bl	HAL_UART_AbortReceive_IT
 1849              	.LVL109:
 853:Core/Src/main.c ****   /* USER CODE END Error_Handler_Debug */
 854:Core/Src/main.c **** }
 1850              		.loc 1 854 1 is_stmt 0 view .LVU467
 1851 0014 08BD     		pop	{r3, pc}
 1852              	.L133:
 1853 0016 00BF     		.align	2
 1854              	.L132:
 1855 0018 00000000 		.word	next_state
 1856 001c 00000000 		.word	htim4
 1857 0020 00000000 		.word	huart2
 1858              		.cfi_endproc
 1859              	.LFE242:
 1861              		.section	.text.SystemClock_Config,"ax",%progbits
 1862              		.align	1
 1863              		.global	SystemClock_Config
 1864              		.syntax unified
 1865              		.thumb
 1866              		.thumb_func
 1868              	SystemClock_Config:
 1869              	.LFB228:
 310:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 1870              		.loc 1 310 1 is_stmt 1 view -0
 1871              		.cfi_startproc
 1872              		@ args = 0, pretend = 0, frame = 80
 1873              		@ frame_needed = 0, uses_anonymous_args = 0
 1874 0000 00B5     		push	{lr}
 1875              		.cfi_def_cfa_offset 4
 1876              		.cfi_offset 14, -4
 1877 0002 95B0     		sub	sp, sp, #84
 1878              		.cfi_def_cfa_offset 88
 311:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1879              		.loc 1 311 3 view .LVU469
 311:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1880              		.loc 1 311 22 is_stmt 0 view .LVU470
 1881 0004 3022     		movs	r2, #48
 1882 0006 0021     		movs	r1, #0
 1883 0008 08A8     		add	r0, sp, #32
 1884 000a FFF7FEFF 		bl	memset
 1885              	.LVL110:
 312:Core/Src/main.c **** 
 1886              		.loc 1 312 3 is_stmt 1 view .LVU471
 312:Core/Src/main.c **** 
 1887              		.loc 1 312 22 is_stmt 0 view .LVU472
 1888 000e 0023     		movs	r3, #0
 1889 0010 0393     		str	r3, [sp, #12]
 1890 0012 0493     		str	r3, [sp, #16]
 1891 0014 0593     		str	r3, [sp, #20]
 1892 0016 0693     		str	r3, [sp, #24]
 1893 0018 0793     		str	r3, [sp, #28]
ARM GAS  /tmp/ccEpMq7M.s 			page 95


 316:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1894              		.loc 1 316 3 is_stmt 1 view .LVU473
 1895              	.LBB18:
 316:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1896              		.loc 1 316 3 view .LVU474
 1897 001a 0193     		str	r3, [sp, #4]
 316:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1898              		.loc 1 316 3 view .LVU475
 1899 001c 1F4A     		ldr	r2, .L140
 1900 001e 116C     		ldr	r1, [r2, #64]
 1901 0020 41F08051 		orr	r1, r1, #268435456
 1902 0024 1164     		str	r1, [r2, #64]
 316:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1903              		.loc 1 316 3 view .LVU476
 1904 0026 126C     		ldr	r2, [r2, #64]
 1905 0028 02F08052 		and	r2, r2, #268435456
 1906 002c 0192     		str	r2, [sp, #4]
 316:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1907              		.loc 1 316 3 view .LVU477
 1908 002e 019A     		ldr	r2, [sp, #4]
 1909              	.LBE18:
 316:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1910              		.loc 1 316 3 view .LVU478
 317:Core/Src/main.c **** 
 1911              		.loc 1 317 3 view .LVU479
 1912              	.LBB19:
 317:Core/Src/main.c **** 
 1913              		.loc 1 317 3 view .LVU480
 1914 0030 0293     		str	r3, [sp, #8]
 317:Core/Src/main.c **** 
 1915              		.loc 1 317 3 view .LVU481
 1916 0032 1B4A     		ldr	r2, .L140+4
 1917 0034 1168     		ldr	r1, [r2]
 1918 0036 41F44041 		orr	r1, r1, #49152
 1919 003a 1160     		str	r1, [r2]
 317:Core/Src/main.c **** 
 1920              		.loc 1 317 3 view .LVU482
 1921 003c 1268     		ldr	r2, [r2]
 1922 003e 02F44042 		and	r2, r2, #49152
 1923 0042 0292     		str	r2, [sp, #8]
 317:Core/Src/main.c **** 
 1924              		.loc 1 317 3 view .LVU483
 1925 0044 029A     		ldr	r2, [sp, #8]
 1926              	.LBE19:
 317:Core/Src/main.c **** 
 1927              		.loc 1 317 3 view .LVU484
 322:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1928              		.loc 1 322 3 view .LVU485
 322:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1929              		.loc 1 322 36 is_stmt 0 view .LVU486
 1930 0046 0221     		movs	r1, #2
 1931 0048 0891     		str	r1, [sp, #32]
 323:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1932              		.loc 1 323 3 is_stmt 1 view .LVU487
 323:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1933              		.loc 1 323 30 is_stmt 0 view .LVU488
 1934 004a 0122     		movs	r2, #1
ARM GAS  /tmp/ccEpMq7M.s 			page 96


 1935 004c 0B92     		str	r2, [sp, #44]
 324:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1936              		.loc 1 324 3 is_stmt 1 view .LVU489
 324:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1937              		.loc 1 324 41 is_stmt 0 view .LVU490
 1938 004e 1022     		movs	r2, #16
 1939 0050 0C92     		str	r2, [sp, #48]
 325:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 1940              		.loc 1 325 3 is_stmt 1 view .LVU491
 325:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 1941              		.loc 1 325 34 is_stmt 0 view .LVU492
 1942 0052 0E91     		str	r1, [sp, #56]
 326:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 16;
 1943              		.loc 1 326 3 is_stmt 1 view .LVU493
 326:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 16;
 1944              		.loc 1 326 35 is_stmt 0 view .LVU494
 1945 0054 0F93     		str	r3, [sp, #60]
 327:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 336;
 1946              		.loc 1 327 3 is_stmt 1 view .LVU495
 327:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 336;
 1947              		.loc 1 327 30 is_stmt 0 view .LVU496
 1948 0056 1092     		str	r2, [sp, #64]
 328:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 1949              		.loc 1 328 3 is_stmt 1 view .LVU497
 328:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 1950              		.loc 1 328 30 is_stmt 0 view .LVU498
 1951 0058 4FF4A873 		mov	r3, #336
 1952 005c 1193     		str	r3, [sp, #68]
 329:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 1953              		.loc 1 329 3 is_stmt 1 view .LVU499
 329:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 1954              		.loc 1 329 30 is_stmt 0 view .LVU500
 1955 005e 0423     		movs	r3, #4
 1956 0060 1293     		str	r3, [sp, #72]
 330:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1957              		.loc 1 330 3 is_stmt 1 view .LVU501
 330:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1958              		.loc 1 330 30 is_stmt 0 view .LVU502
 1959 0062 1393     		str	r3, [sp, #76]
 331:Core/Src/main.c ****   {
 1960              		.loc 1 331 3 is_stmt 1 view .LVU503
 331:Core/Src/main.c ****   {
 1961              		.loc 1 331 7 is_stmt 0 view .LVU504
 1962 0064 08A8     		add	r0, sp, #32
 1963 0066 FFF7FEFF 		bl	HAL_RCC_OscConfig
 1964              	.LVL111:
 331:Core/Src/main.c ****   {
 1965              		.loc 1 331 6 discriminator 1 view .LVU505
 1966 006a 80B9     		cbnz	r0, .L138
 1967              	.L135:
 338:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1968              		.loc 1 338 3 is_stmt 1 view .LVU506
 338:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1969              		.loc 1 338 31 is_stmt 0 view .LVU507
 1970 006c 0F23     		movs	r3, #15
 1971 006e 0393     		str	r3, [sp, #12]
 340:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
ARM GAS  /tmp/ccEpMq7M.s 			page 97


 1972              		.loc 1 340 3 is_stmt 1 view .LVU508
 340:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1973              		.loc 1 340 34 is_stmt 0 view .LVU509
 1974 0070 0221     		movs	r1, #2
 1975 0072 0491     		str	r1, [sp, #16]
 341:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 1976              		.loc 1 341 3 is_stmt 1 view .LVU510
 341:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 1977              		.loc 1 341 35 is_stmt 0 view .LVU511
 1978 0074 0023     		movs	r3, #0
 1979 0076 0593     		str	r3, [sp, #20]
 342:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1980              		.loc 1 342 3 is_stmt 1 view .LVU512
 342:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1981              		.loc 1 342 36 is_stmt 0 view .LVU513
 1982 0078 4FF48052 		mov	r2, #4096
 1983 007c 0692     		str	r2, [sp, #24]
 343:Core/Src/main.c **** 
 1984              		.loc 1 343 3 is_stmt 1 view .LVU514
 343:Core/Src/main.c **** 
 1985              		.loc 1 343 36 is_stmt 0 view .LVU515
 1986 007e 0793     		str	r3, [sp, #28]
 345:Core/Src/main.c ****   {
 1987              		.loc 1 345 3 is_stmt 1 view .LVU516
 345:Core/Src/main.c ****   {
 1988              		.loc 1 345 7 is_stmt 0 view .LVU517
 1989 0080 03A8     		add	r0, sp, #12
 1990 0082 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1991              	.LVL112:
 345:Core/Src/main.c ****   {
 1992              		.loc 1 345 6 discriminator 1 view .LVU518
 1993 0086 28B9     		cbnz	r0, .L139
 1994              	.L134:
 349:Core/Src/main.c **** 
 1995              		.loc 1 349 1 view .LVU519
 1996 0088 15B0     		add	sp, sp, #84
 1997              		.cfi_remember_state
 1998              		.cfi_def_cfa_offset 4
 1999              		@ sp needed
 2000 008a 5DF804FB 		ldr	pc, [sp], #4
 2001              	.L138:
 2002              		.cfi_restore_state
 333:Core/Src/main.c ****   }
 2003              		.loc 1 333 5 is_stmt 1 view .LVU520
 2004 008e FFF7FEFF 		bl	Error_Handler
 2005              	.LVL113:
 2006 0092 EBE7     		b	.L135
 2007              	.L139:
 347:Core/Src/main.c ****   }
 2008              		.loc 1 347 5 view .LVU521
 2009 0094 FFF7FEFF 		bl	Error_Handler
 2010              	.LVL114:
 349:Core/Src/main.c **** 
 2011              		.loc 1 349 1 is_stmt 0 view .LVU522
 2012 0098 F6E7     		b	.L134
 2013              	.L141:
 2014 009a 00BF     		.align	2
ARM GAS  /tmp/ccEpMq7M.s 			page 98


 2015              	.L140:
 2016 009c 00380240 		.word	1073887232
 2017 00a0 00700040 		.word	1073770496
 2018              		.cfi_endproc
 2019              	.LFE228:
 2021              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 2022              		.align	1
 2023              		.syntax unified
 2024              		.thumb
 2025              		.thumb_func
 2027              	MX_USART2_UART_Init:
 2028              	.LFB232:
 499:Core/Src/main.c **** 
 2029              		.loc 1 499 1 is_stmt 1 view -0
 2030              		.cfi_startproc
 2031              		@ args = 0, pretend = 0, frame = 0
 2032              		@ frame_needed = 0, uses_anonymous_args = 0
 2033 0000 08B5     		push	{r3, lr}
 2034              		.cfi_def_cfa_offset 8
 2035              		.cfi_offset 3, -8
 2036              		.cfi_offset 14, -4
 508:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 2037              		.loc 1 508 3 view .LVU524
 508:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 2038              		.loc 1 508 19 is_stmt 0 view .LVU525
 2039 0002 0A48     		ldr	r0, .L146
 2040 0004 0A4B     		ldr	r3, .L146+4
 2041 0006 0360     		str	r3, [r0]
 509:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 2042              		.loc 1 509 3 is_stmt 1 view .LVU526
 509:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 2043              		.loc 1 509 24 is_stmt 0 view .LVU527
 2044 0008 4FF4E133 		mov	r3, #115200
 2045 000c 4360     		str	r3, [r0, #4]
 510:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 2046              		.loc 1 510 3 is_stmt 1 view .LVU528
 510:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 2047              		.loc 1 510 26 is_stmt 0 view .LVU529
 2048 000e 0023     		movs	r3, #0
 2049 0010 8360     		str	r3, [r0, #8]
 511:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 2050              		.loc 1 511 3 is_stmt 1 view .LVU530
 511:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 2051              		.loc 1 511 24 is_stmt 0 view .LVU531
 2052 0012 C360     		str	r3, [r0, #12]
 512:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 2053              		.loc 1 512 3 is_stmt 1 view .LVU532
 512:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 2054              		.loc 1 512 22 is_stmt 0 view .LVU533
 2055 0014 0361     		str	r3, [r0, #16]
 513:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 2056              		.loc 1 513 3 is_stmt 1 view .LVU534
 513:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 2057              		.loc 1 513 20 is_stmt 0 view .LVU535
 2058 0016 0C22     		movs	r2, #12
 2059 0018 4261     		str	r2, [r0, #20]
 514:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
ARM GAS  /tmp/ccEpMq7M.s 			page 99


 2060              		.loc 1 514 3 is_stmt 1 view .LVU536
 514:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 2061              		.loc 1 514 25 is_stmt 0 view .LVU537
 2062 001a 8361     		str	r3, [r0, #24]
 515:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 2063              		.loc 1 515 3 is_stmt 1 view .LVU538
 515:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 2064              		.loc 1 515 28 is_stmt 0 view .LVU539
 2065 001c C361     		str	r3, [r0, #28]
 516:Core/Src/main.c ****   {
 2066              		.loc 1 516 3 is_stmt 1 view .LVU540
 516:Core/Src/main.c ****   {
 2067              		.loc 1 516 7 is_stmt 0 view .LVU541
 2068 001e FFF7FEFF 		bl	HAL_UART_Init
 2069              	.LVL115:
 516:Core/Src/main.c ****   {
 2070              		.loc 1 516 6 discriminator 1 view .LVU542
 2071 0022 00B9     		cbnz	r0, .L145
 2072              	.L142:
 524:Core/Src/main.c **** 
 2073              		.loc 1 524 1 view .LVU543
 2074 0024 08BD     		pop	{r3, pc}
 2075              	.L145:
 518:Core/Src/main.c ****   }
 2076              		.loc 1 518 5 is_stmt 1 view .LVU544
 2077 0026 FFF7FEFF 		bl	Error_Handler
 2078              	.LVL116:
 524:Core/Src/main.c **** 
 2079              		.loc 1 524 1 is_stmt 0 view .LVU545
 2080 002a FBE7     		b	.L142
 2081              	.L147:
 2082              		.align	2
 2083              	.L146:
 2084 002c 00000000 		.word	huart2
 2085 0030 00440040 		.word	1073759232
 2086              		.cfi_endproc
 2087              	.LFE232:
 2089              		.section	.text.MX_ADC1_Init,"ax",%progbits
 2090              		.align	1
 2091              		.syntax unified
 2092              		.thumb
 2093              		.thumb_func
 2095              	MX_ADC1_Init:
 2096              	.LFB229:
 357:Core/Src/main.c **** 
 2097              		.loc 1 357 1 is_stmt 1 view -0
 2098              		.cfi_startproc
 2099              		@ args = 0, pretend = 0, frame = 16
 2100              		@ frame_needed = 0, uses_anonymous_args = 0
 2101 0000 00B5     		push	{lr}
 2102              		.cfi_def_cfa_offset 4
 2103              		.cfi_offset 14, -4
 2104 0002 85B0     		sub	sp, sp, #20
 2105              		.cfi_def_cfa_offset 24
 363:Core/Src/main.c **** 
 2106              		.loc 1 363 3 view .LVU547
 363:Core/Src/main.c **** 
ARM GAS  /tmp/ccEpMq7M.s 			page 100


 2107              		.loc 1 363 26 is_stmt 0 view .LVU548
 2108 0004 0023     		movs	r3, #0
 2109 0006 0093     		str	r3, [sp]
 2110 0008 0193     		str	r3, [sp, #4]
 2111 000a 0293     		str	r3, [sp, #8]
 2112 000c 0393     		str	r3, [sp, #12]
 371:Core/Src/main.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 2113              		.loc 1 371 3 is_stmt 1 view .LVU549
 371:Core/Src/main.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 2114              		.loc 1 371 18 is_stmt 0 view .LVU550
 2115 000e 1548     		ldr	r0, .L154
 2116 0010 154A     		ldr	r2, .L154+4
 2117 0012 0260     		str	r2, [r0]
 372:Core/Src/main.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 2118              		.loc 1 372 3 is_stmt 1 view .LVU551
 372:Core/Src/main.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 2119              		.loc 1 372 29 is_stmt 0 view .LVU552
 2120 0014 4FF48032 		mov	r2, #65536
 2121 0018 4260     		str	r2, [r0, #4]
 373:Core/Src/main.c ****   hadc1.Init.ScanConvMode = DISABLE;
 2122              		.loc 1 373 3 is_stmt 1 view .LVU553
 373:Core/Src/main.c ****   hadc1.Init.ScanConvMode = DISABLE;
 2123              		.loc 1 373 25 is_stmt 0 view .LVU554
 2124 001a 8360     		str	r3, [r0, #8]
 374:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = ENABLE;
 2125              		.loc 1 374 3 is_stmt 1 view .LVU555
 374:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = ENABLE;
 2126              		.loc 1 374 27 is_stmt 0 view .LVU556
 2127 001c 0361     		str	r3, [r0, #16]
 375:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 2128              		.loc 1 375 3 is_stmt 1 view .LVU557
 375:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 2129              		.loc 1 375 33 is_stmt 0 view .LVU558
 2130 001e 0122     		movs	r2, #1
 2131 0020 0276     		strb	r2, [r0, #24]
 376:Core/Src/main.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 2132              		.loc 1 376 3 is_stmt 1 view .LVU559
 376:Core/Src/main.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 2133              		.loc 1 376 36 is_stmt 0 view .LVU560
 2134 0022 80F82030 		strb	r3, [r0, #32]
 377:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 2135              		.loc 1 377 3 is_stmt 1 view .LVU561
 377:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 2136              		.loc 1 377 35 is_stmt 0 view .LVU562
 2137 0026 C362     		str	r3, [r0, #44]
 378:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 2138              		.loc 1 378 3 is_stmt 1 view .LVU563
 378:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 2139              		.loc 1 378 31 is_stmt 0 view .LVU564
 2140 0028 1049     		ldr	r1, .L154+8
 2141 002a 8162     		str	r1, [r0, #40]
 379:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 1;
 2142              		.loc 1 379 3 is_stmt 1 view .LVU565
 379:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 1;
 2143              		.loc 1 379 24 is_stmt 0 view .LVU566
 2144 002c C360     		str	r3, [r0, #12]
 380:Core/Src/main.c ****   hadc1.Init.DMAContinuousRequests = ENABLE;
ARM GAS  /tmp/ccEpMq7M.s 			page 101


 2145              		.loc 1 380 3 is_stmt 1 view .LVU567
 380:Core/Src/main.c ****   hadc1.Init.DMAContinuousRequests = ENABLE;
 2146              		.loc 1 380 30 is_stmt 0 view .LVU568
 2147 002e C261     		str	r2, [r0, #28]
 381:Core/Src/main.c ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 2148              		.loc 1 381 3 is_stmt 1 view .LVU569
 381:Core/Src/main.c ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 2149              		.loc 1 381 36 is_stmt 0 view .LVU570
 2150 0030 80F83020 		strb	r2, [r0, #48]
 382:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 2151              		.loc 1 382 3 is_stmt 1 view .LVU571
 382:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 2152              		.loc 1 382 27 is_stmt 0 view .LVU572
 2153 0034 4261     		str	r2, [r0, #20]
 383:Core/Src/main.c ****   {
 2154              		.loc 1 383 3 is_stmt 1 view .LVU573
 383:Core/Src/main.c ****   {
 2155              		.loc 1 383 7 is_stmt 0 view .LVU574
 2156 0036 FFF7FEFF 		bl	HAL_ADC_Init
 2157              	.LVL117:
 383:Core/Src/main.c ****   {
 2158              		.loc 1 383 6 discriminator 1 view .LVU575
 2159 003a 60B9     		cbnz	r0, .L152
 2160              	.L149:
 390:Core/Src/main.c ****   sConfig.Rank = 1;
 2161              		.loc 1 390 3 is_stmt 1 view .LVU576
 390:Core/Src/main.c ****   sConfig.Rank = 1;
 2162              		.loc 1 390 19 is_stmt 0 view .LVU577
 2163 003c 0023     		movs	r3, #0
 2164 003e 0093     		str	r3, [sp]
 391:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 2165              		.loc 1 391 3 is_stmt 1 view .LVU578
 391:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 2166              		.loc 1 391 16 is_stmt 0 view .LVU579
 2167 0040 0122     		movs	r2, #1
 2168 0042 0192     		str	r2, [sp, #4]
 392:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 2169              		.loc 1 392 3 is_stmt 1 view .LVU580
 392:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 2170              		.loc 1 392 24 is_stmt 0 view .LVU581
 2171 0044 0293     		str	r3, [sp, #8]
 393:Core/Src/main.c ****   {
 2172              		.loc 1 393 3 is_stmt 1 view .LVU582
 393:Core/Src/main.c ****   {
 2173              		.loc 1 393 7 is_stmt 0 view .LVU583
 2174 0046 6946     		mov	r1, sp
 2175 0048 0648     		ldr	r0, .L154
 2176 004a FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 2177              	.LVL118:
 393:Core/Src/main.c ****   {
 2178              		.loc 1 393 6 discriminator 1 view .LVU584
 2179 004e 28B9     		cbnz	r0, .L153
 2180              	.L148:
 401:Core/Src/main.c **** 
 2181              		.loc 1 401 1 view .LVU585
 2182 0050 05B0     		add	sp, sp, #20
 2183              		.cfi_remember_state
ARM GAS  /tmp/ccEpMq7M.s 			page 102


 2184              		.cfi_def_cfa_offset 4
 2185              		@ sp needed
 2186 0052 5DF804FB 		ldr	pc, [sp], #4
 2187              	.L152:
 2188              		.cfi_restore_state
 385:Core/Src/main.c ****   }
 2189              		.loc 1 385 5 is_stmt 1 view .LVU586
 2190 0056 FFF7FEFF 		bl	Error_Handler
 2191              	.LVL119:
 2192 005a EFE7     		b	.L149
 2193              	.L153:
 395:Core/Src/main.c ****   }
 2194              		.loc 1 395 5 view .LVU587
 2195 005c FFF7FEFF 		bl	Error_Handler
 2196              	.LVL120:
 401:Core/Src/main.c **** 
 2197              		.loc 1 401 1 is_stmt 0 view .LVU588
 2198 0060 F6E7     		b	.L148
 2199              	.L155:
 2200 0062 00BF     		.align	2
 2201              	.L154:
 2202 0064 00000000 		.word	hadc1
 2203 0068 00200140 		.word	1073815552
 2204 006c 0100000F 		.word	251658241
 2205              		.cfi_endproc
 2206              	.LFE229:
 2208              		.section	.text.MX_TIM3_Init,"ax",%progbits
 2209              		.align	1
 2210              		.syntax unified
 2211              		.thumb
 2212              		.thumb_func
 2214              	MX_TIM3_Init:
 2215              	.LFB230:
 409:Core/Src/main.c **** 
 2216              		.loc 1 409 1 is_stmt 1 view -0
 2217              		.cfi_startproc
 2218              		@ args = 0, pretend = 0, frame = 24
 2219              		@ frame_needed = 0, uses_anonymous_args = 0
 2220 0000 00B5     		push	{lr}
 2221              		.cfi_def_cfa_offset 4
 2222              		.cfi_offset 14, -4
 2223 0002 87B0     		sub	sp, sp, #28
 2224              		.cfi_def_cfa_offset 32
 415:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 2225              		.loc 1 415 3 view .LVU590
 415:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 2226              		.loc 1 415 26 is_stmt 0 view .LVU591
 2227 0004 0023     		movs	r3, #0
 2228 0006 0293     		str	r3, [sp, #8]
 2229 0008 0393     		str	r3, [sp, #12]
 2230 000a 0493     		str	r3, [sp, #16]
 2231 000c 0593     		str	r3, [sp, #20]
 416:Core/Src/main.c **** 
 2232              		.loc 1 416 3 is_stmt 1 view .LVU592
 416:Core/Src/main.c **** 
 2233              		.loc 1 416 27 is_stmt 0 view .LVU593
 2234 000e 0093     		str	r3, [sp]
ARM GAS  /tmp/ccEpMq7M.s 			page 103


 2235 0010 0193     		str	r3, [sp, #4]
 421:Core/Src/main.c ****   htim3.Init.Prescaler = 9999;
 2236              		.loc 1 421 3 is_stmt 1 view .LVU594
 421:Core/Src/main.c ****   htim3.Init.Prescaler = 9999;
 2237              		.loc 1 421 18 is_stmt 0 view .LVU595
 2238 0012 1548     		ldr	r0, .L164
 2239 0014 154A     		ldr	r2, .L164+4
 2240 0016 0260     		str	r2, [r0]
 422:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 2241              		.loc 1 422 3 is_stmt 1 view .LVU596
 422:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 2242              		.loc 1 422 24 is_stmt 0 view .LVU597
 2243 0018 42F20F72 		movw	r2, #9999
 2244 001c 4260     		str	r2, [r0, #4]
 423:Core/Src/main.c ****   htim3.Init.Period = 7199;
 2245              		.loc 1 423 3 is_stmt 1 view .LVU598
 423:Core/Src/main.c ****   htim3.Init.Period = 7199;
 2246              		.loc 1 423 26 is_stmt 0 view .LVU599
 2247 001e 8360     		str	r3, [r0, #8]
 424:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 2248              		.loc 1 424 3 is_stmt 1 view .LVU600
 424:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 2249              		.loc 1 424 21 is_stmt 0 view .LVU601
 2250 0020 41F61F42 		movw	r2, #7199
 2251 0024 C260     		str	r2, [r0, #12]
 425:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 2252              		.loc 1 425 3 is_stmt 1 view .LVU602
 425:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 2253              		.loc 1 425 28 is_stmt 0 view .LVU603
 2254 0026 0361     		str	r3, [r0, #16]
 426:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 2255              		.loc 1 426 3 is_stmt 1 view .LVU604
 426:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 2256              		.loc 1 426 32 is_stmt 0 view .LVU605
 2257 0028 8361     		str	r3, [r0, #24]
 427:Core/Src/main.c ****   {
 2258              		.loc 1 427 3 is_stmt 1 view .LVU606
 427:Core/Src/main.c ****   {
 2259              		.loc 1 427 7 is_stmt 0 view .LVU607
 2260 002a FFF7FEFF 		bl	HAL_TIM_Base_Init
 2261              	.LVL121:
 427:Core/Src/main.c ****   {
 2262              		.loc 1 427 6 discriminator 1 view .LVU608
 2263 002e 90B9     		cbnz	r0, .L161
 2264              	.L157:
 431:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 2265              		.loc 1 431 3 is_stmt 1 view .LVU609
 431:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 2266              		.loc 1 431 34 is_stmt 0 view .LVU610
 2267 0030 4FF48053 		mov	r3, #4096
 2268 0034 0293     		str	r3, [sp, #8]
 432:Core/Src/main.c ****   {
 2269              		.loc 1 432 3 is_stmt 1 view .LVU611
 432:Core/Src/main.c ****   {
 2270              		.loc 1 432 7 is_stmt 0 view .LVU612
 2271 0036 02A9     		add	r1, sp, #8
 2272 0038 0B48     		ldr	r0, .L164
ARM GAS  /tmp/ccEpMq7M.s 			page 104


 2273 003a FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 2274              	.LVL122:
 432:Core/Src/main.c ****   {
 2275              		.loc 1 432 6 discriminator 1 view .LVU613
 2276 003e 68B9     		cbnz	r0, .L162
 2277              	.L158:
 436:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 2278              		.loc 1 436 3 is_stmt 1 view .LVU614
 436:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 2279              		.loc 1 436 37 is_stmt 0 view .LVU615
 2280 0040 0023     		movs	r3, #0
 2281 0042 0093     		str	r3, [sp]
 437:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 2282              		.loc 1 437 3 is_stmt 1 view .LVU616
 437:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 2283              		.loc 1 437 33 is_stmt 0 view .LVU617
 2284 0044 0193     		str	r3, [sp, #4]
 438:Core/Src/main.c ****   {
 2285              		.loc 1 438 3 is_stmt 1 view .LVU618
 438:Core/Src/main.c ****   {
 2286              		.loc 1 438 7 is_stmt 0 view .LVU619
 2287 0046 6946     		mov	r1, sp
 2288 0048 0748     		ldr	r0, .L164
 2289 004a FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 2290              	.LVL123:
 438:Core/Src/main.c ****   {
 2291              		.loc 1 438 6 discriminator 1 view .LVU620
 2292 004e 40B9     		cbnz	r0, .L163
 2293              	.L156:
 446:Core/Src/main.c **** 
 2294              		.loc 1 446 1 view .LVU621
 2295 0050 07B0     		add	sp, sp, #28
 2296              		.cfi_remember_state
 2297              		.cfi_def_cfa_offset 4
 2298              		@ sp needed
 2299 0052 5DF804FB 		ldr	pc, [sp], #4
 2300              	.L161:
 2301              		.cfi_restore_state
 429:Core/Src/main.c ****   }
 2302              		.loc 1 429 5 is_stmt 1 view .LVU622
 2303 0056 FFF7FEFF 		bl	Error_Handler
 2304              	.LVL124:
 2305 005a E9E7     		b	.L157
 2306              	.L162:
 434:Core/Src/main.c ****   }
 2307              		.loc 1 434 5 view .LVU623
 2308 005c FFF7FEFF 		bl	Error_Handler
 2309              	.LVL125:
 2310 0060 EEE7     		b	.L158
 2311              	.L163:
 440:Core/Src/main.c ****   }
 2312              		.loc 1 440 5 view .LVU624
 2313 0062 FFF7FEFF 		bl	Error_Handler
 2314              	.LVL126:
 446:Core/Src/main.c **** 
 2315              		.loc 1 446 1 is_stmt 0 view .LVU625
 2316 0066 F3E7     		b	.L156
ARM GAS  /tmp/ccEpMq7M.s 			page 105


 2317              	.L165:
 2318              		.align	2
 2319              	.L164:
 2320 0068 00000000 		.word	htim3
 2321 006c 00040040 		.word	1073742848
 2322              		.cfi_endproc
 2323              	.LFE230:
 2325              		.section	.text.MX_TIM4_Init,"ax",%progbits
 2326              		.align	1
 2327              		.syntax unified
 2328              		.thumb
 2329              		.thumb_func
 2331              	MX_TIM4_Init:
 2332              	.LFB231:
 454:Core/Src/main.c **** 
 2333              		.loc 1 454 1 is_stmt 1 view -0
 2334              		.cfi_startproc
 2335              		@ args = 0, pretend = 0, frame = 24
 2336              		@ frame_needed = 0, uses_anonymous_args = 0
 2337 0000 00B5     		push	{lr}
 2338              		.cfi_def_cfa_offset 4
 2339              		.cfi_offset 14, -4
 2340 0002 87B0     		sub	sp, sp, #28
 2341              		.cfi_def_cfa_offset 32
 460:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 2342              		.loc 1 460 3 view .LVU627
 460:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 2343              		.loc 1 460 26 is_stmt 0 view .LVU628
 2344 0004 0023     		movs	r3, #0
 2345 0006 0293     		str	r3, [sp, #8]
 2346 0008 0393     		str	r3, [sp, #12]
 2347 000a 0493     		str	r3, [sp, #16]
 2348 000c 0593     		str	r3, [sp, #20]
 461:Core/Src/main.c **** 
 2349              		.loc 1 461 3 is_stmt 1 view .LVU629
 461:Core/Src/main.c **** 
 2350              		.loc 1 461 27 is_stmt 0 view .LVU630
 2351 000e 0093     		str	r3, [sp]
 2352 0010 0193     		str	r3, [sp, #4]
 466:Core/Src/main.c ****   htim4.Init.Prescaler = 9999;
 2353              		.loc 1 466 3 is_stmt 1 view .LVU631
 466:Core/Src/main.c ****   htim4.Init.Prescaler = 9999;
 2354              		.loc 1 466 18 is_stmt 0 view .LVU632
 2355 0012 1548     		ldr	r0, .L174
 2356 0014 154A     		ldr	r2, .L174+4
 2357 0016 0260     		str	r2, [r0]
 467:Core/Src/main.c ****   htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 2358              		.loc 1 467 3 is_stmt 1 view .LVU633
 467:Core/Src/main.c ****   htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 2359              		.loc 1 467 24 is_stmt 0 view .LVU634
 2360 0018 42F20F72 		movw	r2, #9999
 2361 001c 4260     		str	r2, [r0, #4]
 468:Core/Src/main.c ****   htim4.Init.Period = 1679;
 2362              		.loc 1 468 3 is_stmt 1 view .LVU635
 468:Core/Src/main.c ****   htim4.Init.Period = 1679;
 2363              		.loc 1 468 26 is_stmt 0 view .LVU636
 2364 001e 8360     		str	r3, [r0, #8]
ARM GAS  /tmp/ccEpMq7M.s 			page 106


 469:Core/Src/main.c ****   htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 2365              		.loc 1 469 3 is_stmt 1 view .LVU637
 469:Core/Src/main.c ****   htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 2366              		.loc 1 469 21 is_stmt 0 view .LVU638
 2367 0020 40F28F62 		movw	r2, #1679
 2368 0024 C260     		str	r2, [r0, #12]
 470:Core/Src/main.c ****   htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 2369              		.loc 1 470 3 is_stmt 1 view .LVU639
 470:Core/Src/main.c ****   htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 2370              		.loc 1 470 28 is_stmt 0 view .LVU640
 2371 0026 0361     		str	r3, [r0, #16]
 471:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim4) != HAL_OK)
 2372              		.loc 1 471 3 is_stmt 1 view .LVU641
 471:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim4) != HAL_OK)
 2373              		.loc 1 471 32 is_stmt 0 view .LVU642
 2374 0028 8361     		str	r3, [r0, #24]
 472:Core/Src/main.c ****   {
 2375              		.loc 1 472 3 is_stmt 1 view .LVU643
 472:Core/Src/main.c ****   {
 2376              		.loc 1 472 7 is_stmt 0 view .LVU644
 2377 002a FFF7FEFF 		bl	HAL_TIM_Base_Init
 2378              	.LVL127:
 472:Core/Src/main.c ****   {
 2379              		.loc 1 472 6 discriminator 1 view .LVU645
 2380 002e 90B9     		cbnz	r0, .L171
 2381              	.L167:
 476:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim4, &sClockSourceConfig) != HAL_OK)
 2382              		.loc 1 476 3 is_stmt 1 view .LVU646
 476:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim4, &sClockSourceConfig) != HAL_OK)
 2383              		.loc 1 476 34 is_stmt 0 view .LVU647
 2384 0030 4FF48053 		mov	r3, #4096
 2385 0034 0293     		str	r3, [sp, #8]
 477:Core/Src/main.c ****   {
 2386              		.loc 1 477 3 is_stmt 1 view .LVU648
 477:Core/Src/main.c ****   {
 2387              		.loc 1 477 7 is_stmt 0 view .LVU649
 2388 0036 02A9     		add	r1, sp, #8
 2389 0038 0B48     		ldr	r0, .L174
 2390 003a FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 2391              	.LVL128:
 477:Core/Src/main.c ****   {
 2392              		.loc 1 477 6 discriminator 1 view .LVU650
 2393 003e 68B9     		cbnz	r0, .L172
 2394              	.L168:
 481:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 2395              		.loc 1 481 3 is_stmt 1 view .LVU651
 481:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 2396              		.loc 1 481 37 is_stmt 0 view .LVU652
 2397 0040 0023     		movs	r3, #0
 2398 0042 0093     		str	r3, [sp]
 482:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 2399              		.loc 1 482 3 is_stmt 1 view .LVU653
 482:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 2400              		.loc 1 482 33 is_stmt 0 view .LVU654
 2401 0044 0193     		str	r3, [sp, #4]
 483:Core/Src/main.c ****   {
 2402              		.loc 1 483 3 is_stmt 1 view .LVU655
ARM GAS  /tmp/ccEpMq7M.s 			page 107


 483:Core/Src/main.c ****   {
 2403              		.loc 1 483 7 is_stmt 0 view .LVU656
 2404 0046 6946     		mov	r1, sp
 2405 0048 0748     		ldr	r0, .L174
 2406 004a FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 2407              	.LVL129:
 483:Core/Src/main.c ****   {
 2408              		.loc 1 483 6 discriminator 1 view .LVU657
 2409 004e 40B9     		cbnz	r0, .L173
 2410              	.L166:
 491:Core/Src/main.c **** 
 2411              		.loc 1 491 1 view .LVU658
 2412 0050 07B0     		add	sp, sp, #28
 2413              		.cfi_remember_state
 2414              		.cfi_def_cfa_offset 4
 2415              		@ sp needed
 2416 0052 5DF804FB 		ldr	pc, [sp], #4
 2417              	.L171:
 2418              		.cfi_restore_state
 474:Core/Src/main.c ****   }
 2419              		.loc 1 474 5 is_stmt 1 view .LVU659
 2420 0056 FFF7FEFF 		bl	Error_Handler
 2421              	.LVL130:
 2422 005a E9E7     		b	.L167
 2423              	.L172:
 479:Core/Src/main.c ****   }
 2424              		.loc 1 479 5 view .LVU660
 2425 005c FFF7FEFF 		bl	Error_Handler
 2426              	.LVL131:
 2427 0060 EEE7     		b	.L168
 2428              	.L173:
 485:Core/Src/main.c ****   }
 2429              		.loc 1 485 5 view .LVU661
 2430 0062 FFF7FEFF 		bl	Error_Handler
 2431              	.LVL132:
 491:Core/Src/main.c **** 
 2432              		.loc 1 491 1 is_stmt 0 view .LVU662
 2433 0066 F3E7     		b	.L166
 2434              	.L175:
 2435              		.align	2
 2436              	.L174:
 2437 0068 00000000 		.word	htim4
 2438 006c 00080040 		.word	1073743872
 2439              		.cfi_endproc
 2440              	.LFE231:
 2442              		.section	.text.do_init,"ax",%progbits
 2443              		.align	1
 2444              		.global	do_init
 2445              		.syntax unified
 2446              		.thumb
 2447              		.thumb_func
 2449              	do_init:
 2450              	.LVL133:
 2451              	.LFB235:
 611:Core/Src/main.c ****   next_state = STATE_WAIT_REQUEST;
 2452              		.loc 1 611 37 is_stmt 1 view -0
 2453              		.cfi_startproc
ARM GAS  /tmp/ccEpMq7M.s 			page 108


 2454              		@ args = 0, pretend = 0, frame = 0
 2455              		@ frame_needed = 0, uses_anonymous_args = 0
 611:Core/Src/main.c ****   next_state = STATE_WAIT_REQUEST;
 2456              		.loc 1 611 37 is_stmt 0 view .LVU664
 2457 0000 08B5     		push	{r3, lr}
 2458              		.cfi_def_cfa_offset 8
 2459              		.cfi_offset 3, -8
 2460              		.cfi_offset 14, -4
 612:Core/Src/main.c ****   is_request_sended = 0;
 2461              		.loc 1 612 3 is_stmt 1 view .LVU665
 612:Core/Src/main.c ****   is_request_sended = 0;
 2462              		.loc 1 612 14 is_stmt 0 view .LVU666
 2463 0002 1B4B     		ldr	r3, .L183
 2464 0004 0122     		movs	r2, #1
 2465 0006 1A70     		strb	r2, [r3]
 613:Core/Src/main.c ****   
 2466              		.loc 1 613 3 is_stmt 1 view .LVU667
 613:Core/Src/main.c ****   
 2467              		.loc 1 613 21 is_stmt 0 view .LVU668
 2468 0008 0020     		movs	r0, #0
 2469              	.LVL134:
 613:Core/Src/main.c ****   
 2470              		.loc 1 613 21 view .LVU669
 2471 000a 1A4B     		ldr	r3, .L183+4
 2472 000c 1870     		strb	r0, [r3]
 615:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 2473              		.loc 1 615 3 is_stmt 1 view .LVU670
 615:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 2474              		.loc 1 615 9 is_stmt 0 view .LVU671
 2475 000e FFF7FEFF 		bl	time
 2476              	.LVL135:
 615:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 2477              		.loc 1 615 3 discriminator 1 view .LVU672
 2478 0012 FFF7FEFF 		bl	srand
 2479              	.LVL136:
 617:Core/Src/main.c **** 
 2480              		.loc 1 617 3 is_stmt 1 view .LVU673
 617:Core/Src/main.c **** 
 2481              		.loc 1 617 15 is_stmt 0 view .LVU674
 2482 0016 FFF7FEFF 		bl	HAL_Init
 2483              	.LVL137:
 617:Core/Src/main.c **** 
 2484              		.loc 1 617 13 discriminator 1 view .LVU675
 2485 001a 174B     		ldr	r3, .L183+8
 2486 001c 1870     		strb	r0, [r3]
 619:Core/Src/main.c ****     next_state  = STATE_ERROR;
 2487              		.loc 1 619 3 is_stmt 1 view .LVU676
 619:Core/Src/main.c ****     next_state  = STATE_ERROR;
 2488              		.loc 1 619 5 is_stmt 0 view .LVU677
 2489 001e F0B9     		cbnz	r0, .L181
 625:Core/Src/main.c **** 
 2490              		.loc 1 625 3 is_stmt 1 view .LVU678
 2491 0020 FFF7FEFF 		bl	SystemClock_Config
 2492              	.LVL138:
 628:Core/Src/main.c ****   MX_DMA_Init();
 2493              		.loc 1 628 3 view .LVU679
 2494 0024 FFF7FEFF 		bl	MX_GPIO_Init
ARM GAS  /tmp/ccEpMq7M.s 			page 109


 2495              	.LVL139:
 629:Core/Src/main.c ****   MX_USART2_UART_Init();
 2496              		.loc 1 629 3 view .LVU680
 2497 0028 FFF7FEFF 		bl	MX_DMA_Init
 2498              	.LVL140:
 630:Core/Src/main.c ****   MX_ADC1_Init();
 2499              		.loc 1 630 3 view .LVU681
 2500 002c FFF7FEFF 		bl	MX_USART2_UART_Init
 2501              	.LVL141:
 631:Core/Src/main.c ****   MX_TIM3_Init();
 2502              		.loc 1 631 3 view .LVU682
 2503 0030 FFF7FEFF 		bl	MX_ADC1_Init
 2504              	.LVL142:
 632:Core/Src/main.c ****   MX_TIM4_Init();
 2505              		.loc 1 632 3 view .LVU683
 2506 0034 FFF7FEFF 		bl	MX_TIM3_Init
 2507              	.LVL143:
 633:Core/Src/main.c **** 
 2508              		.loc 1 633 3 view .LVU684
 2509 0038 FFF7FEFF 		bl	MX_TIM4_Init
 2510              	.LVL144:
 636:Core/Src/main.c ****   if(halStatus != HAL_OK){
 2511              		.loc 1 636 3 view .LVU685
 636:Core/Src/main.c ****   if(halStatus != HAL_OK){
 2512              		.loc 1 636 15 is_stmt 0 view .LVU686
 2513 003c 4FF49672 		mov	r2, #300
 2514 0040 0E49     		ldr	r1, .L183+12
 2515 0042 0F48     		ldr	r0, .L183+16
 2516 0044 FFF7FEFF 		bl	HAL_ADC_Start_DMA
 2517              	.LVL145:
 636:Core/Src/main.c ****   if(halStatus != HAL_OK){
 2518              		.loc 1 636 13 discriminator 1 view .LVU687
 2519 0048 0B4B     		ldr	r3, .L183+8
 2520 004a 1870     		strb	r0, [r3]
 637:Core/Src/main.c ****     next_state  = STATE_ERROR;
 2521              		.loc 1 637 3 is_stmt 1 view .LVU688
 637:Core/Src/main.c ****     next_state  = STATE_ERROR;
 2522              		.loc 1 637 5 is_stmt 0 view .LVU689
 2523 004c 58B9     		cbnz	r0, .L182
 642:Core/Src/main.c **** 
 2524              		.loc 1 642 3 is_stmt 1 view .LVU690
 642:Core/Src/main.c **** 
 2525              		.loc 1 642 15 is_stmt 0 view .LVU691
 2526 004e FFF7FEFF 		bl	HAL_GetTick
 2527              	.LVL146:
 642:Core/Src/main.c **** 
 2528              		.loc 1 642 13 discriminator 1 view .LVU692
 2529 0052 0C4B     		ldr	r3, .L183+20
 2530 0054 1860     		str	r0, [r3]
 644:Core/Src/main.c ****   return next_state;
 2531              		.loc 1 644 3 is_stmt 1 view .LVU693
 644:Core/Src/main.c ****   return next_state;
 2532              		.loc 1 644 14 is_stmt 0 view .LVU694
 2533 0056 0120     		movs	r0, #1
 2534 0058 054B     		ldr	r3, .L183
 2535 005a 1870     		strb	r0, [r3]
 645:Core/Src/main.c **** }
ARM GAS  /tmp/ccEpMq7M.s 			page 110


 2536              		.loc 1 645 3 is_stmt 1 view .LVU695
 2537              	.L178:
 646:Core/Src/main.c **** 
 2538              		.loc 1 646 1 is_stmt 0 view .LVU696
 2539 005c 08BD     		pop	{r3, pc}
 2540              	.L181:
 620:Core/Src/main.c ****     return next_state;
 2541              		.loc 1 620 5 is_stmt 1 view .LVU697
 620:Core/Src/main.c ****     return next_state;
 2542              		.loc 1 620 17 is_stmt 0 view .LVU698
 2543 005e 0220     		movs	r0, #2
 2544 0060 034B     		ldr	r3, .L183
 2545 0062 1870     		strb	r0, [r3]
 621:Core/Src/main.c ****   }
 2546              		.loc 1 621 5 is_stmt 1 view .LVU699
 621:Core/Src/main.c ****   }
 2547              		.loc 1 621 12 is_stmt 0 view .LVU700
 2548 0064 FAE7     		b	.L178
 2549              	.L182:
 638:Core/Src/main.c ****     return next_state;
 2550              		.loc 1 638 5 is_stmt 1 view .LVU701
 638:Core/Src/main.c ****     return next_state;
 2551              		.loc 1 638 17 is_stmt 0 view .LVU702
 2552 0066 0220     		movs	r0, #2
 2553 0068 014B     		ldr	r3, .L183
 2554 006a 1870     		strb	r0, [r3]
 639:Core/Src/main.c ****   }
 2555              		.loc 1 639 5 is_stmt 1 view .LVU703
 639:Core/Src/main.c ****   }
 2556              		.loc 1 639 12 is_stmt 0 view .LVU704
 2557 006c F6E7     		b	.L178
 2558              	.L184:
 2559 006e 00BF     		.align	2
 2560              	.L183:
 2561 0070 00000000 		.word	next_state
 2562 0074 00000000 		.word	is_request_sended
 2563 0078 00000000 		.word	halStatus
 2564 007c 00000000 		.word	adcBuffer
 2565 0080 00000000 		.word	hadc1
 2566 0084 00000000 		.word	lastTimer
 2567              		.cfi_endproc
 2568              	.LFE235:
 2570              		.global	is_running_error_timer
 2571              		.section	.bss.is_running_error_timer,"aw",%nobits
 2574              	is_running_error_timer:
 2575 0000 00       		.space	1
 2576              		.global	new_state
 2577              		.section	.data.new_state,"aw"
 2580              	new_state:
 2581 0000 01       		.byte	1
 2582              		.global	next_state
 2583              		.section	.data.next_state,"aw"
 2586              	next_state:
 2587 0000 01       		.byte	1
 2588              		.global	current_state
 2589              		.section	.bss.current_state,"aw",%nobits
 2592              	current_state:
ARM GAS  /tmp/ccEpMq7M.s 			page 111


 2593 0000 00       		.space	1
 2594              		.global	halStatus
 2595              		.section	.bss.halStatus,"aw",%nobits
 2598              	halStatus:
 2599 0000 00       		.space	1
 2600              		.global	state_table
 2601              		.section	.rodata.state_table,"a"
 2602              		.align	2
 2605              	state_table:
 2606 0000 00000000 		.word	do_init
 2607 0004 00000000 		.word	do_wait_request
 2608 0008 00000000 		.word	do_error
 2609 000c 00000000 		.word	do_listening
 2610 0010 00000000 		.word	do_warning
 2611 0014 00000000 		.word	do_pause
 2612              		.global	state_names
 2613              		.section	.rodata.str1.4,"aMS",%progbits,1
 2614              		.align	2
 2615              	.LC12:
 2616 0000 696E6974 		.ascii	"init\000"
 2616      00
 2617 0005 000000   		.align	2
 2618              	.LC13:
 2619 0008 77616974 		.ascii	"wait_request\000"
 2619      5F726571 
 2619      75657374 
 2619      00
 2620 0015 000000   		.align	2
 2621              	.LC14:
 2622 0018 6572726F 		.ascii	"error\000"
 2622      7200
 2623 001e 0000     		.align	2
 2624              	.LC15:
 2625 0020 6C697374 		.ascii	"listening\000"
 2625      656E696E 
 2625      6700
 2626 002a 0000     		.align	2
 2627              	.LC16:
 2628 002c 7761726E 		.ascii	"warning\000"
 2628      696E6700 
 2629              		.align	2
 2630              	.LC17:
 2631 0034 70617573 		.ascii	"pause\000"
 2631      6500
 2632              		.section	.data.state_names,"aw"
 2633              		.align	2
 2636              	state_names:
 2637 0000 00000000 		.word	.LC12
 2638 0004 08000000 		.word	.LC13
 2639 0008 18000000 		.word	.LC14
 2640 000c 20000000 		.word	.LC15
 2641 0010 2C000000 		.word	.LC16
 2642 0014 34000000 		.word	.LC17
 2643              		.global	msg_buffer
 2644              		.section	.bss.msg_buffer,"aw",%nobits
 2645              		.align	2
 2648              	msg_buffer:
ARM GAS  /tmp/ccEpMq7M.s 			page 112


 2649 0000 00000000 		.space	70
 2649      00000000 
 2649      00000000 
 2649      00000000 
 2649      00000000 
 2650              		.global	is_request_sended
 2651              		.section	.bss.is_request_sended,"aw",%nobits
 2654              	is_request_sended:
 2655 0000 00       		.space	1
 2656              		.global	cli_command
 2657              		.section	.bss.cli_command,"aw",%nobits
 2658              		.align	2
 2661              	cli_command:
 2662 0000 00000000 		.space	15
 2662      00000000 
 2662      00000000 
 2662      000000
 2663              		.global	currentFilterMode
 2664              		.section	.bss.currentFilterMode,"aw",%nobits
 2667              	currentFilterMode:
 2668 0000 00       		.space	1
 2669              		.global	lastButtonPress
 2670              		.section	.bss.lastButtonPress,"aw",%nobits
 2671              		.align	2
 2674              	lastButtonPress:
 2675 0000 00000000 		.space	4
 2676              		.global	lastTimer
 2677              		.section	.bss.lastTimer,"aw",%nobits
 2678              		.align	2
 2681              	lastTimer:
 2682 0000 00000000 		.space	4
 2683              		.global	sum
 2684              		.section	.bss.sum,"aw",%nobits
 2685              		.align	2
 2688              	sum:
 2689 0000 00000000 		.space	4
 2690              		.global	buffer_index_moving_average
 2691              		.section	.bss.buffer_index_moving_average,"aw",%nobits
 2692              		.align	1
 2695              	buffer_index_moving_average:
 2696 0000 0000     		.space	2
 2697              		.global	adc_moving_average
 2698              		.section	.bss.adc_moving_average,"aw",%nobits
 2699              		.align	2
 2702              	adc_moving_average:
 2703 0000 00000000 		.space	300
 2703      00000000 
 2703      00000000 
 2703      00000000 
 2703      00000000 
 2704              		.global	adcBuffer
 2705              		.section	.bss.adcBuffer,"aw",%nobits
 2706              		.align	2
 2709              	adcBuffer:
 2710 0000 00000000 		.space	1200
 2710      00000000 
 2710      00000000 
ARM GAS  /tmp/ccEpMq7M.s 			page 113


 2710      00000000 
 2710      00000000 
 2711              		.global	last_index
 2712              		.section	.bss.last_index,"aw",%nobits
 2713              		.align	1
 2716              	last_index:
 2717 0000 0000     		.space	2
 2718              		.global	lastDigitalValue
 2719              		.section	.bss.lastDigitalValue,"aw",%nobits
 2720              		.align	1
 2723              	lastDigitalValue:
 2724 0000 0000     		.space	2
 2725              		.global	lastAnalogValue
 2726              		.section	.bss.lastAnalogValue,"aw",%nobits
 2727              		.align	1
 2730              	lastAnalogValue:
 2731 0000 0000     		.space	2
 2732              		.global	huart2
 2733              		.section	.bss.huart2,"aw",%nobits
 2734              		.align	2
 2737              	huart2:
 2738 0000 00000000 		.space	72
 2738      00000000 
 2738      00000000 
 2738      00000000 
 2738      00000000 
 2739              		.global	htim4
 2740              		.section	.bss.htim4,"aw",%nobits
 2741              		.align	2
 2744              	htim4:
 2745 0000 00000000 		.space	72
 2745      00000000 
 2745      00000000 
 2745      00000000 
 2745      00000000 
 2746              		.global	htim3
 2747              		.section	.bss.htim3,"aw",%nobits
 2748              		.align	2
 2751              	htim3:
 2752 0000 00000000 		.space	72
 2752      00000000 
 2752      00000000 
 2752      00000000 
 2752      00000000 
 2753              		.global	hdma_adc1
 2754              		.section	.bss.hdma_adc1,"aw",%nobits
 2755              		.align	2
 2758              	hdma_adc1:
 2759 0000 00000000 		.space	96
 2759      00000000 
 2759      00000000 
 2759      00000000 
 2759      00000000 
 2760              		.global	hadc1
 2761              		.section	.bss.hadc1,"aw",%nobits
 2762              		.align	2
 2765              	hadc1:
ARM GAS  /tmp/ccEpMq7M.s 			page 114


 2766 0000 00000000 		.space	72
 2766      00000000 
 2766      00000000 
 2766      00000000 
 2766      00000000 
 2767              		.text
 2768              	.Letext0:
 2769              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f411xe.h"
 2770              		.file 5 "/home/dorijan/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/arm-n
 2771              		.file 6 "/home/dorijan/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/arm-n
 2772              		.file 7 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 2773              		.file 8 "/home/dorijan/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/arm-n
 2774              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 2775              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 2776              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 2777              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 2778              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 2779              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_adc.h"
 2780              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 2781              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 2782              		.file 17 "Core/Inc/scheme.h"
 2783              		.file 18 "/home/dorijan/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/arm-
 2784              		.file 19 "/home/dorijan/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/arm-
 2785              		.file 20 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim_ex.h"
 2786              		.file 21 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 2787              		.file 22 "/home/dorijan/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/arm-
 2788              		.file 23 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 2789              		.file 24 "/home/dorijan/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/arm-
 2790              		.file 25 "/home/dorijan/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/arm-
 2791              		.file 26 "/home/dorijan/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/arm-
 2792              		.file 27 "<built-in>"
ARM GAS  /tmp/ccEpMq7M.s 			page 115


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
     /tmp/ccEpMq7M.s:21     .text.__NVIC_SystemReset:00000000 $t
     /tmp/ccEpMq7M.s:26     .text.__NVIC_SystemReset:00000000 __NVIC_SystemReset
     /tmp/ccEpMq7M.s:89     .text.__NVIC_SystemReset:0000001c $d
     /tmp/ccEpMq7M.s:95     .rodata.do_error.str1.4:00000000 $d
     /tmp/ccEpMq7M.s:99     .text.do_error:00000000 $t
     /tmp/ccEpMq7M.s:105    .text.do_error:00000000 do_error
     /tmp/ccEpMq7M.s:207    .text.do_error:00000060 $d
     /tmp/ccEpMq7M.s:2574   .bss.is_running_error_timer:00000000 is_running_error_timer
     /tmp/ccEpMq7M.s:2654   .bss.is_request_sended:00000000 is_request_sended
     /tmp/ccEpMq7M.s:2737   .bss.huart2:00000000 huart2
     /tmp/ccEpMq7M.s:2598   .bss.halStatus:00000000 halStatus
     /tmp/ccEpMq7M.s:2648   .bss.msg_buffer:00000000 msg_buffer
     /tmp/ccEpMq7M.s:2586   .data.next_state:00000000 next_state
     /tmp/ccEpMq7M.s:2744   .bss.htim4:00000000 htim4
     /tmp/ccEpMq7M.s:220    .rodata.do_warning.str1.4:00000000 $d
     /tmp/ccEpMq7M.s:224    .text.do_warning:00000000 $t
     /tmp/ccEpMq7M.s:230    .text.do_warning:00000000 do_warning
     /tmp/ccEpMq7M.s:298    .text.do_warning:00000044 $d
     /tmp/ccEpMq7M.s:309    .rodata.do_wait_request.str1.4:00000000 $d
     /tmp/ccEpMq7M.s:313    .text.do_wait_request:00000000 $t
     /tmp/ccEpMq7M.s:319    .text.do_wait_request:00000000 do_wait_request
     /tmp/ccEpMq7M.s:418    .text.do_wait_request:00000060 $d
     /tmp/ccEpMq7M.s:2661   .bss.cli_command:00000000 cli_command
     /tmp/ccEpMq7M.s:429    .text.do_pause:00000000 $t
     /tmp/ccEpMq7M.s:435    .text.do_pause:00000000 do_pause
     /tmp/ccEpMq7M.s:534    .text.do_pause:00000060 $d
     /tmp/ccEpMq7M.s:545    .text.MX_GPIO_Init:00000000 $t
     /tmp/ccEpMq7M.s:550    .text.MX_GPIO_Init:00000000 MX_GPIO_Init
     /tmp/ccEpMq7M.s:724    .text.MX_GPIO_Init:000000d4 $d
     /tmp/ccEpMq7M.s:731    .text.MX_DMA_Init:00000000 $t
     /tmp/ccEpMq7M.s:736    .text.MX_DMA_Init:00000000 MX_DMA_Init
     /tmp/ccEpMq7M.s:782    .text.MX_DMA_Init:00000030 $d
     /tmp/ccEpMq7M.s:787    .rodata.do_listening.str1.4:00000000 $d
     /tmp/ccEpMq7M.s:801    .text.do_listening:00000000 $t
     /tmp/ccEpMq7M.s:807    .text.do_listening:00000000 do_listening
     /tmp/ccEpMq7M.s:1080   .text.do_listening:00000168 $d
     /tmp/ccEpMq7M.s:2758   .bss.hdma_adc1:00000000 hdma_adc1
     /tmp/ccEpMq7M.s:2716   .bss.last_index:00000000 last_index
     /tmp/ccEpMq7M.s:2709   .bss.adcBuffer:00000000 adcBuffer
     /tmp/ccEpMq7M.s:2730   .bss.lastAnalogValue:00000000 lastAnalogValue
     /tmp/ccEpMq7M.s:2695   .bss.buffer_index_moving_average:00000000 buffer_index_moving_average
     /tmp/ccEpMq7M.s:2702   .bss.adc_moving_average:00000000 adc_moving_average
     /tmp/ccEpMq7M.s:2688   .bss.sum:00000000 sum
     /tmp/ccEpMq7M.s:2667   .bss.currentFilterMode:00000000 currentFilterMode
     /tmp/ccEpMq7M.s:2723   .bss.lastDigitalValue:00000000 lastDigitalValue
     /tmp/ccEpMq7M.s:2681   .bss.lastTimer:00000000 lastTimer
     /tmp/ccEpMq7M.s:1106   .text.HAL_TIM_PeriodElapsedCallback:00000000 $t
     /tmp/ccEpMq7M.s:1112   .text.HAL_TIM_PeriodElapsedCallback:00000000 HAL_TIM_PeriodElapsedCallback
     /tmp/ccEpMq7M.s:1164   .text.HAL_TIM_PeriodElapsedCallback:00000028 $d
     /tmp/ccEpMq7M.s:1171   .text.HAL_GPIO_EXTI_Callback:00000000 $t
     /tmp/ccEpMq7M.s:1177   .text.HAL_GPIO_EXTI_Callback:00000000 HAL_GPIO_EXTI_Callback
     /tmp/ccEpMq7M.s:1243   .text.HAL_GPIO_EXTI_Callback:0000003c $d
     /tmp/ccEpMq7M.s:1430   .text.HAL_GPIO_EXTI_Callback:00000104 $d
     /tmp/ccEpMq7M.s:2674   .bss.lastButtonPress:00000000 lastButtonPress
     /tmp/ccEpMq7M.s:2592   .bss.current_state:00000000 current_state
ARM GAS  /tmp/ccEpMq7M.s 			page 116


     /tmp/ccEpMq7M.s:2580   .data.new_state:00000000 new_state
     /tmp/ccEpMq7M.s:2751   .bss.htim3:00000000 htim3
     /tmp/ccEpMq7M.s:1448   .rodata.handle_cli_command.str1.4:00000000 $d
     /tmp/ccEpMq7M.s:1458   .text.handle_cli_command:00000000 $t
     /tmp/ccEpMq7M.s:1464   .text.handle_cli_command:00000000 handle_cli_command
     /tmp/ccEpMq7M.s:1544   .text.handle_cli_command:00000058 $d
     /tmp/ccEpMq7M.s:1553   .rodata.HAL_UARTEx_RxEventCallback.str1.4:00000000 $d
     /tmp/ccEpMq7M.s:1561   .text.HAL_UARTEx_RxEventCallback:00000000 $t
     /tmp/ccEpMq7M.s:1567   .text.HAL_UARTEx_RxEventCallback:00000000 HAL_UARTEx_RxEventCallback
     /tmp/ccEpMq7M.s:1697   .text.HAL_UARTEx_RxEventCallback:0000009c $d
     /tmp/ccEpMq7M.s:1709   .text.run_state:00000000 $t
     /tmp/ccEpMq7M.s:1715   .text.run_state:00000000 run_state
     /tmp/ccEpMq7M.s:1776   .text.run_state:00000038 $d
     /tmp/ccEpMq7M.s:2605   .rodata.state_table:00000000 state_table
     /tmp/ccEpMq7M.s:1784   .text.main:00000000 $t
     /tmp/ccEpMq7M.s:1790   .text.main:00000000 main
     /tmp/ccEpMq7M.s:1816   .text.main:00000010 $d
     /tmp/ccEpMq7M.s:1821   .text.Error_Handler:00000000 $t
     /tmp/ccEpMq7M.s:1827   .text.Error_Handler:00000000 Error_Handler
     /tmp/ccEpMq7M.s:1855   .text.Error_Handler:00000018 $d
     /tmp/ccEpMq7M.s:1862   .text.SystemClock_Config:00000000 $t
     /tmp/ccEpMq7M.s:1868   .text.SystemClock_Config:00000000 SystemClock_Config
     /tmp/ccEpMq7M.s:2016   .text.SystemClock_Config:0000009c $d
     /tmp/ccEpMq7M.s:2022   .text.MX_USART2_UART_Init:00000000 $t
     /tmp/ccEpMq7M.s:2027   .text.MX_USART2_UART_Init:00000000 MX_USART2_UART_Init
     /tmp/ccEpMq7M.s:2084   .text.MX_USART2_UART_Init:0000002c $d
     /tmp/ccEpMq7M.s:2090   .text.MX_ADC1_Init:00000000 $t
     /tmp/ccEpMq7M.s:2095   .text.MX_ADC1_Init:00000000 MX_ADC1_Init
     /tmp/ccEpMq7M.s:2202   .text.MX_ADC1_Init:00000064 $d
     /tmp/ccEpMq7M.s:2765   .bss.hadc1:00000000 hadc1
     /tmp/ccEpMq7M.s:2209   .text.MX_TIM3_Init:00000000 $t
     /tmp/ccEpMq7M.s:2214   .text.MX_TIM3_Init:00000000 MX_TIM3_Init
     /tmp/ccEpMq7M.s:2320   .text.MX_TIM3_Init:00000068 $d
     /tmp/ccEpMq7M.s:2326   .text.MX_TIM4_Init:00000000 $t
     /tmp/ccEpMq7M.s:2331   .text.MX_TIM4_Init:00000000 MX_TIM4_Init
     /tmp/ccEpMq7M.s:2437   .text.MX_TIM4_Init:00000068 $d
     /tmp/ccEpMq7M.s:2443   .text.do_init:00000000 $t
     /tmp/ccEpMq7M.s:2449   .text.do_init:00000000 do_init
     /tmp/ccEpMq7M.s:2561   .text.do_init:00000070 $d
     /tmp/ccEpMq7M.s:2575   .bss.is_running_error_timer:00000000 $d
     /tmp/ccEpMq7M.s:2593   .bss.current_state:00000000 $d
     /tmp/ccEpMq7M.s:2599   .bss.halStatus:00000000 $d
     /tmp/ccEpMq7M.s:2602   .rodata.state_table:00000000 $d
     /tmp/ccEpMq7M.s:2636   .data.state_names:00000000 state_names
     /tmp/ccEpMq7M.s:2614   .rodata.str1.4:00000000 $d
     /tmp/ccEpMq7M.s:2633   .data.state_names:00000000 $d
     /tmp/ccEpMq7M.s:2645   .bss.msg_buffer:00000000 $d
     /tmp/ccEpMq7M.s:2655   .bss.is_request_sended:00000000 $d
     /tmp/ccEpMq7M.s:2658   .bss.cli_command:00000000 $d
     /tmp/ccEpMq7M.s:2668   .bss.currentFilterMode:00000000 $d
     /tmp/ccEpMq7M.s:2671   .bss.lastButtonPress:00000000 $d
     /tmp/ccEpMq7M.s:2678   .bss.lastTimer:00000000 $d
     /tmp/ccEpMq7M.s:2685   .bss.sum:00000000 $d
     /tmp/ccEpMq7M.s:2692   .bss.buffer_index_moving_average:00000000 $d
     /tmp/ccEpMq7M.s:2699   .bss.adc_moving_average:00000000 $d
     /tmp/ccEpMq7M.s:2706   .bss.adcBuffer:00000000 $d
     /tmp/ccEpMq7M.s:2713   .bss.last_index:00000000 $d
ARM GAS  /tmp/ccEpMq7M.s 			page 117


     /tmp/ccEpMq7M.s:2720   .bss.lastDigitalValue:00000000 $d
     /tmp/ccEpMq7M.s:2727   .bss.lastAnalogValue:00000000 $d
     /tmp/ccEpMq7M.s:2734   .bss.huart2:00000000 $d
     /tmp/ccEpMq7M.s:2741   .bss.htim4:00000000 $d
     /tmp/ccEpMq7M.s:2748   .bss.htim3:00000000 $d
     /tmp/ccEpMq7M.s:2755   .bss.hdma_adc1:00000000 $d
     /tmp/ccEpMq7M.s:2762   .bss.hadc1:00000000 $d
     /tmp/ccEpMq7M.s:1248   .text.HAL_GPIO_EXTI_Callback:00000041 $d
     /tmp/ccEpMq7M.s:1248   .text.HAL_GPIO_EXTI_Callback:00000042 $t

UNDEFINED SYMBOLS
HAL_UART_AbortReceive_IT
sprintf
strlen
HAL_UART_Transmit
HAL_TIM_Base_Start_IT
HAL_GPIO_WritePin
HAL_UARTEx_ReceiveToIdle_IT
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
__aeabi_f2d
HAL_GetTick
rand
HAL_GPIO_TogglePin
HAL_GPIO_ReadPin
HAL_TIM_Base_Stop_IT
strcmp
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_UART_Init
HAL_ADC_Init
HAL_ADC_ConfigChannel
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIMEx_MasterConfigSynchronization
time
srand
HAL_Init
HAL_ADC_Start_DMA
