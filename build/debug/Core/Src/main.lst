ARM GAS  /tmp/ccyRSI2C.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/main.c"
  20              		.section	.text.__NVIC_SystemReset,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	__NVIC_SystemReset:
  27              	.LFB121:
  28              		.file 2 "Drivers/CMSIS/Include/core_cm4.h"
   1:Drivers/CMSIS/Include/core_cm4.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/core_cm4.h ****  * @file     core_cm4.h
   3:Drivers/CMSIS/Include/core_cm4.h ****  * @brief    CMSIS Cortex-M4 Core Peripheral Access Layer Header File
   4:Drivers/CMSIS/Include/core_cm4.h ****  * @version  V5.1.2
   5:Drivers/CMSIS/Include/core_cm4.h ****  * @date     04. June 2021
   6:Drivers/CMSIS/Include/core_cm4.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/core_cm4.h **** /*
   8:Drivers/CMSIS/Include/core_cm4.h ****  * Copyright (c) 2009-2020 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/core_cm4.h ****  *
  10:Drivers/CMSIS/Include/core_cm4.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/core_cm4.h ****  *
  12:Drivers/CMSIS/Include/core_cm4.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/core_cm4.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/core_cm4.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/core_cm4.h ****  *
  16:Drivers/CMSIS/Include/core_cm4.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/core_cm4.h ****  *
  18:Drivers/CMSIS/Include/core_cm4.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/core_cm4.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/core_cm4.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/core_cm4.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/core_cm4.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/core_cm4.h ****  */
  24:Drivers/CMSIS/Include/core_cm4.h **** 
  25:Drivers/CMSIS/Include/core_cm4.h **** #if   defined ( __ICCARM__ )
  26:Drivers/CMSIS/Include/core_cm4.h ****   #pragma system_include         /* treat file as system include file for MISRA check */
  27:Drivers/CMSIS/Include/core_cm4.h **** #elif defined (__clang__)
  28:Drivers/CMSIS/Include/core_cm4.h ****   #pragma clang system_header   /* treat file as system include file */
  29:Drivers/CMSIS/Include/core_cm4.h **** #endif
  30:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/ccyRSI2C.s 			page 2


  31:Drivers/CMSIS/Include/core_cm4.h **** #ifndef __CORE_CM4_H_GENERIC
  32:Drivers/CMSIS/Include/core_cm4.h **** #define __CORE_CM4_H_GENERIC
  33:Drivers/CMSIS/Include/core_cm4.h **** 
  34:Drivers/CMSIS/Include/core_cm4.h **** #include <stdint.h>
  35:Drivers/CMSIS/Include/core_cm4.h **** 
  36:Drivers/CMSIS/Include/core_cm4.h **** #ifdef __cplusplus
  37:Drivers/CMSIS/Include/core_cm4.h ****  extern "C" {
  38:Drivers/CMSIS/Include/core_cm4.h **** #endif
  39:Drivers/CMSIS/Include/core_cm4.h **** 
  40:Drivers/CMSIS/Include/core_cm4.h **** /**
  41:Drivers/CMSIS/Include/core_cm4.h ****   \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  42:Drivers/CMSIS/Include/core_cm4.h ****   CMSIS violates the following MISRA-C:2004 rules:
  43:Drivers/CMSIS/Include/core_cm4.h **** 
  44:Drivers/CMSIS/Include/core_cm4.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  45:Drivers/CMSIS/Include/core_cm4.h ****      Function definitions in header files are used to allow 'inlining'.
  46:Drivers/CMSIS/Include/core_cm4.h **** 
  47:Drivers/CMSIS/Include/core_cm4.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  48:Drivers/CMSIS/Include/core_cm4.h ****      Unions are used for effective representation of core registers.
  49:Drivers/CMSIS/Include/core_cm4.h **** 
  50:Drivers/CMSIS/Include/core_cm4.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  51:Drivers/CMSIS/Include/core_cm4.h ****      Function-like macros are used to allow more efficient code.
  52:Drivers/CMSIS/Include/core_cm4.h ****  */
  53:Drivers/CMSIS/Include/core_cm4.h **** 
  54:Drivers/CMSIS/Include/core_cm4.h **** 
  55:Drivers/CMSIS/Include/core_cm4.h **** /*******************************************************************************
  56:Drivers/CMSIS/Include/core_cm4.h ****  *                 CMSIS definitions
  57:Drivers/CMSIS/Include/core_cm4.h ****  ******************************************************************************/
  58:Drivers/CMSIS/Include/core_cm4.h **** /**
  59:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup Cortex_M4
  60:Drivers/CMSIS/Include/core_cm4.h ****   @{
  61:Drivers/CMSIS/Include/core_cm4.h ****  */
  62:Drivers/CMSIS/Include/core_cm4.h **** 
  63:Drivers/CMSIS/Include/core_cm4.h **** #include "cmsis_version.h"
  64:Drivers/CMSIS/Include/core_cm4.h **** 
  65:Drivers/CMSIS/Include/core_cm4.h **** /* CMSIS CM4 definitions */
  66:Drivers/CMSIS/Include/core_cm4.h **** #define __CM4_CMSIS_VERSION_MAIN  (__CM_CMSIS_VERSION_MAIN)              /*!< \deprecated [31:16] C
  67:Drivers/CMSIS/Include/core_cm4.h **** #define __CM4_CMSIS_VERSION_SUB   (__CM_CMSIS_VERSION_SUB)               /*!< \deprecated [15:0]  C
  68:Drivers/CMSIS/Include/core_cm4.h **** #define __CM4_CMSIS_VERSION       ((__CM4_CMSIS_VERSION_MAIN << 16U) | \
  69:Drivers/CMSIS/Include/core_cm4.h ****                                     __CM4_CMSIS_VERSION_SUB           )  /*!< \deprecated CMSIS HAL
  70:Drivers/CMSIS/Include/core_cm4.h **** 
  71:Drivers/CMSIS/Include/core_cm4.h **** #define __CORTEX_M                (4U)                                   /*!< Cortex-M Core */
  72:Drivers/CMSIS/Include/core_cm4.h **** 
  73:Drivers/CMSIS/Include/core_cm4.h **** /** __FPU_USED indicates whether an FPU is used or not.
  74:Drivers/CMSIS/Include/core_cm4.h ****     For this, __FPU_PRESENT has to be checked prior to making use of FPU specific registers and fun
  75:Drivers/CMSIS/Include/core_cm4.h **** */
  76:Drivers/CMSIS/Include/core_cm4.h **** #if defined ( __CC_ARM )
  77:Drivers/CMSIS/Include/core_cm4.h ****   #if defined __TARGET_FPU_VFP
  78:Drivers/CMSIS/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
  79:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
  80:Drivers/CMSIS/Include/core_cm4.h ****     #else
  81:Drivers/CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
  82:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
  83:Drivers/CMSIS/Include/core_cm4.h ****     #endif
  84:Drivers/CMSIS/Include/core_cm4.h ****   #else
  85:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
  86:Drivers/CMSIS/Include/core_cm4.h ****   #endif
  87:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/ccyRSI2C.s 			page 3


  88:Drivers/CMSIS/Include/core_cm4.h **** #elif defined (__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  89:Drivers/CMSIS/Include/core_cm4.h ****   #if defined __ARM_FP
  90:Drivers/CMSIS/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
  91:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
  92:Drivers/CMSIS/Include/core_cm4.h ****     #else
  93:Drivers/CMSIS/Include/core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
  94:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
  95:Drivers/CMSIS/Include/core_cm4.h ****     #endif
  96:Drivers/CMSIS/Include/core_cm4.h ****   #else
  97:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
  98:Drivers/CMSIS/Include/core_cm4.h ****   #endif
  99:Drivers/CMSIS/Include/core_cm4.h **** 
 100:Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __GNUC__ )
 101:Drivers/CMSIS/Include/core_cm4.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
 102:Drivers/CMSIS/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 103:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
 104:Drivers/CMSIS/Include/core_cm4.h ****     #else
 105:Drivers/CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 106:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
 107:Drivers/CMSIS/Include/core_cm4.h ****     #endif
 108:Drivers/CMSIS/Include/core_cm4.h ****   #else
 109:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
 110:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 111:Drivers/CMSIS/Include/core_cm4.h **** 
 112:Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __ICCARM__ )
 113:Drivers/CMSIS/Include/core_cm4.h ****   #if defined __ARMVFP__
 114:Drivers/CMSIS/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 115:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
 116:Drivers/CMSIS/Include/core_cm4.h ****     #else
 117:Drivers/CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 118:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
 119:Drivers/CMSIS/Include/core_cm4.h ****     #endif
 120:Drivers/CMSIS/Include/core_cm4.h ****   #else
 121:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
 122:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 123:Drivers/CMSIS/Include/core_cm4.h **** 
 124:Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __TI_ARM__ )
 125:Drivers/CMSIS/Include/core_cm4.h ****   #if defined __TI_VFP_SUPPORT__
 126:Drivers/CMSIS/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 127:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
 128:Drivers/CMSIS/Include/core_cm4.h ****     #else
 129:Drivers/CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 130:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
 131:Drivers/CMSIS/Include/core_cm4.h ****     #endif
 132:Drivers/CMSIS/Include/core_cm4.h ****   #else
 133:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
 134:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 135:Drivers/CMSIS/Include/core_cm4.h **** 
 136:Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __TASKING__ )
 137:Drivers/CMSIS/Include/core_cm4.h ****   #if defined __FPU_VFP__
 138:Drivers/CMSIS/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 139:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
 140:Drivers/CMSIS/Include/core_cm4.h ****     #else
 141:Drivers/CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 142:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
 143:Drivers/CMSIS/Include/core_cm4.h ****     #endif
 144:Drivers/CMSIS/Include/core_cm4.h ****   #else
ARM GAS  /tmp/ccyRSI2C.s 			page 4


 145:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
 146:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 147:Drivers/CMSIS/Include/core_cm4.h **** 
 148:Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __CSMC__ )
 149:Drivers/CMSIS/Include/core_cm4.h ****   #if ( __CSMC__ & 0x400U)
 150:Drivers/CMSIS/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 151:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
 152:Drivers/CMSIS/Include/core_cm4.h ****     #else
 153:Drivers/CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 154:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
 155:Drivers/CMSIS/Include/core_cm4.h ****     #endif
 156:Drivers/CMSIS/Include/core_cm4.h ****   #else
 157:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
 158:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 159:Drivers/CMSIS/Include/core_cm4.h **** 
 160:Drivers/CMSIS/Include/core_cm4.h **** #endif
 161:Drivers/CMSIS/Include/core_cm4.h **** 
 162:Drivers/CMSIS/Include/core_cm4.h **** #include "cmsis_compiler.h"               /* CMSIS compiler specific defines */
 163:Drivers/CMSIS/Include/core_cm4.h **** 
 164:Drivers/CMSIS/Include/core_cm4.h **** 
 165:Drivers/CMSIS/Include/core_cm4.h **** #ifdef __cplusplus
 166:Drivers/CMSIS/Include/core_cm4.h **** }
 167:Drivers/CMSIS/Include/core_cm4.h **** #endif
 168:Drivers/CMSIS/Include/core_cm4.h **** 
 169:Drivers/CMSIS/Include/core_cm4.h **** #endif /* __CORE_CM4_H_GENERIC */
 170:Drivers/CMSIS/Include/core_cm4.h **** 
 171:Drivers/CMSIS/Include/core_cm4.h **** #ifndef __CMSIS_GENERIC
 172:Drivers/CMSIS/Include/core_cm4.h **** 
 173:Drivers/CMSIS/Include/core_cm4.h **** #ifndef __CORE_CM4_H_DEPENDANT
 174:Drivers/CMSIS/Include/core_cm4.h **** #define __CORE_CM4_H_DEPENDANT
 175:Drivers/CMSIS/Include/core_cm4.h **** 
 176:Drivers/CMSIS/Include/core_cm4.h **** #ifdef __cplusplus
 177:Drivers/CMSIS/Include/core_cm4.h ****  extern "C" {
 178:Drivers/CMSIS/Include/core_cm4.h **** #endif
 179:Drivers/CMSIS/Include/core_cm4.h **** 
 180:Drivers/CMSIS/Include/core_cm4.h **** /* check device defines and use defaults */
 181:Drivers/CMSIS/Include/core_cm4.h **** #if defined __CHECK_DEVICE_DEFINES
 182:Drivers/CMSIS/Include/core_cm4.h ****   #ifndef __CM4_REV
 183:Drivers/CMSIS/Include/core_cm4.h ****     #define __CM4_REV               0x0000U
 184:Drivers/CMSIS/Include/core_cm4.h ****     #warning "__CM4_REV not defined in device header file; using default!"
 185:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 186:Drivers/CMSIS/Include/core_cm4.h **** 
 187:Drivers/CMSIS/Include/core_cm4.h ****   #ifndef __FPU_PRESENT
 188:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_PRESENT             0U
 189:Drivers/CMSIS/Include/core_cm4.h ****     #warning "__FPU_PRESENT not defined in device header file; using default!"
 190:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 191:Drivers/CMSIS/Include/core_cm4.h **** 
 192:Drivers/CMSIS/Include/core_cm4.h ****   #ifndef __MPU_PRESENT
 193:Drivers/CMSIS/Include/core_cm4.h ****     #define __MPU_PRESENT             0U
 194:Drivers/CMSIS/Include/core_cm4.h ****     #warning "__MPU_PRESENT not defined in device header file; using default!"
 195:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 196:Drivers/CMSIS/Include/core_cm4.h **** 
 197:Drivers/CMSIS/Include/core_cm4.h ****   #ifndef __VTOR_PRESENT
 198:Drivers/CMSIS/Include/core_cm4.h ****     #define __VTOR_PRESENT             1U
 199:Drivers/CMSIS/Include/core_cm4.h ****     #warning "__VTOR_PRESENT not defined in device header file; using default!"
 200:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 201:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/ccyRSI2C.s 			page 5


 202:Drivers/CMSIS/Include/core_cm4.h ****   #ifndef __NVIC_PRIO_BITS
 203:Drivers/CMSIS/Include/core_cm4.h ****     #define __NVIC_PRIO_BITS          3U
 204:Drivers/CMSIS/Include/core_cm4.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 205:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 206:Drivers/CMSIS/Include/core_cm4.h **** 
 207:Drivers/CMSIS/Include/core_cm4.h ****   #ifndef __Vendor_SysTickConfig
 208:Drivers/CMSIS/Include/core_cm4.h ****     #define __Vendor_SysTickConfig    0U
 209:Drivers/CMSIS/Include/core_cm4.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 210:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 211:Drivers/CMSIS/Include/core_cm4.h **** #endif
 212:Drivers/CMSIS/Include/core_cm4.h **** 
 213:Drivers/CMSIS/Include/core_cm4.h **** /* IO definitions (access restrictions to peripheral registers) */
 214:Drivers/CMSIS/Include/core_cm4.h **** /**
 215:Drivers/CMSIS/Include/core_cm4.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 216:Drivers/CMSIS/Include/core_cm4.h **** 
 217:Drivers/CMSIS/Include/core_cm4.h ****     <strong>IO Type Qualifiers</strong> are used
 218:Drivers/CMSIS/Include/core_cm4.h ****     \li to specify the access to peripheral variables.
 219:Drivers/CMSIS/Include/core_cm4.h ****     \li for automatic generation of peripheral register debug information.
 220:Drivers/CMSIS/Include/core_cm4.h **** */
 221:Drivers/CMSIS/Include/core_cm4.h **** #ifdef __cplusplus
 222:Drivers/CMSIS/Include/core_cm4.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions */
 223:Drivers/CMSIS/Include/core_cm4.h **** #else
 224:Drivers/CMSIS/Include/core_cm4.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions */
 225:Drivers/CMSIS/Include/core_cm4.h **** #endif
 226:Drivers/CMSIS/Include/core_cm4.h **** #define     __O     volatile             /*!< Defines 'write only' permissions */
 227:Drivers/CMSIS/Include/core_cm4.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions */
 228:Drivers/CMSIS/Include/core_cm4.h **** 
 229:Drivers/CMSIS/Include/core_cm4.h **** /* following defines should be used for structure members */
 230:Drivers/CMSIS/Include/core_cm4.h **** #define     __IM     volatile const      /*! Defines 'read only' structure member permissions */
 231:Drivers/CMSIS/Include/core_cm4.h **** #define     __OM     volatile            /*! Defines 'write only' structure member permissions */
 232:Drivers/CMSIS/Include/core_cm4.h **** #define     __IOM    volatile            /*! Defines 'read / write' structure member permissions */
 233:Drivers/CMSIS/Include/core_cm4.h **** 
 234:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group Cortex_M4 */
 235:Drivers/CMSIS/Include/core_cm4.h **** 
 236:Drivers/CMSIS/Include/core_cm4.h **** 
 237:Drivers/CMSIS/Include/core_cm4.h **** 
 238:Drivers/CMSIS/Include/core_cm4.h **** /*******************************************************************************
 239:Drivers/CMSIS/Include/core_cm4.h ****  *                 Register Abstraction
 240:Drivers/CMSIS/Include/core_cm4.h ****   Core Register contain:
 241:Drivers/CMSIS/Include/core_cm4.h ****   - Core Register
 242:Drivers/CMSIS/Include/core_cm4.h ****   - Core NVIC Register
 243:Drivers/CMSIS/Include/core_cm4.h ****   - Core SCB Register
 244:Drivers/CMSIS/Include/core_cm4.h ****   - Core SysTick Register
 245:Drivers/CMSIS/Include/core_cm4.h ****   - Core Debug Register
 246:Drivers/CMSIS/Include/core_cm4.h ****   - Core MPU Register
 247:Drivers/CMSIS/Include/core_cm4.h ****   - Core FPU Register
 248:Drivers/CMSIS/Include/core_cm4.h ****  ******************************************************************************/
 249:Drivers/CMSIS/Include/core_cm4.h **** /**
 250:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_core_register Defines and Type Definitions
 251:Drivers/CMSIS/Include/core_cm4.h ****   \brief Type definitions and defines for Cortex-M processor based devices.
 252:Drivers/CMSIS/Include/core_cm4.h **** */
 253:Drivers/CMSIS/Include/core_cm4.h **** 
 254:Drivers/CMSIS/Include/core_cm4.h **** /**
 255:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup    CMSIS_core_register
 256:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup   CMSIS_CORE  Status and Control Registers
 257:Drivers/CMSIS/Include/core_cm4.h ****   \brief      Core Register type definitions.
 258:Drivers/CMSIS/Include/core_cm4.h ****   @{
ARM GAS  /tmp/ccyRSI2C.s 			page 6


 259:Drivers/CMSIS/Include/core_cm4.h ****  */
 260:Drivers/CMSIS/Include/core_cm4.h **** 
 261:Drivers/CMSIS/Include/core_cm4.h **** /**
 262:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Union type to access the Application Program Status Register (APSR).
 263:Drivers/CMSIS/Include/core_cm4.h ****  */
 264:Drivers/CMSIS/Include/core_cm4.h **** typedef union
 265:Drivers/CMSIS/Include/core_cm4.h **** {
 266:Drivers/CMSIS/Include/core_cm4.h ****   struct
 267:Drivers/CMSIS/Include/core_cm4.h ****   {
 268:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved0:16;              /*!< bit:  0..15  Reserved */
 269:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 270:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved1:7;               /*!< bit: 20..26  Reserved */
 271:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 272:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 273:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 274:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 275:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 276:Drivers/CMSIS/Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 277:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 278:Drivers/CMSIS/Include/core_cm4.h **** } APSR_Type;
 279:Drivers/CMSIS/Include/core_cm4.h **** 
 280:Drivers/CMSIS/Include/core_cm4.h **** /* APSR Register Definitions */
 281:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_N_Pos                         31U                                            /*!< APSR
 282:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_N_Msk                         (1UL << APSR_N_Pos)                            /*!< APSR
 283:Drivers/CMSIS/Include/core_cm4.h **** 
 284:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_Z_Pos                         30U                                            /*!< APSR
 285:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_Z_Msk                         (1UL << APSR_Z_Pos)                            /*!< APSR
 286:Drivers/CMSIS/Include/core_cm4.h **** 
 287:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_C_Pos                         29U                                            /*!< APSR
 288:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_C_Msk                         (1UL << APSR_C_Pos)                            /*!< APSR
 289:Drivers/CMSIS/Include/core_cm4.h **** 
 290:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_V_Pos                         28U                                            /*!< APSR
 291:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_V_Msk                         (1UL << APSR_V_Pos)                            /*!< APSR
 292:Drivers/CMSIS/Include/core_cm4.h **** 
 293:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_Q_Pos                         27U                                            /*!< APSR
 294:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_Q_Msk                         (1UL << APSR_Q_Pos)                            /*!< APSR
 295:Drivers/CMSIS/Include/core_cm4.h **** 
 296:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_GE_Pos                        16U                                            /*!< APSR
 297:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_GE_Msk                        (0xFUL << APSR_GE_Pos)                         /*!< APSR
 298:Drivers/CMSIS/Include/core_cm4.h **** 
 299:Drivers/CMSIS/Include/core_cm4.h **** 
 300:Drivers/CMSIS/Include/core_cm4.h **** /**
 301:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Union type to access the Interrupt Program Status Register (IPSR).
 302:Drivers/CMSIS/Include/core_cm4.h ****  */
 303:Drivers/CMSIS/Include/core_cm4.h **** typedef union
 304:Drivers/CMSIS/Include/core_cm4.h **** {
 305:Drivers/CMSIS/Include/core_cm4.h ****   struct
 306:Drivers/CMSIS/Include/core_cm4.h ****   {
 307:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 308:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved */
 309:Drivers/CMSIS/Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 310:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 311:Drivers/CMSIS/Include/core_cm4.h **** } IPSR_Type;
 312:Drivers/CMSIS/Include/core_cm4.h **** 
 313:Drivers/CMSIS/Include/core_cm4.h **** /* IPSR Register Definitions */
 314:Drivers/CMSIS/Include/core_cm4.h **** #define IPSR_ISR_Pos                        0U                                            /*!< IPSR
 315:Drivers/CMSIS/Include/core_cm4.h **** #define IPSR_ISR_Msk                       (0x1FFUL /*<< IPSR_ISR_Pos*/)                  /*!< IPSR
ARM GAS  /tmp/ccyRSI2C.s 			page 7


 316:Drivers/CMSIS/Include/core_cm4.h **** 
 317:Drivers/CMSIS/Include/core_cm4.h **** 
 318:Drivers/CMSIS/Include/core_cm4.h **** /**
 319:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 320:Drivers/CMSIS/Include/core_cm4.h ****  */
 321:Drivers/CMSIS/Include/core_cm4.h **** typedef union
 322:Drivers/CMSIS/Include/core_cm4.h **** {
 323:Drivers/CMSIS/Include/core_cm4.h ****   struct
 324:Drivers/CMSIS/Include/core_cm4.h ****   {
 325:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 326:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved0:1;               /*!< bit:      9  Reserved */
 327:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t ICI_IT_1:6;                 /*!< bit: 10..15  ICI/IT part 1 */
 328:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 329:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved1:4;               /*!< bit: 20..23  Reserved */
 330:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit */
 331:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t ICI_IT_2:2;                 /*!< bit: 25..26  ICI/IT part 2 */
 332:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 333:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 334:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 335:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 336:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 337:Drivers/CMSIS/Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 338:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 339:Drivers/CMSIS/Include/core_cm4.h **** } xPSR_Type;
 340:Drivers/CMSIS/Include/core_cm4.h **** 
 341:Drivers/CMSIS/Include/core_cm4.h **** /* xPSR Register Definitions */
 342:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_N_Pos                         31U                                            /*!< xPSR
 343:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_N_Msk                         (1UL << xPSR_N_Pos)                            /*!< xPSR
 344:Drivers/CMSIS/Include/core_cm4.h **** 
 345:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_Z_Pos                         30U                                            /*!< xPSR
 346:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_Z_Msk                         (1UL << xPSR_Z_Pos)                            /*!< xPSR
 347:Drivers/CMSIS/Include/core_cm4.h **** 
 348:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_C_Pos                         29U                                            /*!< xPSR
 349:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_C_Msk                         (1UL << xPSR_C_Pos)                            /*!< xPSR
 350:Drivers/CMSIS/Include/core_cm4.h **** 
 351:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_V_Pos                         28U                                            /*!< xPSR
 352:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_V_Msk                         (1UL << xPSR_V_Pos)                            /*!< xPSR
 353:Drivers/CMSIS/Include/core_cm4.h **** 
 354:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_Q_Pos                         27U                                            /*!< xPSR
 355:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_Q_Msk                         (1UL << xPSR_Q_Pos)                            /*!< xPSR
 356:Drivers/CMSIS/Include/core_cm4.h **** 
 357:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_ICI_IT_2_Pos                  25U                                            /*!< xPSR
 358:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_ICI_IT_2_Msk                  (3UL << xPSR_ICI_IT_2_Pos)                     /*!< xPSR
 359:Drivers/CMSIS/Include/core_cm4.h **** 
 360:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_T_Pos                         24U                                            /*!< xPSR
 361:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_T_Msk                         (1UL << xPSR_T_Pos)                            /*!< xPSR
 362:Drivers/CMSIS/Include/core_cm4.h **** 
 363:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_GE_Pos                        16U                                            /*!< xPSR
 364:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_GE_Msk                        (0xFUL << xPSR_GE_Pos)                         /*!< xPSR
 365:Drivers/CMSIS/Include/core_cm4.h **** 
 366:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_ICI_IT_1_Pos                  10U                                            /*!< xPSR
 367:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_ICI_IT_1_Msk                  (0x3FUL << xPSR_ICI_IT_1_Pos)                  /*!< xPSR
 368:Drivers/CMSIS/Include/core_cm4.h **** 
 369:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_ISR_Pos                        0U                                            /*!< xPSR
 370:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_ISR_Msk                       (0x1FFUL /*<< xPSR_ISR_Pos*/)                  /*!< xPSR
 371:Drivers/CMSIS/Include/core_cm4.h **** 
 372:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/ccyRSI2C.s 			page 8


 373:Drivers/CMSIS/Include/core_cm4.h **** /**
 374:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Union type to access the Control Registers (CONTROL).
 375:Drivers/CMSIS/Include/core_cm4.h ****  */
 376:Drivers/CMSIS/Include/core_cm4.h **** typedef union
 377:Drivers/CMSIS/Include/core_cm4.h **** {
 378:Drivers/CMSIS/Include/core_cm4.h ****   struct
 379:Drivers/CMSIS/Include/core_cm4.h ****   {
 380:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t nPRIV:1;                    /*!< bit:      0  Execution privilege in Thread mode */
 381:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used */
 382:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t FPCA:1;                     /*!< bit:      2  FP extension active flag */
 383:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved0:29;              /*!< bit:  3..31  Reserved */
 384:Drivers/CMSIS/Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 385:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 386:Drivers/CMSIS/Include/core_cm4.h **** } CONTROL_Type;
 387:Drivers/CMSIS/Include/core_cm4.h **** 
 388:Drivers/CMSIS/Include/core_cm4.h **** /* CONTROL Register Definitions */
 389:Drivers/CMSIS/Include/core_cm4.h **** #define CONTROL_FPCA_Pos                    2U                                            /*!< CONT
 390:Drivers/CMSIS/Include/core_cm4.h **** #define CONTROL_FPCA_Msk                   (1UL << CONTROL_FPCA_Pos)                      /*!< CONT
 391:Drivers/CMSIS/Include/core_cm4.h **** 
 392:Drivers/CMSIS/Include/core_cm4.h **** #define CONTROL_SPSEL_Pos                   1U                                            /*!< CONT
 393:Drivers/CMSIS/Include/core_cm4.h **** #define CONTROL_SPSEL_Msk                  (1UL << CONTROL_SPSEL_Pos)                     /*!< CONT
 394:Drivers/CMSIS/Include/core_cm4.h **** 
 395:Drivers/CMSIS/Include/core_cm4.h **** #define CONTROL_nPRIV_Pos                   0U                                            /*!< CONT
 396:Drivers/CMSIS/Include/core_cm4.h **** #define CONTROL_nPRIV_Msk                  (1UL /*<< CONTROL_nPRIV_Pos*/)                 /*!< CONT
 397:Drivers/CMSIS/Include/core_cm4.h **** 
 398:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_CORE */
 399:Drivers/CMSIS/Include/core_cm4.h **** 
 400:Drivers/CMSIS/Include/core_cm4.h **** 
 401:Drivers/CMSIS/Include/core_cm4.h **** /**
 402:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup    CMSIS_core_register
 403:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 404:Drivers/CMSIS/Include/core_cm4.h ****   \brief      Type definitions for the NVIC Registers
 405:Drivers/CMSIS/Include/core_cm4.h ****   @{
 406:Drivers/CMSIS/Include/core_cm4.h ****  */
 407:Drivers/CMSIS/Include/core_cm4.h **** 
 408:Drivers/CMSIS/Include/core_cm4.h **** /**
 409:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 410:Drivers/CMSIS/Include/core_cm4.h ****  */
 411:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
 412:Drivers/CMSIS/Include/core_cm4.h **** {
 413:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ISER[8U];               /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register */
 414:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[24U];
 415:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ICER[8U];               /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 416:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED1[24U];
 417:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ISPR[8U];               /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register *
 418:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED2[24U];
 419:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ICPR[8U];               /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 420:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED3[24U];
 421:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t IABR[8U];               /*!< Offset: 0x200 (R/W)  Interrupt Active bit Register */
 422:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED4[56U];
 423:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint8_t  IP[240U];               /*!< Offset: 0x300 (R/W)  Interrupt Priority Register (8Bi
 424:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED5[644U];
 425:Drivers/CMSIS/Include/core_cm4.h ****   __OM  uint32_t STIR;                   /*!< Offset: 0xE00 ( /W)  Software Trigger Interrupt Regis
 426:Drivers/CMSIS/Include/core_cm4.h **** }  NVIC_Type;
 427:Drivers/CMSIS/Include/core_cm4.h **** 
 428:Drivers/CMSIS/Include/core_cm4.h **** /* Software Triggered Interrupt Register Definitions */
 429:Drivers/CMSIS/Include/core_cm4.h **** #define NVIC_STIR_INTID_Pos                 0U                                         /*!< STIR: I
ARM GAS  /tmp/ccyRSI2C.s 			page 9


 430:Drivers/CMSIS/Include/core_cm4.h **** #define NVIC_STIR_INTID_Msk                (0x1FFUL /*<< NVIC_STIR_INTID_Pos*/)        /*!< STIR: I
 431:Drivers/CMSIS/Include/core_cm4.h **** 
 432:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_NVIC */
 433:Drivers/CMSIS/Include/core_cm4.h **** 
 434:Drivers/CMSIS/Include/core_cm4.h **** 
 435:Drivers/CMSIS/Include/core_cm4.h **** /**
 436:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 437:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_SCB     System Control Block (SCB)
 438:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the System Control Block Registers
 439:Drivers/CMSIS/Include/core_cm4.h ****   @{
 440:Drivers/CMSIS/Include/core_cm4.h ****  */
 441:Drivers/CMSIS/Include/core_cm4.h **** 
 442:Drivers/CMSIS/Include/core_cm4.h **** /**
 443:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the System Control Block (SCB).
 444:Drivers/CMSIS/Include/core_cm4.h ****  */
 445:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
 446:Drivers/CMSIS/Include/core_cm4.h **** {
 447:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t CPUID;                  /*!< Offset: 0x000 (R/ )  CPUID Base Register */
 448:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ICSR;                   /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 449:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t VTOR;                   /*!< Offset: 0x008 (R/W)  Vector Table Offset Register */
 450:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t AIRCR;                  /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 451:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t SCR;                    /*!< Offset: 0x010 (R/W)  System Control Register */
 452:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CCR;                    /*!< Offset: 0x014 (R/W)  Configuration Control Register *
 453:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint8_t  SHP[12U];               /*!< Offset: 0x018 (R/W)  System Handlers Priority Registe
 454:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t SHCSR;                  /*!< Offset: 0x024 (R/W)  System Handler Control and State
 455:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CFSR;                   /*!< Offset: 0x028 (R/W)  Configurable Fault Status Regist
 456:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t HFSR;                   /*!< Offset: 0x02C (R/W)  HardFault Status Register */
 457:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t DFSR;                   /*!< Offset: 0x030 (R/W)  Debug Fault Status Register */
 458:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t MMFAR;                  /*!< Offset: 0x034 (R/W)  MemManage Fault Address Register
 459:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t BFAR;                   /*!< Offset: 0x038 (R/W)  BusFault Address Register */
 460:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t AFSR;                   /*!< Offset: 0x03C (R/W)  Auxiliary Fault Status Register 
 461:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PFR[2U];                /*!< Offset: 0x040 (R/ )  Processor Feature Register */
 462:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t DFR;                    /*!< Offset: 0x048 (R/ )  Debug Feature Register */
 463:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t ADR;                    /*!< Offset: 0x04C (R/ )  Auxiliary Feature Register */
 464:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t MMFR[4U];               /*!< Offset: 0x050 (R/ )  Memory Model Feature Register */
 465:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t ISAR[5U];               /*!< Offset: 0x060 (R/ )  Instruction Set Attributes Regis
 466:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[5U];
 467:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CPACR;                  /*!< Offset: 0x088 (R/W)  Coprocessor Access Control Regis
 468:Drivers/CMSIS/Include/core_cm4.h **** } SCB_Type;
 469:Drivers/CMSIS/Include/core_cm4.h **** 
 470:Drivers/CMSIS/Include/core_cm4.h **** /* SCB CPUID Register Definitions */
 471:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24U                                            /*!< SCB 
 472:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 473:Drivers/CMSIS/Include/core_cm4.h **** 
 474:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_VARIANT_Pos              20U                                            /*!< SCB 
 475:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 476:Drivers/CMSIS/Include/core_cm4.h **** 
 477:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16U                                            /*!< SCB 
 478:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 479:Drivers/CMSIS/Include/core_cm4.h **** 
 480:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_PARTNO_Pos                4U                                            /*!< SCB 
 481:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 482:Drivers/CMSIS/Include/core_cm4.h **** 
 483:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_REVISION_Pos              0U                                            /*!< SCB 
 484:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL /*<< SCB_CPUID_REVISION_Pos*/)          /*!< SCB 
 485:Drivers/CMSIS/Include/core_cm4.h **** 
 486:Drivers/CMSIS/Include/core_cm4.h **** /* SCB Interrupt Control State Register Definitions */
ARM GAS  /tmp/ccyRSI2C.s 			page 10


 487:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Pos            31U                                            /*!< SCB 
 488:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 489:Drivers/CMSIS/Include/core_cm4.h **** 
 490:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSVSET_Pos             28U                                            /*!< SCB 
 491:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 492:Drivers/CMSIS/Include/core_cm4.h **** 
 493:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Pos             27U                                            /*!< SCB 
 494:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 495:Drivers/CMSIS/Include/core_cm4.h **** 
 496:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSTSET_Pos             26U                                            /*!< SCB 
 497:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 498:Drivers/CMSIS/Include/core_cm4.h **** 
 499:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Pos             25U                                            /*!< SCB 
 500:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 501:Drivers/CMSIS/Include/core_cm4.h **** 
 502:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23U                                            /*!< SCB 
 503:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 504:Drivers/CMSIS/Include/core_cm4.h **** 
 505:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_ISRPENDING_Pos            22U                                            /*!< SCB 
 506:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 507:Drivers/CMSIS/Include/core_cm4.h **** 
 508:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_VECTPENDING_Pos           12U                                            /*!< SCB 
 509:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 510:Drivers/CMSIS/Include/core_cm4.h **** 
 511:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_RETTOBASE_Pos             11U                                            /*!< SCB 
 512:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_RETTOBASE_Msk             (1UL << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 513:Drivers/CMSIS/Include/core_cm4.h **** 
 514:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Pos             0U                                            /*!< SCB 
 515:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL /*<< SCB_ICSR_VECTACTIVE_Pos*/)       /*!< SCB 
 516:Drivers/CMSIS/Include/core_cm4.h **** 
 517:Drivers/CMSIS/Include/core_cm4.h **** /* SCB Vector Table Offset Register Definitions */
 518:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_VTOR_TBLOFF_Pos                 7U                                            /*!< SCB 
 519:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_VTOR_TBLOFF_Msk                (0x1FFFFFFUL << SCB_VTOR_TBLOFF_Pos)           /*!< SCB 
 520:Drivers/CMSIS/Include/core_cm4.h **** 
 521:Drivers/CMSIS/Include/core_cm4.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 522:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTKEY_Pos              16U                                            /*!< SCB 
 523:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 524:Drivers/CMSIS/Include/core_cm4.h **** 
 525:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16U                                            /*!< SCB 
 526:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 527:Drivers/CMSIS/Include/core_cm4.h **** 
 528:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Pos            15U                                            /*!< SCB 
 529:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 530:Drivers/CMSIS/Include/core_cm4.h **** 
 531:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Pos              8U                                            /*!< SCB 
 532:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7UL << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 533:Drivers/CMSIS/Include/core_cm4.h **** 
 534:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2U                                            /*!< SCB 
 535:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 536:Drivers/CMSIS/Include/core_cm4.h **** 
 537:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1U                                            /*!< SCB 
 538:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 539:Drivers/CMSIS/Include/core_cm4.h **** 
 540:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTRESET_Pos             0U                                            /*!< SCB 
 541:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTRESET_Msk            (1UL /*<< SCB_AIRCR_VECTRESET_Pos*/)           /*!< SCB 
 542:Drivers/CMSIS/Include/core_cm4.h **** 
 543:Drivers/CMSIS/Include/core_cm4.h **** /* SCB System Control Register Definitions */
ARM GAS  /tmp/ccyRSI2C.s 			page 11


 544:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SEVONPEND_Pos               4U                                            /*!< SCB 
 545:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 546:Drivers/CMSIS/Include/core_cm4.h **** 
 547:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Pos               2U                                            /*!< SCB 
 548:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 549:Drivers/CMSIS/Include/core_cm4.h **** 
 550:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1U                                            /*!< SCB 
 551:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 552:Drivers/CMSIS/Include/core_cm4.h **** 
 553:Drivers/CMSIS/Include/core_cm4.h **** /* SCB Configuration Control Register Definitions */
 554:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_STKALIGN_Pos                9U                                            /*!< SCB 
 555:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 556:Drivers/CMSIS/Include/core_cm4.h **** 
 557:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Pos               8U                                            /*!< SCB 
 558:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1UL << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 559:Drivers/CMSIS/Include/core_cm4.h **** 
 560:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Pos               4U                                            /*!< SCB 
 561:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1UL << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 562:Drivers/CMSIS/Include/core_cm4.h **** 
 563:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3U                                            /*!< SCB 
 564:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 565:Drivers/CMSIS/Include/core_cm4.h **** 
 566:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_USERSETMPEND_Pos            1U                                            /*!< SCB 
 567:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_USERSETMPEND_Msk           (1UL << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 568:Drivers/CMSIS/Include/core_cm4.h **** 
 569:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0U                                            /*!< SCB 
 570:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1UL /*<< SCB_CCR_NONBASETHRDENA_Pos*/)        /*!< SCB 
 571:Drivers/CMSIS/Include/core_cm4.h **** 
 572:Drivers/CMSIS/Include/core_cm4.h **** /* SCB System Handler Control and State Register Definitions */
 573:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18U                                            /*!< SCB 
 574:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1UL << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 575:Drivers/CMSIS/Include/core_cm4.h **** 
 576:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17U                                            /*!< SCB 
 577:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1UL << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 578:Drivers/CMSIS/Include/core_cm4.h **** 
 579:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16U                                            /*!< SCB 
 580:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1UL << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 581:Drivers/CMSIS/Include/core_cm4.h **** 
 582:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15U                                            /*!< SCB 
 583:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 584:Drivers/CMSIS/Include/core_cm4.h **** 
 585:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14U                                            /*!< SCB 
 586:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1UL << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 587:Drivers/CMSIS/Include/core_cm4.h **** 
 588:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13U                                            /*!< SCB 
 589:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1UL << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 590:Drivers/CMSIS/Include/core_cm4.h **** 
 591:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12U                                            /*!< SCB 
 592:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1UL << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 593:Drivers/CMSIS/Include/core_cm4.h **** 
 594:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11U                                            /*!< SCB 
 595:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1UL << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 596:Drivers/CMSIS/Include/core_cm4.h **** 
 597:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Pos            10U                                            /*!< SCB 
 598:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1UL << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 599:Drivers/CMSIS/Include/core_cm4.h **** 
 600:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MONITORACT_Pos            8U                                            /*!< SCB 
ARM GAS  /tmp/ccyRSI2C.s 			page 12


 601:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MONITORACT_Msk           (1UL << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 602:Drivers/CMSIS/Include/core_cm4.h **** 
 603:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Pos             7U                                            /*!< SCB 
 604:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1UL << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 605:Drivers/CMSIS/Include/core_cm4.h **** 
 606:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3U                                            /*!< SCB 
 607:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1UL << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 608:Drivers/CMSIS/Include/core_cm4.h **** 
 609:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1U                                            /*!< SCB 
 610:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1UL << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 611:Drivers/CMSIS/Include/core_cm4.h **** 
 612:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0U                                            /*!< SCB 
 613:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1UL /*<< SCB_SHCSR_MEMFAULTACT_Pos*/)         /*!< SCB 
 614:Drivers/CMSIS/Include/core_cm4.h **** 
 615:Drivers/CMSIS/Include/core_cm4.h **** /* SCB Configurable Fault Status Register Definitions */
 616:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Pos            16U                                            /*!< SCB 
 617:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFUL << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 618:Drivers/CMSIS/Include/core_cm4.h **** 
 619:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8U                                            /*!< SCB 
 620:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFUL << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 621:Drivers/CMSIS/Include/core_cm4.h **** 
 622:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0U                                            /*!< SCB 
 623:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFUL /*<< SCB_CFSR_MEMFAULTSR_Pos*/)        /*!< SCB 
 624:Drivers/CMSIS/Include/core_cm4.h **** 
 625:Drivers/CMSIS/Include/core_cm4.h **** /* MemManage Fault Status Register (part of SCB Configurable Fault Status Register) */
 626:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MMARVALID_Pos             (SCB_CFSR_MEMFAULTSR_Pos + 7U)                 /*!< SCB 
 627:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MMARVALID_Msk             (1UL << SCB_CFSR_MMARVALID_Pos)                /*!< SCB 
 628:Drivers/CMSIS/Include/core_cm4.h **** 
 629:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MLSPERR_Pos               (SCB_CFSR_MEMFAULTSR_Pos + 5U)                 /*!< SCB 
 630:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MLSPERR_Msk               (1UL << SCB_CFSR_MLSPERR_Pos)                  /*!< SCB 
 631:Drivers/CMSIS/Include/core_cm4.h **** 
 632:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MSTKERR_Pos               (SCB_CFSR_MEMFAULTSR_Pos + 4U)                 /*!< SCB 
 633:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MSTKERR_Msk               (1UL << SCB_CFSR_MSTKERR_Pos)                  /*!< SCB 
 634:Drivers/CMSIS/Include/core_cm4.h **** 
 635:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MUNSTKERR_Pos             (SCB_CFSR_MEMFAULTSR_Pos + 3U)                 /*!< SCB 
 636:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MUNSTKERR_Msk             (1UL << SCB_CFSR_MUNSTKERR_Pos)                /*!< SCB 
 637:Drivers/CMSIS/Include/core_cm4.h **** 
 638:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_DACCVIOL_Pos              (SCB_CFSR_MEMFAULTSR_Pos + 1U)                 /*!< SCB 
 639:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_DACCVIOL_Msk              (1UL << SCB_CFSR_DACCVIOL_Pos)                 /*!< SCB 
 640:Drivers/CMSIS/Include/core_cm4.h **** 
 641:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_IACCVIOL_Pos              (SCB_CFSR_MEMFAULTSR_Pos + 0U)                 /*!< SCB 
 642:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_IACCVIOL_Msk              (1UL /*<< SCB_CFSR_IACCVIOL_Pos*/)             /*!< SCB 
 643:Drivers/CMSIS/Include/core_cm4.h **** 
 644:Drivers/CMSIS/Include/core_cm4.h **** /* BusFault Status Register (part of SCB Configurable Fault Status Register) */
 645:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_BFARVALID_Pos            (SCB_CFSR_BUSFAULTSR_Pos + 7U)                  /*!< SCB 
 646:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_BFARVALID_Msk            (1UL << SCB_CFSR_BFARVALID_Pos)                 /*!< SCB 
 647:Drivers/CMSIS/Include/core_cm4.h **** 
 648:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_LSPERR_Pos               (SCB_CFSR_BUSFAULTSR_Pos + 5U)                  /*!< SCB 
 649:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_LSPERR_Msk               (1UL << SCB_CFSR_LSPERR_Pos)                    /*!< SCB 
 650:Drivers/CMSIS/Include/core_cm4.h **** 
 651:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_STKERR_Pos               (SCB_CFSR_BUSFAULTSR_Pos + 4U)                  /*!< SCB 
 652:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_STKERR_Msk               (1UL << SCB_CFSR_STKERR_Pos)                    /*!< SCB 
 653:Drivers/CMSIS/Include/core_cm4.h **** 
 654:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_UNSTKERR_Pos             (SCB_CFSR_BUSFAULTSR_Pos + 3U)                  /*!< SCB 
 655:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_UNSTKERR_Msk             (1UL << SCB_CFSR_UNSTKERR_Pos)                  /*!< SCB 
 656:Drivers/CMSIS/Include/core_cm4.h **** 
 657:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_IMPRECISERR_Pos          (SCB_CFSR_BUSFAULTSR_Pos + 2U)                  /*!< SCB 
ARM GAS  /tmp/ccyRSI2C.s 			page 13


 658:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_IMPRECISERR_Msk          (1UL << SCB_CFSR_IMPRECISERR_Pos)               /*!< SCB 
 659:Drivers/CMSIS/Include/core_cm4.h **** 
 660:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_PRECISERR_Pos            (SCB_CFSR_BUSFAULTSR_Pos + 1U)                  /*!< SCB 
 661:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_PRECISERR_Msk            (1UL << SCB_CFSR_PRECISERR_Pos)                 /*!< SCB 
 662:Drivers/CMSIS/Include/core_cm4.h **** 
 663:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_IBUSERR_Pos              (SCB_CFSR_BUSFAULTSR_Pos + 0U)                  /*!< SCB 
 664:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_IBUSERR_Msk              (1UL << SCB_CFSR_IBUSERR_Pos)                   /*!< SCB 
 665:Drivers/CMSIS/Include/core_cm4.h **** 
 666:Drivers/CMSIS/Include/core_cm4.h **** /* UsageFault Status Register (part of SCB Configurable Fault Status Register) */
 667:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_DIVBYZERO_Pos            (SCB_CFSR_USGFAULTSR_Pos + 9U)                  /*!< SCB 
 668:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_DIVBYZERO_Msk            (1UL << SCB_CFSR_DIVBYZERO_Pos)                 /*!< SCB 
 669:Drivers/CMSIS/Include/core_cm4.h **** 
 670:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_UNALIGNED_Pos            (SCB_CFSR_USGFAULTSR_Pos + 8U)                  /*!< SCB 
 671:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_UNALIGNED_Msk            (1UL << SCB_CFSR_UNALIGNED_Pos)                 /*!< SCB 
 672:Drivers/CMSIS/Include/core_cm4.h **** 
 673:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_NOCP_Pos                 (SCB_CFSR_USGFAULTSR_Pos + 3U)                  /*!< SCB 
 674:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_NOCP_Msk                 (1UL << SCB_CFSR_NOCP_Pos)                      /*!< SCB 
 675:Drivers/CMSIS/Include/core_cm4.h **** 
 676:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_INVPC_Pos                (SCB_CFSR_USGFAULTSR_Pos + 2U)                  /*!< SCB 
 677:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_INVPC_Msk                (1UL << SCB_CFSR_INVPC_Pos)                     /*!< SCB 
 678:Drivers/CMSIS/Include/core_cm4.h **** 
 679:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_INVSTATE_Pos             (SCB_CFSR_USGFAULTSR_Pos + 1U)                  /*!< SCB 
 680:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_INVSTATE_Msk             (1UL << SCB_CFSR_INVSTATE_Pos)                  /*!< SCB 
 681:Drivers/CMSIS/Include/core_cm4.h **** 
 682:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_UNDEFINSTR_Pos           (SCB_CFSR_USGFAULTSR_Pos + 0U)                  /*!< SCB 
 683:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_UNDEFINSTR_Msk           (1UL << SCB_CFSR_UNDEFINSTR_Pos)                /*!< SCB 
 684:Drivers/CMSIS/Include/core_cm4.h **** 
 685:Drivers/CMSIS/Include/core_cm4.h **** /* SCB Hard Fault Status Register Definitions */
 686:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Pos              31U                                            /*!< SCB 
 687:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1UL << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 688:Drivers/CMSIS/Include/core_cm4.h **** 
 689:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_FORCED_Pos                30U                                            /*!< SCB 
 690:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_FORCED_Msk                (1UL << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 691:Drivers/CMSIS/Include/core_cm4.h **** 
 692:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_VECTTBL_Pos                1U                                            /*!< SCB 
 693:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_VECTTBL_Msk               (1UL << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 694:Drivers/CMSIS/Include/core_cm4.h **** 
 695:Drivers/CMSIS/Include/core_cm4.h **** /* SCB Debug Fault Status Register Definitions */
 696:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_EXTERNAL_Pos               4U                                            /*!< SCB 
 697:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_EXTERNAL_Msk              (1UL << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 698:Drivers/CMSIS/Include/core_cm4.h **** 
 699:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_VCATCH_Pos                 3U                                            /*!< SCB 
 700:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_VCATCH_Msk                (1UL << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 701:Drivers/CMSIS/Include/core_cm4.h **** 
 702:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_DWTTRAP_Pos                2U                                            /*!< SCB 
 703:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_DWTTRAP_Msk               (1UL << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 704:Drivers/CMSIS/Include/core_cm4.h **** 
 705:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_BKPT_Pos                   1U                                            /*!< SCB 
 706:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_BKPT_Msk                  (1UL << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 707:Drivers/CMSIS/Include/core_cm4.h **** 
 708:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_HALTED_Pos                 0U                                            /*!< SCB 
 709:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_HALTED_Msk                (1UL /*<< SCB_DFSR_HALTED_Pos*/)               /*!< SCB 
 710:Drivers/CMSIS/Include/core_cm4.h **** 
 711:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_SCB */
 712:Drivers/CMSIS/Include/core_cm4.h **** 
 713:Drivers/CMSIS/Include/core_cm4.h **** 
 714:Drivers/CMSIS/Include/core_cm4.h **** /**
ARM GAS  /tmp/ccyRSI2C.s 			page 14


 715:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 716:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_SCnSCB System Controls not in SCB (SCnSCB)
 717:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the System Control and ID Register not in the SCB
 718:Drivers/CMSIS/Include/core_cm4.h ****   @{
 719:Drivers/CMSIS/Include/core_cm4.h ****  */
 720:Drivers/CMSIS/Include/core_cm4.h **** 
 721:Drivers/CMSIS/Include/core_cm4.h **** /**
 722:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the System Control and ID Register not in the SCB.
 723:Drivers/CMSIS/Include/core_cm4.h ****  */
 724:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
 725:Drivers/CMSIS/Include/core_cm4.h **** {
 726:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[1U];
 727:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t ICTR;                   /*!< Offset: 0x004 (R/ )  Interrupt Controller Type Regist
 728:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ACTLR;                  /*!< Offset: 0x008 (R/W)  Auxiliary Control Register */
 729:Drivers/CMSIS/Include/core_cm4.h **** } SCnSCB_Type;
 730:Drivers/CMSIS/Include/core_cm4.h **** 
 731:Drivers/CMSIS/Include/core_cm4.h **** /* Interrupt Controller Type Register Definitions */
 732:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Pos         0U                                         /*!< ICTR: I
 733:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Msk        (0xFUL /*<< SCnSCB_ICTR_INTLINESNUM_Pos*/)  /*!< ICTR: I
 734:Drivers/CMSIS/Include/core_cm4.h **** 
 735:Drivers/CMSIS/Include/core_cm4.h **** /* Auxiliary Control Register Definitions */
 736:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Pos            9U                                         /*!< ACTLR: 
 737:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Msk           (1UL << SCnSCB_ACTLR_DISOOFP_Pos)           /*!< ACTLR: 
 738:Drivers/CMSIS/Include/core_cm4.h **** 
 739:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Pos            8U                                         /*!< ACTLR: 
 740:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Msk           (1UL << SCnSCB_ACTLR_DISFPCA_Pos)           /*!< ACTLR: 
 741:Drivers/CMSIS/Include/core_cm4.h **** 
 742:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Pos            2U                                         /*!< ACTLR: 
 743:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Msk           (1UL << SCnSCB_ACTLR_DISFOLD_Pos)           /*!< ACTLR: 
 744:Drivers/CMSIS/Include/core_cm4.h **** 
 745:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Pos         1U                                         /*!< ACTLR: 
 746:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Msk        (1UL << SCnSCB_ACTLR_DISDEFWBUF_Pos)        /*!< ACTLR: 
 747:Drivers/CMSIS/Include/core_cm4.h **** 
 748:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Pos         0U                                         /*!< ACTLR: 
 749:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Msk        (1UL /*<< SCnSCB_ACTLR_DISMCYCINT_Pos*/)    /*!< ACTLR: 
 750:Drivers/CMSIS/Include/core_cm4.h **** 
 751:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_SCnotSCB */
 752:Drivers/CMSIS/Include/core_cm4.h **** 
 753:Drivers/CMSIS/Include/core_cm4.h **** 
 754:Drivers/CMSIS/Include/core_cm4.h **** /**
 755:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 756:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 757:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the System Timer Registers.
 758:Drivers/CMSIS/Include/core_cm4.h ****   @{
 759:Drivers/CMSIS/Include/core_cm4.h ****  */
 760:Drivers/CMSIS/Include/core_cm4.h **** 
 761:Drivers/CMSIS/Include/core_cm4.h **** /**
 762:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the System Timer (SysTick).
 763:Drivers/CMSIS/Include/core_cm4.h ****  */
 764:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
 765:Drivers/CMSIS/Include/core_cm4.h **** {
 766:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 767:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t LOAD;                   /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register */
 768:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t VAL;                    /*!< Offset: 0x008 (R/W)  SysTick Current Value Register *
 769:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t CALIB;                  /*!< Offset: 0x00C (R/ )  SysTick Calibration Register */
 770:Drivers/CMSIS/Include/core_cm4.h **** } SysTick_Type;
 771:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/ccyRSI2C.s 			page 15


 772:Drivers/CMSIS/Include/core_cm4.h **** /* SysTick Control / Status Register Definitions */
 773:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16U                                            /*!< SysT
 774:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 775:Drivers/CMSIS/Include/core_cm4.h **** 
 776:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2U                                            /*!< SysT
 777:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 778:Drivers/CMSIS/Include/core_cm4.h **** 
 779:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_TICKINT_Pos            1U                                            /*!< SysT
 780:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 781:Drivers/CMSIS/Include/core_cm4.h **** 
 782:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_ENABLE_Pos             0U                                            /*!< SysT
 783:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL /*<< SysTick_CTRL_ENABLE_Pos*/)           /*!< SysT
 784:Drivers/CMSIS/Include/core_cm4.h **** 
 785:Drivers/CMSIS/Include/core_cm4.h **** /* SysTick Reload Register Definitions */
 786:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_LOAD_RELOAD_Pos             0U                                            /*!< SysT
 787:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL /*<< SysTick_LOAD_RELOAD_Pos*/)    /*!< SysT
 788:Drivers/CMSIS/Include/core_cm4.h **** 
 789:Drivers/CMSIS/Include/core_cm4.h **** /* SysTick Current Register Definitions */
 790:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_VAL_CURRENT_Pos             0U                                            /*!< SysT
 791:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL /*<< SysTick_VAL_CURRENT_Pos*/)    /*!< SysT
 792:Drivers/CMSIS/Include/core_cm4.h **** 
 793:Drivers/CMSIS/Include/core_cm4.h **** /* SysTick Calibration Register Definitions */
 794:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_NOREF_Pos            31U                                            /*!< SysT
 795:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 796:Drivers/CMSIS/Include/core_cm4.h **** 
 797:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_SKEW_Pos             30U                                            /*!< SysT
 798:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 799:Drivers/CMSIS/Include/core_cm4.h **** 
 800:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_TENMS_Pos             0U                                            /*!< SysT
 801:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL /*<< SysTick_CALIB_TENMS_Pos*/)    /*!< SysT
 802:Drivers/CMSIS/Include/core_cm4.h **** 
 803:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_SysTick */
 804:Drivers/CMSIS/Include/core_cm4.h **** 
 805:Drivers/CMSIS/Include/core_cm4.h **** 
 806:Drivers/CMSIS/Include/core_cm4.h **** /**
 807:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 808:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_ITM     Instrumentation Trace Macrocell (ITM)
 809:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Instrumentation Trace Macrocell (ITM)
 810:Drivers/CMSIS/Include/core_cm4.h ****   @{
 811:Drivers/CMSIS/Include/core_cm4.h ****  */
 812:Drivers/CMSIS/Include/core_cm4.h **** 
 813:Drivers/CMSIS/Include/core_cm4.h **** /**
 814:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Instrumentation Trace Macrocell Register (ITM).
 815:Drivers/CMSIS/Include/core_cm4.h ****  */
 816:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
 817:Drivers/CMSIS/Include/core_cm4.h **** {
 818:Drivers/CMSIS/Include/core_cm4.h ****   __OM  union
 819:Drivers/CMSIS/Include/core_cm4.h ****   {
 820:Drivers/CMSIS/Include/core_cm4.h ****     __OM  uint8_t    u8;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 8-bit */
 821:Drivers/CMSIS/Include/core_cm4.h ****     __OM  uint16_t   u16;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 16-bit */
 822:Drivers/CMSIS/Include/core_cm4.h ****     __OM  uint32_t   u32;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 32-bit */
 823:Drivers/CMSIS/Include/core_cm4.h ****   }  PORT [32U];                         /*!< Offset: 0x000 ( /W)  ITM Stimulus Port Registers */
 824:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[864U];
 825:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t TER;                    /*!< Offset: 0xE00 (R/W)  ITM Trace Enable Register */
 826:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED1[15U];
 827:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t TPR;                    /*!< Offset: 0xE40 (R/W)  ITM Trace Privilege Register */
 828:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED2[15U];
ARM GAS  /tmp/ccyRSI2C.s 			page 16


 829:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t TCR;                    /*!< Offset: 0xE80 (R/W)  ITM Trace Control Register */
 830:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED3[32U];
 831:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED4[43U];
 832:Drivers/CMSIS/Include/core_cm4.h ****   __OM  uint32_t LAR;                    /*!< Offset: 0xFB0 ( /W)  ITM Lock Access Register */
 833:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t LSR;                    /*!< Offset: 0xFB4 (R/ )  ITM Lock Status Register */
 834:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED5[6U];
 835:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID4;                   /*!< Offset: 0xFD0 (R/ )  ITM Peripheral Identification Re
 836:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID5;                   /*!< Offset: 0xFD4 (R/ )  ITM Peripheral Identification Re
 837:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID6;                   /*!< Offset: 0xFD8 (R/ )  ITM Peripheral Identification Re
 838:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID7;                   /*!< Offset: 0xFDC (R/ )  ITM Peripheral Identification Re
 839:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID0;                   /*!< Offset: 0xFE0 (R/ )  ITM Peripheral Identification Re
 840:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID1;                   /*!< Offset: 0xFE4 (R/ )  ITM Peripheral Identification Re
 841:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID2;                   /*!< Offset: 0xFE8 (R/ )  ITM Peripheral Identification Re
 842:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID3;                   /*!< Offset: 0xFEC (R/ )  ITM Peripheral Identification Re
 843:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t CID0;                   /*!< Offset: 0xFF0 (R/ )  ITM Component  Identification Re
 844:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t CID1;                   /*!< Offset: 0xFF4 (R/ )  ITM Component  Identification Re
 845:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t CID2;                   /*!< Offset: 0xFF8 (R/ )  ITM Component  Identification Re
 846:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t CID3;                   /*!< Offset: 0xFFC (R/ )  ITM Component  Identification Re
 847:Drivers/CMSIS/Include/core_cm4.h **** } ITM_Type;
 848:Drivers/CMSIS/Include/core_cm4.h **** 
 849:Drivers/CMSIS/Include/core_cm4.h **** /* ITM Trace Privilege Register Definitions */
 850:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TPR_PRIVMASK_Pos                0U                                            /*!< ITM 
 851:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFFFFFFFFUL /*<< ITM_TPR_PRIVMASK_Pos*/)     /*!< ITM 
 852:Drivers/CMSIS/Include/core_cm4.h **** 
 853:Drivers/CMSIS/Include/core_cm4.h **** /* ITM Trace Control Register Definitions */
 854:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_BUSY_Pos                   23U                                            /*!< ITM 
 855:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_BUSY_Msk                   (1UL << ITM_TCR_BUSY_Pos)                      /*!< ITM 
 856:Drivers/CMSIS/Include/core_cm4.h **** 
 857:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TraceBusID_Pos             16U                                            /*!< ITM 
 858:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TraceBusID_Msk             (0x7FUL << ITM_TCR_TraceBusID_Pos)             /*!< ITM 
 859:Drivers/CMSIS/Include/core_cm4.h **** 
 860:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_GTSFREQ_Pos                10U                                            /*!< ITM 
 861:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_GTSFREQ_Msk                (3UL << ITM_TCR_GTSFREQ_Pos)                   /*!< ITM 
 862:Drivers/CMSIS/Include/core_cm4.h **** 
 863:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TSPrescale_Pos              8U                                            /*!< ITM 
 864:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TSPrescale_Msk             (3UL << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
 865:Drivers/CMSIS/Include/core_cm4.h **** 
 866:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_SWOENA_Pos                  4U                                            /*!< ITM 
 867:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_SWOENA_Msk                 (1UL << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
 868:Drivers/CMSIS/Include/core_cm4.h **** 
 869:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_DWTENA_Pos                  3U                                            /*!< ITM 
 870:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_DWTENA_Msk                 (1UL << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
 871:Drivers/CMSIS/Include/core_cm4.h **** 
 872:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_SYNCENA_Pos                 2U                                            /*!< ITM 
 873:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_SYNCENA_Msk                (1UL << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
 874:Drivers/CMSIS/Include/core_cm4.h **** 
 875:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TSENA_Pos                   1U                                            /*!< ITM 
 876:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TSENA_Msk                  (1UL << ITM_TCR_TSENA_Pos)                     /*!< ITM 
 877:Drivers/CMSIS/Include/core_cm4.h **** 
 878:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_ITMENA_Pos                  0U                                            /*!< ITM 
 879:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_ITMENA_Msk                 (1UL /*<< ITM_TCR_ITMENA_Pos*/)                /*!< ITM 
 880:Drivers/CMSIS/Include/core_cm4.h **** 
 881:Drivers/CMSIS/Include/core_cm4.h **** /* ITM Lock Status Register Definitions */
 882:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_LSR_ByteAcc_Pos                 2U                                            /*!< ITM 
 883:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_LSR_ByteAcc_Msk                (1UL << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
 884:Drivers/CMSIS/Include/core_cm4.h **** 
 885:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_LSR_Access_Pos                  1U                                            /*!< ITM 
ARM GAS  /tmp/ccyRSI2C.s 			page 17


 886:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_LSR_Access_Msk                 (1UL << ITM_LSR_Access_Pos)                    /*!< ITM 
 887:Drivers/CMSIS/Include/core_cm4.h **** 
 888:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_LSR_Present_Pos                 0U                                            /*!< ITM 
 889:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_LSR_Present_Msk                (1UL /*<< ITM_LSR_Present_Pos*/)               /*!< ITM 
 890:Drivers/CMSIS/Include/core_cm4.h **** 
 891:Drivers/CMSIS/Include/core_cm4.h **** /*@}*/ /* end of group CMSIS_ITM */
 892:Drivers/CMSIS/Include/core_cm4.h **** 
 893:Drivers/CMSIS/Include/core_cm4.h **** 
 894:Drivers/CMSIS/Include/core_cm4.h **** /**
 895:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 896:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_DWT     Data Watchpoint and Trace (DWT)
 897:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Data Watchpoint and Trace (DWT)
 898:Drivers/CMSIS/Include/core_cm4.h ****   @{
 899:Drivers/CMSIS/Include/core_cm4.h ****  */
 900:Drivers/CMSIS/Include/core_cm4.h **** 
 901:Drivers/CMSIS/Include/core_cm4.h **** /**
 902:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Data Watchpoint and Trace Register (DWT).
 903:Drivers/CMSIS/Include/core_cm4.h ****  */
 904:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
 905:Drivers/CMSIS/Include/core_cm4.h **** {
 906:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  Control Register */
 907:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CYCCNT;                 /*!< Offset: 0x004 (R/W)  Cycle Count Register */
 908:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CPICNT;                 /*!< Offset: 0x008 (R/W)  CPI Count Register */
 909:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t EXCCNT;                 /*!< Offset: 0x00C (R/W)  Exception Overhead Count Registe
 910:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t SLEEPCNT;               /*!< Offset: 0x010 (R/W)  Sleep Count Register */
 911:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t LSUCNT;                 /*!< Offset: 0x014 (R/W)  LSU Count Register */
 912:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FOLDCNT;                /*!< Offset: 0x018 (R/W)  Folded-instruction Count Registe
 913:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PCSR;                   /*!< Offset: 0x01C (R/ )  Program Counter Sample Register 
 914:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t COMP0;                  /*!< Offset: 0x020 (R/W)  Comparator Register 0 */
 915:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t MASK0;                  /*!< Offset: 0x024 (R/W)  Mask Register 0 */
 916:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FUNCTION0;              /*!< Offset: 0x028 (R/W)  Function Register 0 */
 917:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[1U];
 918:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t COMP1;                  /*!< Offset: 0x030 (R/W)  Comparator Register 1 */
 919:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t MASK1;                  /*!< Offset: 0x034 (R/W)  Mask Register 1 */
 920:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FUNCTION1;              /*!< Offset: 0x038 (R/W)  Function Register 1 */
 921:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED1[1U];
 922:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t COMP2;                  /*!< Offset: 0x040 (R/W)  Comparator Register 2 */
 923:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t MASK2;                  /*!< Offset: 0x044 (R/W)  Mask Register 2 */
 924:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FUNCTION2;              /*!< Offset: 0x048 (R/W)  Function Register 2 */
 925:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED2[1U];
 926:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t COMP3;                  /*!< Offset: 0x050 (R/W)  Comparator Register 3 */
 927:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t MASK3;                  /*!< Offset: 0x054 (R/W)  Mask Register 3 */
 928:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FUNCTION3;              /*!< Offset: 0x058 (R/W)  Function Register 3 */
 929:Drivers/CMSIS/Include/core_cm4.h **** } DWT_Type;
 930:Drivers/CMSIS/Include/core_cm4.h **** 
 931:Drivers/CMSIS/Include/core_cm4.h **** /* DWT Control Register Definitions */
 932:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NUMCOMP_Pos               28U                                         /*!< DWT CTR
 933:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NUMCOMP_Msk               (0xFUL << DWT_CTRL_NUMCOMP_Pos)             /*!< DWT CTR
 934:Drivers/CMSIS/Include/core_cm4.h **** 
 935:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Pos              27U                                         /*!< DWT CTR
 936:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Msk              (0x1UL << DWT_CTRL_NOTRCPKT_Pos)            /*!< DWT CTR
 937:Drivers/CMSIS/Include/core_cm4.h **** 
 938:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Pos             26U                                         /*!< DWT CTR
 939:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Msk             (0x1UL << DWT_CTRL_NOEXTTRIG_Pos)           /*!< DWT CTR
 940:Drivers/CMSIS/Include/core_cm4.h **** 
 941:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Pos              25U                                         /*!< DWT CTR
 942:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Msk              (0x1UL << DWT_CTRL_NOCYCCNT_Pos)            /*!< DWT CTR
ARM GAS  /tmp/ccyRSI2C.s 			page 18


 943:Drivers/CMSIS/Include/core_cm4.h **** 
 944:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Pos              24U                                         /*!< DWT CTR
 945:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Msk              (0x1UL << DWT_CTRL_NOPRFCNT_Pos)            /*!< DWT CTR
 946:Drivers/CMSIS/Include/core_cm4.h **** 
 947:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Pos             22U                                         /*!< DWT CTR
 948:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Msk             (0x1UL << DWT_CTRL_CYCEVTENA_Pos)           /*!< DWT CTR
 949:Drivers/CMSIS/Include/core_cm4.h **** 
 950:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Pos            21U                                         /*!< DWT CTR
 951:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Msk            (0x1UL << DWT_CTRL_FOLDEVTENA_Pos)          /*!< DWT CTR
 952:Drivers/CMSIS/Include/core_cm4.h **** 
 953:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Pos             20U                                         /*!< DWT CTR
 954:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Msk             (0x1UL << DWT_CTRL_LSUEVTENA_Pos)           /*!< DWT CTR
 955:Drivers/CMSIS/Include/core_cm4.h **** 
 956:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Pos           19U                                         /*!< DWT CTR
 957:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Msk           (0x1UL << DWT_CTRL_SLEEPEVTENA_Pos)         /*!< DWT CTR
 958:Drivers/CMSIS/Include/core_cm4.h **** 
 959:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Pos             18U                                         /*!< DWT CTR
 960:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Msk             (0x1UL << DWT_CTRL_EXCEVTENA_Pos)           /*!< DWT CTR
 961:Drivers/CMSIS/Include/core_cm4.h **** 
 962:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Pos             17U                                         /*!< DWT CTR
 963:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Msk             (0x1UL << DWT_CTRL_CPIEVTENA_Pos)           /*!< DWT CTR
 964:Drivers/CMSIS/Include/core_cm4.h **** 
 965:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Pos             16U                                         /*!< DWT CTR
 966:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Msk             (0x1UL << DWT_CTRL_EXCTRCENA_Pos)           /*!< DWT CTR
 967:Drivers/CMSIS/Include/core_cm4.h **** 
 968:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Pos            12U                                         /*!< DWT CTR
 969:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Msk            (0x1UL << DWT_CTRL_PCSAMPLENA_Pos)          /*!< DWT CTR
 970:Drivers/CMSIS/Include/core_cm4.h **** 
 971:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_SYNCTAP_Pos               10U                                         /*!< DWT CTR
 972:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_SYNCTAP_Msk               (0x3UL << DWT_CTRL_SYNCTAP_Pos)             /*!< DWT CTR
 973:Drivers/CMSIS/Include/core_cm4.h **** 
 974:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCTAP_Pos                 9U                                         /*!< DWT CTR
 975:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCTAP_Msk                (0x1UL << DWT_CTRL_CYCTAP_Pos)              /*!< DWT CTR
 976:Drivers/CMSIS/Include/core_cm4.h **** 
 977:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_POSTINIT_Pos               5U                                         /*!< DWT CTR
 978:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_POSTINIT_Msk              (0xFUL << DWT_CTRL_POSTINIT_Pos)            /*!< DWT CTR
 979:Drivers/CMSIS/Include/core_cm4.h **** 
 980:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_POSTPRESET_Pos             1U                                         /*!< DWT CTR
 981:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_POSTPRESET_Msk            (0xFUL << DWT_CTRL_POSTPRESET_Pos)          /*!< DWT CTR
 982:Drivers/CMSIS/Include/core_cm4.h **** 
 983:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Pos              0U                                         /*!< DWT CTR
 984:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Msk             (0x1UL /*<< DWT_CTRL_CYCCNTENA_Pos*/)       /*!< DWT CTR
 985:Drivers/CMSIS/Include/core_cm4.h **** 
 986:Drivers/CMSIS/Include/core_cm4.h **** /* DWT CPI Count Register Definitions */
 987:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CPICNT_CPICNT_Pos               0U                                         /*!< DWT CPI
 988:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CPICNT_CPICNT_Msk              (0xFFUL /*<< DWT_CPICNT_CPICNT_Pos*/)       /*!< DWT CPI
 989:Drivers/CMSIS/Include/core_cm4.h **** 
 990:Drivers/CMSIS/Include/core_cm4.h **** /* DWT Exception Overhead Count Register Definitions */
 991:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Pos               0U                                         /*!< DWT EXC
 992:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Msk              (0xFFUL /*<< DWT_EXCCNT_EXCCNT_Pos*/)       /*!< DWT EXC
 993:Drivers/CMSIS/Include/core_cm4.h **** 
 994:Drivers/CMSIS/Include/core_cm4.h **** /* DWT Sleep Count Register Definitions */
 995:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Pos           0U                                         /*!< DWT SLE
 996:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Msk          (0xFFUL /*<< DWT_SLEEPCNT_SLEEPCNT_Pos*/)   /*!< DWT SLE
 997:Drivers/CMSIS/Include/core_cm4.h **** 
 998:Drivers/CMSIS/Include/core_cm4.h **** /* DWT LSU Count Register Definitions */
 999:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Pos               0U                                         /*!< DWT LSU
ARM GAS  /tmp/ccyRSI2C.s 			page 19


1000:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Msk              (0xFFUL /*<< DWT_LSUCNT_LSUCNT_Pos*/)       /*!< DWT LSU
1001:Drivers/CMSIS/Include/core_cm4.h **** 
1002:Drivers/CMSIS/Include/core_cm4.h **** /* DWT Folded-instruction Count Register Definitions */
1003:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Pos             0U                                         /*!< DWT FOL
1004:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Msk            (0xFFUL /*<< DWT_FOLDCNT_FOLDCNT_Pos*/)     /*!< DWT FOL
1005:Drivers/CMSIS/Include/core_cm4.h **** 
1006:Drivers/CMSIS/Include/core_cm4.h **** /* DWT Comparator Mask Register Definitions */
1007:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_MASK_MASK_Pos                   0U                                         /*!< DWT MAS
1008:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_MASK_MASK_Msk                  (0x1FUL /*<< DWT_MASK_MASK_Pos*/)           /*!< DWT MAS
1009:Drivers/CMSIS/Include/core_cm4.h **** 
1010:Drivers/CMSIS/Include/core_cm4.h **** /* DWT Comparator Function Register Definitions */
1011:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_MATCHED_Pos           24U                                         /*!< DWT FUN
1012:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_MATCHED_Msk           (0x1UL << DWT_FUNCTION_MATCHED_Pos)         /*!< DWT FUN
1013:Drivers/CMSIS/Include/core_cm4.h **** 
1014:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Pos        16U                                         /*!< DWT FUN
1015:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR1_Pos)      /*!< DWT FUN
1016:Drivers/CMSIS/Include/core_cm4.h **** 
1017:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Pos        12U                                         /*!< DWT FUN
1018:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR0_Pos)      /*!< DWT FUN
1019:Drivers/CMSIS/Include/core_cm4.h **** 
1020:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Pos         10U                                         /*!< DWT FUN
1021:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Msk         (0x3UL << DWT_FUNCTION_DATAVSIZE_Pos)       /*!< DWT FUN
1022:Drivers/CMSIS/Include/core_cm4.h **** 
1023:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Pos            9U                                         /*!< DWT FUN
1024:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Msk           (0x1UL << DWT_FUNCTION_LNK1ENA_Pos)         /*!< DWT FUN
1025:Drivers/CMSIS/Include/core_cm4.h **** 
1026:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Pos         8U                                         /*!< DWT FUN
1027:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Msk        (0x1UL << DWT_FUNCTION_DATAVMATCH_Pos)      /*!< DWT FUN
1028:Drivers/CMSIS/Include/core_cm4.h **** 
1029:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Pos           7U                                         /*!< DWT FUN
1030:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Msk          (0x1UL << DWT_FUNCTION_CYCMATCH_Pos)        /*!< DWT FUN
1031:Drivers/CMSIS/Include/core_cm4.h **** 
1032:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Pos          5U                                         /*!< DWT FUN
1033:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Msk         (0x1UL << DWT_FUNCTION_EMITRANGE_Pos)       /*!< DWT FUN
1034:Drivers/CMSIS/Include/core_cm4.h **** 
1035:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Pos           0U                                         /*!< DWT FUN
1036:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Msk          (0xFUL /*<< DWT_FUNCTION_FUNCTION_Pos*/)    /*!< DWT FUN
1037:Drivers/CMSIS/Include/core_cm4.h **** 
1038:Drivers/CMSIS/Include/core_cm4.h **** /*@}*/ /* end of group CMSIS_DWT */
1039:Drivers/CMSIS/Include/core_cm4.h **** 
1040:Drivers/CMSIS/Include/core_cm4.h **** 
1041:Drivers/CMSIS/Include/core_cm4.h **** /**
1042:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
1043:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_TPI     Trace Port Interface (TPI)
1044:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Trace Port Interface (TPI)
1045:Drivers/CMSIS/Include/core_cm4.h ****   @{
1046:Drivers/CMSIS/Include/core_cm4.h ****  */
1047:Drivers/CMSIS/Include/core_cm4.h **** 
1048:Drivers/CMSIS/Include/core_cm4.h **** /**
1049:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Trace Port Interface Register (TPI).
1050:Drivers/CMSIS/Include/core_cm4.h ****  */
1051:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
1052:Drivers/CMSIS/Include/core_cm4.h **** {
1053:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t SSPSR;                  /*!< Offset: 0x000 (R/ )  Supported Parallel Port Size Reg
1054:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CSPSR;                  /*!< Offset: 0x004 (R/W)  Current Parallel Port Size Regis
1055:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[2U];
1056:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ACPR;                   /*!< Offset: 0x010 (R/W)  Asynchronous Clock Prescaler Reg
ARM GAS  /tmp/ccyRSI2C.s 			page 20


1057:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED1[55U];
1058:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t SPPR;                   /*!< Offset: 0x0F0 (R/W)  Selected Pin Protocol Register *
1059:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED2[131U];
1060:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t FFSR;                   /*!< Offset: 0x300 (R/ )  Formatter and Flush Status Regis
1061:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FFCR;                   /*!< Offset: 0x304 (R/W)  Formatter and Flush Control Regi
1062:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t FSCR;                   /*!< Offset: 0x308 (R/ )  Formatter Synchronization Counte
1063:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED3[759U];
1064:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t TRIGGER;                /*!< Offset: 0xEE8 (R/ )  TRIGGER Register */
1065:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t FIFO0;                  /*!< Offset: 0xEEC (R/ )  Integration ETM Data */
1066:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t ITATBCTR2;              /*!< Offset: 0xEF0 (R/ )  ITATBCTR2 */
1067:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED4[1U];
1068:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t ITATBCTR0;              /*!< Offset: 0xEF8 (R/ )  ITATBCTR0 */
1069:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t FIFO1;                  /*!< Offset: 0xEFC (R/ )  Integration ITM Data */
1070:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ITCTRL;                 /*!< Offset: 0xF00 (R/W)  Integration Mode Control */
1071:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED5[39U];
1072:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CLAIMSET;               /*!< Offset: 0xFA0 (R/W)  Claim tag set */
1073:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CLAIMCLR;               /*!< Offset: 0xFA4 (R/W)  Claim tag clear */
1074:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED7[8U];
1075:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t DEVID;                  /*!< Offset: 0xFC8 (R/ )  TPIU_DEVID */
1076:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t DEVTYPE;                /*!< Offset: 0xFCC (R/ )  TPIU_DEVTYPE */
1077:Drivers/CMSIS/Include/core_cm4.h **** } TPI_Type;
1078:Drivers/CMSIS/Include/core_cm4.h **** 
1079:Drivers/CMSIS/Include/core_cm4.h **** /* TPI Asynchronous Clock Prescaler Register Definitions */
1080:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ACPR_PRESCALER_Pos              0U                                         /*!< TPI ACP
1081:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ACPR_PRESCALER_Msk             (0x1FFFUL /*<< TPI_ACPR_PRESCALER_Pos*/)    /*!< TPI ACP
1082:Drivers/CMSIS/Include/core_cm4.h **** 
1083:Drivers/CMSIS/Include/core_cm4.h **** /* TPI Selected Pin Protocol Register Definitions */
1084:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_SPPR_TXMODE_Pos                 0U                                         /*!< TPI SPP
1085:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_SPPR_TXMODE_Msk                (0x3UL /*<< TPI_SPPR_TXMODE_Pos*/)          /*!< TPI SPP
1086:Drivers/CMSIS/Include/core_cm4.h **** 
1087:Drivers/CMSIS/Include/core_cm4.h **** /* TPI Formatter and Flush Status Register Definitions */
1088:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FtNonStop_Pos              3U                                         /*!< TPI FFS
1089:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FtNonStop_Msk             (0x1UL << TPI_FFSR_FtNonStop_Pos)           /*!< TPI FFS
1090:Drivers/CMSIS/Include/core_cm4.h **** 
1091:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_TCPresent_Pos              2U                                         /*!< TPI FFS
1092:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_TCPresent_Msk             (0x1UL << TPI_FFSR_TCPresent_Pos)           /*!< TPI FFS
1093:Drivers/CMSIS/Include/core_cm4.h **** 
1094:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FtStopped_Pos              1U                                         /*!< TPI FFS
1095:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FtStopped_Msk             (0x1UL << TPI_FFSR_FtStopped_Pos)           /*!< TPI FFS
1096:Drivers/CMSIS/Include/core_cm4.h **** 
1097:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FlInProg_Pos               0U                                         /*!< TPI FFS
1098:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FlInProg_Msk              (0x1UL /*<< TPI_FFSR_FlInProg_Pos*/)        /*!< TPI FFS
1099:Drivers/CMSIS/Include/core_cm4.h **** 
1100:Drivers/CMSIS/Include/core_cm4.h **** /* TPI Formatter and Flush Control Register Definitions */
1101:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFCR_TrigIn_Pos                 8U                                         /*!< TPI FFC
1102:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFCR_TrigIn_Msk                (0x1UL << TPI_FFCR_TrigIn_Pos)              /*!< TPI FFC
1103:Drivers/CMSIS/Include/core_cm4.h **** 
1104:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFCR_EnFCont_Pos                1U                                         /*!< TPI FFC
1105:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFCR_EnFCont_Msk               (0x1UL << TPI_FFCR_EnFCont_Pos)             /*!< TPI FFC
1106:Drivers/CMSIS/Include/core_cm4.h **** 
1107:Drivers/CMSIS/Include/core_cm4.h **** /* TPI TRIGGER Register Definitions */
1108:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Pos             0U                                         /*!< TPI TRI
1109:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Msk            (0x1UL /*<< TPI_TRIGGER_TRIGGER_Pos*/)      /*!< TPI TRI
1110:Drivers/CMSIS/Include/core_cm4.h **** 
1111:Drivers/CMSIS/Include/core_cm4.h **** /* TPI Integration ETM Data Register Definitions (FIFO0) */
1112:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1113:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Msk          (0x1UL << TPI_FIFO0_ITM_ATVALID_Pos)        /*!< TPI FIF
ARM GAS  /tmp/ccyRSI2C.s 			page 21


1114:Drivers/CMSIS/Include/core_cm4.h **** 
1115:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1116:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Msk        (0x3UL << TPI_FIFO0_ITM_bytecount_Pos)      /*!< TPI FIF
1117:Drivers/CMSIS/Include/core_cm4.h **** 
1118:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1119:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Msk          (0x1UL << TPI_FIFO0_ETM_ATVALID_Pos)        /*!< TPI FIF
1120:Drivers/CMSIS/Include/core_cm4.h **** 
1121:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1122:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Msk        (0x3UL << TPI_FIFO0_ETM_bytecount_Pos)      /*!< TPI FIF
1123:Drivers/CMSIS/Include/core_cm4.h **** 
1124:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM2_Pos                 16U                                         /*!< TPI FIF
1125:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM2_Msk                 (0xFFUL << TPI_FIFO0_ETM2_Pos)              /*!< TPI FIF
1126:Drivers/CMSIS/Include/core_cm4.h **** 
1127:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM1_Pos                  8U                                         /*!< TPI FIF
1128:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM1_Msk                 (0xFFUL << TPI_FIFO0_ETM1_Pos)              /*!< TPI FIF
1129:Drivers/CMSIS/Include/core_cm4.h **** 
1130:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM0_Pos                  0U                                         /*!< TPI FIF
1131:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM0_Msk                 (0xFFUL /*<< TPI_FIFO0_ETM0_Pos*/)          /*!< TPI FIF
1132:Drivers/CMSIS/Include/core_cm4.h **** 
1133:Drivers/CMSIS/Include/core_cm4.h **** /* TPI ITATBCTR2 Register Definitions */
1134:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY2_Pos          0U                                         /*!< TPI ITA
1135:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY2_Msk         (0x1UL /*<< TPI_ITATBCTR2_ATREADY2_Pos*/)   /*!< TPI ITA
1136:Drivers/CMSIS/Include/core_cm4.h **** 
1137:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY1_Pos          0U                                         /*!< TPI ITA
1138:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY1_Msk         (0x1UL /*<< TPI_ITATBCTR2_ATREADY1_Pos*/)   /*!< TPI ITA
1139:Drivers/CMSIS/Include/core_cm4.h **** 
1140:Drivers/CMSIS/Include/core_cm4.h **** /* TPI Integration ITM Data Register Definitions (FIFO1) */
1141:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1142:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Msk          (0x1UL << TPI_FIFO1_ITM_ATVALID_Pos)        /*!< TPI FIF
1143:Drivers/CMSIS/Include/core_cm4.h **** 
1144:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1145:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Msk        (0x3UL << TPI_FIFO1_ITM_bytecount_Pos)      /*!< TPI FIF
1146:Drivers/CMSIS/Include/core_cm4.h **** 
1147:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1148:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Msk          (0x1UL << TPI_FIFO1_ETM_ATVALID_Pos)        /*!< TPI FIF
1149:Drivers/CMSIS/Include/core_cm4.h **** 
1150:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1151:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Msk        (0x3UL << TPI_FIFO1_ETM_bytecount_Pos)      /*!< TPI FIF
1152:Drivers/CMSIS/Include/core_cm4.h **** 
1153:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM2_Pos                 16U                                         /*!< TPI FIF
1154:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM2_Msk                 (0xFFUL << TPI_FIFO1_ITM2_Pos)              /*!< TPI FIF
1155:Drivers/CMSIS/Include/core_cm4.h **** 
1156:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM1_Pos                  8U                                         /*!< TPI FIF
1157:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM1_Msk                 (0xFFUL << TPI_FIFO1_ITM1_Pos)              /*!< TPI FIF
1158:Drivers/CMSIS/Include/core_cm4.h **** 
1159:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM0_Pos                  0U                                         /*!< TPI FIF
1160:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM0_Msk                 (0xFFUL /*<< TPI_FIFO1_ITM0_Pos*/)          /*!< TPI FIF
1161:Drivers/CMSIS/Include/core_cm4.h **** 
1162:Drivers/CMSIS/Include/core_cm4.h **** /* TPI ITATBCTR0 Register Definitions */
1163:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY2_Pos          0U                                         /*!< TPI ITA
1164:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY2_Msk         (0x1UL /*<< TPI_ITATBCTR0_ATREADY2_Pos*/)   /*!< TPI ITA
1165:Drivers/CMSIS/Include/core_cm4.h **** 
1166:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY1_Pos          0U                                         /*!< TPI ITA
1167:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY1_Msk         (0x1UL /*<< TPI_ITATBCTR0_ATREADY1_Pos*/)   /*!< TPI ITA
1168:Drivers/CMSIS/Include/core_cm4.h **** 
1169:Drivers/CMSIS/Include/core_cm4.h **** /* TPI Integration Mode Control Register Definitions */
1170:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITCTRL_Mode_Pos                 0U                                         /*!< TPI ITC
ARM GAS  /tmp/ccyRSI2C.s 			page 22


1171:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITCTRL_Mode_Msk                (0x3UL /*<< TPI_ITCTRL_Mode_Pos*/)          /*!< TPI ITC
1172:Drivers/CMSIS/Include/core_cm4.h **** 
1173:Drivers/CMSIS/Include/core_cm4.h **** /* TPI DEVID Register Definitions */
1174:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_NRZVALID_Pos             11U                                         /*!< TPI DEV
1175:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_NRZVALID_Msk             (0x1UL << TPI_DEVID_NRZVALID_Pos)           /*!< TPI DEV
1176:Drivers/CMSIS/Include/core_cm4.h **** 
1177:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_MANCVALID_Pos            10U                                         /*!< TPI DEV
1178:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_MANCVALID_Msk            (0x1UL << TPI_DEVID_MANCVALID_Pos)          /*!< TPI DEV
1179:Drivers/CMSIS/Include/core_cm4.h **** 
1180:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_PTINVALID_Pos             9U                                         /*!< TPI DEV
1181:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_PTINVALID_Msk            (0x1UL << TPI_DEVID_PTINVALID_Pos)          /*!< TPI DEV
1182:Drivers/CMSIS/Include/core_cm4.h **** 
1183:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_MinBufSz_Pos              6U                                         /*!< TPI DEV
1184:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_MinBufSz_Msk             (0x7UL << TPI_DEVID_MinBufSz_Pos)           /*!< TPI DEV
1185:Drivers/CMSIS/Include/core_cm4.h **** 
1186:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_AsynClkIn_Pos             5U                                         /*!< TPI DEV
1187:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_AsynClkIn_Msk            (0x1UL << TPI_DEVID_AsynClkIn_Pos)          /*!< TPI DEV
1188:Drivers/CMSIS/Include/core_cm4.h **** 
1189:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_NrTraceInput_Pos          0U                                         /*!< TPI DEV
1190:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_NrTraceInput_Msk         (0x1FUL /*<< TPI_DEVID_NrTraceInput_Pos*/)  /*!< TPI DEV
1191:Drivers/CMSIS/Include/core_cm4.h **** 
1192:Drivers/CMSIS/Include/core_cm4.h **** /* TPI DEVTYPE Register Definitions */
1193:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVTYPE_SubType_Pos             4U                                         /*!< TPI DEV
1194:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVTYPE_SubType_Msk            (0xFUL /*<< TPI_DEVTYPE_SubType_Pos*/)      /*!< TPI DEV
1195:Drivers/CMSIS/Include/core_cm4.h **** 
1196:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVTYPE_MajorType_Pos           0U                                         /*!< TPI DEV
1197:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVTYPE_MajorType_Msk          (0xFUL << TPI_DEVTYPE_MajorType_Pos)        /*!< TPI DEV
1198:Drivers/CMSIS/Include/core_cm4.h **** 
1199:Drivers/CMSIS/Include/core_cm4.h **** /*@}*/ /* end of group CMSIS_TPI */
1200:Drivers/CMSIS/Include/core_cm4.h **** 
1201:Drivers/CMSIS/Include/core_cm4.h **** 
1202:Drivers/CMSIS/Include/core_cm4.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1203:Drivers/CMSIS/Include/core_cm4.h **** /**
1204:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
1205:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_MPU     Memory Protection Unit (MPU)
1206:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Memory Protection Unit (MPU)
1207:Drivers/CMSIS/Include/core_cm4.h ****   @{
1208:Drivers/CMSIS/Include/core_cm4.h ****  */
1209:Drivers/CMSIS/Include/core_cm4.h **** 
1210:Drivers/CMSIS/Include/core_cm4.h **** /**
1211:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Memory Protection Unit (MPU).
1212:Drivers/CMSIS/Include/core_cm4.h ****  */
1213:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
1214:Drivers/CMSIS/Include/core_cm4.h **** {
1215:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t TYPE;                   /*!< Offset: 0x000 (R/ )  MPU Type Register */
1216:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x004 (R/W)  MPU Control Register */
1217:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RNR;                    /*!< Offset: 0x008 (R/W)  MPU Region RNRber Register */
1218:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RBAR;                   /*!< Offset: 0x00C (R/W)  MPU Region Base Address Register
1219:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RASR;                   /*!< Offset: 0x010 (R/W)  MPU Region Attribute and Size Re
1220:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RBAR_A1;                /*!< Offset: 0x014 (R/W)  MPU Alias 1 Region Base Address 
1221:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RASR_A1;                /*!< Offset: 0x018 (R/W)  MPU Alias 1 Region Attribute and
1222:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RBAR_A2;                /*!< Offset: 0x01C (R/W)  MPU Alias 2 Region Base Address 
1223:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RASR_A2;                /*!< Offset: 0x020 (R/W)  MPU Alias 2 Region Attribute and
1224:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RBAR_A3;                /*!< Offset: 0x024 (R/W)  MPU Alias 3 Region Base Address 
1225:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RASR_A3;                /*!< Offset: 0x028 (R/W)  MPU Alias 3 Region Attribute and
1226:Drivers/CMSIS/Include/core_cm4.h **** } MPU_Type;
1227:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/ccyRSI2C.s 			page 23


1228:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_RALIASES                  4U
1229:Drivers/CMSIS/Include/core_cm4.h **** 
1230:Drivers/CMSIS/Include/core_cm4.h **** /* MPU Type Register Definitions */
1231:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_IREGION_Pos               16U                                            /*!< MPU 
1232:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_IREGION_Msk               (0xFFUL << MPU_TYPE_IREGION_Pos)               /*!< MPU 
1233:Drivers/CMSIS/Include/core_cm4.h **** 
1234:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_DREGION_Pos                8U                                            /*!< MPU 
1235:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_DREGION_Msk               (0xFFUL << MPU_TYPE_DREGION_Pos)               /*!< MPU 
1236:Drivers/CMSIS/Include/core_cm4.h **** 
1237:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_SEPARATE_Pos               0U                                            /*!< MPU 
1238:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_SEPARATE_Msk              (1UL /*<< MPU_TYPE_SEPARATE_Pos*/)             /*!< MPU 
1239:Drivers/CMSIS/Include/core_cm4.h **** 
1240:Drivers/CMSIS/Include/core_cm4.h **** /* MPU Control Register Definitions */
1241:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2U                                            /*!< MPU 
1242:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1UL << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
1243:Drivers/CMSIS/Include/core_cm4.h **** 
1244:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_HFNMIENA_Pos               1U                                            /*!< MPU 
1245:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_HFNMIENA_Msk              (1UL << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
1246:Drivers/CMSIS/Include/core_cm4.h **** 
1247:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_ENABLE_Pos                 0U                                            /*!< MPU 
1248:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_ENABLE_Msk                (1UL /*<< MPU_CTRL_ENABLE_Pos*/)               /*!< MPU 
1249:Drivers/CMSIS/Include/core_cm4.h **** 
1250:Drivers/CMSIS/Include/core_cm4.h **** /* MPU Region Number Register Definitions */
1251:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RNR_REGION_Pos                  0U                                            /*!< MPU 
1252:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RNR_REGION_Msk                 (0xFFUL /*<< MPU_RNR_REGION_Pos*/)             /*!< MPU 
1253:Drivers/CMSIS/Include/core_cm4.h **** 
1254:Drivers/CMSIS/Include/core_cm4.h **** /* MPU Region Base Address Register Definitions */
1255:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_ADDR_Pos                   5U                                            /*!< MPU 
1256:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFUL << MPU_RBAR_ADDR_Pos)             /*!< MPU 
1257:Drivers/CMSIS/Include/core_cm4.h **** 
1258:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_VALID_Pos                  4U                                            /*!< MPU 
1259:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_VALID_Msk                 (1UL << MPU_RBAR_VALID_Pos)                    /*!< MPU 
1260:Drivers/CMSIS/Include/core_cm4.h **** 
1261:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_REGION_Pos                 0U                                            /*!< MPU 
1262:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_REGION_Msk                (0xFUL /*<< MPU_RBAR_REGION_Pos*/)             /*!< MPU 
1263:Drivers/CMSIS/Include/core_cm4.h **** 
1264:Drivers/CMSIS/Include/core_cm4.h **** /* MPU Region Attribute and Size Register Definitions */
1265:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_ATTRS_Pos                 16U                                            /*!< MPU 
1266:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_ATTRS_Msk                 (0xFFFFUL << MPU_RASR_ATTRS_Pos)               /*!< MPU 
1267:Drivers/CMSIS/Include/core_cm4.h **** 
1268:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_XN_Pos                    28U                                            /*!< MPU 
1269:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_XN_Msk                    (1UL << MPU_RASR_XN_Pos)                       /*!< MPU 
1270:Drivers/CMSIS/Include/core_cm4.h **** 
1271:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_AP_Pos                    24U                                            /*!< MPU 
1272:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_AP_Msk                    (0x7UL << MPU_RASR_AP_Pos)                     /*!< MPU 
1273:Drivers/CMSIS/Include/core_cm4.h **** 
1274:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_TEX_Pos                   19U                                            /*!< MPU 
1275:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_TEX_Msk                   (0x7UL << MPU_RASR_TEX_Pos)                    /*!< MPU 
1276:Drivers/CMSIS/Include/core_cm4.h **** 
1277:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_S_Pos                     18U                                            /*!< MPU 
1278:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_S_Msk                     (1UL << MPU_RASR_S_Pos)                        /*!< MPU 
1279:Drivers/CMSIS/Include/core_cm4.h **** 
1280:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_C_Pos                     17U                                            /*!< MPU 
1281:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_C_Msk                     (1UL << MPU_RASR_C_Pos)                        /*!< MPU 
1282:Drivers/CMSIS/Include/core_cm4.h **** 
1283:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_B_Pos                     16U                                            /*!< MPU 
1284:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_B_Msk                     (1UL << MPU_RASR_B_Pos)                        /*!< MPU 
ARM GAS  /tmp/ccyRSI2C.s 			page 24


1285:Drivers/CMSIS/Include/core_cm4.h **** 
1286:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_SRD_Pos                    8U                                            /*!< MPU 
1287:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_SRD_Msk                   (0xFFUL << MPU_RASR_SRD_Pos)                   /*!< MPU 
1288:Drivers/CMSIS/Include/core_cm4.h **** 
1289:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_SIZE_Pos                   1U                                            /*!< MPU 
1290:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_SIZE_Msk                  (0x1FUL << MPU_RASR_SIZE_Pos)                  /*!< MPU 
1291:Drivers/CMSIS/Include/core_cm4.h **** 
1292:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_ENABLE_Pos                 0U                                            /*!< MPU 
1293:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_ENABLE_Msk                (1UL /*<< MPU_RASR_ENABLE_Pos*/)               /*!< MPU 
1294:Drivers/CMSIS/Include/core_cm4.h **** 
1295:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_MPU */
1296:Drivers/CMSIS/Include/core_cm4.h **** #endif /* defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U) */
1297:Drivers/CMSIS/Include/core_cm4.h **** 
1298:Drivers/CMSIS/Include/core_cm4.h **** 
1299:Drivers/CMSIS/Include/core_cm4.h **** /**
1300:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
1301:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_FPU     Floating Point Unit (FPU)
1302:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Floating Point Unit (FPU)
1303:Drivers/CMSIS/Include/core_cm4.h ****   @{
1304:Drivers/CMSIS/Include/core_cm4.h ****  */
1305:Drivers/CMSIS/Include/core_cm4.h **** 
1306:Drivers/CMSIS/Include/core_cm4.h **** /**
1307:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Floating Point Unit (FPU).
1308:Drivers/CMSIS/Include/core_cm4.h ****  */
1309:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
1310:Drivers/CMSIS/Include/core_cm4.h **** {
1311:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[1U];
1312:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FPCCR;                  /*!< Offset: 0x004 (R/W)  Floating-Point Context Control R
1313:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FPCAR;                  /*!< Offset: 0x008 (R/W)  Floating-Point Context Address R
1314:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FPDSCR;                 /*!< Offset: 0x00C (R/W)  Floating-Point Default Status Co
1315:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t MVFR0;                  /*!< Offset: 0x010 (R/ )  Media and FP Feature Register 0 
1316:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t MVFR1;                  /*!< Offset: 0x014 (R/ )  Media and FP Feature Register 1 
1317:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t MVFR2;                  /*!< Offset: 0x018 (R/ )  Media and FP Feature Register 2 
1318:Drivers/CMSIS/Include/core_cm4.h **** } FPU_Type;
1319:Drivers/CMSIS/Include/core_cm4.h **** 
1320:Drivers/CMSIS/Include/core_cm4.h **** /* Floating-Point Context Control Register Definitions */
1321:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_ASPEN_Pos                31U                                            /*!< FPCC
1322:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_ASPEN_Msk                (1UL << FPU_FPCCR_ASPEN_Pos)                   /*!< FPCC
1323:Drivers/CMSIS/Include/core_cm4.h **** 
1324:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_LSPEN_Pos                30U                                            /*!< FPCC
1325:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_LSPEN_Msk                (1UL << FPU_FPCCR_LSPEN_Pos)                   /*!< FPCC
1326:Drivers/CMSIS/Include/core_cm4.h **** 
1327:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_MONRDY_Pos                8U                                            /*!< FPCC
1328:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_MONRDY_Msk               (1UL << FPU_FPCCR_MONRDY_Pos)                  /*!< FPCC
1329:Drivers/CMSIS/Include/core_cm4.h **** 
1330:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_BFRDY_Pos                 6U                                            /*!< FPCC
1331:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_BFRDY_Msk                (1UL << FPU_FPCCR_BFRDY_Pos)                   /*!< FPCC
1332:Drivers/CMSIS/Include/core_cm4.h **** 
1333:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_MMRDY_Pos                 5U                                            /*!< FPCC
1334:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_MMRDY_Msk                (1UL << FPU_FPCCR_MMRDY_Pos)                   /*!< FPCC
1335:Drivers/CMSIS/Include/core_cm4.h **** 
1336:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_HFRDY_Pos                 4U                                            /*!< FPCC
1337:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_HFRDY_Msk                (1UL << FPU_FPCCR_HFRDY_Pos)                   /*!< FPCC
1338:Drivers/CMSIS/Include/core_cm4.h **** 
1339:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_THREAD_Pos                3U                                            /*!< FPCC
1340:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_THREAD_Msk               (1UL << FPU_FPCCR_THREAD_Pos)                  /*!< FPCC
1341:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/ccyRSI2C.s 			page 25


1342:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_USER_Pos                  1U                                            /*!< FPCC
1343:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_USER_Msk                 (1UL << FPU_FPCCR_USER_Pos)                    /*!< FPCC
1344:Drivers/CMSIS/Include/core_cm4.h **** 
1345:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_LSPACT_Pos                0U                                            /*!< FPCC
1346:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_LSPACT_Msk               (1UL /*<< FPU_FPCCR_LSPACT_Pos*/)              /*!< FPCC
1347:Drivers/CMSIS/Include/core_cm4.h **** 
1348:Drivers/CMSIS/Include/core_cm4.h **** /* Floating-Point Context Address Register Definitions */
1349:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCAR_ADDRESS_Pos               3U                                            /*!< FPCA
1350:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCAR_ADDRESS_Msk              (0x1FFFFFFFUL << FPU_FPCAR_ADDRESS_Pos)        /*!< FPCA
1351:Drivers/CMSIS/Include/core_cm4.h **** 
1352:Drivers/CMSIS/Include/core_cm4.h **** /* Floating-Point Default Status Control Register Definitions */
1353:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_AHP_Pos                 26U                                            /*!< FPDS
1354:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_AHP_Msk                 (1UL << FPU_FPDSCR_AHP_Pos)                    /*!< FPDS
1355:Drivers/CMSIS/Include/core_cm4.h **** 
1356:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_DN_Pos                  25U                                            /*!< FPDS
1357:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_DN_Msk                  (1UL << FPU_FPDSCR_DN_Pos)                     /*!< FPDS
1358:Drivers/CMSIS/Include/core_cm4.h **** 
1359:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_FZ_Pos                  24U                                            /*!< FPDS
1360:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_FZ_Msk                  (1UL << FPU_FPDSCR_FZ_Pos)                     /*!< FPDS
1361:Drivers/CMSIS/Include/core_cm4.h **** 
1362:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_RMode_Pos               22U                                            /*!< FPDS
1363:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_RMode_Msk               (3UL << FPU_FPDSCR_RMode_Pos)                  /*!< FPDS
1364:Drivers/CMSIS/Include/core_cm4.h **** 
1365:Drivers/CMSIS/Include/core_cm4.h **** /* Media and FP Feature Register 0 Definitions */
1366:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Pos    28U                                            /*!< MVFR
1367:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Msk    (0xFUL << FPU_MVFR0_FP_rounding_modes_Pos)     /*!< MVFR
1368:Drivers/CMSIS/Include/core_cm4.h **** 
1369:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Short_vectors_Pos        24U                                            /*!< MVFR
1370:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Short_vectors_Msk        (0xFUL << FPU_MVFR0_Short_vectors_Pos)         /*!< MVFR
1371:Drivers/CMSIS/Include/core_cm4.h **** 
1372:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Square_root_Pos          20U                                            /*!< MVFR
1373:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Square_root_Msk          (0xFUL << FPU_MVFR0_Square_root_Pos)           /*!< MVFR
1374:Drivers/CMSIS/Include/core_cm4.h **** 
1375:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Divide_Pos               16U                                            /*!< MVFR
1376:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Divide_Msk               (0xFUL << FPU_MVFR0_Divide_Pos)                /*!< MVFR
1377:Drivers/CMSIS/Include/core_cm4.h **** 
1378:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Pos    12U                                            /*!< MVFR
1379:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Msk    (0xFUL << FPU_MVFR0_FP_excep_trapping_Pos)     /*!< MVFR
1380:Drivers/CMSIS/Include/core_cm4.h **** 
1381:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Double_precision_Pos      8U                                            /*!< MVFR
1382:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Double_precision_Msk     (0xFUL << FPU_MVFR0_Double_precision_Pos)      /*!< MVFR
1383:Drivers/CMSIS/Include/core_cm4.h **** 
1384:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Single_precision_Pos      4U                                            /*!< MVFR
1385:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Single_precision_Msk     (0xFUL << FPU_MVFR0_Single_precision_Pos)      /*!< MVFR
1386:Drivers/CMSIS/Include/core_cm4.h **** 
1387:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Pos      0U                                            /*!< MVFR
1388:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Msk     (0xFUL /*<< FPU_MVFR0_A_SIMD_registers_Pos*/)  /*!< MVFR
1389:Drivers/CMSIS/Include/core_cm4.h **** 
1390:Drivers/CMSIS/Include/core_cm4.h **** /* Media and FP Feature Register 1 Definitions */
1391:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Pos         28U                                            /*!< MVFR
1392:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Msk         (0xFUL << FPU_MVFR1_FP_fused_MAC_Pos)          /*!< MVFR
1393:Drivers/CMSIS/Include/core_cm4.h **** 
1394:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Pos              24U                                            /*!< MVFR
1395:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Msk              (0xFUL << FPU_MVFR1_FP_HPFP_Pos)               /*!< MVFR
1396:Drivers/CMSIS/Include/core_cm4.h **** 
1397:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Pos            4U                                            /*!< MVFR
1398:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Msk           (0xFUL << FPU_MVFR1_D_NaN_mode_Pos)            /*!< MVFR
ARM GAS  /tmp/ccyRSI2C.s 			page 26


1399:Drivers/CMSIS/Include/core_cm4.h **** 
1400:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Pos              0U                                            /*!< MVFR
1401:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Msk             (0xFUL /*<< FPU_MVFR1_FtZ_mode_Pos*/)          /*!< MVFR
1402:Drivers/CMSIS/Include/core_cm4.h **** 
1403:Drivers/CMSIS/Include/core_cm4.h **** /* Media and FP Feature Register 2 Definitions */
1404:Drivers/CMSIS/Include/core_cm4.h **** 
1405:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR2_VFP_Misc_Pos              4U                                            /*!< MVFR
1406:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR2_VFP_Misc_Msk             (0xFUL << FPU_MVFR2_VFP_Misc_Pos)              /*!< MVFR
1407:Drivers/CMSIS/Include/core_cm4.h **** 
1408:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_FPU */
1409:Drivers/CMSIS/Include/core_cm4.h **** 
1410:Drivers/CMSIS/Include/core_cm4.h **** 
1411:Drivers/CMSIS/Include/core_cm4.h **** /**
1412:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
1413:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
1414:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Core Debug Registers
1415:Drivers/CMSIS/Include/core_cm4.h ****   @{
1416:Drivers/CMSIS/Include/core_cm4.h ****  */
1417:Drivers/CMSIS/Include/core_cm4.h **** 
1418:Drivers/CMSIS/Include/core_cm4.h **** /**
1419:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Core Debug Register (CoreDebug).
1420:Drivers/CMSIS/Include/core_cm4.h ****  */
1421:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
1422:Drivers/CMSIS/Include/core_cm4.h **** {
1423:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t DHCSR;                  /*!< Offset: 0x000 (R/W)  Debug Halting Control and Status
1424:Drivers/CMSIS/Include/core_cm4.h ****   __OM  uint32_t DCRSR;                  /*!< Offset: 0x004 ( /W)  Debug Core Register Selector Reg
1425:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t DCRDR;                  /*!< Offset: 0x008 (R/W)  Debug Core Register Data Registe
1426:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t DEMCR;                  /*!< Offset: 0x00C (R/W)  Debug Exception and Monitor Cont
1427:Drivers/CMSIS/Include/core_cm4.h **** } CoreDebug_Type;
1428:Drivers/CMSIS/Include/core_cm4.h **** 
1429:Drivers/CMSIS/Include/core_cm4.h **** /* Debug Halting Control and Status Register Definitions */
1430:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16U                                            /*!< Core
1431:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFUL << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
1432:Drivers/CMSIS/Include/core_cm4.h **** 
1433:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25U                                            /*!< Core
1434:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1UL << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
1435:Drivers/CMSIS/Include/core_cm4.h **** 
1436:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24U                                            /*!< Core
1437:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1UL << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
1438:Drivers/CMSIS/Include/core_cm4.h **** 
1439:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19U                                            /*!< Core
1440:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1UL << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
1441:Drivers/CMSIS/Include/core_cm4.h **** 
1442:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18U                                            /*!< Core
1443:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1UL << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
1444:Drivers/CMSIS/Include/core_cm4.h **** 
1445:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17U                                            /*!< Core
1446:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1UL << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
1447:Drivers/CMSIS/Include/core_cm4.h **** 
1448:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16U                                            /*!< Core
1449:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1UL << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
1450:Drivers/CMSIS/Include/core_cm4.h **** 
1451:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5U                                            /*!< Core
1452:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1UL << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
1453:Drivers/CMSIS/Include/core_cm4.h **** 
1454:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3U                                            /*!< Core
1455:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1UL << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
ARM GAS  /tmp/ccyRSI2C.s 			page 27


1456:Drivers/CMSIS/Include/core_cm4.h **** 
1457:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2U                                            /*!< Core
1458:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1UL << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
1459:Drivers/CMSIS/Include/core_cm4.h **** 
1460:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1U                                            /*!< Core
1461:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1UL << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
1462:Drivers/CMSIS/Include/core_cm4.h **** 
1463:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0U                                            /*!< Core
1464:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1UL /*<< CoreDebug_DHCSR_C_DEBUGEN_Pos*/)     /*!< Core
1465:Drivers/CMSIS/Include/core_cm4.h **** 
1466:Drivers/CMSIS/Include/core_cm4.h **** /* Debug Core Register Selector Register Definitions */
1467:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16U                                            /*!< Core
1468:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1UL << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
1469:Drivers/CMSIS/Include/core_cm4.h **** 
1470:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0U                                            /*!< Core
1471:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1FUL /*<< CoreDebug_DCRSR_REGSEL_Pos*/)     /*!< Core
1472:Drivers/CMSIS/Include/core_cm4.h **** 
1473:Drivers/CMSIS/Include/core_cm4.h **** /* Debug Exception and Monitor Control Register Definitions */
1474:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24U                                            /*!< Core
1475:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1UL << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
1476:Drivers/CMSIS/Include/core_cm4.h **** 
1477:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19U                                            /*!< Core
1478:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1UL << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
1479:Drivers/CMSIS/Include/core_cm4.h **** 
1480:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18U                                            /*!< Core
1481:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1UL << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
1482:Drivers/CMSIS/Include/core_cm4.h **** 
1483:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17U                                            /*!< Core
1484:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1UL << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
1485:Drivers/CMSIS/Include/core_cm4.h **** 
1486:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16U                                            /*!< Core
1487:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1UL << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
1488:Drivers/CMSIS/Include/core_cm4.h **** 
1489:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10U                                            /*!< Core
1490:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1UL << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
1491:Drivers/CMSIS/Include/core_cm4.h **** 
1492:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9U                                            /*!< Core
1493:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1UL << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
1494:Drivers/CMSIS/Include/core_cm4.h **** 
1495:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8U                                            /*!< Core
1496:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1UL << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
1497:Drivers/CMSIS/Include/core_cm4.h **** 
1498:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7U                                            /*!< Core
1499:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1UL << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
1500:Drivers/CMSIS/Include/core_cm4.h **** 
1501:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6U                                            /*!< Core
1502:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1UL << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
1503:Drivers/CMSIS/Include/core_cm4.h **** 
1504:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5U                                            /*!< Core
1505:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1UL << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
1506:Drivers/CMSIS/Include/core_cm4.h **** 
1507:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4U                                            /*!< Core
1508:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1UL << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
1509:Drivers/CMSIS/Include/core_cm4.h **** 
1510:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0U                                            /*!< Core
1511:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1UL /*<< CoreDebug_DEMCR_VC_CORERESET_Pos*/)  /*!< Core
1512:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/ccyRSI2C.s 			page 28


1513:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_CoreDebug */
1514:Drivers/CMSIS/Include/core_cm4.h **** 
1515:Drivers/CMSIS/Include/core_cm4.h **** 
1516:Drivers/CMSIS/Include/core_cm4.h **** /**
1517:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup    CMSIS_core_register
1518:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup   CMSIS_core_bitfield     Core register bit field macros
1519:Drivers/CMSIS/Include/core_cm4.h ****   \brief      Macros for use with bit field definitions (xxx_Pos, xxx_Msk).
1520:Drivers/CMSIS/Include/core_cm4.h ****   @{
1521:Drivers/CMSIS/Include/core_cm4.h ****  */
1522:Drivers/CMSIS/Include/core_cm4.h **** 
1523:Drivers/CMSIS/Include/core_cm4.h **** /**
1524:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Mask and shift a bit field value for use in a register bit range.
1525:Drivers/CMSIS/Include/core_cm4.h ****   \param[in] field  Name of the register bit field.
1526:Drivers/CMSIS/Include/core_cm4.h ****   \param[in] value  Value of the bit field. This parameter is interpreted as an uint32_t type.
1527:Drivers/CMSIS/Include/core_cm4.h ****   \return           Masked and shifted value.
1528:Drivers/CMSIS/Include/core_cm4.h **** */
1529:Drivers/CMSIS/Include/core_cm4.h **** #define _VAL2FLD(field, value)    (((uint32_t)(value) << field ## _Pos) & field ## _Msk)
1530:Drivers/CMSIS/Include/core_cm4.h **** 
1531:Drivers/CMSIS/Include/core_cm4.h **** /**
1532:Drivers/CMSIS/Include/core_cm4.h ****   \brief     Mask and shift a register value to extract a bit filed value.
1533:Drivers/CMSIS/Include/core_cm4.h ****   \param[in] field  Name of the register bit field.
1534:Drivers/CMSIS/Include/core_cm4.h ****   \param[in] value  Value of register. This parameter is interpreted as an uint32_t type.
1535:Drivers/CMSIS/Include/core_cm4.h ****   \return           Masked and shifted bit field value.
1536:Drivers/CMSIS/Include/core_cm4.h **** */
1537:Drivers/CMSIS/Include/core_cm4.h **** #define _FLD2VAL(field, value)    (((uint32_t)(value) & field ## _Msk) >> field ## _Pos)
1538:Drivers/CMSIS/Include/core_cm4.h **** 
1539:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_core_bitfield */
1540:Drivers/CMSIS/Include/core_cm4.h **** 
1541:Drivers/CMSIS/Include/core_cm4.h **** 
1542:Drivers/CMSIS/Include/core_cm4.h **** /**
1543:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup    CMSIS_core_register
1544:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup   CMSIS_core_base     Core Definitions
1545:Drivers/CMSIS/Include/core_cm4.h ****   \brief      Definitions for base addresses, unions, and structures.
1546:Drivers/CMSIS/Include/core_cm4.h ****   @{
1547:Drivers/CMSIS/Include/core_cm4.h ****  */
1548:Drivers/CMSIS/Include/core_cm4.h **** 
1549:Drivers/CMSIS/Include/core_cm4.h **** /* Memory mapping of Core Hardware */
1550:Drivers/CMSIS/Include/core_cm4.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
1551:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_BASE            (0xE0000000UL)                            /*!< ITM Base Address */
1552:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_BASE            (0xE0001000UL)                            /*!< DWT Base Address */
1553:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_BASE            (0xE0040000UL)                            /*!< TPI Base Address */
1554:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_BASE      (0xE000EDF0UL)                            /*!< Core Debug Base Address 
1555:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address */
1556:Drivers/CMSIS/Include/core_cm4.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address */
1557:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
1558:Drivers/CMSIS/Include/core_cm4.h **** 
1559:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB              ((SCnSCB_Type    *)     SCS_BASE      )   /*!< System control Register 
1560:Drivers/CMSIS/Include/core_cm4.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
1561:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
1562:Drivers/CMSIS/Include/core_cm4.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
1563:Drivers/CMSIS/Include/core_cm4.h **** #define ITM                 ((ITM_Type       *)     ITM_BASE      )   /*!< ITM configuration struct
1564:Drivers/CMSIS/Include/core_cm4.h **** #define DWT                 ((DWT_Type       *)     DWT_BASE      )   /*!< DWT configuration struct
1565:Drivers/CMSIS/Include/core_cm4.h **** #define TPI                 ((TPI_Type       *)     TPI_BASE      )   /*!< TPI configuration struct
1566:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
1567:Drivers/CMSIS/Include/core_cm4.h **** 
1568:Drivers/CMSIS/Include/core_cm4.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1569:Drivers/CMSIS/Include/core_cm4.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90UL)                    /*!< Memory Protection Unit *
ARM GAS  /tmp/ccyRSI2C.s 			page 29


1570:Drivers/CMSIS/Include/core_cm4.h ****   #define MPU               ((MPU_Type       *)     MPU_BASE      )   /*!< Memory Protection Unit *
1571:Drivers/CMSIS/Include/core_cm4.h **** #endif
1572:Drivers/CMSIS/Include/core_cm4.h **** 
1573:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_BASE            (SCS_BASE +  0x0F30UL)                    /*!< Floating Point Unit */
1574:Drivers/CMSIS/Include/core_cm4.h **** #define FPU                 ((FPU_Type       *)     FPU_BASE      )   /*!< Floating Point Unit */
1575:Drivers/CMSIS/Include/core_cm4.h **** 
1576:Drivers/CMSIS/Include/core_cm4.h **** /*@} */
1577:Drivers/CMSIS/Include/core_cm4.h **** 
1578:Drivers/CMSIS/Include/core_cm4.h **** 
1579:Drivers/CMSIS/Include/core_cm4.h **** 
1580:Drivers/CMSIS/Include/core_cm4.h **** /*******************************************************************************
1581:Drivers/CMSIS/Include/core_cm4.h ****  *                Hardware Abstraction Layer
1582:Drivers/CMSIS/Include/core_cm4.h ****   Core Function Interface contains:
1583:Drivers/CMSIS/Include/core_cm4.h ****   - Core NVIC Functions
1584:Drivers/CMSIS/Include/core_cm4.h ****   - Core SysTick Functions
1585:Drivers/CMSIS/Include/core_cm4.h ****   - Core Debug Functions
1586:Drivers/CMSIS/Include/core_cm4.h ****   - Core Register Access Functions
1587:Drivers/CMSIS/Include/core_cm4.h ****  ******************************************************************************/
1588:Drivers/CMSIS/Include/core_cm4.h **** /**
1589:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
1590:Drivers/CMSIS/Include/core_cm4.h **** */
1591:Drivers/CMSIS/Include/core_cm4.h **** 
1592:Drivers/CMSIS/Include/core_cm4.h **** 
1593:Drivers/CMSIS/Include/core_cm4.h **** 
1594:Drivers/CMSIS/Include/core_cm4.h **** /* ##########################   NVIC functions  #################################### */
1595:Drivers/CMSIS/Include/core_cm4.h **** /**
1596:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_Core_FunctionInterface
1597:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_Core_NVICFunctions NVIC Functions
1598:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Functions that manage interrupts and exceptions via the NVIC.
1599:Drivers/CMSIS/Include/core_cm4.h ****   @{
1600:Drivers/CMSIS/Include/core_cm4.h ****  */
1601:Drivers/CMSIS/Include/core_cm4.h **** 
1602:Drivers/CMSIS/Include/core_cm4.h **** #ifdef CMSIS_NVIC_VIRTUAL
1603:Drivers/CMSIS/Include/core_cm4.h ****   #ifndef CMSIS_NVIC_VIRTUAL_HEADER_FILE
1604:Drivers/CMSIS/Include/core_cm4.h ****     #define CMSIS_NVIC_VIRTUAL_HEADER_FILE "cmsis_nvic_virtual.h"
1605:Drivers/CMSIS/Include/core_cm4.h ****   #endif
1606:Drivers/CMSIS/Include/core_cm4.h ****   #include CMSIS_NVIC_VIRTUAL_HEADER_FILE
1607:Drivers/CMSIS/Include/core_cm4.h **** #else
1608:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_SetPriorityGrouping    __NVIC_SetPriorityGrouping
1609:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_GetPriorityGrouping    __NVIC_GetPriorityGrouping
1610:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_EnableIRQ              __NVIC_EnableIRQ
1611:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_GetEnableIRQ           __NVIC_GetEnableIRQ
1612:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_DisableIRQ             __NVIC_DisableIRQ
1613:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_GetPendingIRQ          __NVIC_GetPendingIRQ
1614:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_SetPendingIRQ          __NVIC_SetPendingIRQ
1615:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_ClearPendingIRQ        __NVIC_ClearPendingIRQ
1616:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_GetActive              __NVIC_GetActive
1617:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_SetPriority            __NVIC_SetPriority
1618:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_GetPriority            __NVIC_GetPriority
1619:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_SystemReset            __NVIC_SystemReset
1620:Drivers/CMSIS/Include/core_cm4.h **** #endif /* CMSIS_NVIC_VIRTUAL */
1621:Drivers/CMSIS/Include/core_cm4.h **** 
1622:Drivers/CMSIS/Include/core_cm4.h **** #ifdef CMSIS_VECTAB_VIRTUAL
1623:Drivers/CMSIS/Include/core_cm4.h ****   #ifndef CMSIS_VECTAB_VIRTUAL_HEADER_FILE
1624:Drivers/CMSIS/Include/core_cm4.h ****     #define CMSIS_VECTAB_VIRTUAL_HEADER_FILE "cmsis_vectab_virtual.h"
1625:Drivers/CMSIS/Include/core_cm4.h ****   #endif
1626:Drivers/CMSIS/Include/core_cm4.h ****   #include CMSIS_VECTAB_VIRTUAL_HEADER_FILE
ARM GAS  /tmp/ccyRSI2C.s 			page 30


1627:Drivers/CMSIS/Include/core_cm4.h **** #else
1628:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_SetVector              __NVIC_SetVector
1629:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_GetVector              __NVIC_GetVector
1630:Drivers/CMSIS/Include/core_cm4.h **** #endif  /* (CMSIS_VECTAB_VIRTUAL) */
1631:Drivers/CMSIS/Include/core_cm4.h **** 
1632:Drivers/CMSIS/Include/core_cm4.h **** #define NVIC_USER_IRQ_OFFSET          16
1633:Drivers/CMSIS/Include/core_cm4.h **** 
1634:Drivers/CMSIS/Include/core_cm4.h **** 
1635:Drivers/CMSIS/Include/core_cm4.h **** /* The following EXC_RETURN values are saved the LR on exception entry */
1636:Drivers/CMSIS/Include/core_cm4.h **** #define EXC_RETURN_HANDLER         (0xFFFFFFF1UL)     /* return to Handler mode, uses MSP after ret
1637:Drivers/CMSIS/Include/core_cm4.h **** #define EXC_RETURN_THREAD_MSP      (0xFFFFFFF9UL)     /* return to Thread mode, uses MSP after retu
1638:Drivers/CMSIS/Include/core_cm4.h **** #define EXC_RETURN_THREAD_PSP      (0xFFFFFFFDUL)     /* return to Thread mode, uses PSP after retu
1639:Drivers/CMSIS/Include/core_cm4.h **** #define EXC_RETURN_HANDLER_FPU     (0xFFFFFFE1UL)     /* return to Handler mode, uses MSP after ret
1640:Drivers/CMSIS/Include/core_cm4.h **** #define EXC_RETURN_THREAD_MSP_FPU  (0xFFFFFFE9UL)     /* return to Thread mode, uses MSP after retu
1641:Drivers/CMSIS/Include/core_cm4.h **** #define EXC_RETURN_THREAD_PSP_FPU  (0xFFFFFFEDUL)     /* return to Thread mode, uses PSP after retu
1642:Drivers/CMSIS/Include/core_cm4.h **** 
1643:Drivers/CMSIS/Include/core_cm4.h **** 
1644:Drivers/CMSIS/Include/core_cm4.h **** /**
1645:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Set Priority Grouping
1646:Drivers/CMSIS/Include/core_cm4.h ****   \details Sets the priority grouping field using the required unlock sequence.
1647:Drivers/CMSIS/Include/core_cm4.h ****            The parameter PriorityGroup is assigned to the field SCB->AIRCR [10:8] PRIGROUP field.
1648:Drivers/CMSIS/Include/core_cm4.h ****            Only values from 0..7 are used.
1649:Drivers/CMSIS/Include/core_cm4.h ****            In case of a conflict between priority grouping and available
1650:Drivers/CMSIS/Include/core_cm4.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1651:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      PriorityGroup  Priority grouping field.
1652:Drivers/CMSIS/Include/core_cm4.h ****  */
1653:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1654:Drivers/CMSIS/Include/core_cm4.h **** {
1655:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t reg_value;
1656:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 a
1657:Drivers/CMSIS/Include/core_cm4.h **** 
1658:Drivers/CMSIS/Include/core_cm4.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
1659:Drivers/CMSIS/Include/core_cm4.h ****   reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to chan
1660:Drivers/CMSIS/Include/core_cm4.h ****   reg_value  =  (reg_value                                   |
1661:Drivers/CMSIS/Include/core_cm4.h ****                 ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
1662:Drivers/CMSIS/Include/core_cm4.h ****                 (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key a
1663:Drivers/CMSIS/Include/core_cm4.h ****   SCB->AIRCR =  reg_value;
1664:Drivers/CMSIS/Include/core_cm4.h **** }
1665:Drivers/CMSIS/Include/core_cm4.h **** 
1666:Drivers/CMSIS/Include/core_cm4.h **** 
1667:Drivers/CMSIS/Include/core_cm4.h **** /**
1668:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Get Priority Grouping
1669:Drivers/CMSIS/Include/core_cm4.h ****   \details Reads the priority grouping field from the NVIC Interrupt Controller.
1670:Drivers/CMSIS/Include/core_cm4.h ****   \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
1671:Drivers/CMSIS/Include/core_cm4.h ****  */
1672:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
1673:Drivers/CMSIS/Include/core_cm4.h **** {
1674:Drivers/CMSIS/Include/core_cm4.h ****   return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
1675:Drivers/CMSIS/Include/core_cm4.h **** }
1676:Drivers/CMSIS/Include/core_cm4.h **** 
1677:Drivers/CMSIS/Include/core_cm4.h **** 
1678:Drivers/CMSIS/Include/core_cm4.h **** /**
1679:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Enable Interrupt
1680:Drivers/CMSIS/Include/core_cm4.h ****   \details Enables a device specific interrupt in the NVIC interrupt controller.
1681:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1682:Drivers/CMSIS/Include/core_cm4.h ****   \note    IRQn must not be negative.
1683:Drivers/CMSIS/Include/core_cm4.h ****  */
ARM GAS  /tmp/ccyRSI2C.s 			page 31


1684:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
1685:Drivers/CMSIS/Include/core_cm4.h **** {
1686:Drivers/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1687:Drivers/CMSIS/Include/core_cm4.h ****   {
1688:Drivers/CMSIS/Include/core_cm4.h ****     __COMPILER_BARRIER();
1689:Drivers/CMSIS/Include/core_cm4.h ****     NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1690:Drivers/CMSIS/Include/core_cm4.h ****     __COMPILER_BARRIER();
1691:Drivers/CMSIS/Include/core_cm4.h ****   }
1692:Drivers/CMSIS/Include/core_cm4.h **** }
1693:Drivers/CMSIS/Include/core_cm4.h **** 
1694:Drivers/CMSIS/Include/core_cm4.h **** 
1695:Drivers/CMSIS/Include/core_cm4.h **** /**
1696:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Get Interrupt Enable status
1697:Drivers/CMSIS/Include/core_cm4.h ****   \details Returns a device specific interrupt enable status from the NVIC interrupt controller.
1698:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1699:Drivers/CMSIS/Include/core_cm4.h ****   \return             0  Interrupt is not enabled.
1700:Drivers/CMSIS/Include/core_cm4.h ****   \return             1  Interrupt is enabled.
1701:Drivers/CMSIS/Include/core_cm4.h ****   \note    IRQn must not be negative.
1702:Drivers/CMSIS/Include/core_cm4.h ****  */
1703:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetEnableIRQ(IRQn_Type IRQn)
1704:Drivers/CMSIS/Include/core_cm4.h **** {
1705:Drivers/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1706:Drivers/CMSIS/Include/core_cm4.h ****   {
1707:Drivers/CMSIS/Include/core_cm4.h ****     return((uint32_t)(((NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1708:Drivers/CMSIS/Include/core_cm4.h ****   }
1709:Drivers/CMSIS/Include/core_cm4.h ****   else
1710:Drivers/CMSIS/Include/core_cm4.h ****   {
1711:Drivers/CMSIS/Include/core_cm4.h ****     return(0U);
1712:Drivers/CMSIS/Include/core_cm4.h ****   }
1713:Drivers/CMSIS/Include/core_cm4.h **** }
1714:Drivers/CMSIS/Include/core_cm4.h **** 
1715:Drivers/CMSIS/Include/core_cm4.h **** 
1716:Drivers/CMSIS/Include/core_cm4.h **** /**
1717:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Disable Interrupt
1718:Drivers/CMSIS/Include/core_cm4.h ****   \details Disables a device specific interrupt in the NVIC interrupt controller.
1719:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1720:Drivers/CMSIS/Include/core_cm4.h ****   \note    IRQn must not be negative.
1721:Drivers/CMSIS/Include/core_cm4.h ****  */
1722:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
1723:Drivers/CMSIS/Include/core_cm4.h **** {
1724:Drivers/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1725:Drivers/CMSIS/Include/core_cm4.h ****   {
1726:Drivers/CMSIS/Include/core_cm4.h ****     NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1727:Drivers/CMSIS/Include/core_cm4.h ****     __DSB();
1728:Drivers/CMSIS/Include/core_cm4.h ****     __ISB();
1729:Drivers/CMSIS/Include/core_cm4.h ****   }
1730:Drivers/CMSIS/Include/core_cm4.h **** }
1731:Drivers/CMSIS/Include/core_cm4.h **** 
1732:Drivers/CMSIS/Include/core_cm4.h **** 
1733:Drivers/CMSIS/Include/core_cm4.h **** /**
1734:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Get Pending Interrupt
1735:Drivers/CMSIS/Include/core_cm4.h ****   \details Reads the NVIC pending register and returns the pending bit for the specified device spe
1736:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1737:Drivers/CMSIS/Include/core_cm4.h ****   \return             0  Interrupt status is not pending.
1738:Drivers/CMSIS/Include/core_cm4.h ****   \return             1  Interrupt status is pending.
1739:Drivers/CMSIS/Include/core_cm4.h ****   \note    IRQn must not be negative.
1740:Drivers/CMSIS/Include/core_cm4.h ****  */
ARM GAS  /tmp/ccyRSI2C.s 			page 32


1741:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetPendingIRQ(IRQn_Type IRQn)
1742:Drivers/CMSIS/Include/core_cm4.h **** {
1743:Drivers/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1744:Drivers/CMSIS/Include/core_cm4.h ****   {
1745:Drivers/CMSIS/Include/core_cm4.h ****     return((uint32_t)(((NVIC->ISPR[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1746:Drivers/CMSIS/Include/core_cm4.h ****   }
1747:Drivers/CMSIS/Include/core_cm4.h ****   else
1748:Drivers/CMSIS/Include/core_cm4.h ****   {
1749:Drivers/CMSIS/Include/core_cm4.h ****     return(0U);
1750:Drivers/CMSIS/Include/core_cm4.h ****   }
1751:Drivers/CMSIS/Include/core_cm4.h **** }
1752:Drivers/CMSIS/Include/core_cm4.h **** 
1753:Drivers/CMSIS/Include/core_cm4.h **** 
1754:Drivers/CMSIS/Include/core_cm4.h **** /**
1755:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Set Pending Interrupt
1756:Drivers/CMSIS/Include/core_cm4.h ****   \details Sets the pending bit of a device specific interrupt in the NVIC pending register.
1757:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1758:Drivers/CMSIS/Include/core_cm4.h ****   \note    IRQn must not be negative.
1759:Drivers/CMSIS/Include/core_cm4.h ****  */
1760:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void __NVIC_SetPendingIRQ(IRQn_Type IRQn)
1761:Drivers/CMSIS/Include/core_cm4.h **** {
1762:Drivers/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1763:Drivers/CMSIS/Include/core_cm4.h ****   {
1764:Drivers/CMSIS/Include/core_cm4.h ****     NVIC->ISPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1765:Drivers/CMSIS/Include/core_cm4.h ****   }
1766:Drivers/CMSIS/Include/core_cm4.h **** }
1767:Drivers/CMSIS/Include/core_cm4.h **** 
1768:Drivers/CMSIS/Include/core_cm4.h **** 
1769:Drivers/CMSIS/Include/core_cm4.h **** /**
1770:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Clear Pending Interrupt
1771:Drivers/CMSIS/Include/core_cm4.h ****   \details Clears the pending bit of a device specific interrupt in the NVIC pending register.
1772:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1773:Drivers/CMSIS/Include/core_cm4.h ****   \note    IRQn must not be negative.
1774:Drivers/CMSIS/Include/core_cm4.h ****  */
1775:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void __NVIC_ClearPendingIRQ(IRQn_Type IRQn)
1776:Drivers/CMSIS/Include/core_cm4.h **** {
1777:Drivers/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1778:Drivers/CMSIS/Include/core_cm4.h ****   {
1779:Drivers/CMSIS/Include/core_cm4.h ****     NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1780:Drivers/CMSIS/Include/core_cm4.h ****   }
1781:Drivers/CMSIS/Include/core_cm4.h **** }
1782:Drivers/CMSIS/Include/core_cm4.h **** 
1783:Drivers/CMSIS/Include/core_cm4.h **** 
1784:Drivers/CMSIS/Include/core_cm4.h **** /**
1785:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Get Active Interrupt
1786:Drivers/CMSIS/Include/core_cm4.h ****   \details Reads the active register in the NVIC and returns the active bit for the device specific
1787:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1788:Drivers/CMSIS/Include/core_cm4.h ****   \return             0  Interrupt status is not active.
1789:Drivers/CMSIS/Include/core_cm4.h ****   \return             1  Interrupt status is active.
1790:Drivers/CMSIS/Include/core_cm4.h ****   \note    IRQn must not be negative.
1791:Drivers/CMSIS/Include/core_cm4.h ****  */
1792:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetActive(IRQn_Type IRQn)
1793:Drivers/CMSIS/Include/core_cm4.h **** {
1794:Drivers/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1795:Drivers/CMSIS/Include/core_cm4.h ****   {
1796:Drivers/CMSIS/Include/core_cm4.h ****     return((uint32_t)(((NVIC->IABR[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1797:Drivers/CMSIS/Include/core_cm4.h ****   }
ARM GAS  /tmp/ccyRSI2C.s 			page 33


1798:Drivers/CMSIS/Include/core_cm4.h ****   else
1799:Drivers/CMSIS/Include/core_cm4.h ****   {
1800:Drivers/CMSIS/Include/core_cm4.h ****     return(0U);
1801:Drivers/CMSIS/Include/core_cm4.h ****   }
1802:Drivers/CMSIS/Include/core_cm4.h **** }
1803:Drivers/CMSIS/Include/core_cm4.h **** 
1804:Drivers/CMSIS/Include/core_cm4.h **** 
1805:Drivers/CMSIS/Include/core_cm4.h **** /**
1806:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Set Interrupt Priority
1807:Drivers/CMSIS/Include/core_cm4.h ****   \details Sets the priority of a device specific interrupt or a processor exception.
1808:Drivers/CMSIS/Include/core_cm4.h ****            The interrupt number can be positive to specify a device specific interrupt,
1809:Drivers/CMSIS/Include/core_cm4.h ****            or negative to specify a processor exception.
1810:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Interrupt number.
1811:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]  priority  Priority to set.
1812:Drivers/CMSIS/Include/core_cm4.h ****   \note    The priority cannot be set for every processor exception.
1813:Drivers/CMSIS/Include/core_cm4.h ****  */
1814:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
1815:Drivers/CMSIS/Include/core_cm4.h **** {
1816:Drivers/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1817:Drivers/CMSIS/Include/core_cm4.h ****   {
1818:Drivers/CMSIS/Include/core_cm4.h ****     NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (u
1819:Drivers/CMSIS/Include/core_cm4.h ****   }
1820:Drivers/CMSIS/Include/core_cm4.h ****   else
1821:Drivers/CMSIS/Include/core_cm4.h ****   {
1822:Drivers/CMSIS/Include/core_cm4.h ****     SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (u
1823:Drivers/CMSIS/Include/core_cm4.h ****   }
1824:Drivers/CMSIS/Include/core_cm4.h **** }
1825:Drivers/CMSIS/Include/core_cm4.h **** 
1826:Drivers/CMSIS/Include/core_cm4.h **** 
1827:Drivers/CMSIS/Include/core_cm4.h **** /**
1828:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Get Interrupt Priority
1829:Drivers/CMSIS/Include/core_cm4.h ****   \details Reads the priority of a device specific interrupt or a processor exception.
1830:Drivers/CMSIS/Include/core_cm4.h ****            The interrupt number can be positive to specify a device specific interrupt,
1831:Drivers/CMSIS/Include/core_cm4.h ****            or negative to specify a processor exception.
1832:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]   IRQn  Interrupt number.
1833:Drivers/CMSIS/Include/core_cm4.h ****   \return             Interrupt Priority.
1834:Drivers/CMSIS/Include/core_cm4.h ****                       Value is aligned automatically to the implemented priority bits of the microc
1835:Drivers/CMSIS/Include/core_cm4.h ****  */
1836:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetPriority(IRQn_Type IRQn)
1837:Drivers/CMSIS/Include/core_cm4.h **** {
1838:Drivers/CMSIS/Include/core_cm4.h **** 
1839:Drivers/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1840:Drivers/CMSIS/Include/core_cm4.h ****   {
1841:Drivers/CMSIS/Include/core_cm4.h ****     return(((uint32_t)NVIC->IP[((uint32_t)IRQn)]               >> (8U - __NVIC_PRIO_BITS)));
1842:Drivers/CMSIS/Include/core_cm4.h ****   }
1843:Drivers/CMSIS/Include/core_cm4.h ****   else
1844:Drivers/CMSIS/Include/core_cm4.h ****   {
1845:Drivers/CMSIS/Include/core_cm4.h ****     return(((uint32_t)SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] >> (8U - __NVIC_PRIO_BITS)));
1846:Drivers/CMSIS/Include/core_cm4.h ****   }
1847:Drivers/CMSIS/Include/core_cm4.h **** }
1848:Drivers/CMSIS/Include/core_cm4.h **** 
1849:Drivers/CMSIS/Include/core_cm4.h **** 
1850:Drivers/CMSIS/Include/core_cm4.h **** /**
1851:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Encode Priority
1852:Drivers/CMSIS/Include/core_cm4.h ****   \details Encodes the priority for an interrupt with the given priority group,
1853:Drivers/CMSIS/Include/core_cm4.h ****            preemptive priority value, and subpriority value.
1854:Drivers/CMSIS/Include/core_cm4.h ****            In case of a conflict between priority grouping and available
ARM GAS  /tmp/ccyRSI2C.s 			page 34


1855:Drivers/CMSIS/Include/core_cm4.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1856:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]     PriorityGroup  Used priority group.
1857:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
1858:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]       SubPriority  Subpriority value (starting from 0).
1859:Drivers/CMSIS/Include/core_cm4.h ****   \return                        Encoded priority. Value can be used in the function \ref NVIC_SetP
1860:Drivers/CMSIS/Include/core_cm4.h ****  */
1861:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uin
1862:Drivers/CMSIS/Include/core_cm4.h **** {
1863:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
1864:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t PreemptPriorityBits;
1865:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t SubPriorityBits;
1866:Drivers/CMSIS/Include/core_cm4.h **** 
1867:Drivers/CMSIS/Include/core_cm4.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
1868:Drivers/CMSIS/Include/core_cm4.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
1869:Drivers/CMSIS/Include/core_cm4.h **** 
1870:Drivers/CMSIS/Include/core_cm4.h ****   return (
1871:Drivers/CMSIS/Include/core_cm4.h ****            ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits
1872:Drivers/CMSIS/Include/core_cm4.h ****            ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
1873:Drivers/CMSIS/Include/core_cm4.h ****          );
1874:Drivers/CMSIS/Include/core_cm4.h **** }
1875:Drivers/CMSIS/Include/core_cm4.h **** 
1876:Drivers/CMSIS/Include/core_cm4.h **** 
1877:Drivers/CMSIS/Include/core_cm4.h **** /**
1878:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Decode Priority
1879:Drivers/CMSIS/Include/core_cm4.h ****   \details Decodes an interrupt priority value with a given priority group to
1880:Drivers/CMSIS/Include/core_cm4.h ****            preemptive priority value and subpriority value.
1881:Drivers/CMSIS/Include/core_cm4.h ****            In case of a conflict between priority grouping and available
1882:Drivers/CMSIS/Include/core_cm4.h ****            priority bits (__NVIC_PRIO_BITS) the smallest possible priority group is set.
1883:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]         Priority   Priority value, which can be retrieved with the function \ref NVIC
1884:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]     PriorityGroup  Used priority group.
1885:Drivers/CMSIS/Include/core_cm4.h ****   \param [out] pPreemptPriority  Preemptive priority value (starting from 0).
1886:Drivers/CMSIS/Include/core_cm4.h ****   \param [out]     pSubPriority  Subpriority value (starting from 0).
1887:Drivers/CMSIS/Include/core_cm4.h ****  */
1888:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void NVIC_DecodePriority (uint32_t Priority, uint32_t PriorityGroup, uint32_t* cons
1889:Drivers/CMSIS/Include/core_cm4.h **** {
1890:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
1891:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t PreemptPriorityBits;
1892:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t SubPriorityBits;
1893:Drivers/CMSIS/Include/core_cm4.h **** 
1894:Drivers/CMSIS/Include/core_cm4.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
1895:Drivers/CMSIS/Include/core_cm4.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
1896:Drivers/CMSIS/Include/core_cm4.h **** 
1897:Drivers/CMSIS/Include/core_cm4.h ****   *pPreemptPriority = (Priority >> SubPriorityBits) & (uint32_t)((1UL << (PreemptPriorityBits)) - 1
1898:Drivers/CMSIS/Include/core_cm4.h ****   *pSubPriority     = (Priority                   ) & (uint32_t)((1UL << (SubPriorityBits    )) - 1
1899:Drivers/CMSIS/Include/core_cm4.h **** }
1900:Drivers/CMSIS/Include/core_cm4.h **** 
1901:Drivers/CMSIS/Include/core_cm4.h **** 
1902:Drivers/CMSIS/Include/core_cm4.h **** /**
1903:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Set Interrupt Vector
1904:Drivers/CMSIS/Include/core_cm4.h ****   \details Sets an interrupt vector in SRAM based interrupt vector table.
1905:Drivers/CMSIS/Include/core_cm4.h ****            The interrupt number can be positive to specify a device specific interrupt,
1906:Drivers/CMSIS/Include/core_cm4.h ****            or negative to specify a processor exception.
1907:Drivers/CMSIS/Include/core_cm4.h ****            VTOR must been relocated to SRAM before.
1908:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]   IRQn      Interrupt number
1909:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]   vector    Address of interrupt handler function
1910:Drivers/CMSIS/Include/core_cm4.h ****  */
1911:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void __NVIC_SetVector(IRQn_Type IRQn, uint32_t vector)
ARM GAS  /tmp/ccyRSI2C.s 			page 35


1912:Drivers/CMSIS/Include/core_cm4.h **** {
1913:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t *vectors = (uint32_t *)SCB->VTOR;
1914:Drivers/CMSIS/Include/core_cm4.h ****   vectors[(int32_t)IRQn + NVIC_USER_IRQ_OFFSET] = vector;
1915:Drivers/CMSIS/Include/core_cm4.h ****   /* ARM Application Note 321 states that the M4 does not require the architectural barrier */
1916:Drivers/CMSIS/Include/core_cm4.h **** }
1917:Drivers/CMSIS/Include/core_cm4.h **** 
1918:Drivers/CMSIS/Include/core_cm4.h **** 
1919:Drivers/CMSIS/Include/core_cm4.h **** /**
1920:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Get Interrupt Vector
1921:Drivers/CMSIS/Include/core_cm4.h ****   \details Reads an interrupt vector from interrupt vector table.
1922:Drivers/CMSIS/Include/core_cm4.h ****            The interrupt number can be positive to specify a device specific interrupt,
1923:Drivers/CMSIS/Include/core_cm4.h ****            or negative to specify a processor exception.
1924:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]   IRQn      Interrupt number.
1925:Drivers/CMSIS/Include/core_cm4.h ****   \return                 Address of interrupt handler function
1926:Drivers/CMSIS/Include/core_cm4.h ****  */
1927:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetVector(IRQn_Type IRQn)
1928:Drivers/CMSIS/Include/core_cm4.h **** {
1929:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t *vectors = (uint32_t *)SCB->VTOR;
1930:Drivers/CMSIS/Include/core_cm4.h ****   return vectors[(int32_t)IRQn + NVIC_USER_IRQ_OFFSET];
1931:Drivers/CMSIS/Include/core_cm4.h **** }
1932:Drivers/CMSIS/Include/core_cm4.h **** 
1933:Drivers/CMSIS/Include/core_cm4.h **** 
1934:Drivers/CMSIS/Include/core_cm4.h **** /**
1935:Drivers/CMSIS/Include/core_cm4.h ****   \brief   System Reset
1936:Drivers/CMSIS/Include/core_cm4.h ****   \details Initiates a system reset request to reset the MCU.
1937:Drivers/CMSIS/Include/core_cm4.h ****  */
1938:Drivers/CMSIS/Include/core_cm4.h **** __NO_RETURN __STATIC_INLINE void __NVIC_SystemReset(void)
1939:Drivers/CMSIS/Include/core_cm4.h **** {
  29              		.loc 2 1939 1 view -0
  30              		.cfi_startproc
  31              		@ Volatile: function does not return.
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
1940:Drivers/CMSIS/Include/core_cm4.h ****   __DSB();                                                          /* Ensure all outstanding memor
  35              		.loc 2 1940 3 view .LVU1
  36              	.LBB8:
  37              	.LBI8:
  38              		.file 3 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.4.1
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     27. May 2021
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2021 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
ARM GAS  /tmp/ccyRSI2C.s 			page 36


  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
ARM GAS  /tmp/ccyRSI2C.s 			page 37


  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  /tmp/ccyRSI2C.s 			page 38


 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute__((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_SEAL
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_SEAL              __StackSeal
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 189:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccyRSI2C.s 			page 39


 190:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_SIZE
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_SIZE      8U
 192:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_VALUE
 195:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_VALUE     0xFEF5EDA5FEF5EDA5ULL
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_STACKSEAL_S (uint32_t* stackTop) {
 200:Drivers/CMSIS/Include/cmsis_gcc.h ****   *((uint64_t *)stackTop) = __TZ_STACK_SEAL_VALUE;
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 203:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 204:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 208:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 209:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 212:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 213:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 215:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 216:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 217:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 223:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 225:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 226:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 227:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 229:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 230:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 233:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi":::"memory")
 235:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 239:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 240:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 241:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe":::"memory")
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 244:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 245:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
ARM GAS  /tmp/ccyRSI2C.s 			page 40


 247:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 248:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 253:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 254:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 255:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 258:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 259:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 265:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
  39              		.loc 3 269 27 view .LVU2
  40              	.LBB9:
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
  41              		.loc 3 271 3 view .LVU3
  42              		.syntax unified
  43              	@ 271 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
  44 0000 BFF34F8F 		dsb 0xF
  45              	@ 0 "" 2
  46              		.thumb
  47              		.syntax unified
  48              	.LBE9:
  49              	.LBE8:
1941:Drivers/CMSIS/Include/core_cm4.h ****                                                                        buffered write are completed
1942:Drivers/CMSIS/Include/core_cm4.h ****   SCB->AIRCR  = (uint32_t)((0x5FAUL << SCB_AIRCR_VECTKEY_Pos)    |
  50              		.loc 2 1942 3 view .LVU4
1943:Drivers/CMSIS/Include/core_cm4.h ****                            (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
  51              		.loc 2 1943 32 is_stmt 0 view .LVU5
  52 0004 0549     		ldr	r1, .L3
  53 0006 CA68     		ldr	r2, [r1, #12]
  54              		.loc 2 1943 40 view .LVU6
  55 0008 02F4E062 		and	r2, r2, #1792
1942:Drivers/CMSIS/Include/core_cm4.h ****                            (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
  56              		.loc 2 1942 17 view .LVU7
  57 000c 044B     		ldr	r3, .L3+4
  58 000e 1343     		orrs	r3, r3, r2
1942:Drivers/CMSIS/Include/core_cm4.h ****                            (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
  59              		.loc 2 1942 15 view .LVU8
  60 0010 CB60     		str	r3, [r1, #12]
1944:Drivers/CMSIS/Include/core_cm4.h ****                             SCB_AIRCR_SYSRESETREQ_Msk    );         /* Keep priority group unchange
1945:Drivers/CMSIS/Include/core_cm4.h ****   __DSB();                                                          /* Ensure completion of memory 
  61              		.loc 2 1945 3 is_stmt 1 view .LVU9
  62              	.LBB10:
  63              	.LBI10:
ARM GAS  /tmp/ccyRSI2C.s 			page 41


 269:Drivers/CMSIS/Include/cmsis_gcc.h **** {
  64              		.loc 3 269 27 view .LVU10
  65              	.LBB11:
  66              		.loc 3 271 3 view .LVU11
  67              		.syntax unified
  68              	@ 271 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
  69 0012 BFF34F8F 		dsb 0xF
  70              	@ 0 "" 2
  71              		.thumb
  72              		.syntax unified
  73              	.L2:
  74              	.LBE11:
  75              	.LBE10:
1946:Drivers/CMSIS/Include/core_cm4.h **** 
1947:Drivers/CMSIS/Include/core_cm4.h ****   for(;;)                                                           /* wait until reset */
  76              		.loc 2 1947 3 view .LVU12
1948:Drivers/CMSIS/Include/core_cm4.h ****   {
1949:Drivers/CMSIS/Include/core_cm4.h ****     __NOP();
  77              		.loc 2 1949 5 discriminator 1 view .LVU13
  78              		.syntax unified
  79              	@ 1949 "Drivers/CMSIS/Include/core_cm4.h" 1
  80 0016 00BF     		nop
  81              	@ 0 "" 2
1947:Drivers/CMSIS/Include/core_cm4.h ****   {
  82              		.loc 2 1947 3 view .LVU14
  83              		.thumb
  84              		.syntax unified
  85 0018 FDE7     		b	.L2
  86              	.L4:
  87 001a 00BF     		.align	2
  88              	.L3:
  89 001c 00ED00E0 		.word	-536810240
  90 0020 0400FA05 		.word	100270084
  91              		.cfi_endproc
  92              	.LFE121:
  94              		.section	.rodata.do_wait_request.str1.4,"aMS",%progbits,1
  95              		.align	2
  96              	.LC0:
  97 0000 433A0D0A 		.ascii	"C:\015\012\000"
  97      00
  98              		.section	.text.do_wait_request,"ax",%progbits
  99              		.align	1
 100              		.global	do_wait_request
 101              		.syntax unified
 102              		.thumb
 103              		.thumb_func
 105              	do_wait_request:
 106              	.LVL0:
 107              	.LFB236:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
ARM GAS  /tmp/ccyRSI2C.s 			page 42


   9:Core/Src/main.c ****   * Copyright (c) 2024 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** #include "scheme.h"
  25:Core/Src/main.c **** #include <string.h>
  26:Core/Src/main.c **** #include <stdio.h>
  27:Core/Src/main.c **** #include <time.h> //for random values
  28:Core/Src/main.c **** #include <stdlib.h>
  29:Core/Src/main.c **** /* USER CODE END Includes */
  30:Core/Src/main.c **** 
  31:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  32:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  33:Core/Src/main.c **** typedef enum {
  34:Core/Src/main.c ****     RAW,
  35:Core/Src/main.c ****     MOVING_AVERAGE,
  36:Core/Src/main.c ****     RANDOM_NOISE
  37:Core/Src/main.c **** } FilterMode;
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* USER CODE END PTD */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  42:Core/Src/main.c **** /* USER CODE BEGIN PD */
  43:Core/Src/main.c **** #define ADC_BUFFER_SIZE 300
  44:Core/Src/main.c **** #define MOVING_AVG_SIZE 150
  45:Core/Src/main.c **** #define BUFFER_SIZE 50
  46:Core/Src/main.c **** #define RANDOM_RANGE 300
  47:Core/Src/main.c **** #define DEBOUNCE_TIME_MS 50
  48:Core/Src/main.c **** /* USER CODE END PD */
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  51:Core/Src/main.c **** /* USER CODE BEGIN PM */
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** /* USER CODE END PM */
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  56:Core/Src/main.c **** ADC_HandleTypeDef hadc1;
  57:Core/Src/main.c **** DMA_HandleTypeDef hdma_adc1;
  58:Core/Src/main.c **** 
  59:Core/Src/main.c **** TIM_HandleTypeDef htim3;
  60:Core/Src/main.c **** TIM_HandleTypeDef htim4;
  61:Core/Src/main.c **** 
  62:Core/Src/main.c **** UART_HandleTypeDef huart2;
  63:Core/Src/main.c **** 
  64:Core/Src/main.c **** /* USER CODE BEGIN PV */
  65:Core/Src/main.c **** //digital and analog variables
ARM GAS  /tmp/ccyRSI2C.s 			page 43


  66:Core/Src/main.c **** uint16_t lastAnalogValue = 0; 
  67:Core/Src/main.c **** uint16_t lastDigitalValue = 0;
  68:Core/Src/main.c **** 
  69:Core/Src/main.c **** uint16_t last_index = 0;//position of last written element on buffer
  70:Core/Src/main.c **** uint32_t adcBuffer[ADC_BUFFER_SIZE];//dma data structure
  71:Core/Src/main.c **** 
  72:Core/Src/main.c **** //moving average variables
  73:Core/Src/main.c **** uint16_t adc_moving_average[MOVING_AVG_SIZE];
  74:Core/Src/main.c **** uint16_t buffer_index = 0;
  75:Core/Src/main.c **** uint32_t sum = 0;
  76:Core/Src/main.c **** 
  77:Core/Src/main.c **** //millis for warning state
  78:Core/Src/main.c **** uint32_t lastTimer = 0;
  79:Core/Src/main.c **** uint32_t lastButtonPress = 0; //to avoid debouncing
  80:Core/Src/main.c **** 
  81:Core/Src/main.c **** //filter mode for data variables
  82:Core/Src/main.c **** FilterMode currentFilterMode = RAW;
  83:Core/Src/main.c **** char cli_command[BUFFER_SIZE];
  84:Core/Src/main.c **** uint8_t sendRequest = 0;
  85:Core/Src/main.c **** 
  86:Core/Src/main.c **** //debug/info variables
  87:Core/Src/main.c **** char msg_buffer[BUFFER_SIZE];//buffer for serial msg
  88:Core/Src/main.c **** 
  89:Core/Src/main.c **** //state variables
  90:Core/Src/main.c **** HAL_StatusTypeDef halStatus = HAL_OK;
  91:Core/Src/main.c **** state_t current_state = STATE_INIT;
  92:Core/Src/main.c **** state_t next_state = STATE_WAIT_REQUEST;
  93:Core/Src/main.c **** uint8_t is_running_error_timer = 0;
  94:Core/Src/main.c **** 
  95:Core/Src/main.c **** /* USER CODE END PV */
  96:Core/Src/main.c **** 
  97:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  98:Core/Src/main.c **** void SystemClock_Config(void);
  99:Core/Src/main.c **** static void MX_GPIO_Init(void);
 100:Core/Src/main.c **** static void MX_DMA_Init(void);
 101:Core/Src/main.c **** static void MX_USART2_UART_Init(void);
 102:Core/Src/main.c **** static void MX_ADC1_Init(void);
 103:Core/Src/main.c **** static void MX_TIM3_Init(void);
 104:Core/Src/main.c **** static void MX_TIM4_Init(void);
 105:Core/Src/main.c **** /* USER CODE BEGIN PFP */
 106:Core/Src/main.c **** 
 107:Core/Src/main.c **** /* USER CODE END PFP */
 108:Core/Src/main.c **** 
 109:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
 110:Core/Src/main.c **** /* USER CODE BEGIN 0 */
 111:Core/Src/main.c **** 
 112:Core/Src/main.c **** /**
 113:Core/Src/main.c ****  * timers interrupt
 114:Core/Src/main.c ****  */
 115:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef* htim){
 116:Core/Src/main.c ****   if(htim->Instance == TIM3){
 117:Core/Src/main.c ****     //toggle pause state led
 118:Core/Src/main.c ****     HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_5);
 119:Core/Src/main.c ****   } else if(htim->Instance == TIM4){
 120:Core/Src/main.c ****     //toggle error state led
 121:Core/Src/main.c ****     HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_5);
 122:Core/Src/main.c ****   }
ARM GAS  /tmp/ccyRSI2C.s 			page 44


 123:Core/Src/main.c **** }
 124:Core/Src/main.c **** 
 125:Core/Src/main.c **** /**
 126:Core/Src/main.c ****  * Callback function for gpio digital input
 127:Core/Src/main.c ****  */
 128:Core/Src/main.c **** void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin){
 129:Core/Src/main.c ****   if(GPIO_Pin == GPIO_PIN_2){
 130:Core/Src/main.c ****     lastDigitalValue = HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_2);
 131:Core/Src/main.c ****   }
 132:Core/Src/main.c ****   else if(GPIO_Pin == GPIO_PIN_13){
 133:Core/Src/main.c ****     uint32_t currentTime = HAL_GetTick();
 134:Core/Src/main.c **** 
 135:Core/Src/main.c ****     if (lastButtonPress != 0 && (currentTime - lastButtonPress) < DEBOUNCE_TIME_MS){
 136:Core/Src/main.c ****       return;//ignore interupt
 137:Core/Src/main.c ****     }
 138:Core/Src/main.c ****     lastButtonPress = currentTime;
 139:Core/Src/main.c **** 
 140:Core/Src/main.c ****     //FIXME: the led is not turned on and off correctly
 141:Core/Src/main.c ****     if(current_state == STATE_WAIT_REQUEST || current_state == STATE_PAUSE){
 142:Core/Src/main.c ****       //change state to listening and restore dma
 143:Core/Src/main.c ****       current_state = next_state = STATE_LISTENING;
 144:Core/Src/main.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, GPIO_PIN_SET);
 145:Core/Src/main.c ****       HAL_UART_AbortReceive_IT(&huart2);
 146:Core/Src/main.c ****       lastTimer = HAL_GetTick();
 147:Core/Src/main.c **** 
 148:Core/Src/main.c ****       //stop all timers
 149:Core/Src/main.c ****       HAL_TIM_Base_Stop_IT(&htim3);
 150:Core/Src/main.c ****     }else if(current_state == STATE_LISTENING){
 151:Core/Src/main.c ****       //change state to pause
 152:Core/Src/main.c ****       current_state = next_state = STATE_PAUSE;
 153:Core/Src/main.c ****       //start timer
 154:Core/Src/main.c ****       HAL_TIM_Base_Start_IT(&htim3);
 155:Core/Src/main.c ****       //wait for next input
 156:Core/Src/main.c ****       HAL_UARTEx_ReceiveToIdle_IT(&huart2, (uint8_t *)cli_command, BUFFER_SIZE);
 157:Core/Src/main.c ****     }else if(current_state == STATE_WARNING){
 158:Core/Src/main.c ****       //change state to wait request
 159:Core/Src/main.c ****       current_state = next_state = STATE_WAIT_REQUEST;
 160:Core/Src/main.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, GPIO_PIN_RESET);
 161:Core/Src/main.c ****       //stop all timers
 162:Core/Src/main.c ****       HAL_TIM_Base_Stop_IT(&htim3);
 163:Core/Src/main.c ****       //wait for next input
 164:Core/Src/main.c ****       HAL_UARTEx_ReceiveToIdle_IT(&huart2, (uint8_t *)cli_command, BUFFER_SIZE);
 165:Core/Src/main.c ****     }else if(current_state == STATE_ERROR){
 166:Core/Src/main.c ****       //reset the board
 167:Core/Src/main.c ****       is_running_error_timer = 0;
 168:Core/Src/main.c ****       NVIC_SystemReset();
 169:Core/Src/main.c ****     }
 170:Core/Src/main.c **** 
 171:Core/Src/main.c ****     sendRequest = 0;
 172:Core/Src/main.c ****     lastTimer = HAL_GetTick();//reset timer
 173:Core/Src/main.c ****   }
 174:Core/Src/main.c **** }
 175:Core/Src/main.c **** 
 176:Core/Src/main.c **** /*
 177:Core/Src/main.c **** void HAL_ADC_ConvHalfCpltCallback(ADC_HandleTypeDef* hadc){
 178:Core/Src/main.c **** }
 179:Core/Src/main.c **** */
ARM GAS  /tmp/ccyRSI2C.s 			page 45


 180:Core/Src/main.c **** 
 181:Core/Src/main.c **** /**
 182:Core/Src/main.c **** Based on the user input, change the filter mode.
 183:Core/Src/main.c **** If the comand is unknown, the current filter is not changed but
 184:Core/Src/main.c **** a falsse value is returned
 185:Core/Src/main.c **** */
 186:Core/Src/main.c **** u_int8_t handle_cli_command() {
 187:Core/Src/main.c ****     if (strcmp(cli_command, "raw") == 0) {
 188:Core/Src/main.c ****         currentFilterMode = RAW;
 189:Core/Src/main.c ****     } else if (strcmp(cli_command, "moving average") == 0) {
 190:Core/Src/main.c ****         currentFilterMode = MOVING_AVERAGE;
 191:Core/Src/main.c ****     } else if (strcmp(cli_command, "random noise") == 0) {
 192:Core/Src/main.c ****         currentFilterMode = RANDOM_NOISE;
 193:Core/Src/main.c ****     } else {
 194:Core/Src/main.c ****         //comand not recognized
 195:Core/Src/main.c ****         memset(cli_command, '\0', sizeof(cli_command)); 
 196:Core/Src/main.c ****         return 1;
 197:Core/Src/main.c ****     }
 198:Core/Src/main.c ****     //clear buffer
 199:Core/Src/main.c ****     memset(cli_command, '\0', sizeof(cli_command)); 
 200:Core/Src/main.c ****     return 0;
 201:Core/Src/main.c **** }
 202:Core/Src/main.c **** 
 203:Core/Src/main.c **** /**
 204:Core/Src/main.c ****  * Callback function to handle the receiving of a comand from the user
 205:Core/Src/main.c ****  * if the command is unknown, restart sending data anyway
 206:Core/Src/main.c ****  */
 207:Core/Src/main.c **** void HAL_UARTEx_RxEventCallback(UART_HandleTypeDef *huart, uint16_t Size)
 208:Core/Src/main.c **** {
 209:Core/Src/main.c ****   //if we are not in pause or wait request state, ignore the comand received
 210:Core/Src/main.c ****   //wait for next input
 211:Core/Src/main.c ****   if(current_state!= STATE_PAUSE && current_state != STATE_WAIT_REQUEST){
 212:Core/Src/main.c ****     memset(cli_command, '\0', sizeof(cli_command)); 
 213:Core/Src/main.c ****     HAL_UARTEx_ReceiveToIdle_IT(&huart2, (uint8_t *)cli_command, BUFFER_SIZE);
 214:Core/Src/main.c ****     return;
 215:Core/Src/main.c ****   }
 216:Core/Src/main.c **** 
 217:Core/Src/main.c ****   uint8_t unknownComand = handle_cli_command();
 218:Core/Src/main.c **** 
 219:Core/Src/main.c ****   if(unknownComand){
 220:Core/Src/main.c ****     sprintf(msg_buffer, "Command not valid. Try again.\r\n");
 221:Core/Src/main.c ****     HAL_UART_Transmit(&huart2, (uint8_t *)msg_buffer, strlen(msg_buffer), HAL_MAX_DELAY);
 222:Core/Src/main.c ****     sprintf(msg_buffer, "C:\r\n");//send comand request to user
 223:Core/Src/main.c ****     HAL_UART_Transmit(&huart2, (uint8_t *)msg_buffer, strlen(msg_buffer), HAL_MAX_DELAY);  
 224:Core/Src/main.c ****   }
 225:Core/Src/main.c ****   else{
 226:Core/Src/main.c ****     //FIXME: sometimes after inserting the comand, the printing doesn't resume
 227:Core/Src/main.c ****     sprintf(msg_buffer, "New filter mode: %d\r\n", currentFilterMode);
 228:Core/Src/main.c ****     HAL_UART_Transmit(&huart2, (uint8_t *)msg_buffer, strlen(msg_buffer), HAL_MAX_DELAY);
 229:Core/Src/main.c ****     sendRequest = 0;
 230:Core/Src/main.c ****     //current_state = next_state = STATE_LISTENING;
 231:Core/Src/main.c ****     //HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, GPIO_PIN_SET);
 232:Core/Src/main.c ****     //lastTimer = HAL_GetTick();
 233:Core/Src/main.c ****   }
 234:Core/Src/main.c **** 
 235:Core/Src/main.c ****   //wait for next input
 236:Core/Src/main.c ****   HAL_UARTEx_ReceiveToIdle_IT(&huart2, (uint8_t *)cli_command, BUFFER_SIZE);
ARM GAS  /tmp/ccyRSI2C.s 			page 46


 237:Core/Src/main.c **** }
 238:Core/Src/main.c **** 
 239:Core/Src/main.c **** /* USER CODE END 0 */
 240:Core/Src/main.c **** 
 241:Core/Src/main.c **** /**
 242:Core/Src/main.c ****   * @brief  The application entry point.
 243:Core/Src/main.c ****   * @retval int
 244:Core/Src/main.c ****   */
 245:Core/Src/main.c **** int main(void)
 246:Core/Src/main.c **** {
 247:Core/Src/main.c **** 
 248:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 249:Core/Src/main.c **** 
 250:Core/Src/main.c ****   /* USER CODE END 1 */
 251:Core/Src/main.c **** 
 252:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 253:Core/Src/main.c **** 
 254:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 255:Core/Src/main.c **** 
 256:Core/Src/main.c ****   /* USER CODE END Init */
 257:Core/Src/main.c **** 
 258:Core/Src/main.c **** 
 259:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 260:Core/Src/main.c **** 
 261:Core/Src/main.c ****   /* USER CODE END SysInit */
 262:Core/Src/main.c **** 
 263:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 264:Core/Src/main.c **** 
 265:Core/Src/main.c ****   /* USER CODE END 2 */
 266:Core/Src/main.c **** 
 267:Core/Src/main.c ****   /* Infinite loop */
 268:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 269:Core/Src/main.c ****   while (1)
 270:Core/Src/main.c ****   {
 271:Core/Src/main.c ****     /* USER CODE END WHILE */
 272:Core/Src/main.c **** 
 273:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 274:Core/Src/main.c ****     current_state = run_state(NULL);
 275:Core/Src/main.c ****   }
 276:Core/Src/main.c ****   /* USER CODE END 3 */
 277:Core/Src/main.c **** }
 278:Core/Src/main.c **** 
 279:Core/Src/main.c **** /**
 280:Core/Src/main.c ****   * @brief System Clock Configuration
 281:Core/Src/main.c ****   * @retval None
 282:Core/Src/main.c ****   */
 283:Core/Src/main.c **** void SystemClock_Config(void)
 284:Core/Src/main.c **** {
 285:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 286:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 287:Core/Src/main.c **** 
 288:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 289:Core/Src/main.c ****   */
 290:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 291:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 292:Core/Src/main.c **** 
 293:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
ARM GAS  /tmp/ccyRSI2C.s 			page 47


 294:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 295:Core/Src/main.c ****   */
 296:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 297:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 298:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 299:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 300:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 301:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 16;
 302:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 336;
 303:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 304:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 305:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 306:Core/Src/main.c ****   {
 307:Core/Src/main.c ****     Error_Handler();
 308:Core/Src/main.c ****   }
 309:Core/Src/main.c **** 
 310:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 311:Core/Src/main.c ****   */
 312:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 313:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 314:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 315:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 316:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 317:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 318:Core/Src/main.c **** 
 319:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 320:Core/Src/main.c ****   {
 321:Core/Src/main.c ****     Error_Handler();
 322:Core/Src/main.c ****   }
 323:Core/Src/main.c **** }
 324:Core/Src/main.c **** 
 325:Core/Src/main.c **** /**
 326:Core/Src/main.c ****   * @brief ADC1 Initialization Function
 327:Core/Src/main.c ****   * @param None
 328:Core/Src/main.c ****   * @retval None
 329:Core/Src/main.c ****   */
 330:Core/Src/main.c **** static void MX_ADC1_Init(void)
 331:Core/Src/main.c **** {
 332:Core/Src/main.c **** 
 333:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 0 */
 334:Core/Src/main.c **** 
 335:Core/Src/main.c ****   /* USER CODE END ADC1_Init 0 */
 336:Core/Src/main.c **** 
 337:Core/Src/main.c ****   ADC_ChannelConfTypeDef sConfig = {0};
 338:Core/Src/main.c **** 
 339:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 1 */
 340:Core/Src/main.c **** 
 341:Core/Src/main.c ****   /* USER CODE END ADC1_Init 1 */
 342:Core/Src/main.c **** 
 343:Core/Src/main.c ****   /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of con
 344:Core/Src/main.c ****   */
 345:Core/Src/main.c ****   hadc1.Instance = ADC1;
 346:Core/Src/main.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 347:Core/Src/main.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 348:Core/Src/main.c ****   hadc1.Init.ScanConvMode = DISABLE;
 349:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = ENABLE;
 350:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
ARM GAS  /tmp/ccyRSI2C.s 			page 48


 351:Core/Src/main.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 352:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 353:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 354:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 1;
 355:Core/Src/main.c ****   hadc1.Init.DMAContinuousRequests = ENABLE;
 356:Core/Src/main.c ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 357:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 358:Core/Src/main.c ****   {
 359:Core/Src/main.c ****     Error_Handler();
 360:Core/Src/main.c ****   }
 361:Core/Src/main.c **** 
 362:Core/Src/main.c ****   /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and it
 363:Core/Src/main.c ****   */
 364:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_0;
 365:Core/Src/main.c ****   sConfig.Rank = 1;
 366:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 367:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 368:Core/Src/main.c ****   {
 369:Core/Src/main.c ****     Error_Handler();
 370:Core/Src/main.c ****   }
 371:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 2 */
 372:Core/Src/main.c **** 
 373:Core/Src/main.c ****   /* USER CODE END ADC1_Init 2 */
 374:Core/Src/main.c **** 
 375:Core/Src/main.c **** }
 376:Core/Src/main.c **** 
 377:Core/Src/main.c **** /**
 378:Core/Src/main.c ****   * @brief TIM3 Initialization Function
 379:Core/Src/main.c ****   * @param None
 380:Core/Src/main.c ****   * @retval None
 381:Core/Src/main.c ****   */
 382:Core/Src/main.c **** static void MX_TIM3_Init(void)
 383:Core/Src/main.c **** {
 384:Core/Src/main.c **** 
 385:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 0 */
 386:Core/Src/main.c **** 
 387:Core/Src/main.c ****   /* USER CODE END TIM3_Init 0 */
 388:Core/Src/main.c **** 
 389:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 390:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 391:Core/Src/main.c **** 
 392:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 1 */
 393:Core/Src/main.c **** 
 394:Core/Src/main.c ****   /* USER CODE END TIM3_Init 1 */
 395:Core/Src/main.c ****   htim3.Instance = TIM3;
 396:Core/Src/main.c ****   htim3.Init.Prescaler = 9999;
 397:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 398:Core/Src/main.c ****   htim3.Init.Period = 7199;
 399:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 400:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 401:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 402:Core/Src/main.c ****   {
 403:Core/Src/main.c ****     Error_Handler();
 404:Core/Src/main.c ****   }
 405:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 406:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 407:Core/Src/main.c ****   {
ARM GAS  /tmp/ccyRSI2C.s 			page 49


 408:Core/Src/main.c ****     Error_Handler();
 409:Core/Src/main.c ****   }
 410:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 411:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 412:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 413:Core/Src/main.c ****   {
 414:Core/Src/main.c ****     Error_Handler();
 415:Core/Src/main.c ****   }
 416:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 2 */
 417:Core/Src/main.c **** 
 418:Core/Src/main.c ****   /* USER CODE END TIM3_Init 2 */
 419:Core/Src/main.c **** 
 420:Core/Src/main.c **** }
 421:Core/Src/main.c **** 
 422:Core/Src/main.c **** /**
 423:Core/Src/main.c ****   * @brief TIM4 Initialization Function
 424:Core/Src/main.c ****   * @param None
 425:Core/Src/main.c ****   * @retval None
 426:Core/Src/main.c ****   */
 427:Core/Src/main.c **** static void MX_TIM4_Init(void)
 428:Core/Src/main.c **** {
 429:Core/Src/main.c **** 
 430:Core/Src/main.c ****   /* USER CODE BEGIN TIM4_Init 0 */
 431:Core/Src/main.c **** 
 432:Core/Src/main.c ****   /* USER CODE END TIM4_Init 0 */
 433:Core/Src/main.c **** 
 434:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 435:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 436:Core/Src/main.c **** 
 437:Core/Src/main.c ****   /* USER CODE BEGIN TIM4_Init 1 */
 438:Core/Src/main.c **** 
 439:Core/Src/main.c ****   /* USER CODE END TIM4_Init 1 */
 440:Core/Src/main.c ****   htim4.Instance = TIM4;
 441:Core/Src/main.c ****   htim4.Init.Prescaler = 9999;
 442:Core/Src/main.c ****   htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 443:Core/Src/main.c ****   htim4.Init.Period = 1679;
 444:Core/Src/main.c ****   htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 445:Core/Src/main.c ****   htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 446:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim4) != HAL_OK)
 447:Core/Src/main.c ****   {
 448:Core/Src/main.c ****     Error_Handler();
 449:Core/Src/main.c ****   }
 450:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 451:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim4, &sClockSourceConfig) != HAL_OK)
 452:Core/Src/main.c ****   {
 453:Core/Src/main.c ****     Error_Handler();
 454:Core/Src/main.c ****   }
 455:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 456:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 457:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 458:Core/Src/main.c ****   {
 459:Core/Src/main.c ****     Error_Handler();
 460:Core/Src/main.c ****   }
 461:Core/Src/main.c ****   /* USER CODE BEGIN TIM4_Init 2 */
 462:Core/Src/main.c **** 
 463:Core/Src/main.c ****   /* USER CODE END TIM4_Init 2 */
 464:Core/Src/main.c **** 
ARM GAS  /tmp/ccyRSI2C.s 			page 50


 465:Core/Src/main.c **** }
 466:Core/Src/main.c **** 
 467:Core/Src/main.c **** /**
 468:Core/Src/main.c ****   * @brief USART2 Initialization Function
 469:Core/Src/main.c ****   * @param None
 470:Core/Src/main.c ****   * @retval None
 471:Core/Src/main.c ****   */
 472:Core/Src/main.c **** static void MX_USART2_UART_Init(void)
 473:Core/Src/main.c **** {
 474:Core/Src/main.c **** 
 475:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 0 */
 476:Core/Src/main.c **** 
 477:Core/Src/main.c ****   /* USER CODE END USART2_Init 0 */
 478:Core/Src/main.c **** 
 479:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 1 */
 480:Core/Src/main.c **** 
 481:Core/Src/main.c ****   /* USER CODE END USART2_Init 1 */
 482:Core/Src/main.c ****   huart2.Instance = USART2;
 483:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 484:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 485:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 486:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 487:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 488:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 489:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 490:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 491:Core/Src/main.c ****   {
 492:Core/Src/main.c ****     Error_Handler();
 493:Core/Src/main.c ****   }
 494:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 2 */
 495:Core/Src/main.c **** 
 496:Core/Src/main.c ****   /* USER CODE END USART2_Init 2 */
 497:Core/Src/main.c **** 
 498:Core/Src/main.c **** }
 499:Core/Src/main.c **** 
 500:Core/Src/main.c **** /**
 501:Core/Src/main.c ****   * Enable DMA controller clock
 502:Core/Src/main.c ****   */
 503:Core/Src/main.c **** static void MX_DMA_Init(void)
 504:Core/Src/main.c **** {
 505:Core/Src/main.c **** 
 506:Core/Src/main.c ****   /* DMA controller clock enable */
 507:Core/Src/main.c ****   __HAL_RCC_DMA2_CLK_ENABLE();
 508:Core/Src/main.c **** 
 509:Core/Src/main.c ****   /* DMA interrupt init */
 510:Core/Src/main.c ****   /* DMA2_Stream0_IRQn interrupt configuration */
 511:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA2_Stream0_IRQn, 0, 0);
 512:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA2_Stream0_IRQn);
 513:Core/Src/main.c **** 
 514:Core/Src/main.c **** }
 515:Core/Src/main.c **** 
 516:Core/Src/main.c **** /**
 517:Core/Src/main.c ****   * @brief GPIO Initialization Function
 518:Core/Src/main.c ****   * @param None
 519:Core/Src/main.c ****   * @retval None
 520:Core/Src/main.c ****   */
 521:Core/Src/main.c **** static void MX_GPIO_Init(void)
ARM GAS  /tmp/ccyRSI2C.s 			page 51


 522:Core/Src/main.c **** {
 523:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 524:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 525:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
 526:Core/Src/main.c **** 
 527:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 528:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
 529:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 530:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 531:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 532:Core/Src/main.c **** 
 533:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 534:Core/Src/main.c ****   HAL_GPIO_WritePin(LD2_GPIO_Port, LD2_Pin, GPIO_PIN_RESET);
 535:Core/Src/main.c **** 
 536:Core/Src/main.c ****   /*Configure GPIO pin : B1_Pin */
 537:Core/Src/main.c ****   GPIO_InitStruct.Pin = B1_Pin;
 538:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 539:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 540:Core/Src/main.c ****   HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 541:Core/Src/main.c **** 
 542:Core/Src/main.c ****   /*Configure GPIO pin : PC2 */
 543:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_2;
 544:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING_FALLING;
 545:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 546:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 547:Core/Src/main.c **** 
 548:Core/Src/main.c ****   /*Configure GPIO pin : LD2_Pin */
 549:Core/Src/main.c ****   GPIO_InitStruct.Pin = LD2_Pin;
 550:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 551:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 552:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 553:Core/Src/main.c ****   HAL_GPIO_Init(LD2_GPIO_Port, &GPIO_InitStruct);
 554:Core/Src/main.c **** 
 555:Core/Src/main.c ****   /* EXTI interrupt init*/
 556:Core/Src/main.c ****   HAL_NVIC_SetPriority(EXTI2_IRQn, 0, 0);
 557:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI2_IRQn);
 558:Core/Src/main.c **** 
 559:Core/Src/main.c ****   HAL_NVIC_SetPriority(EXTI15_10_IRQn, 0, 0);
 560:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI15_10_IRQn);
 561:Core/Src/main.c **** 
 562:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 563:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
 564:Core/Src/main.c **** }
 565:Core/Src/main.c **** 
 566:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 567:Core/Src/main.c **** 
 568:Core/Src/main.c **** //debug/info variables
 569:Core/Src/main.c **** char msg_buffer[BUFFER_SIZE];//buffer for serial msg
 570:Core/Src/main.c **** 
 571:Core/Src/main.c **** // GLOBALS
 572:Core/Src/main.c **** // State human-readable names
 573:Core/Src/main.c **** const char *state_names[] = {"init", "wait_request", "error", "listening", "warning", "pause"};
 574:Core/Src/main.c **** 
 575:Core/Src/main.c **** // List of state functions
 576:Core/Src/main.c **** state_func_t *const state_table[NUM_STATES] = {
 577:Core/Src/main.c ****   do_init,         // in state init
 578:Core/Src/main.c ****   do_wait_request, // in state wait_request
ARM GAS  /tmp/ccyRSI2C.s 			page 52


 579:Core/Src/main.c ****   do_error,        // in state error
 580:Core/Src/main.c ****   do_listening,    // in state listening
 581:Core/Src/main.c ****   do_warning,      // in state warning
 582:Core/Src/main.c ****   do_pause,        // in state pause
 583:Core/Src/main.c **** };
 584:Core/Src/main.c **** 
 585:Core/Src/main.c **** // No transition functions
 586:Core/Src/main.c **** 
 587:Core/Src/main.c **** /*  ____  _        _       
 588:Core/Src/main.c ****  * / ___|| |_ __ _| |_ ___ 
 589:Core/Src/main.c ****  * \___ \| __/ _` | __/ _ \
 590:Core/Src/main.c ****  *  ___) | || (_| | ||  __/
 591:Core/Src/main.c ****  * |____/ \__\__,_|\__\___|
 592:Core/Src/main.c ****  *                         
 593:Core/Src/main.c ****  *   __                  _   _                 
 594:Core/Src/main.c ****  *  / _|_   _ _ __   ___| |_(_) ___  _ __  ___ 
 595:Core/Src/main.c ****  * | |_| | | | '_ \ / __| __| |/ _ \| '_ \/ __|
 596:Core/Src/main.c ****  * |  _| |_| | | | | (__| |_| | (_) | | | \__ \
 597:Core/Src/main.c ****  * |_|  \__,_|_| |_|\___|\__|_|\___/|_| |_|___/
 598:Core/Src/main.c ****  */                                             
 599:Core/Src/main.c **** 
 600:Core/Src/main.c **** // Function to be executed in state init
 601:Core/Src/main.c **** // valid return states: STATE_WAIT_REQUEST, STATE_ERROR
 602:Core/Src/main.c **** state_t do_init(state_data_t *data) {
 603:Core/Src/main.c ****   next_state = STATE_WAIT_REQUEST;
 604:Core/Src/main.c ****   
 605:Core/Src/main.c ****   //syslog(LOG_INFO, "[FSM] In state init");
 606:Core/Src/main.c ****   /* Your Code Here */
 607:Core/Src/main.c ****   srand(time(NULL)); //set seed for random number generator
 608:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 609:Core/Src/main.c ****   halStatus = HAL_Init();
 610:Core/Src/main.c **** 
 611:Core/Src/main.c ****   if(halStatus != HAL_OK){
 612:Core/Src/main.c ****     next_state  = STATE_ERROR;
 613:Core/Src/main.c ****     return next_state;
 614:Core/Src/main.c ****   }
 615:Core/Src/main.c **** 
 616:Core/Src/main.c ****   /* Configure the system clock */
 617:Core/Src/main.c ****   SystemClock_Config();
 618:Core/Src/main.c **** 
 619:Core/Src/main.c ****   /* Initialize all configured peripherals */
 620:Core/Src/main.c ****   MX_GPIO_Init();
 621:Core/Src/main.c ****   MX_DMA_Init();
 622:Core/Src/main.c ****   MX_USART2_UART_Init();
 623:Core/Src/main.c ****   MX_ADC1_Init();
 624:Core/Src/main.c ****   MX_TIM3_Init();
 625:Core/Src/main.c ****   MX_TIM4_Init();
 626:Core/Src/main.c **** 
 627:Core/Src/main.c ****   // Initialize the DMA conversion
 628:Core/Src/main.c ****   halStatus = HAL_ADC_Start_DMA(&hadc1, adcBuffer, ADC_BUFFER_SIZE);
 629:Core/Src/main.c ****   if(halStatus != HAL_OK){
 630:Core/Src/main.c ****     next_state  = STATE_ERROR;
 631:Core/Src/main.c ****     return next_state;
 632:Core/Src/main.c ****   }
 633:Core/Src/main.c **** 
 634:Core/Src/main.c ****   halStatus = HAL_UARTEx_ReceiveToIdle_IT(&huart2, (u_int8_t *)cli_command, BUFFER_SIZE);
 635:Core/Src/main.c ****   if(halStatus != HAL_OK){
ARM GAS  /tmp/ccyRSI2C.s 			page 53


 636:Core/Src/main.c ****     next_state  = STATE_ERROR;
 637:Core/Src/main.c ****     return next_state;
 638:Core/Src/main.c ****   }
 639:Core/Src/main.c **** 
 640:Core/Src/main.c ****   lastTimer = HAL_GetTick();//start time of MCU
 641:Core/Src/main.c ****   //next_state = STATE_WAIT_REQUEST;
 642:Core/Src/main.c ****   next_state = STATE_ERROR;
 643:Core/Src/main.c ****   return next_state;
 644:Core/Src/main.c **** }
 645:Core/Src/main.c **** 
 646:Core/Src/main.c **** 
 647:Core/Src/main.c **** // Function to be executed in state wait_request
 648:Core/Src/main.c **** // valid return states: STATE_ERROR, STATE_LISTENING
 649:Core/Src/main.c **** state_t do_wait_request(state_data_t *data) {
 108              		.loc 1 649 45 view -0
 109              		.cfi_startproc
 110              		@ args = 0, pretend = 0, frame = 0
 111              		@ frame_needed = 0, uses_anonymous_args = 0
 650:Core/Src/main.c ****   next_state = NO_CHANGE;
 112              		.loc 1 650 3 view .LVU16
 113              		.loc 1 650 14 is_stmt 0 view .LVU17
 114 0000 164B     		ldr	r3, .L16
 115 0002 0722     		movs	r2, #7
 116 0004 1A70     		strb	r2, [r3]
 651:Core/Src/main.c ****   
 652:Core/Src/main.c ****   //syslog(LOG_INFO, "[FSM] In state wait_request");
 653:Core/Src/main.c ****   /* Your Code Here */
 654:Core/Src/main.c ****   if(!sendRequest){
 117              		.loc 1 654 3 is_stmt 1 view .LVU18
 118              		.loc 1 654 6 is_stmt 0 view .LVU19
 119 0006 164B     		ldr	r3, .L16+4
 120 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 121              		.loc 1 654 5 view .LVU20
 122 000a 23BB     		cbnz	r3, .L11
 655:Core/Src/main.c ****     if(halStatus != HAL_OK){
 123              		.loc 1 655 5 is_stmt 1 view .LVU21
 124              		.loc 1 655 18 is_stmt 0 view .LVU22
 125 000c 154B     		ldr	r3, .L16+8
 126 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 127              		.loc 1 655 7 view .LVU23
 128 0010 CBB9     		cbnz	r3, .L14
 649:Core/Src/main.c ****   next_state = NO_CHANGE;
 129              		.loc 1 649 45 view .LVU24
 130 0012 10B5     		push	{r4, lr}
 131              		.cfi_def_cfa_offset 8
 132              		.cfi_offset 4, -8
 133              		.cfi_offset 14, -4
 656:Core/Src/main.c ****       next_state  = STATE_ERROR;
 657:Core/Src/main.c ****       return next_state;
 658:Core/Src/main.c ****     }
 659:Core/Src/main.c **** 
 660:Core/Src/main.c ****     sprintf(msg_buffer, "C:\r\n");//send comand request to user
 134              		.loc 1 660 5 is_stmt 1 view .LVU25
 135 0014 144C     		ldr	r4, .L16+12
 136 0016 154B     		ldr	r3, .L16+16
 137 0018 93E80300 		ldm	r3, {r0, r1}
 138              	.LVL1:
ARM GAS  /tmp/ccyRSI2C.s 			page 54


 139              		.loc 1 660 5 is_stmt 0 view .LVU26
 140 001c 2060     		str	r0, [r4]
 141 001e 2171     		strb	r1, [r4, #4]
 661:Core/Src/main.c ****     halStatus = HAL_UART_Transmit(&huart2, (uint8_t *)msg_buffer, strlen(msg_buffer), HAL_MAX_DELAY
 142              		.loc 1 661 5 is_stmt 1 view .LVU27
 143              		.loc 1 661 67 is_stmt 0 view .LVU28
 144 0020 2046     		mov	r0, r4
 145 0022 FFF7FEFF 		bl	strlen
 146              	.LVL2:
 147              		.loc 1 661 17 discriminator 1 view .LVU29
 148 0026 4FF0FF33 		mov	r3, #-1
 149 002a 82B2     		uxth	r2, r0
 150 002c 2146     		mov	r1, r4
 151 002e 1048     		ldr	r0, .L16+20
 152 0030 FFF7FEFF 		bl	HAL_UART_Transmit
 153              	.LVL3:
 154              		.loc 1 661 15 discriminator 2 view .LVU30
 155 0034 0B4B     		ldr	r3, .L16+8
 156 0036 1870     		strb	r0, [r3]
 662:Core/Src/main.c ****     if(halStatus != HAL_OK){
 157              		.loc 1 662 5 is_stmt 1 view .LVU31
 158              		.loc 1 662 7 is_stmt 0 view .LVU32
 159 0038 48B9     		cbnz	r0, .L15
 663:Core/Src/main.c ****       next_state  = STATE_ERROR;
 664:Core/Src/main.c ****       return next_state;
 665:Core/Src/main.c ****     }
 666:Core/Src/main.c **** 
 667:Core/Src/main.c ****     sendRequest = 1;
 160              		.loc 1 667 5 is_stmt 1 view .LVU33
 161              		.loc 1 667 17 is_stmt 0 view .LVU34
 162 003a 094B     		ldr	r3, .L16+4
 163 003c 0122     		movs	r2, #1
 164 003e 1A70     		strb	r2, [r3]
 668:Core/Src/main.c ****   }
 669:Core/Src/main.c ****   
 670:Core/Src/main.c ****   return next_state;
 165              		.loc 1 670 3 is_stmt 1 view .LVU35
 166              		.loc 1 670 10 is_stmt 0 view .LVU36
 167 0040 064B     		ldr	r3, .L16
 168 0042 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 169              	.L8:
 671:Core/Src/main.c **** }
 170              		.loc 1 671 1 view .LVU37
 171 0044 10BD     		pop	{r4, pc}
 172              	.LVL4:
 173              	.L14:
 174              		.cfi_def_cfa_offset 0
 175              		.cfi_restore 4
 176              		.cfi_restore 14
 656:Core/Src/main.c ****       return next_state;
 177              		.loc 1 656 7 is_stmt 1 view .LVU38
 656:Core/Src/main.c ****       return next_state;
 178              		.loc 1 656 19 is_stmt 0 view .LVU39
 179 0046 0220     		movs	r0, #2
 180              	.LVL5:
 656:Core/Src/main.c ****       return next_state;
 181              		.loc 1 656 19 view .LVU40
ARM GAS  /tmp/ccyRSI2C.s 			page 55


 182 0048 044B     		ldr	r3, .L16
 183 004a 1870     		strb	r0, [r3]
 657:Core/Src/main.c ****     }
 184              		.loc 1 657 7 is_stmt 1 view .LVU41
 657:Core/Src/main.c ****     }
 185              		.loc 1 657 14 is_stmt 0 view .LVU42
 186 004c 7047     		bx	lr
 187              	.L15:
 188              		.cfi_def_cfa_offset 8
 189              		.cfi_offset 4, -8
 190              		.cfi_offset 14, -4
 663:Core/Src/main.c ****       return next_state;
 191              		.loc 1 663 7 is_stmt 1 view .LVU43
 663:Core/Src/main.c ****       return next_state;
 192              		.loc 1 663 19 is_stmt 0 view .LVU44
 193 004e 0220     		movs	r0, #2
 194 0050 024B     		ldr	r3, .L16
 195 0052 1870     		strb	r0, [r3]
 664:Core/Src/main.c ****     }
 196              		.loc 1 664 7 is_stmt 1 view .LVU45
 664:Core/Src/main.c ****     }
 197              		.loc 1 664 14 is_stmt 0 view .LVU46
 198 0054 F6E7     		b	.L8
 199              	.LVL6:
 200              	.L11:
 201              		.cfi_def_cfa_offset 0
 202              		.cfi_restore 4
 203              		.cfi_restore 14
 670:Core/Src/main.c **** }
 204              		.loc 1 670 3 is_stmt 1 view .LVU47
 670:Core/Src/main.c **** }
 205              		.loc 1 670 10 is_stmt 0 view .LVU48
 206 0056 014B     		ldr	r3, .L16
 207 0058 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 208              	.LVL7:
 209              		.loc 1 671 1 view .LVU49
 210 005a 7047     		bx	lr
 211              	.L17:
 212              		.align	2
 213              	.L16:
 214 005c 00000000 		.word	next_state
 215 0060 00000000 		.word	sendRequest
 216 0064 00000000 		.word	halStatus
 217 0068 00000000 		.word	msg_buffer
 218 006c 00000000 		.word	.LC0
 219 0070 00000000 		.word	huart2
 220              		.cfi_endproc
 221              	.LFE236:
 223              		.section	.rodata.do_error.str1.4,"aMS",%progbits,1
 224              		.align	2
 225              	.LC1:
 226 0000 4552524F 		.ascii	"ERROR\015\012\000"
 226      520D0A00 
 227              		.section	.text.do_error,"ax",%progbits
 228              		.align	1
 229              		.global	do_error
 230              		.syntax unified
ARM GAS  /tmp/ccyRSI2C.s 			page 56


 231              		.thumb
 232              		.thumb_func
 234              	do_error:
 235              	.LVL8:
 236              	.LFB237:
 672:Core/Src/main.c **** 
 673:Core/Src/main.c **** 
 674:Core/Src/main.c **** // Function to be executed in state error
 675:Core/Src/main.c **** // valid return states: NO_CHANGE
 676:Core/Src/main.c **** state_t do_error(state_data_t *data) {
 237              		.loc 1 676 38 is_stmt 1 view -0
 238              		.cfi_startproc
 239              		@ args = 0, pretend = 0, frame = 0
 240              		@ frame_needed = 0, uses_anonymous_args = 0
 241              		.loc 1 676 38 is_stmt 0 view .LVU51
 242 0000 10B5     		push	{r4, lr}
 243              		.cfi_def_cfa_offset 8
 244              		.cfi_offset 4, -8
 245              		.cfi_offset 14, -4
 677:Core/Src/main.c ****   next_state = NO_CHANGE;
 246              		.loc 1 677 3 is_stmt 1 view .LVU52
 247              		.loc 1 677 14 is_stmt 0 view .LVU53
 248 0002 114B     		ldr	r3, .L22
 249 0004 0722     		movs	r2, #7
 250 0006 1A70     		strb	r2, [r3]
 678:Core/Src/main.c ****   
 679:Core/Src/main.c ****   //syslog(LOG_INFO, "[FSM] In state error");
 680:Core/Src/main.c ****   /* Your Code Here */
 681:Core/Src/main.c ****   if(!is_running_error_timer){
 251              		.loc 1 681 3 is_stmt 1 view .LVU54
 252              		.loc 1 681 6 is_stmt 0 view .LVU55
 253 0008 104B     		ldr	r3, .L22+4
 254 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 255              		.loc 1 681 5 view .LVU56
 256 000c A3B1     		cbz	r3, .L21
 257              	.LVL9:
 258              	.L19:
 682:Core/Src/main.c ****     HAL_TIM_Base_Start_IT(&htim4);
 683:Core/Src/main.c ****     is_running_error_timer = 1;
 684:Core/Src/main.c ****   }
 685:Core/Src/main.c **** 
 686:Core/Src/main.c ****   sprintf(msg_buffer, "ERROR\r\n");
 259              		.loc 1 686 3 is_stmt 1 view .LVU57
 260 000e 104C     		ldr	r4, .L22+8
 261 0010 104B     		ldr	r3, .L22+12
 262 0012 93E80300 		ldm	r3, {r0, r1}
 263 0016 84E80300 		stm	r4, {r0, r1}
 687:Core/Src/main.c ****   halStatus = HAL_UART_Transmit(&huart2, (uint8_t *)msg_buffer, strlen(msg_buffer), HAL_MAX_DELAY);
 264              		.loc 1 687 3 view .LVU58
 265              		.loc 1 687 65 is_stmt 0 view .LVU59
 266 001a 2046     		mov	r0, r4
 267 001c FFF7FEFF 		bl	strlen
 268              	.LVL10:
 269              		.loc 1 687 15 discriminator 1 view .LVU60
 270 0020 4FF0FF33 		mov	r3, #-1
 271 0024 82B2     		uxth	r2, r0
 272 0026 2146     		mov	r1, r4
ARM GAS  /tmp/ccyRSI2C.s 			page 57


 273 0028 0B48     		ldr	r0, .L22+16
 274 002a FFF7FEFF 		bl	HAL_UART_Transmit
 275              	.LVL11:
 276              		.loc 1 687 13 discriminator 2 view .LVU61
 277 002e 0B4B     		ldr	r3, .L22+20
 278 0030 1870     		strb	r0, [r3]
 688:Core/Src/main.c **** 
 689:Core/Src/main.c ****   return next_state;
 279              		.loc 1 689 3 is_stmt 1 view .LVU62
 690:Core/Src/main.c **** }
 280              		.loc 1 690 1 is_stmt 0 view .LVU63
 281 0032 054B     		ldr	r3, .L22
 282 0034 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 283 0036 10BD     		pop	{r4, pc}
 284              	.LVL12:
 285              	.L21:
 682:Core/Src/main.c ****     is_running_error_timer = 1;
 286              		.loc 1 682 5 is_stmt 1 view .LVU64
 287 0038 0948     		ldr	r0, .L22+24
 288              	.LVL13:
 682:Core/Src/main.c ****     is_running_error_timer = 1;
 289              		.loc 1 682 5 is_stmt 0 view .LVU65
 290 003a FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 291              	.LVL14:
 683:Core/Src/main.c ****   }
 292              		.loc 1 683 5 is_stmt 1 view .LVU66
 683:Core/Src/main.c ****   }
 293              		.loc 1 683 28 is_stmt 0 view .LVU67
 294 003e 034B     		ldr	r3, .L22+4
 295 0040 0122     		movs	r2, #1
 296 0042 1A70     		strb	r2, [r3]
 297 0044 E3E7     		b	.L19
 298              	.L23:
 299 0046 00BF     		.align	2
 300              	.L22:
 301 0048 00000000 		.word	next_state
 302 004c 00000000 		.word	is_running_error_timer
 303 0050 00000000 		.word	msg_buffer
 304 0054 00000000 		.word	.LC1
 305 0058 00000000 		.word	huart2
 306 005c 00000000 		.word	halStatus
 307 0060 00000000 		.word	htim4
 308              		.cfi_endproc
 309              	.LFE237:
 311              		.section	.rodata.do_warning.str1.4,"aMS",%progbits,1
 312              		.align	2
 313              	.LC2:
 314 0000 5741524E 		.ascii	"WARNING\015\012\000"
 314      494E470D 
 314      0A00
 315              		.section	.text.do_warning,"ax",%progbits
 316              		.align	1
 317              		.global	do_warning
 318              		.syntax unified
 319              		.thumb
 320              		.thumb_func
 322              	do_warning:
ARM GAS  /tmp/ccyRSI2C.s 			page 58


 323              	.LVL15:
 324              	.LFB239:
 691:Core/Src/main.c **** 
 692:Core/Src/main.c **** 
 693:Core/Src/main.c **** // Function to be executed in state listening
 694:Core/Src/main.c **** // valid return states: STATE_ERROR, STATE_WARNING, STATE_PAUSE
 695:Core/Src/main.c **** state_t do_listening(state_data_t *data) {
 696:Core/Src/main.c ****   next_state = NO_CHANGE;
 697:Core/Src/main.c ****   
 698:Core/Src/main.c ****   //syslog(LOG_INFO, "[FSM] In state listening");
 699:Core/Src/main.c ****   /* Your Code Here */
 700:Core/Src/main.c ****   last_index = (BUFFER_SIZE - __HAL_DMA_GET_COUNTER(&hdma_adc1)) % BUFFER_SIZE;
 701:Core/Src/main.c ****   lastAnalogValue = adcBuffer[last_index];
 702:Core/Src/main.c ****   //update moving average if in MOVING_AVERAGE mode
 703:Core/Src/main.c ****   if (currentFilterMode == MOVING_AVERAGE) {
 704:Core/Src/main.c ****     sum -= adc_moving_average[buffer_index];
 705:Core/Src/main.c ****     adc_moving_average[buffer_index] = lastAnalogValue;
 706:Core/Src/main.c ****     sum += lastAnalogValue;
 707:Core/Src/main.c ****     buffer_index = (buffer_index + 1) % MOVING_AVG_SIZE;
 708:Core/Src/main.c ****   }
 709:Core/Src/main.c **** 
 710:Core/Src/main.c ****   //print analog data
 711:Core/Src/main.c ****   switch (currentFilterMode)
 712:Core/Src/main.c ****   {
 713:Core/Src/main.c ****   case RAW:
 714:Core/Src/main.c ****     sprintf(msg_buffer, "A:%hu\r\n", (u_int16_t)lastAnalogValue);
 715:Core/Src/main.c ****     break;
 716:Core/Src/main.c ****   
 717:Core/Src/main.c ****   case MOVING_AVERAGE:
 718:Core/Src/main.c ****     float moving_avg = (float)sum / MOVING_AVG_SIZE;
 719:Core/Src/main.c ****     sprintf(msg_buffer, "A: %.3f\r\n", moving_avg);
 720:Core/Src/main.c ****     break;
 721:Core/Src/main.c **** 
 722:Core/Src/main.c ****   case RANDOM_NOISE:
 723:Core/Src/main.c ****     sprintf(msg_buffer, "A: %hu\r\n", (u_int16_t)(adcBuffer[0] + rand() % RANDOM_RANGE));
 724:Core/Src/main.c ****     break;
 725:Core/Src/main.c **** 
 726:Core/Src/main.c ****   default:
 727:Core/Src/main.c ****     break;
 728:Core/Src/main.c ****   }
 729:Core/Src/main.c ****   halStatus = HAL_UART_Transmit(&huart2, (uint8_t *)msg_buffer, strlen(msg_buffer), HAL_MAX_DELAY);
 730:Core/Src/main.c ****   if(halStatus != HAL_OK){
 731:Core/Src/main.c ****     next_state  = STATE_ERROR;
 732:Core/Src/main.c ****     return next_state;
 733:Core/Src/main.c ****   }
 734:Core/Src/main.c **** 
 735:Core/Src/main.c ****   //print digital data
 736:Core/Src/main.c ****   sprintf(msg_buffer, "D: %hu\r\n", lastDigitalValue);
 737:Core/Src/main.c ****   halStatus = HAL_UART_Transmit(&huart2, (uint8_t *)msg_buffer, strlen(msg_buffer), HAL_MAX_DELAY);
 738:Core/Src/main.c ****   if(halStatus != HAL_OK){
 739:Core/Src/main.c ****     next_state  = STATE_ERROR;
 740:Core/Src/main.c ****     return next_state;
 741:Core/Src/main.c ****   }
 742:Core/Src/main.c **** 
 743:Core/Src/main.c ****   if(lastDigitalValue){
 744:Core/Src/main.c ****     //check if is high for 5 seconds
 745:Core/Src/main.c ****     if(HAL_GetTick() - lastTimer >= 5000){
ARM GAS  /tmp/ccyRSI2C.s 			page 59


 746:Core/Src/main.c ****       //warning state
 747:Core/Src/main.c ****       next_state = STATE_WARNING;
 748:Core/Src/main.c ****       HAL_UART_AbortReceive_IT(&huart2);
 749:Core/Src/main.c ****     }
 750:Core/Src/main.c ****   }else{
 751:Core/Src/main.c ****     //reset timer
 752:Core/Src/main.c ****     lastTimer = HAL_GetTick();
 753:Core/Src/main.c ****   }
 754:Core/Src/main.c **** 
 755:Core/Src/main.c ****   return next_state;
 756:Core/Src/main.c **** }
 757:Core/Src/main.c **** 
 758:Core/Src/main.c **** 
 759:Core/Src/main.c **** // Function to be executed in state warning
 760:Core/Src/main.c **** // valid return states: STATE_WAIT_REQUEST, STATE_ERROR
 761:Core/Src/main.c **** state_t do_warning(state_data_t *data) {
 325              		.loc 1 761 40 is_stmt 1 view -0
 326              		.cfi_startproc
 327              		@ args = 0, pretend = 0, frame = 0
 328              		@ frame_needed = 0, uses_anonymous_args = 0
 329              		.loc 1 761 40 is_stmt 0 view .LVU69
 330 0000 10B5     		push	{r4, lr}
 331              		.cfi_def_cfa_offset 8
 332              		.cfi_offset 4, -8
 333              		.cfi_offset 14, -4
 762:Core/Src/main.c ****   next_state = NO_CHANGE;
 334              		.loc 1 762 3 is_stmt 1 view .LVU70
 335              		.loc 1 762 14 is_stmt 0 view .LVU71
 336 0002 114B     		ldr	r3, .L29
 337 0004 0722     		movs	r2, #7
 338 0006 1A70     		strb	r2, [r3]
 763:Core/Src/main.c ****   
 764:Core/Src/main.c ****   //syslog(LOG_INFO, "[FSM] In state warning");
 765:Core/Src/main.c ****   /* Your Code Here */
 766:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, GPIO_PIN_RESET);
 339              		.loc 1 766 3 is_stmt 1 view .LVU72
 340 0008 0022     		movs	r2, #0
 341 000a 2021     		movs	r1, #32
 342 000c 0F48     		ldr	r0, .L29+4
 343              	.LVL16:
 344              		.loc 1 766 3 is_stmt 0 view .LVU73
 345 000e FFF7FEFF 		bl	HAL_GPIO_WritePin
 346              	.LVL17:
 767:Core/Src/main.c ****   sprintf(msg_buffer, "WARNING\r\n");
 347              		.loc 1 767 3 is_stmt 1 view .LVU74
 348 0012 0F4C     		ldr	r4, .L29+8
 349 0014 0F4A     		ldr	r2, .L29+12
 350 0016 2346     		mov	r3, r4
 351 0018 07CA     		ldm	r2, {r0, r1, r2}
 352 001a 03C3     		stmia	r3!, {r0, r1}
 353 001c 1A80     		strh	r2, [r3]	@ movhi
 768:Core/Src/main.c ****   halStatus = HAL_UART_Transmit(&huart2, (uint8_t *)msg_buffer, strlen(msg_buffer), HAL_MAX_DELAY);
 354              		.loc 1 768 3 view .LVU75
 355              		.loc 1 768 65 is_stmt 0 view .LVU76
 356 001e 2046     		mov	r0, r4
 357 0020 FFF7FEFF 		bl	strlen
 358              	.LVL18:
ARM GAS  /tmp/ccyRSI2C.s 			page 60


 359              		.loc 1 768 15 discriminator 1 view .LVU77
 360 0024 4FF0FF33 		mov	r3, #-1
 361 0028 82B2     		uxth	r2, r0
 362 002a 2146     		mov	r1, r4
 363 002c 0A48     		ldr	r0, .L29+16
 364 002e FFF7FEFF 		bl	HAL_UART_Transmit
 365              	.LVL19:
 366              		.loc 1 768 13 discriminator 2 view .LVU78
 367 0032 0A4B     		ldr	r3, .L29+20
 368 0034 1870     		strb	r0, [r3]
 769:Core/Src/main.c ****   if(halStatus != HAL_OK){
 369              		.loc 1 769 3 is_stmt 1 view .LVU79
 370              		.loc 1 769 5 is_stmt 0 view .LVU80
 371 0036 10B9     		cbnz	r0, .L28
 770:Core/Src/main.c ****     next_state = STATE_ERROR;
 771:Core/Src/main.c ****     return next_state;
 772:Core/Src/main.c ****   }
 773:Core/Src/main.c **** 
 774:Core/Src/main.c ****   return next_state;
 372              		.loc 1 774 3 is_stmt 1 view .LVU81
 373              		.loc 1 774 10 is_stmt 0 view .LVU82
 374 0038 034B     		ldr	r3, .L29
 375 003a 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 376              	.L26:
 775:Core/Src/main.c **** }
 377              		.loc 1 775 1 view .LVU83
 378 003c 10BD     		pop	{r4, pc}
 379              	.L28:
 770:Core/Src/main.c ****     next_state = STATE_ERROR;
 380              		.loc 1 770 5 is_stmt 1 view .LVU84
 770:Core/Src/main.c ****     next_state = STATE_ERROR;
 381              		.loc 1 770 16 is_stmt 0 view .LVU85
 382 003e 0220     		movs	r0, #2
 383 0040 014B     		ldr	r3, .L29
 384 0042 1870     		strb	r0, [r3]
 771:Core/Src/main.c ****   }
 385              		.loc 1 771 5 is_stmt 1 view .LVU86
 771:Core/Src/main.c ****   }
 386              		.loc 1 771 12 is_stmt 0 view .LVU87
 387 0044 FAE7     		b	.L26
 388              	.L30:
 389 0046 00BF     		.align	2
 390              	.L29:
 391 0048 00000000 		.word	next_state
 392 004c 00000240 		.word	1073872896
 393 0050 00000000 		.word	msg_buffer
 394 0054 00000000 		.word	.LC2
 395 0058 00000000 		.word	huart2
 396 005c 00000000 		.word	halStatus
 397              		.cfi_endproc
 398              	.LFE239:
 400              		.section	.text.do_pause,"ax",%progbits
 401              		.align	1
 402              		.global	do_pause
 403              		.syntax unified
 404              		.thumb
 405              		.thumb_func
ARM GAS  /tmp/ccyRSI2C.s 			page 61


 407              	do_pause:
 408              	.LVL20:
 409              	.LFB240:
 776:Core/Src/main.c **** 
 777:Core/Src/main.c **** 
 778:Core/Src/main.c **** // Function to be executed in state pause
 779:Core/Src/main.c **** // valid return states: STATE_ERROR, STATE_LISTENING
 780:Core/Src/main.c **** state_t do_pause(state_data_t *data) {
 410              		.loc 1 780 38 is_stmt 1 view -0
 411              		.cfi_startproc
 412              		@ args = 0, pretend = 0, frame = 0
 413              		@ frame_needed = 0, uses_anonymous_args = 0
 781:Core/Src/main.c ****   next_state = NO_CHANGE;
 414              		.loc 1 781 3 view .LVU89
 415              		.loc 1 781 14 is_stmt 0 view .LVU90
 416 0000 164B     		ldr	r3, .L42
 417 0002 0722     		movs	r2, #7
 418 0004 1A70     		strb	r2, [r3]
 782:Core/Src/main.c ****   
 783:Core/Src/main.c ****   //syslog(LOG_INFO, "[FSM] In state pause");
 784:Core/Src/main.c ****   /* Your Code Here */
 785:Core/Src/main.c ****   if(!sendRequest){
 419              		.loc 1 785 3 is_stmt 1 view .LVU91
 420              		.loc 1 785 6 is_stmt 0 view .LVU92
 421 0006 164B     		ldr	r3, .L42+4
 422 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 423              		.loc 1 785 5 view .LVU93
 424 000a 23BB     		cbnz	r3, .L37
 786:Core/Src/main.c ****     if(halStatus != HAL_OK){
 425              		.loc 1 786 5 is_stmt 1 view .LVU94
 426              		.loc 1 786 18 is_stmt 0 view .LVU95
 427 000c 154B     		ldr	r3, .L42+8
 428 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 429              		.loc 1 786 7 view .LVU96
 430 0010 CBB9     		cbnz	r3, .L40
 780:Core/Src/main.c ****   next_state = NO_CHANGE;
 431              		.loc 1 780 38 view .LVU97
 432 0012 10B5     		push	{r4, lr}
 433              		.cfi_def_cfa_offset 8
 434              		.cfi_offset 4, -8
 435              		.cfi_offset 14, -4
 787:Core/Src/main.c ****       next_state  = STATE_ERROR;
 788:Core/Src/main.c ****       return next_state;
 789:Core/Src/main.c ****     }
 790:Core/Src/main.c **** 
 791:Core/Src/main.c ****     sprintf(msg_buffer, "C:\r\n");//send comand request to user
 436              		.loc 1 791 5 is_stmt 1 view .LVU98
 437 0014 144C     		ldr	r4, .L42+12
 438 0016 154B     		ldr	r3, .L42+16
 439 0018 93E80300 		ldm	r3, {r0, r1}
 440              	.LVL21:
 441              		.loc 1 791 5 is_stmt 0 view .LVU99
 442 001c 2060     		str	r0, [r4]
 443 001e 2171     		strb	r1, [r4, #4]
 792:Core/Src/main.c ****     halStatus = HAL_UART_Transmit(&huart2, (uint8_t *)msg_buffer, strlen(msg_buffer), HAL_MAX_DELAY
 444              		.loc 1 792 5 is_stmt 1 view .LVU100
 445              		.loc 1 792 67 is_stmt 0 view .LVU101
ARM GAS  /tmp/ccyRSI2C.s 			page 62


 446 0020 2046     		mov	r0, r4
 447 0022 FFF7FEFF 		bl	strlen
 448              	.LVL22:
 449              		.loc 1 792 17 discriminator 1 view .LVU102
 450 0026 4FF0FF33 		mov	r3, #-1
 451 002a 82B2     		uxth	r2, r0
 452 002c 2146     		mov	r1, r4
 453 002e 1048     		ldr	r0, .L42+20
 454 0030 FFF7FEFF 		bl	HAL_UART_Transmit
 455              	.LVL23:
 456              		.loc 1 792 15 discriminator 2 view .LVU103
 457 0034 0B4B     		ldr	r3, .L42+8
 458 0036 1870     		strb	r0, [r3]
 793:Core/Src/main.c ****     if(halStatus != HAL_OK){
 459              		.loc 1 793 5 is_stmt 1 view .LVU104
 460              		.loc 1 793 7 is_stmt 0 view .LVU105
 461 0038 48B9     		cbnz	r0, .L41
 794:Core/Src/main.c ****       next_state  = STATE_ERROR;
 795:Core/Src/main.c ****       return next_state;
 796:Core/Src/main.c ****     }
 797:Core/Src/main.c ****     sendRequest = 1;
 462              		.loc 1 797 5 is_stmt 1 view .LVU106
 463              		.loc 1 797 17 is_stmt 0 view .LVU107
 464 003a 094B     		ldr	r3, .L42+4
 465 003c 0122     		movs	r2, #1
 466 003e 1A70     		strb	r2, [r3]
 798:Core/Src/main.c ****   }
 799:Core/Src/main.c **** 
 800:Core/Src/main.c ****   return next_state;
 467              		.loc 1 800 3 is_stmt 1 view .LVU108
 468              		.loc 1 800 10 is_stmt 0 view .LVU109
 469 0040 064B     		ldr	r3, .L42
 470 0042 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 471              	.L34:
 801:Core/Src/main.c **** }
 472              		.loc 1 801 1 view .LVU110
 473 0044 10BD     		pop	{r4, pc}
 474              	.LVL24:
 475              	.L40:
 476              		.cfi_def_cfa_offset 0
 477              		.cfi_restore 4
 478              		.cfi_restore 14
 787:Core/Src/main.c ****       return next_state;
 479              		.loc 1 787 7 is_stmt 1 view .LVU111
 787:Core/Src/main.c ****       return next_state;
 480              		.loc 1 787 19 is_stmt 0 view .LVU112
 481 0046 0220     		movs	r0, #2
 482              	.LVL25:
 787:Core/Src/main.c ****       return next_state;
 483              		.loc 1 787 19 view .LVU113
 484 0048 044B     		ldr	r3, .L42
 485 004a 1870     		strb	r0, [r3]
 788:Core/Src/main.c ****     }
 486              		.loc 1 788 7 is_stmt 1 view .LVU114
 788:Core/Src/main.c ****     }
 487              		.loc 1 788 14 is_stmt 0 view .LVU115
 488 004c 7047     		bx	lr
ARM GAS  /tmp/ccyRSI2C.s 			page 63


 489              	.L41:
 490              		.cfi_def_cfa_offset 8
 491              		.cfi_offset 4, -8
 492              		.cfi_offset 14, -4
 794:Core/Src/main.c ****       return next_state;
 493              		.loc 1 794 7 is_stmt 1 view .LVU116
 794:Core/Src/main.c ****       return next_state;
 494              		.loc 1 794 19 is_stmt 0 view .LVU117
 495 004e 0220     		movs	r0, #2
 496 0050 024B     		ldr	r3, .L42
 497 0052 1870     		strb	r0, [r3]
 795:Core/Src/main.c ****     }
 498              		.loc 1 795 7 is_stmt 1 view .LVU118
 795:Core/Src/main.c ****     }
 499              		.loc 1 795 14 is_stmt 0 view .LVU119
 500 0054 F6E7     		b	.L34
 501              	.LVL26:
 502              	.L37:
 503              		.cfi_def_cfa_offset 0
 504              		.cfi_restore 4
 505              		.cfi_restore 14
 800:Core/Src/main.c **** }
 506              		.loc 1 800 3 is_stmt 1 view .LVU120
 800:Core/Src/main.c **** }
 507              		.loc 1 800 10 is_stmt 0 view .LVU121
 508 0056 014B     		ldr	r3, .L42
 509 0058 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 510              	.LVL27:
 511              		.loc 1 801 1 view .LVU122
 512 005a 7047     		bx	lr
 513              	.L43:
 514              		.align	2
 515              	.L42:
 516 005c 00000000 		.word	next_state
 517 0060 00000000 		.word	sendRequest
 518 0064 00000000 		.word	halStatus
 519 0068 00000000 		.word	msg_buffer
 520 006c 00000000 		.word	.LC0
 521 0070 00000000 		.word	huart2
 522              		.cfi_endproc
 523              	.LFE240:
 525              		.section	.text.MX_GPIO_Init,"ax",%progbits
 526              		.align	1
 527              		.syntax unified
 528              		.thumb
 529              		.thumb_func
 531              	MX_GPIO_Init:
 532              	.LFB234:
 522:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 533              		.loc 1 522 1 is_stmt 1 view -0
 534              		.cfi_startproc
 535              		@ args = 0, pretend = 0, frame = 40
 536              		@ frame_needed = 0, uses_anonymous_args = 0
 537 0000 70B5     		push	{r4, r5, r6, lr}
 538              		.cfi_def_cfa_offset 16
 539              		.cfi_offset 4, -16
 540              		.cfi_offset 5, -12
ARM GAS  /tmp/ccyRSI2C.s 			page 64


 541              		.cfi_offset 6, -8
 542              		.cfi_offset 14, -4
 543 0002 8AB0     		sub	sp, sp, #40
 544              		.cfi_def_cfa_offset 56
 523:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 545              		.loc 1 523 3 view .LVU124
 523:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 546              		.loc 1 523 20 is_stmt 0 view .LVU125
 547 0004 0024     		movs	r4, #0
 548 0006 0594     		str	r4, [sp, #20]
 549 0008 0694     		str	r4, [sp, #24]
 550 000a 0794     		str	r4, [sp, #28]
 551 000c 0894     		str	r4, [sp, #32]
 552 000e 0994     		str	r4, [sp, #36]
 528:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 553              		.loc 1 528 3 is_stmt 1 view .LVU126
 554              	.LBB12:
 528:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 555              		.loc 1 528 3 view .LVU127
 556 0010 0194     		str	r4, [sp, #4]
 528:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 557              		.loc 1 528 3 view .LVU128
 558 0012 304B     		ldr	r3, .L46
 559 0014 1A6B     		ldr	r2, [r3, #48]
 560 0016 42F00402 		orr	r2, r2, #4
 561 001a 1A63     		str	r2, [r3, #48]
 528:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 562              		.loc 1 528 3 view .LVU129
 563 001c 1A6B     		ldr	r2, [r3, #48]
 564 001e 02F00402 		and	r2, r2, #4
 565 0022 0192     		str	r2, [sp, #4]
 528:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 566              		.loc 1 528 3 view .LVU130
 567 0024 019A     		ldr	r2, [sp, #4]
 568              	.LBE12:
 528:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 569              		.loc 1 528 3 view .LVU131
 529:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 570              		.loc 1 529 3 view .LVU132
 571              	.LBB13:
 529:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 572              		.loc 1 529 3 view .LVU133
 573 0026 0294     		str	r4, [sp, #8]
 529:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 574              		.loc 1 529 3 view .LVU134
 575 0028 1A6B     		ldr	r2, [r3, #48]
 576 002a 42F08002 		orr	r2, r2, #128
 577 002e 1A63     		str	r2, [r3, #48]
 529:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 578              		.loc 1 529 3 view .LVU135
 579 0030 1A6B     		ldr	r2, [r3, #48]
 580 0032 02F08002 		and	r2, r2, #128
 581 0036 0292     		str	r2, [sp, #8]
 529:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 582              		.loc 1 529 3 view .LVU136
 583 0038 029A     		ldr	r2, [sp, #8]
 584              	.LBE13:
ARM GAS  /tmp/ccyRSI2C.s 			page 65


 529:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 585              		.loc 1 529 3 view .LVU137
 530:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 586              		.loc 1 530 3 view .LVU138
 587              	.LBB14:
 530:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 588              		.loc 1 530 3 view .LVU139
 589 003a 0394     		str	r4, [sp, #12]
 530:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 590              		.loc 1 530 3 view .LVU140
 591 003c 1A6B     		ldr	r2, [r3, #48]
 592 003e 42F00102 		orr	r2, r2, #1
 593 0042 1A63     		str	r2, [r3, #48]
 530:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 594              		.loc 1 530 3 view .LVU141
 595 0044 1A6B     		ldr	r2, [r3, #48]
 596 0046 02F00102 		and	r2, r2, #1
 597 004a 0392     		str	r2, [sp, #12]
 530:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 598              		.loc 1 530 3 view .LVU142
 599 004c 039A     		ldr	r2, [sp, #12]
 600              	.LBE14:
 530:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 601              		.loc 1 530 3 view .LVU143
 531:Core/Src/main.c **** 
 602              		.loc 1 531 3 view .LVU144
 603              	.LBB15:
 531:Core/Src/main.c **** 
 604              		.loc 1 531 3 view .LVU145
 605 004e 0494     		str	r4, [sp, #16]
 531:Core/Src/main.c **** 
 606              		.loc 1 531 3 view .LVU146
 607 0050 1A6B     		ldr	r2, [r3, #48]
 608 0052 42F00202 		orr	r2, r2, #2
 609 0056 1A63     		str	r2, [r3, #48]
 531:Core/Src/main.c **** 
 610              		.loc 1 531 3 view .LVU147
 611 0058 1B6B     		ldr	r3, [r3, #48]
 612 005a 03F00203 		and	r3, r3, #2
 613 005e 0493     		str	r3, [sp, #16]
 531:Core/Src/main.c **** 
 614              		.loc 1 531 3 view .LVU148
 615 0060 049B     		ldr	r3, [sp, #16]
 616              	.LBE15:
 531:Core/Src/main.c **** 
 617              		.loc 1 531 3 view .LVU149
 534:Core/Src/main.c **** 
 618              		.loc 1 534 3 view .LVU150
 619 0062 1D4D     		ldr	r5, .L46+4
 620 0064 2246     		mov	r2, r4
 621 0066 2021     		movs	r1, #32
 622 0068 2846     		mov	r0, r5
 623 006a FFF7FEFF 		bl	HAL_GPIO_WritePin
 624              	.LVL28:
 537:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 625              		.loc 1 537 3 view .LVU151
 537:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
ARM GAS  /tmp/ccyRSI2C.s 			page 66


 626              		.loc 1 537 23 is_stmt 0 view .LVU152
 627 006e 4FF40053 		mov	r3, #8192
 628 0072 0593     		str	r3, [sp, #20]
 538:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 629              		.loc 1 538 3 is_stmt 1 view .LVU153
 538:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 630              		.loc 1 538 24 is_stmt 0 view .LVU154
 631 0074 4FF40413 		mov	r3, #2162688
 632 0078 0693     		str	r3, [sp, #24]
 539:Core/Src/main.c ****   HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 633              		.loc 1 539 3 is_stmt 1 view .LVU155
 539:Core/Src/main.c ****   HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 634              		.loc 1 539 24 is_stmt 0 view .LVU156
 635 007a 0794     		str	r4, [sp, #28]
 540:Core/Src/main.c **** 
 636              		.loc 1 540 3 is_stmt 1 view .LVU157
 637 007c 174E     		ldr	r6, .L46+8
 638 007e 05A9     		add	r1, sp, #20
 639 0080 3046     		mov	r0, r6
 640 0082 FFF7FEFF 		bl	HAL_GPIO_Init
 641              	.LVL29:
 543:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING_FALLING;
 642              		.loc 1 543 3 view .LVU158
 543:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING_FALLING;
 643              		.loc 1 543 23 is_stmt 0 view .LVU159
 644 0086 0423     		movs	r3, #4
 645 0088 0593     		str	r3, [sp, #20]
 544:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 646              		.loc 1 544 3 is_stmt 1 view .LVU160
 544:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 647              		.loc 1 544 24 is_stmt 0 view .LVU161
 648 008a 4FF44413 		mov	r3, #3211264
 649 008e 0693     		str	r3, [sp, #24]
 545:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 650              		.loc 1 545 3 is_stmt 1 view .LVU162
 545:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 651              		.loc 1 545 24 is_stmt 0 view .LVU163
 652 0090 0794     		str	r4, [sp, #28]
 546:Core/Src/main.c **** 
 653              		.loc 1 546 3 is_stmt 1 view .LVU164
 654 0092 05A9     		add	r1, sp, #20
 655 0094 3046     		mov	r0, r6
 656 0096 FFF7FEFF 		bl	HAL_GPIO_Init
 657              	.LVL30:
 549:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 658              		.loc 1 549 3 view .LVU165
 549:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 659              		.loc 1 549 23 is_stmt 0 view .LVU166
 660 009a 2023     		movs	r3, #32
 661 009c 0593     		str	r3, [sp, #20]
 550:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 662              		.loc 1 550 3 is_stmt 1 view .LVU167
 550:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 663              		.loc 1 550 24 is_stmt 0 view .LVU168
 664 009e 0123     		movs	r3, #1
 665 00a0 0693     		str	r3, [sp, #24]
 551:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
ARM GAS  /tmp/ccyRSI2C.s 			page 67


 666              		.loc 1 551 3 is_stmt 1 view .LVU169
 551:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 667              		.loc 1 551 24 is_stmt 0 view .LVU170
 668 00a2 0794     		str	r4, [sp, #28]
 552:Core/Src/main.c ****   HAL_GPIO_Init(LD2_GPIO_Port, &GPIO_InitStruct);
 669              		.loc 1 552 3 is_stmt 1 view .LVU171
 552:Core/Src/main.c ****   HAL_GPIO_Init(LD2_GPIO_Port, &GPIO_InitStruct);
 670              		.loc 1 552 25 is_stmt 0 view .LVU172
 671 00a4 0894     		str	r4, [sp, #32]
 553:Core/Src/main.c **** 
 672              		.loc 1 553 3 is_stmt 1 view .LVU173
 673 00a6 05A9     		add	r1, sp, #20
 674 00a8 2846     		mov	r0, r5
 675 00aa FFF7FEFF 		bl	HAL_GPIO_Init
 676              	.LVL31:
 556:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI2_IRQn);
 677              		.loc 1 556 3 view .LVU174
 678 00ae 2246     		mov	r2, r4
 679 00b0 2146     		mov	r1, r4
 680 00b2 0820     		movs	r0, #8
 681 00b4 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 682              	.LVL32:
 557:Core/Src/main.c **** 
 683              		.loc 1 557 3 view .LVU175
 684 00b8 0820     		movs	r0, #8
 685 00ba FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 686              	.LVL33:
 559:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI15_10_IRQn);
 687              		.loc 1 559 3 view .LVU176
 688 00be 2246     		mov	r2, r4
 689 00c0 2146     		mov	r1, r4
 690 00c2 2820     		movs	r0, #40
 691 00c4 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 692              	.LVL34:
 560:Core/Src/main.c **** 
 693              		.loc 1 560 3 view .LVU177
 694 00c8 2820     		movs	r0, #40
 695 00ca FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 696              	.LVL35:
 564:Core/Src/main.c **** 
 697              		.loc 1 564 1 is_stmt 0 view .LVU178
 698 00ce 0AB0     		add	sp, sp, #40
 699              		.cfi_def_cfa_offset 16
 700              		@ sp needed
 701 00d0 70BD     		pop	{r4, r5, r6, pc}
 702              	.L47:
 703 00d2 00BF     		.align	2
 704              	.L46:
 705 00d4 00380240 		.word	1073887232
 706 00d8 00000240 		.word	1073872896
 707 00dc 00080240 		.word	1073874944
 708              		.cfi_endproc
 709              	.LFE234:
 711              		.section	.text.MX_DMA_Init,"ax",%progbits
 712              		.align	1
 713              		.syntax unified
 714              		.thumb
ARM GAS  /tmp/ccyRSI2C.s 			page 68


 715              		.thumb_func
 717              	MX_DMA_Init:
 718              	.LFB233:
 504:Core/Src/main.c **** 
 719              		.loc 1 504 1 is_stmt 1 view -0
 720              		.cfi_startproc
 721              		@ args = 0, pretend = 0, frame = 8
 722              		@ frame_needed = 0, uses_anonymous_args = 0
 723 0000 00B5     		push	{lr}
 724              		.cfi_def_cfa_offset 4
 725              		.cfi_offset 14, -4
 726 0002 83B0     		sub	sp, sp, #12
 727              		.cfi_def_cfa_offset 16
 507:Core/Src/main.c **** 
 728              		.loc 1 507 3 view .LVU180
 729              	.LBB16:
 507:Core/Src/main.c **** 
 730              		.loc 1 507 3 view .LVU181
 731 0004 0021     		movs	r1, #0
 732 0006 0191     		str	r1, [sp, #4]
 507:Core/Src/main.c **** 
 733              		.loc 1 507 3 view .LVU182
 734 0008 094B     		ldr	r3, .L50
 735 000a 1A6B     		ldr	r2, [r3, #48]
 736 000c 42F48002 		orr	r2, r2, #4194304
 737 0010 1A63     		str	r2, [r3, #48]
 507:Core/Src/main.c **** 
 738              		.loc 1 507 3 view .LVU183
 739 0012 1B6B     		ldr	r3, [r3, #48]
 740 0014 03F48003 		and	r3, r3, #4194304
 741 0018 0193     		str	r3, [sp, #4]
 507:Core/Src/main.c **** 
 742              		.loc 1 507 3 view .LVU184
 743 001a 019B     		ldr	r3, [sp, #4]
 744              	.LBE16:
 507:Core/Src/main.c **** 
 745              		.loc 1 507 3 view .LVU185
 511:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA2_Stream0_IRQn);
 746              		.loc 1 511 3 view .LVU186
 747 001c 0A46     		mov	r2, r1
 748 001e 3820     		movs	r0, #56
 749 0020 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 750              	.LVL36:
 512:Core/Src/main.c **** 
 751              		.loc 1 512 3 view .LVU187
 752 0024 3820     		movs	r0, #56
 753 0026 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 754              	.LVL37:
 514:Core/Src/main.c **** 
 755              		.loc 1 514 1 is_stmt 0 view .LVU188
 756 002a 03B0     		add	sp, sp, #12
 757              		.cfi_def_cfa_offset 4
 758              		@ sp needed
 759 002c 5DF804FB 		ldr	pc, [sp], #4
 760              	.L51:
 761              		.align	2
 762              	.L50:
ARM GAS  /tmp/ccyRSI2C.s 			page 69


 763 0030 00380240 		.word	1073887232
 764              		.cfi_endproc
 765              	.LFE233:
 767              		.section	.rodata.do_listening.str1.4,"aMS",%progbits,1
 768              		.align	2
 769              	.LC3:
 770 0000 413A2568 		.ascii	"A:%hu\015\012\000"
 770      750D0A00 
 771              		.global	__aeabi_f2d
 772              		.align	2
 773              	.LC4:
 774 0008 413A2025 		.ascii	"A: %.3f\015\012\000"
 774      2E33660D 
 774      0A00
 775 0012 0000     		.align	2
 776              	.LC5:
 777 0014 413A2025 		.ascii	"A: %hu\015\012\000"
 777      68750D0A 
 777      00
 778 001d 000000   		.align	2
 779              	.LC6:
 780 0020 443A2025 		.ascii	"D: %hu\015\012\000"
 780      68750D0A 
 780      00
 781              		.section	.text.do_listening,"ax",%progbits
 782              		.align	1
 783              		.global	do_listening
 784              		.syntax unified
 785              		.thumb
 786              		.thumb_func
 788              	do_listening:
 789              	.LVL38:
 790              	.LFB238:
 695:Core/Src/main.c ****   next_state = NO_CHANGE;
 791              		.loc 1 695 42 is_stmt 1 view -0
 792              		.cfi_startproc
 793              		@ args = 0, pretend = 0, frame = 0
 794              		@ frame_needed = 0, uses_anonymous_args = 0
 695:Core/Src/main.c ****   next_state = NO_CHANGE;
 795              		.loc 1 695 42 is_stmt 0 view .LVU190
 796 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 797              		.cfi_def_cfa_offset 24
 798              		.cfi_offset 3, -24
 799              		.cfi_offset 4, -20
 800              		.cfi_offset 5, -16
 801              		.cfi_offset 6, -12
 802              		.cfi_offset 7, -8
 803              		.cfi_offset 14, -4
 696:Core/Src/main.c ****   
 804              		.loc 1 696 3 is_stmt 1 view .LVU191
 696:Core/Src/main.c ****   
 805              		.loc 1 696 14 is_stmt 0 view .LVU192
 806 0002 574B     		ldr	r3, .L66
 807 0004 0722     		movs	r2, #7
 808 0006 1A70     		strb	r2, [r3]
 700:Core/Src/main.c ****   lastAnalogValue = adcBuffer[last_index];
 809              		.loc 1 700 3 is_stmt 1 view .LVU193
ARM GAS  /tmp/ccyRSI2C.s 			page 70


 700:Core/Src/main.c ****   lastAnalogValue = adcBuffer[last_index];
 810              		.loc 1 700 31 is_stmt 0 view .LVU194
 811 0008 564B     		ldr	r3, .L66+4
 812 000a 1B68     		ldr	r3, [r3]
 813 000c 5A68     		ldr	r2, [r3, #4]
 700:Core/Src/main.c ****   lastAnalogValue = adcBuffer[last_index];
 814              		.loc 1 700 29 view .LVU195
 815 000e C2F13202 		rsb	r2, r2, #50
 700:Core/Src/main.c ****   lastAnalogValue = adcBuffer[last_index];
 816              		.loc 1 700 66 view .LVU196
 817 0012 554B     		ldr	r3, .L66+8
 818 0014 A3FB0213 		umull	r1, r3, r3, r2
 819 0018 1B09     		lsrs	r3, r3, #4
 820 001a 3221     		movs	r1, #50
 821 001c 01FB1323 		mls	r3, r1, r3, r2
 700:Core/Src/main.c ****   lastAnalogValue = adcBuffer[last_index];
 822              		.loc 1 700 14 view .LVU197
 823 0020 524A     		ldr	r2, .L66+12
 824 0022 1380     		strh	r3, [r2]	@ movhi
 701:Core/Src/main.c ****   //update moving average if in MOVING_AVERAGE mode
 825              		.loc 1 701 3 is_stmt 1 view .LVU198
 701:Core/Src/main.c ****   //update moving average if in MOVING_AVERAGE mode
 826              		.loc 1 701 30 is_stmt 0 view .LVU199
 827 0024 9BB2     		uxth	r3, r3
 828 0026 524A     		ldr	r2, .L66+16
 829 0028 52F82320 		ldr	r2, [r2, r3, lsl #2]
 701:Core/Src/main.c ****   //update moving average if in MOVING_AVERAGE mode
 830              		.loc 1 701 19 view .LVU200
 831 002c 94B2     		uxth	r4, r2
 832 002e 514B     		ldr	r3, .L66+20
 833 0030 1C80     		strh	r4, [r3]	@ movhi
 703:Core/Src/main.c ****     sum -= adc_moving_average[buffer_index];
 834              		.loc 1 703 3 is_stmt 1 view .LVU201
 703:Core/Src/main.c ****     sum -= adc_moving_average[buffer_index];
 835              		.loc 1 703 25 is_stmt 0 view .LVU202
 836 0032 514B     		ldr	r3, .L66+24
 837 0034 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 703:Core/Src/main.c ****     sum -= adc_moving_average[buffer_index];
 838              		.loc 1 703 6 view .LVU203
 839 0036 012B     		cmp	r3, #1
 840 0038 41D0     		beq	.L63
 841              	.LVL39:
 842              	.L53:
 711:Core/Src/main.c ****   {
 843              		.loc 1 711 3 is_stmt 1 view .LVU204
 844 003a 012B     		cmp	r3, #1
 845 003c 58D0     		beq	.L54
 846 003e 022B     		cmp	r3, #2
 847 0040 6AD0     		beq	.L55
 848 0042 23B9     		cbnz	r3, .L56
 849              	.LBB17:
 714:Core/Src/main.c ****     break;
 850              		.loc 1 714 5 view .LVU205
 851 0044 92B2     		uxth	r2, r2
 852 0046 4D49     		ldr	r1, .L66+28
 853 0048 4D48     		ldr	r0, .L66+32
 854 004a FFF7FEFF 		bl	sprintf
ARM GAS  /tmp/ccyRSI2C.s 			page 71


 855              	.LVL40:
 715:Core/Src/main.c ****   
 856              		.loc 1 715 5 view .LVU206
 857              	.L56:
 858              	.LBE17:
 729:Core/Src/main.c ****   if(halStatus != HAL_OK){
 859              		.loc 1 729 3 view .LVU207
 729:Core/Src/main.c ****   if(halStatus != HAL_OK){
 860              		.loc 1 729 65 is_stmt 0 view .LVU208
 861 004e 4C4C     		ldr	r4, .L66+32
 862 0050 2046     		mov	r0, r4
 863 0052 FFF7FEFF 		bl	strlen
 864              	.LVL41:
 729:Core/Src/main.c ****   if(halStatus != HAL_OK){
 865              		.loc 1 729 15 discriminator 1 view .LVU209
 866 0056 4FF0FF33 		mov	r3, #-1
 867 005a 82B2     		uxth	r2, r0
 868 005c 2146     		mov	r1, r4
 869 005e 4948     		ldr	r0, .L66+36
 870 0060 FFF7FEFF 		bl	HAL_UART_Transmit
 871              	.LVL42:
 729:Core/Src/main.c ****   if(halStatus != HAL_OK){
 872              		.loc 1 729 13 discriminator 2 view .LVU210
 873 0064 484B     		ldr	r3, .L66+40
 874 0066 1870     		strb	r0, [r3]
 730:Core/Src/main.c ****     next_state  = STATE_ERROR;
 875              		.loc 1 730 3 is_stmt 1 view .LVU211
 730:Core/Src/main.c ****     next_state  = STATE_ERROR;
 876              		.loc 1 730 5 is_stmt 0 view .LVU212
 877 0068 0028     		cmp	r0, #0
 878 006a 6AD1     		bne	.L64
 736:Core/Src/main.c ****   halStatus = HAL_UART_Transmit(&huart2, (uint8_t *)msg_buffer, strlen(msg_buffer), HAL_MAX_DELAY);
 879              		.loc 1 736 3 is_stmt 1 view .LVU213
 880 006c 444C     		ldr	r4, .L66+32
 881 006e 474B     		ldr	r3, .L66+44
 882 0070 1A88     		ldrh	r2, [r3]
 883 0072 4749     		ldr	r1, .L66+48
 884 0074 2046     		mov	r0, r4
 885 0076 FFF7FEFF 		bl	sprintf
 886              	.LVL43:
 737:Core/Src/main.c ****   if(halStatus != HAL_OK){
 887              		.loc 1 737 3 view .LVU214
 737:Core/Src/main.c ****   if(halStatus != HAL_OK){
 888              		.loc 1 737 65 is_stmt 0 view .LVU215
 889 007a 2046     		mov	r0, r4
 890 007c FFF7FEFF 		bl	strlen
 891              	.LVL44:
 737:Core/Src/main.c ****   if(halStatus != HAL_OK){
 892              		.loc 1 737 15 discriminator 1 view .LVU216
 893 0080 4FF0FF33 		mov	r3, #-1
 894 0084 82B2     		uxth	r2, r0
 895 0086 2146     		mov	r1, r4
 896 0088 3E48     		ldr	r0, .L66+36
 897 008a FFF7FEFF 		bl	HAL_UART_Transmit
 898              	.LVL45:
 737:Core/Src/main.c ****   if(halStatus != HAL_OK){
 899              		.loc 1 737 13 discriminator 2 view .LVU217
ARM GAS  /tmp/ccyRSI2C.s 			page 72


 900 008e 3E4B     		ldr	r3, .L66+40
 901 0090 1870     		strb	r0, [r3]
 738:Core/Src/main.c ****     next_state  = STATE_ERROR;
 902              		.loc 1 738 3 is_stmt 1 view .LVU218
 738:Core/Src/main.c ****     next_state  = STATE_ERROR;
 903              		.loc 1 738 5 is_stmt 0 view .LVU219
 904 0092 0028     		cmp	r0, #0
 905 0094 59D1     		bne	.L65
 743:Core/Src/main.c ****     //check if is high for 5 seconds
 906              		.loc 1 743 3 is_stmt 1 view .LVU220
 743:Core/Src/main.c ****     //check if is high for 5 seconds
 907              		.loc 1 743 6 is_stmt 0 view .LVU221
 908 0096 3D4B     		ldr	r3, .L66+44
 909 0098 1B88     		ldrh	r3, [r3]
 743:Core/Src/main.c ****     //check if is high for 5 seconds
 910              		.loc 1 743 5 view .LVU222
 911 009a 002B     		cmp	r3, #0
 912 009c 59D0     		beq	.L60
 745:Core/Src/main.c ****       //warning state
 913              		.loc 1 745 5 is_stmt 1 view .LVU223
 745:Core/Src/main.c ****       //warning state
 914              		.loc 1 745 8 is_stmt 0 view .LVU224
 915 009e FFF7FEFF 		bl	HAL_GetTick
 916              	.LVL46:
 745:Core/Src/main.c ****       //warning state
 917              		.loc 1 745 22 discriminator 1 view .LVU225
 918 00a2 3C4B     		ldr	r3, .L66+52
 919 00a4 1B68     		ldr	r3, [r3]
 920 00a6 C01A     		subs	r0, r0, r3
 745:Core/Src/main.c ****       //warning state
 921              		.loc 1 745 7 discriminator 1 view .LVU226
 922 00a8 41F28733 		movw	r3, #4999
 923 00ac 9842     		cmp	r0, r3
 924 00ae 54D9     		bls	.L61
 747:Core/Src/main.c ****       HAL_UART_AbortReceive_IT(&huart2);
 925              		.loc 1 747 7 is_stmt 1 view .LVU227
 747:Core/Src/main.c ****       HAL_UART_AbortReceive_IT(&huart2);
 926              		.loc 1 747 18 is_stmt 0 view .LVU228
 927 00b0 2B4B     		ldr	r3, .L66
 928 00b2 0422     		movs	r2, #4
 929 00b4 1A70     		strb	r2, [r3]
 748:Core/Src/main.c ****     }
 930              		.loc 1 748 7 is_stmt 1 view .LVU229
 931 00b6 3348     		ldr	r0, .L66+36
 932 00b8 FFF7FEFF 		bl	HAL_UART_AbortReceive_IT
 933              	.LVL47:
 934 00bc 4DE0     		b	.L61
 935              	.LVL48:
 936              	.L63:
 704:Core/Src/main.c ****     adc_moving_average[buffer_index] = lastAnalogValue;
 937              		.loc 1 704 5 view .LVU230
 704:Core/Src/main.c ****     adc_moving_average[buffer_index] = lastAnalogValue;
 938              		.loc 1 704 30 is_stmt 0 view .LVU231
 939 00be 364E     		ldr	r6, .L66+56
 940 00c0 3188     		ldrh	r1, [r6]
 941 00c2 364F     		ldr	r7, .L66+60
 942 00c4 37F811C0 		ldrh	ip, [r7, r1, lsl #1]
ARM GAS  /tmp/ccyRSI2C.s 			page 73


 704:Core/Src/main.c ****     adc_moving_average[buffer_index] = lastAnalogValue;
 943              		.loc 1 704 9 view .LVU232
 944 00c8 354D     		ldr	r5, .L66+64
 945 00ca 2868     		ldr	r0, [r5]
 946              	.LVL49:
 704:Core/Src/main.c ****     adc_moving_average[buffer_index] = lastAnalogValue;
 947              		.loc 1 704 9 view .LVU233
 948 00cc A0EB0C00 		sub	r0, r0, ip
 949 00d0 2860     		str	r0, [r5]
 705:Core/Src/main.c ****     sum += lastAnalogValue;
 950              		.loc 1 705 5 is_stmt 1 view .LVU234
 705:Core/Src/main.c ****     sum += lastAnalogValue;
 951              		.loc 1 705 38 is_stmt 0 view .LVU235
 952 00d2 27F81140 		strh	r4, [r7, r1, lsl #1]	@ movhi
 706:Core/Src/main.c ****     buffer_index = (buffer_index + 1) % MOVING_AVG_SIZE;
 953              		.loc 1 706 5 is_stmt 1 view .LVU236
 706:Core/Src/main.c ****     buffer_index = (buffer_index + 1) % MOVING_AVG_SIZE;
 954              		.loc 1 706 9 is_stmt 0 view .LVU237
 955 00d6 10FA82F0 		uxtah	r0, r0, r2
 956 00da 2860     		str	r0, [r5]
 707:Core/Src/main.c ****   }
 957              		.loc 1 707 5 is_stmt 1 view .LVU238
 707:Core/Src/main.c ****   }
 958              		.loc 1 707 34 is_stmt 0 view .LVU239
 959 00dc 481C     		adds	r0, r1, #1
 707:Core/Src/main.c ****   }
 960              		.loc 1 707 39 view .LVU240
 961 00de 3149     		ldr	r1, .L66+68
 962 00e0 81FB0041 		smull	r4, r1, r1, r0
 963 00e4 0911     		asrs	r1, r1, #4
 964 00e6 9624     		movs	r4, #150
 965 00e8 04FB1101 		mls	r1, r4, r1, r0
 707:Core/Src/main.c ****   }
 966              		.loc 1 707 18 view .LVU241
 967 00ec 3180     		strh	r1, [r6]	@ movhi
 968 00ee A4E7     		b	.L53
 969              	.L54:
 970              	.LBB18:
 718:Core/Src/main.c ****     sprintf(msg_buffer, "A: %.3f\r\n", moving_avg);
 971              		.loc 1 718 5 is_stmt 1 view .LVU242
 718:Core/Src/main.c ****     sprintf(msg_buffer, "A: %.3f\r\n", moving_avg);
 972              		.loc 1 718 24 is_stmt 0 view .LVU243
 973 00f0 2B4B     		ldr	r3, .L66+64
 974 00f2 D3ED007A 		vldr.32	s15, [r3]	@ int
 975 00f6 F8EE677A 		vcvt.f32.u32	s15, s15
 976              	.LVL50:
 719:Core/Src/main.c ****     break;
 977              		.loc 1 719 5 is_stmt 1 view .LVU244
 978 00fa 9FED2B7A 		vldr.32	s14, .L66+72
 979 00fe C7EE877A 		vdiv.f32	s15, s15, s14
 980              	.LVL51:
 719:Core/Src/main.c ****     break;
 981              		.loc 1 719 5 is_stmt 0 view .LVU245
 982 0102 17EE900A 		vmov	r0, s15
 983 0106 FFF7FEFF 		bl	__aeabi_f2d
 984              	.LVL52:
 719:Core/Src/main.c ****     break;
ARM GAS  /tmp/ccyRSI2C.s 			page 74


 985              		.loc 1 719 5 view .LVU246
 986 010a 0246     		mov	r2, r0
 987 010c 0B46     		mov	r3, r1
 988 010e 2749     		ldr	r1, .L66+76
 989 0110 1B48     		ldr	r0, .L66+32
 990 0112 FFF7FEFF 		bl	sprintf
 991              	.LVL53:
 720:Core/Src/main.c **** 
 992              		.loc 1 720 5 is_stmt 1 view .LVU247
 993 0116 9AE7     		b	.L56
 994              	.LVL54:
 995              	.L55:
 723:Core/Src/main.c ****     break;
 996              		.loc 1 723 5 view .LVU248
 723:Core/Src/main.c ****     break;
 997              		.loc 1 723 60 is_stmt 0 view .LVU249
 998 0118 154B     		ldr	r3, .L66+16
 999 011a 1C68     		ldr	r4, [r3]
 723:Core/Src/main.c ****     break;
 1000              		.loc 1 723 66 view .LVU250
 1001 011c FFF7FEFF 		bl	rand
 1002              	.LVL55:
 723:Core/Src/main.c ****     break;
 1003              		.loc 1 723 73 discriminator 1 view .LVU251
 1004 0120 204A     		ldr	r2, .L66+68
 1005 0122 82FB0032 		smull	r3, r2, r2, r0
 1006 0126 C317     		asrs	r3, r0, #31
 1007 0128 C3EB6213 		rsb	r3, r3, r2, asr #5
 1008 012c 4FF49672 		mov	r2, #300
 1009 0130 02FB1303 		mls	r3, r2, r3, r0
 723:Core/Src/main.c ****     break;
 1010              		.loc 1 723 39 discriminator 1 view .LVU252
 1011 0134 E218     		adds	r2, r4, r3
 723:Core/Src/main.c ****     break;
 1012              		.loc 1 723 5 discriminator 1 view .LVU253
 1013 0136 92B2     		uxth	r2, r2
 1014 0138 1D49     		ldr	r1, .L66+80
 1015 013a 1148     		ldr	r0, .L66+32
 1016 013c FFF7FEFF 		bl	sprintf
 1017              	.LVL56:
 724:Core/Src/main.c **** 
 1018              		.loc 1 724 5 is_stmt 1 view .LVU254
 1019 0140 85E7     		b	.L56
 1020              	.L64:
 1021              	.LBE18:
 731:Core/Src/main.c ****     return next_state;
 1022              		.loc 1 731 5 view .LVU255
 731:Core/Src/main.c ****     return next_state;
 1023              		.loc 1 731 17 is_stmt 0 view .LVU256
 1024 0142 0220     		movs	r0, #2
 1025 0144 064B     		ldr	r3, .L66
 1026 0146 1870     		strb	r0, [r3]
 732:Core/Src/main.c ****   }
 1027              		.loc 1 732 5 is_stmt 1 view .LVU257
 732:Core/Src/main.c ****   }
 1028              		.loc 1 732 12 is_stmt 0 view .LVU258
 1029 0148 09E0     		b	.L58
ARM GAS  /tmp/ccyRSI2C.s 			page 75


 1030              	.L65:
 739:Core/Src/main.c ****     return next_state;
 1031              		.loc 1 739 5 is_stmt 1 view .LVU259
 739:Core/Src/main.c ****     return next_state;
 1032              		.loc 1 739 17 is_stmt 0 view .LVU260
 1033 014a 0220     		movs	r0, #2
 1034 014c 044B     		ldr	r3, .L66
 1035 014e 1870     		strb	r0, [r3]
 740:Core/Src/main.c ****   }
 1036              		.loc 1 740 5 is_stmt 1 view .LVU261
 740:Core/Src/main.c ****   }
 1037              		.loc 1 740 12 is_stmt 0 view .LVU262
 1038 0150 05E0     		b	.L58
 1039              	.L60:
 752:Core/Src/main.c ****   }
 1040              		.loc 1 752 5 is_stmt 1 view .LVU263
 752:Core/Src/main.c ****   }
 1041              		.loc 1 752 17 is_stmt 0 view .LVU264
 1042 0152 FFF7FEFF 		bl	HAL_GetTick
 1043              	.LVL57:
 752:Core/Src/main.c ****   }
 1044              		.loc 1 752 15 discriminator 1 view .LVU265
 1045 0156 0F4B     		ldr	r3, .L66+52
 1046 0158 1860     		str	r0, [r3]
 1047              	.L61:
 755:Core/Src/main.c **** }
 1048              		.loc 1 755 3 is_stmt 1 view .LVU266
 755:Core/Src/main.c **** }
 1049              		.loc 1 755 10 is_stmt 0 view .LVU267
 1050 015a 014B     		ldr	r3, .L66
 1051 015c 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 1052              	.L58:
 756:Core/Src/main.c **** 
 1053              		.loc 1 756 1 view .LVU268
 1054 015e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1055              	.L67:
 1056              		.align	2
 1057              	.L66:
 1058 0160 00000000 		.word	next_state
 1059 0164 00000000 		.word	hdma_adc1
 1060 0168 1F85EB51 		.word	1374389535
 1061 016c 00000000 		.word	last_index
 1062 0170 00000000 		.word	adcBuffer
 1063 0174 00000000 		.word	lastAnalogValue
 1064 0178 00000000 		.word	currentFilterMode
 1065 017c 00000000 		.word	.LC3
 1066 0180 00000000 		.word	msg_buffer
 1067 0184 00000000 		.word	huart2
 1068 0188 00000000 		.word	halStatus
 1069 018c 00000000 		.word	lastDigitalValue
 1070 0190 20000000 		.word	.LC6
 1071 0194 00000000 		.word	lastTimer
 1072 0198 00000000 		.word	buffer_index
 1073 019c 00000000 		.word	adc_moving_average
 1074 01a0 00000000 		.word	sum
 1075 01a4 B5814E1B 		.word	458129845
 1076 01a8 00001643 		.word	1125515264
ARM GAS  /tmp/ccyRSI2C.s 			page 76


 1077 01ac 08000000 		.word	.LC4
 1078 01b0 14000000 		.word	.LC5
 1079              		.cfi_endproc
 1080              	.LFE238:
 1082              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 1083              		.align	1
 1084              		.global	HAL_TIM_PeriodElapsedCallback
 1085              		.syntax unified
 1086              		.thumb
 1087              		.thumb_func
 1089              	HAL_TIM_PeriodElapsedCallback:
 1090              	.LVL58:
 1091              	.LFB223:
 115:Core/Src/main.c ****   if(htim->Instance == TIM3){
 1092              		.loc 1 115 60 is_stmt 1 view -0
 1093              		.cfi_startproc
 1094              		@ args = 0, pretend = 0, frame = 0
 1095              		@ frame_needed = 0, uses_anonymous_args = 0
 115:Core/Src/main.c ****   if(htim->Instance == TIM3){
 1096              		.loc 1 115 60 is_stmt 0 view .LVU270
 1097 0000 08B5     		push	{r3, lr}
 1098              		.cfi_def_cfa_offset 8
 1099              		.cfi_offset 3, -8
 1100              		.cfi_offset 14, -4
 116:Core/Src/main.c ****     //toggle pause state led
 1101              		.loc 1 116 3 is_stmt 1 view .LVU271
 116:Core/Src/main.c ****     //toggle pause state led
 1102              		.loc 1 116 10 is_stmt 0 view .LVU272
 1103 0002 0368     		ldr	r3, [r0]
 116:Core/Src/main.c ****     //toggle pause state led
 1104              		.loc 1 116 5 view .LVU273
 1105 0004 084A     		ldr	r2, .L74
 1106 0006 9342     		cmp	r3, r2
 1107 0008 03D0     		beq	.L72
 119:Core/Src/main.c ****     //toggle error state led
 1108              		.loc 1 119 10 is_stmt 1 view .LVU274
 119:Core/Src/main.c ****     //toggle error state led
 1109              		.loc 1 119 12 is_stmt 0 view .LVU275
 1110 000a 084A     		ldr	r2, .L74+4
 1111 000c 9342     		cmp	r3, r2
 1112 000e 05D0     		beq	.L73
 1113              	.LVL59:
 1114              	.L68:
 123:Core/Src/main.c **** 
 1115              		.loc 1 123 1 view .LVU276
 1116 0010 08BD     		pop	{r3, pc}
 1117              	.LVL60:
 1118              	.L72:
 118:Core/Src/main.c ****   } else if(htim->Instance == TIM4){
 1119              		.loc 1 118 5 is_stmt 1 view .LVU277
 1120 0012 2021     		movs	r1, #32
 1121 0014 0648     		ldr	r0, .L74+8
 1122              	.LVL61:
 118:Core/Src/main.c ****   } else if(htim->Instance == TIM4){
 1123              		.loc 1 118 5 is_stmt 0 view .LVU278
 1124 0016 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1125              	.LVL62:
ARM GAS  /tmp/ccyRSI2C.s 			page 77


 1126 001a F9E7     		b	.L68
 1127              	.LVL63:
 1128              	.L73:
 121:Core/Src/main.c ****   }
 1129              		.loc 1 121 5 is_stmt 1 view .LVU279
 1130 001c 2021     		movs	r1, #32
 1131 001e 0448     		ldr	r0, .L74+8
 1132              	.LVL64:
 121:Core/Src/main.c ****   }
 1133              		.loc 1 121 5 is_stmt 0 view .LVU280
 1134 0020 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1135              	.LVL65:
 123:Core/Src/main.c **** 
 1136              		.loc 1 123 1 view .LVU281
 1137 0024 F4E7     		b	.L68
 1138              	.L75:
 1139 0026 00BF     		.align	2
 1140              	.L74:
 1141 0028 00040040 		.word	1073742848
 1142 002c 00080040 		.word	1073743872
 1143 0030 00000240 		.word	1073872896
 1144              		.cfi_endproc
 1145              	.LFE223:
 1147              		.section	.text.HAL_GPIO_EXTI_Callback,"ax",%progbits
 1148              		.align	1
 1149              		.global	HAL_GPIO_EXTI_Callback
 1150              		.syntax unified
 1151              		.thumb
 1152              		.thumb_func
 1154              	HAL_GPIO_EXTI_Callback:
 1155              	.LVL66:
 1156              	.LFB224:
 128:Core/Src/main.c ****   if(GPIO_Pin == GPIO_PIN_2){
 1157              		.loc 1 128 47 is_stmt 1 view -0
 1158              		.cfi_startproc
 1159              		@ args = 0, pretend = 0, frame = 0
 1160              		@ frame_needed = 0, uses_anonymous_args = 0
 128:Core/Src/main.c ****   if(GPIO_Pin == GPIO_PIN_2){
 1161              		.loc 1 128 47 is_stmt 0 view .LVU283
 1162 0000 08B5     		push	{r3, lr}
 1163              		.cfi_def_cfa_offset 8
 1164              		.cfi_offset 3, -8
 1165              		.cfi_offset 14, -4
 129:Core/Src/main.c ****     lastDigitalValue = HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_2);
 1166              		.loc 1 129 3 is_stmt 1 view .LVU284
 129:Core/Src/main.c ****     lastDigitalValue = HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_2);
 1167              		.loc 1 129 5 is_stmt 0 view .LVU285
 1168 0002 0428     		cmp	r0, #4
 1169 0004 03D0     		beq	.L88
 132:Core/Src/main.c ****     uint32_t currentTime = HAL_GetTick();
 1170              		.loc 1 132 8 is_stmt 1 view .LVU286
 132:Core/Src/main.c ****     uint32_t currentTime = HAL_GetTick();
 1171              		.loc 1 132 10 is_stmt 0 view .LVU287
 1172 0006 B0F5005F 		cmp	r0, #8192
 1173 000a 07D0     		beq	.L89
 1174              	.LVL67:
 1175              	.L76:
ARM GAS  /tmp/ccyRSI2C.s 			page 78


 174:Core/Src/main.c **** 
 1176              		.loc 1 174 1 view .LVU288
 1177 000c 08BD     		pop	{r3, pc}
 1178              	.LVL68:
 1179              	.L88:
 130:Core/Src/main.c ****   }
 1180              		.loc 1 130 5 is_stmt 1 view .LVU289
 130:Core/Src/main.c ****   }
 1181              		.loc 1 130 24 is_stmt 0 view .LVU290
 1182 000e 0421     		movs	r1, #4
 1183 0010 2D48     		ldr	r0, .L90
 1184              	.LVL69:
 130:Core/Src/main.c ****   }
 1185              		.loc 1 130 24 view .LVU291
 1186 0012 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1187              	.LVL70:
 130:Core/Src/main.c ****   }
 1188              		.loc 1 130 22 discriminator 1 view .LVU292
 1189 0016 2D4B     		ldr	r3, .L90+4
 1190 0018 1880     		strh	r0, [r3]	@ movhi
 1191 001a F7E7     		b	.L76
 1192              	.LVL71:
 1193              	.L89:
 1194              	.LBB19:
 133:Core/Src/main.c **** 
 1195              		.loc 1 133 5 is_stmt 1 view .LVU293
 133:Core/Src/main.c **** 
 1196              		.loc 1 133 28 is_stmt 0 view .LVU294
 1197 001c FFF7FEFF 		bl	HAL_GetTick
 1198              	.LVL72:
 135:Core/Src/main.c ****       return;//ignore interupt
 1199              		.loc 1 135 5 is_stmt 1 view .LVU295
 135:Core/Src/main.c ****       return;//ignore interupt
 1200              		.loc 1 135 25 is_stmt 0 view .LVU296
 1201 0020 2B4B     		ldr	r3, .L90+8
 1202 0022 1B68     		ldr	r3, [r3]
 135:Core/Src/main.c ****       return;//ignore interupt
 1203              		.loc 1 135 8 view .LVU297
 1204 0024 13B1     		cbz	r3, .L79
 135:Core/Src/main.c ****       return;//ignore interupt
 1205              		.loc 1 135 46 discriminator 1 view .LVU298
 1206 0026 C31A     		subs	r3, r0, r3
 135:Core/Src/main.c ****       return;//ignore interupt
 1207              		.loc 1 135 30 discriminator 1 view .LVU299
 1208 0028 312B     		cmp	r3, #49
 1209 002a EFD9     		bls	.L76
 1210              	.L79:
 138:Core/Src/main.c **** 
 1211              		.loc 1 138 5 is_stmt 1 view .LVU300
 138:Core/Src/main.c **** 
 1212              		.loc 1 138 21 is_stmt 0 view .LVU301
 1213 002c 284B     		ldr	r3, .L90+8
 1214 002e 1860     		str	r0, [r3]
 141:Core/Src/main.c ****       //change state to listening and restore dma
 1215              		.loc 1 141 5 is_stmt 1 view .LVU302
 141:Core/Src/main.c ****       //change state to listening and restore dma
 1216              		.loc 1 141 22 is_stmt 0 view .LVU303
ARM GAS  /tmp/ccyRSI2C.s 			page 79


 1217 0030 284B     		ldr	r3, .L90+12
 1218 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1219 0034 013B     		subs	r3, r3, #1
 1220 0036 042B     		cmp	r3, #4
 1221 0038 18D8     		bhi	.L80
 1222 003a DFE803F0 		tbb	[pc, r3]
 1223              	.L82:
 1224 003e 03       		.byte	(.L81-.L82)/2
 1225 003f 40       		.byte	(.L85-.L82)/2
 1226 0040 1F       		.byte	(.L84-.L82)/2
 1227 0041 2D       		.byte	(.L83-.L82)/2
 1228 0042 03       		.byte	(.L81-.L82)/2
 1229 0043 00       		.p2align 1
 1230              	.L81:
 143:Core/Src/main.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, GPIO_PIN_SET);
 1231              		.loc 1 143 7 is_stmt 1 view .LVU304
 143:Core/Src/main.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, GPIO_PIN_SET);
 1232              		.loc 1 143 34 is_stmt 0 view .LVU305
 1233 0044 0323     		movs	r3, #3
 1234 0046 244A     		ldr	r2, .L90+16
 1235 0048 1370     		strb	r3, [r2]
 143:Core/Src/main.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, GPIO_PIN_SET);
 1236              		.loc 1 143 21 view .LVU306
 1237 004a 224A     		ldr	r2, .L90+12
 1238 004c 1370     		strb	r3, [r2]
 144:Core/Src/main.c ****       HAL_UART_AbortReceive_IT(&huart2);
 1239              		.loc 1 144 7 is_stmt 1 view .LVU307
 1240 004e 0122     		movs	r2, #1
 1241 0050 2021     		movs	r1, #32
 1242 0052 2248     		ldr	r0, .L90+20
 1243              	.LVL73:
 144:Core/Src/main.c ****       HAL_UART_AbortReceive_IT(&huart2);
 1244              		.loc 1 144 7 is_stmt 0 view .LVU308
 1245 0054 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1246              	.LVL74:
 145:Core/Src/main.c ****       lastTimer = HAL_GetTick();
 1247              		.loc 1 145 7 is_stmt 1 view .LVU309
 1248 0058 2148     		ldr	r0, .L90+24
 1249 005a FFF7FEFF 		bl	HAL_UART_AbortReceive_IT
 1250              	.LVL75:
 146:Core/Src/main.c **** 
 1251              		.loc 1 146 7 view .LVU310
 146:Core/Src/main.c **** 
 1252              		.loc 1 146 19 is_stmt 0 view .LVU311
 1253 005e FFF7FEFF 		bl	HAL_GetTick
 1254              	.LVL76:
 146:Core/Src/main.c **** 
 1255              		.loc 1 146 17 discriminator 1 view .LVU312
 1256 0062 204B     		ldr	r3, .L90+28
 1257 0064 1860     		str	r0, [r3]
 149:Core/Src/main.c ****     }else if(current_state == STATE_LISTENING){
 1258              		.loc 1 149 7 is_stmt 1 view .LVU313
 1259 0066 2048     		ldr	r0, .L90+32
 1260 0068 FFF7FEFF 		bl	HAL_TIM_Base_Stop_IT
 1261              	.LVL77:
 1262              	.L80:
 171:Core/Src/main.c ****     lastTimer = HAL_GetTick();//reset timer
ARM GAS  /tmp/ccyRSI2C.s 			page 80


 1263              		.loc 1 171 5 view .LVU314
 171:Core/Src/main.c ****     lastTimer = HAL_GetTick();//reset timer
 1264              		.loc 1 171 17 is_stmt 0 view .LVU315
 1265 006c 1F4B     		ldr	r3, .L90+36
 1266 006e 0022     		movs	r2, #0
 1267 0070 1A70     		strb	r2, [r3]
 172:Core/Src/main.c ****   }
 1268              		.loc 1 172 5 is_stmt 1 view .LVU316
 172:Core/Src/main.c ****   }
 1269              		.loc 1 172 17 is_stmt 0 view .LVU317
 1270 0072 FFF7FEFF 		bl	HAL_GetTick
 1271              	.LVL78:
 172:Core/Src/main.c ****   }
 1272              		.loc 1 172 15 discriminator 1 view .LVU318
 1273 0076 1B4B     		ldr	r3, .L90+28
 1274 0078 1860     		str	r0, [r3]
 1275 007a C7E7     		b	.L76
 1276              	.LVL79:
 1277              	.L84:
 152:Core/Src/main.c ****       //start timer
 1278              		.loc 1 152 7 is_stmt 1 view .LVU319
 152:Core/Src/main.c ****       //start timer
 1279              		.loc 1 152 34 is_stmt 0 view .LVU320
 1280 007c 0523     		movs	r3, #5
 1281 007e 164A     		ldr	r2, .L90+16
 1282 0080 1370     		strb	r3, [r2]
 152:Core/Src/main.c ****       //start timer
 1283              		.loc 1 152 21 view .LVU321
 1284 0082 144A     		ldr	r2, .L90+12
 1285 0084 1370     		strb	r3, [r2]
 154:Core/Src/main.c ****       //wait for next input
 1286              		.loc 1 154 7 is_stmt 1 view .LVU322
 1287 0086 1848     		ldr	r0, .L90+32
 1288              	.LVL80:
 154:Core/Src/main.c ****       //wait for next input
 1289              		.loc 1 154 7 is_stmt 0 view .LVU323
 1290 0088 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 1291              	.LVL81:
 156:Core/Src/main.c ****     }else if(current_state == STATE_WARNING){
 1292              		.loc 1 156 7 is_stmt 1 view .LVU324
 1293 008c 3222     		movs	r2, #50
 1294 008e 1849     		ldr	r1, .L90+40
 1295 0090 1348     		ldr	r0, .L90+24
 1296 0092 FFF7FEFF 		bl	HAL_UARTEx_ReceiveToIdle_IT
 1297              	.LVL82:
 1298 0096 E9E7     		b	.L80
 1299              	.LVL83:
 1300              	.L83:
 159:Core/Src/main.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, GPIO_PIN_RESET);
 1301              		.loc 1 159 7 view .LVU325
 159:Core/Src/main.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, GPIO_PIN_RESET);
 1302              		.loc 1 159 34 is_stmt 0 view .LVU326
 1303 0098 0123     		movs	r3, #1
 1304 009a 0F4A     		ldr	r2, .L90+16
 1305 009c 1370     		strb	r3, [r2]
 159:Core/Src/main.c ****       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, GPIO_PIN_RESET);
 1306              		.loc 1 159 21 view .LVU327
ARM GAS  /tmp/ccyRSI2C.s 			page 81


 1307 009e 0D4A     		ldr	r2, .L90+12
 1308 00a0 1370     		strb	r3, [r2]
 160:Core/Src/main.c ****       //stop all timers
 1309              		.loc 1 160 7 is_stmt 1 view .LVU328
 1310 00a2 0022     		movs	r2, #0
 1311 00a4 2021     		movs	r1, #32
 1312 00a6 0D48     		ldr	r0, .L90+20
 1313              	.LVL84:
 160:Core/Src/main.c ****       //stop all timers
 1314              		.loc 1 160 7 is_stmt 0 view .LVU329
 1315 00a8 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1316              	.LVL85:
 162:Core/Src/main.c ****       //wait for next input
 1317              		.loc 1 162 7 is_stmt 1 view .LVU330
 1318 00ac 0E48     		ldr	r0, .L90+32
 1319 00ae FFF7FEFF 		bl	HAL_TIM_Base_Stop_IT
 1320              	.LVL86:
 164:Core/Src/main.c ****     }else if(current_state == STATE_ERROR){
 1321              		.loc 1 164 7 view .LVU331
 1322 00b2 3222     		movs	r2, #50
 1323 00b4 0E49     		ldr	r1, .L90+40
 1324 00b6 0A48     		ldr	r0, .L90+24
 1325 00b8 FFF7FEFF 		bl	HAL_UARTEx_ReceiveToIdle_IT
 1326              	.LVL87:
 1327 00bc D6E7     		b	.L80
 1328              	.LVL88:
 1329              	.L85:
 167:Core/Src/main.c ****       NVIC_SystemReset();
 1330              		.loc 1 167 7 view .LVU332
 167:Core/Src/main.c ****       NVIC_SystemReset();
 1331              		.loc 1 167 30 is_stmt 0 view .LVU333
 1332 00be 0D4B     		ldr	r3, .L90+44
 1333 00c0 0022     		movs	r2, #0
 1334 00c2 1A70     		strb	r2, [r3]
 168:Core/Src/main.c ****     }
 1335              		.loc 1 168 7 is_stmt 1 view .LVU334
 1336 00c4 FFF7FEFF 		bl	__NVIC_SystemReset
 1337              	.LVL89:
 1338              	.L91:
 168:Core/Src/main.c ****     }
 1339              		.loc 1 168 7 is_stmt 0 view .LVU335
 1340              		.align	2
 1341              	.L90:
 1342 00c8 00080240 		.word	1073874944
 1343 00cc 00000000 		.word	lastDigitalValue
 1344 00d0 00000000 		.word	lastButtonPress
 1345 00d4 00000000 		.word	current_state
 1346 00d8 00000000 		.word	next_state
 1347 00dc 00000240 		.word	1073872896
 1348 00e0 00000000 		.word	huart2
 1349 00e4 00000000 		.word	lastTimer
 1350 00e8 00000000 		.word	htim3
 1351 00ec 00000000 		.word	sendRequest
 1352 00f0 00000000 		.word	cli_command
 1353 00f4 00000000 		.word	is_running_error_timer
 1354              	.LBE19:
 1355              		.cfi_endproc
ARM GAS  /tmp/ccyRSI2C.s 			page 82


 1356              	.LFE224:
 1358              		.section	.rodata.handle_cli_command.str1.4,"aMS",%progbits,1
 1359              		.align	2
 1360              	.LC7:
 1361 0000 72617700 		.ascii	"raw\000"
 1362              		.align	2
 1363              	.LC8:
 1364 0004 6D6F7669 		.ascii	"moving average\000"
 1364      6E672061 
 1364      76657261 
 1364      676500
 1365 0013 00       		.align	2
 1366              	.LC9:
 1367 0014 72616E64 		.ascii	"random noise\000"
 1367      6F6D206E 
 1367      6F697365 
 1367      00
 1368              		.section	.text.handle_cli_command,"ax",%progbits
 1369              		.align	1
 1370              		.global	handle_cli_command
 1371              		.syntax unified
 1372              		.thumb
 1373              		.thumb_func
 1375              	handle_cli_command:
 1376              	.LFB225:
 186:Core/Src/main.c ****     if (strcmp(cli_command, "raw") == 0) {
 1377              		.loc 1 186 31 is_stmt 1 view -0
 1378              		.cfi_startproc
 1379              		@ args = 0, pretend = 0, frame = 0
 1380              		@ frame_needed = 0, uses_anonymous_args = 0
 1381 0000 08B5     		push	{r3, lr}
 1382              		.cfi_def_cfa_offset 8
 1383              		.cfi_offset 3, -8
 1384              		.cfi_offset 14, -4
 187:Core/Src/main.c ****         currentFilterMode = RAW;
 1385              		.loc 1 187 5 view .LVU337
 187:Core/Src/main.c ****         currentFilterMode = RAW;
 1386              		.loc 1 187 9 is_stmt 0 view .LVU338
 1387 0002 1449     		ldr	r1, .L99
 1388 0004 1448     		ldr	r0, .L99+4
 1389 0006 FFF7FEFF 		bl	strcmp
 1390              	.LVL90:
 187:Core/Src/main.c ****         currentFilterMode = RAW;
 1391              		.loc 1 187 8 discriminator 1 view .LVU339
 1392 000a 48B9     		cbnz	r0, .L93
 188:Core/Src/main.c ****     } else if (strcmp(cli_command, "moving average") == 0) {
 1393              		.loc 1 188 9 is_stmt 1 view .LVU340
 188:Core/Src/main.c ****     } else if (strcmp(cli_command, "moving average") == 0) {
 1394              		.loc 1 188 27 is_stmt 0 view .LVU341
 1395 000c 134B     		ldr	r3, .L99+8
 1396 000e 0022     		movs	r2, #0
 1397 0010 1A70     		strb	r2, [r3]
 1398              	.L94:
 199:Core/Src/main.c ****     return 0;
 1399              		.loc 1 199 5 is_stmt 1 view .LVU342
 1400 0012 3222     		movs	r2, #50
 1401 0014 0021     		movs	r1, #0
ARM GAS  /tmp/ccyRSI2C.s 			page 83


 1402 0016 1048     		ldr	r0, .L99+4
 1403 0018 FFF7FEFF 		bl	memset
 1404              	.LVL91:
 200:Core/Src/main.c **** }
 1405              		.loc 1 200 5 view .LVU343
 200:Core/Src/main.c **** }
 1406              		.loc 1 200 12 is_stmt 0 view .LVU344
 1407 001c 0020     		movs	r0, #0
 1408              	.L97:
 201:Core/Src/main.c **** 
 1409              		.loc 1 201 1 view .LVU345
 1410 001e 08BD     		pop	{r3, pc}
 1411              	.L93:
 189:Core/Src/main.c ****         currentFilterMode = MOVING_AVERAGE;
 1412              		.loc 1 189 12 is_stmt 1 view .LVU346
 189:Core/Src/main.c ****         currentFilterMode = MOVING_AVERAGE;
 1413              		.loc 1 189 16 is_stmt 0 view .LVU347
 1414 0020 0F49     		ldr	r1, .L99+12
 1415 0022 0D48     		ldr	r0, .L99+4
 1416 0024 FFF7FEFF 		bl	strcmp
 1417              	.LVL92:
 189:Core/Src/main.c ****         currentFilterMode = MOVING_AVERAGE;
 1418              		.loc 1 189 15 discriminator 1 view .LVU348
 1419 0028 18B9     		cbnz	r0, .L95
 190:Core/Src/main.c ****     } else if (strcmp(cli_command, "random noise") == 0) {
 1420              		.loc 1 190 9 is_stmt 1 view .LVU349
 190:Core/Src/main.c ****     } else if (strcmp(cli_command, "random noise") == 0) {
 1421              		.loc 1 190 27 is_stmt 0 view .LVU350
 1422 002a 0C4B     		ldr	r3, .L99+8
 1423 002c 0122     		movs	r2, #1
 1424 002e 1A70     		strb	r2, [r3]
 1425 0030 EFE7     		b	.L94
 1426              	.L95:
 191:Core/Src/main.c ****         currentFilterMode = RANDOM_NOISE;
 1427              		.loc 1 191 12 is_stmt 1 view .LVU351
 191:Core/Src/main.c ****         currentFilterMode = RANDOM_NOISE;
 1428              		.loc 1 191 16 is_stmt 0 view .LVU352
 1429 0032 0C49     		ldr	r1, .L99+16
 1430 0034 0848     		ldr	r0, .L99+4
 1431 0036 FFF7FEFF 		bl	strcmp
 1432              	.LVL93:
 191:Core/Src/main.c ****         currentFilterMode = RANDOM_NOISE;
 1433              		.loc 1 191 15 discriminator 1 view .LVU353
 1434 003a 18B9     		cbnz	r0, .L96
 192:Core/Src/main.c ****     } else {
 1435              		.loc 1 192 9 is_stmt 1 view .LVU354
 192:Core/Src/main.c ****     } else {
 1436              		.loc 1 192 27 is_stmt 0 view .LVU355
 1437 003c 074B     		ldr	r3, .L99+8
 1438 003e 0222     		movs	r2, #2
 1439 0040 1A70     		strb	r2, [r3]
 1440 0042 E6E7     		b	.L94
 1441              	.L96:
 195:Core/Src/main.c ****         return 1;
 1442              		.loc 1 195 9 is_stmt 1 view .LVU356
 1443 0044 3222     		movs	r2, #50
 1444 0046 0021     		movs	r1, #0
ARM GAS  /tmp/ccyRSI2C.s 			page 84


 1445 0048 0348     		ldr	r0, .L99+4
 1446 004a FFF7FEFF 		bl	memset
 1447              	.LVL94:
 196:Core/Src/main.c ****     }
 1448              		.loc 1 196 9 view .LVU357
 196:Core/Src/main.c ****     }
 1449              		.loc 1 196 16 is_stmt 0 view .LVU358
 1450 004e 0120     		movs	r0, #1
 1451 0050 E5E7     		b	.L97
 1452              	.L100:
 1453 0052 00BF     		.align	2
 1454              	.L99:
 1455 0054 00000000 		.word	.LC7
 1456 0058 00000000 		.word	cli_command
 1457 005c 00000000 		.word	currentFilterMode
 1458 0060 04000000 		.word	.LC8
 1459 0064 14000000 		.word	.LC9
 1460              		.cfi_endproc
 1461              	.LFE225:
 1463              		.section	.rodata.HAL_UARTEx_RxEventCallback.str1.4,"aMS",%progbits,1
 1464              		.align	2
 1465              	.LC10:
 1466 0000 436F6D6D 		.ascii	"Command not valid. Try again.\015\012\000"
 1466      616E6420 
 1466      6E6F7420 
 1466      76616C69 
 1466      642E2054 
 1467              		.align	2
 1468              	.LC11:
 1469 0020 4E657720 		.ascii	"New filter mode: %d\015\012\000"
 1469      66696C74 
 1469      6572206D 
 1469      6F64653A 
 1469      2025640D 
 1470              		.section	.text.HAL_UARTEx_RxEventCallback,"ax",%progbits
 1471              		.align	1
 1472              		.global	HAL_UARTEx_RxEventCallback
 1473              		.syntax unified
 1474              		.thumb
 1475              		.thumb_func
 1477              	HAL_UARTEx_RxEventCallback:
 1478              	.LVL95:
 1479              	.LFB226:
 208:Core/Src/main.c ****   //if we are not in pause or wait request state, ignore the comand received
 1480              		.loc 1 208 1 is_stmt 1 view -0
 1481              		.cfi_startproc
 1482              		@ args = 0, pretend = 0, frame = 0
 1483              		@ frame_needed = 0, uses_anonymous_args = 0
 208:Core/Src/main.c ****   //if we are not in pause or wait request state, ignore the comand received
 1484              		.loc 1 208 1 is_stmt 0 view .LVU360
 1485 0000 38B5     		push	{r3, r4, r5, lr}
 1486              		.cfi_def_cfa_offset 16
 1487              		.cfi_offset 3, -16
 1488              		.cfi_offset 4, -12
 1489              		.cfi_offset 5, -8
 1490              		.cfi_offset 14, -4
 211:Core/Src/main.c ****     memset(cli_command, '\0', sizeof(cli_command)); 
ARM GAS  /tmp/ccyRSI2C.s 			page 85


 1491              		.loc 1 211 3 is_stmt 1 view .LVU361
 211:Core/Src/main.c ****     memset(cli_command, '\0', sizeof(cli_command)); 
 1492              		.loc 1 211 19 is_stmt 0 view .LVU362
 1493 0002 2B4B     		ldr	r3, .L108
 1494 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 211:Core/Src/main.c ****     memset(cli_command, '\0', sizeof(cli_command)); 
 1495              		.loc 1 211 5 view .LVU363
 1496 0006 052B     		cmp	r3, #5
 1497 0008 01D0     		beq	.L102
 211:Core/Src/main.c ****     memset(cli_command, '\0', sizeof(cli_command)); 
 1498              		.loc 1 211 34 discriminator 1 view .LVU364
 1499 000a 012B     		cmp	r3, #1
 1500 000c 2DD1     		bne	.L107
 1501              	.L102:
 217:Core/Src/main.c **** 
 1502              		.loc 1 217 3 is_stmt 1 view .LVU365
 217:Core/Src/main.c **** 
 1503              		.loc 1 217 27 is_stmt 0 view .LVU366
 1504 000e FFF7FEFF 		bl	handle_cli_command
 1505              	.LVL96:
 219:Core/Src/main.c ****     sprintf(msg_buffer, "Command not valid. Try again.\r\n");
 1506              		.loc 1 219 3 is_stmt 1 view .LVU367
 219:Core/Src/main.c ****     sprintf(msg_buffer, "Command not valid. Try again.\r\n");
 1507              		.loc 1 219 5 is_stmt 0 view .LVU368
 1508 0012 0028     		cmp	r0, #0
 1509 0014 36D0     		beq	.L104
 220:Core/Src/main.c ****     HAL_UART_Transmit(&huart2, (uint8_t *)msg_buffer, strlen(msg_buffer), HAL_MAX_DELAY);
 1510              		.loc 1 220 5 is_stmt 1 view .LVU369
 1511 0016 274D     		ldr	r5, .L108+4
 1512 0018 AC46     		mov	ip, r5
 1513 001a 274C     		ldr	r4, .L108+8
 1514 001c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 1515              	.LVL97:
 220:Core/Src/main.c ****     HAL_UART_Transmit(&huart2, (uint8_t *)msg_buffer, strlen(msg_buffer), HAL_MAX_DELAY);
 1516              		.loc 1 220 5 is_stmt 0 view .LVU370
 1517 001e ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 1518 0022 94E80F00 		ldm	r4, {r0, r1, r2, r3}
 1519 0026 8CE80F00 		stm	ip, {r0, r1, r2, r3}
 221:Core/Src/main.c ****     sprintf(msg_buffer, "C:\r\n");//send comand request to user
 1520              		.loc 1 221 5 is_stmt 1 view .LVU371
 221:Core/Src/main.c ****     sprintf(msg_buffer, "C:\r\n");//send comand request to user
 1521              		.loc 1 221 55 is_stmt 0 view .LVU372
 1522 002a 2846     		mov	r0, r5
 1523 002c FFF7FEFF 		bl	strlen
 1524              	.LVL98:
 221:Core/Src/main.c ****     sprintf(msg_buffer, "C:\r\n");//send comand request to user
 1525              		.loc 1 221 5 discriminator 1 view .LVU373
 1526 0030 224C     		ldr	r4, .L108+12
 1527 0032 4FF0FF33 		mov	r3, #-1
 1528 0036 82B2     		uxth	r2, r0
 1529 0038 2946     		mov	r1, r5
 1530 003a 2046     		mov	r0, r4
 1531 003c FFF7FEFF 		bl	HAL_UART_Transmit
 1532              	.LVL99:
 222:Core/Src/main.c ****     HAL_UART_Transmit(&huart2, (uint8_t *)msg_buffer, strlen(msg_buffer), HAL_MAX_DELAY);  
 1533              		.loc 1 222 5 is_stmt 1 view .LVU374
 1534 0040 1F4B     		ldr	r3, .L108+16
ARM GAS  /tmp/ccyRSI2C.s 			page 86


 1535 0042 93E80300 		ldm	r3, {r0, r1}
 1536 0046 2860     		str	r0, [r5]
 1537 0048 2971     		strb	r1, [r5, #4]
 223:Core/Src/main.c ****   }
 1538              		.loc 1 223 5 view .LVU375
 223:Core/Src/main.c ****   }
 1539              		.loc 1 223 55 is_stmt 0 view .LVU376
 1540 004a 2846     		mov	r0, r5
 1541 004c FFF7FEFF 		bl	strlen
 1542              	.LVL100:
 223:Core/Src/main.c ****   }
 1543              		.loc 1 223 5 discriminator 1 view .LVU377
 1544 0050 4FF0FF33 		mov	r3, #-1
 1545 0054 82B2     		uxth	r2, r0
 1546 0056 2946     		mov	r1, r5
 1547 0058 2046     		mov	r0, r4
 1548 005a FFF7FEFF 		bl	HAL_UART_Transmit
 1549              	.LVL101:
 1550              	.L105:
 236:Core/Src/main.c **** }
 1551              		.loc 1 236 3 is_stmt 1 view .LVU378
 1552 005e 3222     		movs	r2, #50
 1553 0060 1849     		ldr	r1, .L108+20
 1554 0062 1648     		ldr	r0, .L108+12
 1555 0064 FFF7FEFF 		bl	HAL_UARTEx_ReceiveToIdle_IT
 1556              	.LVL102:
 1557              	.L101:
 237:Core/Src/main.c **** 
 1558              		.loc 1 237 1 is_stmt 0 view .LVU379
 1559 0068 38BD     		pop	{r3, r4, r5, pc}
 1560              	.LVL103:
 1561              	.L107:
 212:Core/Src/main.c ****     HAL_UARTEx_ReceiveToIdle_IT(&huart2, (uint8_t *)cli_command, BUFFER_SIZE);
 1562              		.loc 1 212 5 is_stmt 1 view .LVU380
 1563 006a 164C     		ldr	r4, .L108+20
 1564 006c 3225     		movs	r5, #50
 1565 006e 2A46     		mov	r2, r5
 1566 0070 0021     		movs	r1, #0
 1567              	.LVL104:
 212:Core/Src/main.c ****     HAL_UARTEx_ReceiveToIdle_IT(&huart2, (uint8_t *)cli_command, BUFFER_SIZE);
 1568              		.loc 1 212 5 is_stmt 0 view .LVU381
 1569 0072 2046     		mov	r0, r4
 1570              	.LVL105:
 212:Core/Src/main.c ****     HAL_UARTEx_ReceiveToIdle_IT(&huart2, (uint8_t *)cli_command, BUFFER_SIZE);
 1571              		.loc 1 212 5 view .LVU382
 1572 0074 FFF7FEFF 		bl	memset
 1573              	.LVL106:
 213:Core/Src/main.c ****     return;
 1574              		.loc 1 213 5 is_stmt 1 view .LVU383
 1575 0078 2A46     		mov	r2, r5
 1576 007a 2146     		mov	r1, r4
 1577 007c 0F48     		ldr	r0, .L108+12
 1578 007e FFF7FEFF 		bl	HAL_UARTEx_ReceiveToIdle_IT
 1579              	.LVL107:
 214:Core/Src/main.c ****   }
 1580              		.loc 1 214 5 view .LVU384
 1581 0082 F1E7     		b	.L101
ARM GAS  /tmp/ccyRSI2C.s 			page 87


 1582              	.LVL108:
 1583              	.L104:
 227:Core/Src/main.c ****     HAL_UART_Transmit(&huart2, (uint8_t *)msg_buffer, strlen(msg_buffer), HAL_MAX_DELAY);
 1584              		.loc 1 227 5 view .LVU385
 1585 0084 0B4C     		ldr	r4, .L108+4
 1586 0086 104B     		ldr	r3, .L108+24
 1587 0088 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1588 008a 1049     		ldr	r1, .L108+28
 1589 008c 2046     		mov	r0, r4
 1590              	.LVL109:
 227:Core/Src/main.c ****     HAL_UART_Transmit(&huart2, (uint8_t *)msg_buffer, strlen(msg_buffer), HAL_MAX_DELAY);
 1591              		.loc 1 227 5 is_stmt 0 view .LVU386
 1592 008e FFF7FEFF 		bl	sprintf
 1593              	.LVL110:
 228:Core/Src/main.c ****     sendRequest = 0;
 1594              		.loc 1 228 5 is_stmt 1 view .LVU387
 228:Core/Src/main.c ****     sendRequest = 0;
 1595              		.loc 1 228 55 is_stmt 0 view .LVU388
 1596 0092 2046     		mov	r0, r4
 1597 0094 FFF7FEFF 		bl	strlen
 1598              	.LVL111:
 228:Core/Src/main.c ****     sendRequest = 0;
 1599              		.loc 1 228 5 discriminator 1 view .LVU389
 1600 0098 4FF0FF33 		mov	r3, #-1
 1601 009c 82B2     		uxth	r2, r0
 1602 009e 2146     		mov	r1, r4
 1603 00a0 0648     		ldr	r0, .L108+12
 1604 00a2 FFF7FEFF 		bl	HAL_UART_Transmit
 1605              	.LVL112:
 229:Core/Src/main.c ****     //current_state = next_state = STATE_LISTENING;
 1606              		.loc 1 229 5 is_stmt 1 view .LVU390
 229:Core/Src/main.c ****     //current_state = next_state = STATE_LISTENING;
 1607              		.loc 1 229 17 is_stmt 0 view .LVU391
 1608 00a6 0A4B     		ldr	r3, .L108+32
 1609 00a8 0022     		movs	r2, #0
 1610 00aa 1A70     		strb	r2, [r3]
 1611 00ac D7E7     		b	.L105
 1612              	.L109:
 1613 00ae 00BF     		.align	2
 1614              	.L108:
 1615 00b0 00000000 		.word	current_state
 1616 00b4 00000000 		.word	msg_buffer
 1617 00b8 00000000 		.word	.LC10
 1618 00bc 00000000 		.word	huart2
 1619 00c0 00000000 		.word	.LC0
 1620 00c4 00000000 		.word	cli_command
 1621 00c8 00000000 		.word	currentFilterMode
 1622 00cc 20000000 		.word	.LC11
 1623 00d0 00000000 		.word	sendRequest
 1624              		.cfi_endproc
 1625              	.LFE226:
 1627              		.section	.text.run_state,"ax",%progbits
 1628              		.align	1
 1629              		.global	run_state
 1630              		.syntax unified
 1631              		.thumb
 1632              		.thumb_func
ARM GAS  /tmp/ccyRSI2C.s 			page 88


 1634              	run_state:
 1635              	.LVL113:
 1636              	.LFB241:
 802:Core/Src/main.c **** 
 803:Core/Src/main.c **** 
 804:Core/Src/main.c **** 
 805:Core/Src/main.c **** /*  ____  _        _        
 806:Core/Src/main.c ****  * / ___|| |_ __ _| |_ ___  
 807:Core/Src/main.c ****  * \___ \| __/ _` | __/ _ \
 808:Core/Src/main.c ****  *  ___) | || (_| | ||  __/ 
 809:Core/Src/main.c ****  * |____/ \__\__,_|\__\___| 
 810:Core/Src/main.c ****  *                          
 811:Core/Src/main.c ****  *                                              
 812:Core/Src/main.c ****  *  _ __ ___   __ _ _ __   __ _  __ _  ___ _ __ 
 813:Core/Src/main.c ****  * | '_ ` _ \ / _` | '_ \ / _` |/ _` |/ _ \ '__|
 814:Core/Src/main.c ****  * | | | | | | (_| | | | | (_| | (_| |  __/ |   
 815:Core/Src/main.c ****  * |_| |_| |_|\__,_|_| |_|\__,_|\__, |\___|_|   
 816:Core/Src/main.c ****  *                              |___/           
 817:Core/Src/main.c ****  */
 818:Core/Src/main.c **** 
 819:Core/Src/main.c **** state_t run_state(state_data_t *data) {
 1637              		.loc 1 819 39 is_stmt 1 view -0
 1638              		.cfi_startproc
 1639              		@ args = 0, pretend = 0, frame = 0
 1640              		@ frame_needed = 0, uses_anonymous_args = 0
 1641              		.loc 1 819 39 is_stmt 0 view .LVU393
 1642 0000 08B5     		push	{r3, lr}
 1643              		.cfi_def_cfa_offset 8
 1644              		.cfi_offset 3, -8
 1645              		.cfi_offset 14, -4
 820:Core/Src/main.c ****   state_t new_state = state_table[current_state](data);
 1646              		.loc 1 820 3 is_stmt 1 view .LVU394
 1647              		.loc 1 820 34 is_stmt 0 view .LVU395
 1648 0002 064B     		ldr	r3, .L114
 1649 0004 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1650 0006 064B     		ldr	r3, .L114+4
 1651 0008 53F82230 		ldr	r3, [r3, r2, lsl #2]
 1652              		.loc 1 820 23 view .LVU396
 1653 000c 9847     		blx	r3
 1654              	.LVL114:
 821:Core/Src/main.c ****   if (new_state == NO_CHANGE) new_state = current_state;
 1655              		.loc 1 821 3 is_stmt 1 view .LVU397
 1656              		.loc 1 821 6 is_stmt 0 view .LVU398
 1657 000e 0728     		cmp	r0, #7
 1658 0010 00D0     		beq	.L113
 1659              	.L111:
 822:Core/Src/main.c ****   return new_state;
 1660              		.loc 1 822 3 is_stmt 1 view .LVU399
 823:Core/Src/main.c **** };
 1661              		.loc 1 823 1 is_stmt 0 view .LVU400
 1662 0012 08BD     		pop	{r3, pc}
 1663              	.L113:
 821:Core/Src/main.c ****   if (new_state == NO_CHANGE) new_state = current_state;
 1664              		.loc 1 821 31 is_stmt 1 discriminator 1 view .LVU401
 821:Core/Src/main.c ****   if (new_state == NO_CHANGE) new_state = current_state;
 1665              		.loc 1 821 41 is_stmt 0 discriminator 1 view .LVU402
 1666 0014 014B     		ldr	r3, .L114
ARM GAS  /tmp/ccyRSI2C.s 			page 89


 1667 0016 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 1668              	.LVL115:
 821:Core/Src/main.c ****   if (new_state == NO_CHANGE) new_state = current_state;
 1669              		.loc 1 821 41 discriminator 1 view .LVU403
 1670 0018 FBE7     		b	.L111
 1671              	.L115:
 1672 001a 00BF     		.align	2
 1673              	.L114:
 1674 001c 00000000 		.word	current_state
 1675 0020 00000000 		.word	state_table
 1676              		.cfi_endproc
 1677              	.LFE241:
 1679              		.section	.text.main,"ax",%progbits
 1680              		.align	1
 1681              		.global	main
 1682              		.syntax unified
 1683              		.thumb
 1684              		.thumb_func
 1686              	main:
 1687              	.LFB227:
 246:Core/Src/main.c **** 
 1688              		.loc 1 246 1 is_stmt 1 view -0
 1689              		.cfi_startproc
 1690              		@ Volatile: function does not return.
 1691              		@ args = 0, pretend = 0, frame = 0
 1692              		@ frame_needed = 0, uses_anonymous_args = 0
 1693 0000 08B5     		push	{r3, lr}
 1694              		.cfi_def_cfa_offset 8
 1695              		.cfi_offset 3, -8
 1696              		.cfi_offset 14, -4
 1697              	.L117:
 269:Core/Src/main.c ****   {
 1698              		.loc 1 269 3 view .LVU405
 274:Core/Src/main.c ****   }
 1699              		.loc 1 274 5 discriminator 1 view .LVU406
 274:Core/Src/main.c ****   }
 1700              		.loc 1 274 21 is_stmt 0 discriminator 1 view .LVU407
 1701 0002 0020     		movs	r0, #0
 1702 0004 FFF7FEFF 		bl	run_state
 1703              	.LVL116:
 274:Core/Src/main.c ****   }
 1704              		.loc 1 274 19 discriminator 1 view .LVU408
 1705 0008 014B     		ldr	r3, .L119
 1706 000a 1870     		strb	r0, [r3]
 269:Core/Src/main.c ****   {
 1707              		.loc 1 269 9 is_stmt 1 view .LVU409
 1708 000c F9E7     		b	.L117
 1709              	.L120:
 1710 000e 00BF     		.align	2
 1711              	.L119:
 1712 0010 00000000 		.word	current_state
 1713              		.cfi_endproc
 1714              	.LFE227:
 1716              		.section	.text.Error_Handler,"ax",%progbits
 1717              		.align	1
 1718              		.global	Error_Handler
 1719              		.syntax unified
ARM GAS  /tmp/ccyRSI2C.s 			page 90


 1720              		.thumb
 1721              		.thumb_func
 1723              	Error_Handler:
 1724              	.LFB242:
 824:Core/Src/main.c **** 
 825:Core/Src/main.c **** /* USER CODE END 4 */
 826:Core/Src/main.c **** 
 827:Core/Src/main.c **** /**
 828:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 829:Core/Src/main.c ****   * @retval None
 830:Core/Src/main.c ****   */
 831:Core/Src/main.c **** void Error_Handler(void)
 832:Core/Src/main.c **** {
 1725              		.loc 1 832 1 view -0
 1726              		.cfi_startproc
 1727              		@ args = 0, pretend = 0, frame = 0
 1728              		@ frame_needed = 0, uses_anonymous_args = 0
 1729 0000 08B5     		push	{r3, lr}
 1730              		.cfi_def_cfa_offset 8
 1731              		.cfi_offset 3, -8
 1732              		.cfi_offset 14, -4
 833:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 834:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 835:Core/Src/main.c ****   next_state = STATE_ERROR;
 1733              		.loc 1 835 3 view .LVU411
 1734              		.loc 1 835 14 is_stmt 0 view .LVU412
 1735 0002 044B     		ldr	r3, .L123
 1736 0004 0222     		movs	r2, #2
 1737 0006 1A70     		strb	r2, [r3]
 836:Core/Src/main.c ****   HAL_TIM_Base_Start_IT(&htim4);
 1738              		.loc 1 836 3 is_stmt 1 view .LVU413
 1739 0008 0348     		ldr	r0, .L123+4
 1740 000a FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 1741              	.LVL117:
 837:Core/Src/main.c ****   return
 1742              		.loc 1 837 3 view .LVU414
 1743              	.LBB20:
 1744              	.LBI20:
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 274:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 278:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 285:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 289:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
ARM GAS  /tmp/ccyRSI2C.s 			page 91


 291:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 295:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 298:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 307:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 308:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 309:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 312:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 318:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 322:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 323:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 324:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 327:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 328:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 343:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 344:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  /tmp/ccyRSI2C.s 			page 92


 348:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
 349:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
 350:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 351:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 354:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 355:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 359:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 362:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 363:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 366:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 367:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 371:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 375:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 381:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 388:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
 389:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
 390:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 391:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 394:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 395:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 396:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 398:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  /tmp/ccyRSI2C.s 			page 93


 405:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****      is non-zero".
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****      single CLZ instruction.
 413:Drivers/CMSIS/Include/cmsis_gcc.h ****    */
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (value == 0U)
 415:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****     return 32U;
 417:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 418:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_clz(value);
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 420:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 421:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 422:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 424:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 426:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 427:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
 428:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
 429:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 430:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 431:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDREXB(volatile uint8_t *addr)
 433:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 435:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 436:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 439:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 440:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 441:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 442:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 444:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 445:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 446:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 447:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 448:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
 450:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
 451:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 452:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDREXH(volatile uint16_t *addr)
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 456:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 457:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 459:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
 460:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 461:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
ARM GAS  /tmp/ccyRSI2C.s 			page 94


 462:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 464:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 465:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 471:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
 472:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 486:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 491:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 492:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 493:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *addr)
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 495:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 498:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 499:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 500:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 501:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 502:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
 504:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 506:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 507:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 508:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 509:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXH(uint16_t value, volatile uint16_t *addr)
 511:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 513:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 516:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccyRSI2C.s 			page 95


 519:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 520:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
 521:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
 522:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 533:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 537:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Remove the exclusive lock
 538:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Removes the exclusive lock which is created by LDREX.
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 540:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __CLREX(void)
 541:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 542:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("clrex" ::: "memory");
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 544:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 545:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 546:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 548:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 552:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 553:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 554:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 557:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 558:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (1..32)
 559:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 560:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SSAT(ARG1, ARG2) \
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 564:Drivers/CMSIS/Include/cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
 565:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("ssat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 568:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 569:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 571:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 572:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 573:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 574:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (0..31)
 575:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
ARM GAS  /tmp/ccyRSI2C.s 			page 96


 576:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 577:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __USAT(ARG1, ARG2) \
 578:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 579:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 580:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("usat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 582:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 583:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 584:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 585:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 586:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 587:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right with Extend (32 bit)
 588:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Moves each bit of a bitstring right by one bit.
 589:Drivers/CMSIS/Include/cmsis_gcc.h ****            The carry input is shifted in at the left end of the bitstring.
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to rotate
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 592:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 593:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RRX(uint32_t value)
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 595:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 596:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 597:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rrx %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 598:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 599:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 600:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 601:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 603:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (8 bit)
 604:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 8 bit value.
 605:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 606:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 608:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDRBT(volatile uint8_t *ptr)
 609:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 610:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 611:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 612:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, %1" : "=r" (result) : "Q" (*ptr) );
 614:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 615:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 616:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 617:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 618:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 621:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 622:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 623:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 625:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (16 bit)
 626:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 16 bit values.
 627:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 628:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 629:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 630:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDRHT(volatile uint16_t *ptr)
 631:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
ARM GAS  /tmp/ccyRSI2C.s 			page 97


 633:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 634:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, %1" : "=r" (result) : "Q" (*ptr) );
 636:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 637:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 638:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 639:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 640:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 641:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 642:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 643:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 644:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 647:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (32 bit)
 648:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 32 bit values.
 649:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 650:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 652:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDRT(volatile uint32_t *ptr)
 653:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 654:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 655:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrt %0, %1" : "=r" (result) : "Q" (*ptr) );
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 658:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 661:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (8 bit)
 663:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 8 bit values.
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 665:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 666:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 667:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRBT(uint8_t value, volatile uint8_t *ptr)
 668:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 669:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strbt %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 673:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (16 bit)
 675:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 16 bit values.
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 677:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 679:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRHT(uint16_t value, volatile uint16_t *ptr)
 680:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 681:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strht %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 682:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 683:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 684:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 685:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 686:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (32 bit)
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 32 bit values.
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 689:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
ARM GAS  /tmp/ccyRSI2C.s 			page 98


 690:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRT(uint32_t value, volatile uint32_t *ptr)
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 693:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strt %1, %0" : "=Q" (*ptr) : "r" (value) );
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 695:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 696:Drivers/CMSIS/Include/cmsis_gcc.h **** #else  /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 698:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 699:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 700:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 702:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 703:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 704:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (1..32)
 705:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 706:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 707:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int32_t __SSAT(int32_t val, uint32_t sat)
 708:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   if ((sat >= 1U) && (sat <= 32U))
 710:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 711:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t max = (int32_t)((1U << (sat - 1U)) - 1U);
 712:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t min = -1 - max ;
 713:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > max)
 714:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 715:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 716:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 717:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < min)
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****       return min;
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 721:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   return val;
 723:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 724:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 726:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 727:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (0..31)
 730:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 731:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 732:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAT(int32_t val, uint32_t sat)
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 734:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (sat <= 31U)
 735:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 736:Drivers/CMSIS/Include/cmsis_gcc.h ****     const uint32_t max = ((1U << sat) - 1U);
 737:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > (int32_t)max)
 738:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < 0)
 742:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****       return 0U;
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 746:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (uint32_t)val;
ARM GAS  /tmp/ccyRSI2C.s 			page 99


 747:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 749:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 751:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 752:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 753:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 754:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 755:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 757:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (8 bit)
 758:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB instruction for 8 bit value.
 759:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 760:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 761:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 762:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAB(volatile uint8_t *ptr)
 763:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 765:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldab %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 767:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 768:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 769:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 772:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (16 bit)
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH instruction for 16 bit values.
 774:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 775:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 777:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAH(volatile uint16_t *ptr)
 778:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 779:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 781:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldah %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 782:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 784:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 785:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 787:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (32 bit)
 788:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA instruction for 32 bit values.
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDA(volatile uint32_t *ptr)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 795:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 796:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("lda %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 797:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 799:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 800:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 802:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (8 bit)
 803:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB instruction for 8 bit values.
ARM GAS  /tmp/ccyRSI2C.s 			page 100


 804:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 805:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 806:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 807:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLB(uint8_t value, volatile uint8_t *ptr)
 808:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 809:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlb %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 810:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 811:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 814:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (16 bit)
 815:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH instruction for 16 bit values.
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 817:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 818:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 819:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLH(uint16_t value, volatile uint16_t *ptr)
 820:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 821:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlh %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 825:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 826:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (32 bit)
 827:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL instruction for 32 bit values.
 828:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 829:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 830:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 831:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STL(uint32_t value, volatile uint32_t *ptr)
 832:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 833:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stl %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 834:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 835:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 836:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 838:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (8 bit)
 839:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB exclusive instruction for 8 bit value.
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 842:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 843:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAEXB(volatile uint8_t *ptr)
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 845:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 846:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 847:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexb %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 848:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 849:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 853:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (16 bit)
 854:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH exclusive instruction for 16 bit values.
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 857:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 858:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAEXH(volatile uint16_t *ptr)
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 860:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
ARM GAS  /tmp/ccyRSI2C.s 			page 101


 861:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexh %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 863:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 864:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 865:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 867:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 868:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (32 bit)
 869:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA exclusive instruction for 32 bit values.
 870:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 871:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 872:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 873:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDAEX(volatile uint32_t *ptr)
 874:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 875:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 876:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaex %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 878:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 879:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 882:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 883:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (8 bit)
 884:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB exclusive instruction for 8 bit values.
 885:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 886:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 888:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 889:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 890:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXB(uint8_t value, volatile uint8_t *ptr)
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 892:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 894:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexb %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 895:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 896:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 897:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 898:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (16 bit)
 901:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH exclusive instruction for 16 bit values.
 902:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 903:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 904:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 905:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 906:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 907:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXH(uint16_t value, volatile uint16_t *ptr)
 908:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 909:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexh %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 912:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 913:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 914:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 915:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 916:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 917:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (32 bit)
ARM GAS  /tmp/ccyRSI2C.s 			page 102


 918:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL exclusive instruction for 32 bit values.
 919:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 920:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 922:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEX(uint32_t value, volatile uint32_t *ptr)
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 926:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 928:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlex %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "memo
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 930:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 931:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 932:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 933:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 935:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@}*/ /* end of group CMSIS_Core_InstructionInterface */
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 937:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 939:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 940:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 943:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 945:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 946:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing special-purpose register PRIMASK.
 947:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 948:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 949:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 950:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 952:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 953:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 954:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 956:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
 958:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 959:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 960:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 1745              		.loc 3 960 27 view .LVU415
 1746              	.LBB21:
 961:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 962:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 1747              		.loc 3 962 3 view .LVU416
 1748              		.syntax unified
 1749              	@ 962 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1750 000e 72B6     		cpsid i
 1751              	@ 0 "" 2
 1752              		.thumb
 1753              		.syntax unified
 1754              	.LBE21:
 1755              	.LBE20:
 838:Core/Src/main.c ****   __disable_irq();
ARM GAS  /tmp/ccyRSI2C.s 			page 103


 839:Core/Src/main.c ****   while (1)
 840:Core/Src/main.c ****   {
 841:Core/Src/main.c ****   }
 842:Core/Src/main.c ****   /* USER CODE END Error_Handler_Debug */
 843:Core/Src/main.c **** }
 1756              		.loc 1 843 1 is_stmt 0 view .LVU417
 1757 0010 08BD     		pop	{r3, pc}
 1758              	.L124:
 1759 0012 00BF     		.align	2
 1760              	.L123:
 1761 0014 00000000 		.word	next_state
 1762 0018 00000000 		.word	htim4
 1763              		.cfi_endproc
 1764              	.LFE242:
 1766              		.section	.text.SystemClock_Config,"ax",%progbits
 1767              		.align	1
 1768              		.global	SystemClock_Config
 1769              		.syntax unified
 1770              		.thumb
 1771              		.thumb_func
 1773              	SystemClock_Config:
 1774              	.LFB228:
 284:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 1775              		.loc 1 284 1 is_stmt 1 view -0
 1776              		.cfi_startproc
 1777              		@ args = 0, pretend = 0, frame = 80
 1778              		@ frame_needed = 0, uses_anonymous_args = 0
 1779 0000 00B5     		push	{lr}
 1780              		.cfi_def_cfa_offset 4
 1781              		.cfi_offset 14, -4
 1782 0002 95B0     		sub	sp, sp, #84
 1783              		.cfi_def_cfa_offset 88
 285:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1784              		.loc 1 285 3 view .LVU419
 285:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1785              		.loc 1 285 22 is_stmt 0 view .LVU420
 1786 0004 3022     		movs	r2, #48
 1787 0006 0021     		movs	r1, #0
 1788 0008 08A8     		add	r0, sp, #32
 1789 000a FFF7FEFF 		bl	memset
 1790              	.LVL118:
 286:Core/Src/main.c **** 
 1791              		.loc 1 286 3 is_stmt 1 view .LVU421
 286:Core/Src/main.c **** 
 1792              		.loc 1 286 22 is_stmt 0 view .LVU422
 1793 000e 0023     		movs	r3, #0
 1794 0010 0393     		str	r3, [sp, #12]
 1795 0012 0493     		str	r3, [sp, #16]
 1796 0014 0593     		str	r3, [sp, #20]
 1797 0016 0693     		str	r3, [sp, #24]
 1798 0018 0793     		str	r3, [sp, #28]
 290:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1799              		.loc 1 290 3 is_stmt 1 view .LVU423
 1800              	.LBB22:
 290:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1801              		.loc 1 290 3 view .LVU424
 1802 001a 0193     		str	r3, [sp, #4]
ARM GAS  /tmp/ccyRSI2C.s 			page 104


 290:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1803              		.loc 1 290 3 view .LVU425
 1804 001c 1F4A     		ldr	r2, .L131
 1805 001e 116C     		ldr	r1, [r2, #64]
 1806 0020 41F08051 		orr	r1, r1, #268435456
 1807 0024 1164     		str	r1, [r2, #64]
 290:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1808              		.loc 1 290 3 view .LVU426
 1809 0026 126C     		ldr	r2, [r2, #64]
 1810 0028 02F08052 		and	r2, r2, #268435456
 1811 002c 0192     		str	r2, [sp, #4]
 290:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1812              		.loc 1 290 3 view .LVU427
 1813 002e 019A     		ldr	r2, [sp, #4]
 1814              	.LBE22:
 290:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1815              		.loc 1 290 3 view .LVU428
 291:Core/Src/main.c **** 
 1816              		.loc 1 291 3 view .LVU429
 1817              	.LBB23:
 291:Core/Src/main.c **** 
 1818              		.loc 1 291 3 view .LVU430
 1819 0030 0293     		str	r3, [sp, #8]
 291:Core/Src/main.c **** 
 1820              		.loc 1 291 3 view .LVU431
 1821 0032 1B4A     		ldr	r2, .L131+4
 1822 0034 1168     		ldr	r1, [r2]
 1823 0036 41F44041 		orr	r1, r1, #49152
 1824 003a 1160     		str	r1, [r2]
 291:Core/Src/main.c **** 
 1825              		.loc 1 291 3 view .LVU432
 1826 003c 1268     		ldr	r2, [r2]
 1827 003e 02F44042 		and	r2, r2, #49152
 1828 0042 0292     		str	r2, [sp, #8]
 291:Core/Src/main.c **** 
 1829              		.loc 1 291 3 view .LVU433
 1830 0044 029A     		ldr	r2, [sp, #8]
 1831              	.LBE23:
 291:Core/Src/main.c **** 
 1832              		.loc 1 291 3 view .LVU434
 296:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1833              		.loc 1 296 3 view .LVU435
 296:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1834              		.loc 1 296 36 is_stmt 0 view .LVU436
 1835 0046 0221     		movs	r1, #2
 1836 0048 0891     		str	r1, [sp, #32]
 297:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1837              		.loc 1 297 3 is_stmt 1 view .LVU437
 297:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1838              		.loc 1 297 30 is_stmt 0 view .LVU438
 1839 004a 0122     		movs	r2, #1
 1840 004c 0B92     		str	r2, [sp, #44]
 298:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1841              		.loc 1 298 3 is_stmt 1 view .LVU439
 298:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1842              		.loc 1 298 41 is_stmt 0 view .LVU440
 1843 004e 1022     		movs	r2, #16
ARM GAS  /tmp/ccyRSI2C.s 			page 105


 1844 0050 0C92     		str	r2, [sp, #48]
 299:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 1845              		.loc 1 299 3 is_stmt 1 view .LVU441
 299:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 1846              		.loc 1 299 34 is_stmt 0 view .LVU442
 1847 0052 0E91     		str	r1, [sp, #56]
 300:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 16;
 1848              		.loc 1 300 3 is_stmt 1 view .LVU443
 300:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 16;
 1849              		.loc 1 300 35 is_stmt 0 view .LVU444
 1850 0054 0F93     		str	r3, [sp, #60]
 301:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 336;
 1851              		.loc 1 301 3 is_stmt 1 view .LVU445
 301:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 336;
 1852              		.loc 1 301 30 is_stmt 0 view .LVU446
 1853 0056 1092     		str	r2, [sp, #64]
 302:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 1854              		.loc 1 302 3 is_stmt 1 view .LVU447
 302:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 1855              		.loc 1 302 30 is_stmt 0 view .LVU448
 1856 0058 4FF4A873 		mov	r3, #336
 1857 005c 1193     		str	r3, [sp, #68]
 303:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 1858              		.loc 1 303 3 is_stmt 1 view .LVU449
 303:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 1859              		.loc 1 303 30 is_stmt 0 view .LVU450
 1860 005e 0423     		movs	r3, #4
 1861 0060 1293     		str	r3, [sp, #72]
 304:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1862              		.loc 1 304 3 is_stmt 1 view .LVU451
 304:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1863              		.loc 1 304 30 is_stmt 0 view .LVU452
 1864 0062 1393     		str	r3, [sp, #76]
 305:Core/Src/main.c ****   {
 1865              		.loc 1 305 3 is_stmt 1 view .LVU453
 305:Core/Src/main.c ****   {
 1866              		.loc 1 305 7 is_stmt 0 view .LVU454
 1867 0064 08A8     		add	r0, sp, #32
 1868 0066 FFF7FEFF 		bl	HAL_RCC_OscConfig
 1869              	.LVL119:
 305:Core/Src/main.c ****   {
 1870              		.loc 1 305 6 discriminator 1 view .LVU455
 1871 006a 80B9     		cbnz	r0, .L129
 1872              	.L126:
 312:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1873              		.loc 1 312 3 is_stmt 1 view .LVU456
 312:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1874              		.loc 1 312 31 is_stmt 0 view .LVU457
 1875 006c 0F23     		movs	r3, #15
 1876 006e 0393     		str	r3, [sp, #12]
 314:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1877              		.loc 1 314 3 is_stmt 1 view .LVU458
 314:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1878              		.loc 1 314 34 is_stmt 0 view .LVU459
 1879 0070 0221     		movs	r1, #2
 1880 0072 0491     		str	r1, [sp, #16]
 315:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
ARM GAS  /tmp/ccyRSI2C.s 			page 106


 1881              		.loc 1 315 3 is_stmt 1 view .LVU460
 315:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 1882              		.loc 1 315 35 is_stmt 0 view .LVU461
 1883 0074 0023     		movs	r3, #0
 1884 0076 0593     		str	r3, [sp, #20]
 316:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1885              		.loc 1 316 3 is_stmt 1 view .LVU462
 316:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1886              		.loc 1 316 36 is_stmt 0 view .LVU463
 1887 0078 4FF48052 		mov	r2, #4096
 1888 007c 0692     		str	r2, [sp, #24]
 317:Core/Src/main.c **** 
 1889              		.loc 1 317 3 is_stmt 1 view .LVU464
 317:Core/Src/main.c **** 
 1890              		.loc 1 317 36 is_stmt 0 view .LVU465
 1891 007e 0793     		str	r3, [sp, #28]
 319:Core/Src/main.c ****   {
 1892              		.loc 1 319 3 is_stmt 1 view .LVU466
 319:Core/Src/main.c ****   {
 1893              		.loc 1 319 7 is_stmt 0 view .LVU467
 1894 0080 03A8     		add	r0, sp, #12
 1895 0082 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1896              	.LVL120:
 319:Core/Src/main.c ****   {
 1897              		.loc 1 319 6 discriminator 1 view .LVU468
 1898 0086 28B9     		cbnz	r0, .L130
 1899              	.L125:
 323:Core/Src/main.c **** 
 1900              		.loc 1 323 1 view .LVU469
 1901 0088 15B0     		add	sp, sp, #84
 1902              		.cfi_remember_state
 1903              		.cfi_def_cfa_offset 4
 1904              		@ sp needed
 1905 008a 5DF804FB 		ldr	pc, [sp], #4
 1906              	.L129:
 1907              		.cfi_restore_state
 307:Core/Src/main.c ****   }
 1908              		.loc 1 307 5 is_stmt 1 view .LVU470
 1909 008e FFF7FEFF 		bl	Error_Handler
 1910              	.LVL121:
 1911 0092 EBE7     		b	.L126
 1912              	.L130:
 321:Core/Src/main.c ****   }
 1913              		.loc 1 321 5 view .LVU471
 1914 0094 FFF7FEFF 		bl	Error_Handler
 1915              	.LVL122:
 323:Core/Src/main.c **** 
 1916              		.loc 1 323 1 is_stmt 0 view .LVU472
 1917 0098 F6E7     		b	.L125
 1918              	.L132:
 1919 009a 00BF     		.align	2
 1920              	.L131:
 1921 009c 00380240 		.word	1073887232
 1922 00a0 00700040 		.word	1073770496
 1923              		.cfi_endproc
 1924              	.LFE228:
 1926              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
ARM GAS  /tmp/ccyRSI2C.s 			page 107


 1927              		.align	1
 1928              		.syntax unified
 1929              		.thumb
 1930              		.thumb_func
 1932              	MX_USART2_UART_Init:
 1933              	.LFB232:
 473:Core/Src/main.c **** 
 1934              		.loc 1 473 1 is_stmt 1 view -0
 1935              		.cfi_startproc
 1936              		@ args = 0, pretend = 0, frame = 0
 1937              		@ frame_needed = 0, uses_anonymous_args = 0
 1938 0000 08B5     		push	{r3, lr}
 1939              		.cfi_def_cfa_offset 8
 1940              		.cfi_offset 3, -8
 1941              		.cfi_offset 14, -4
 482:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 1942              		.loc 1 482 3 view .LVU474
 482:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 1943              		.loc 1 482 19 is_stmt 0 view .LVU475
 1944 0002 0A48     		ldr	r0, .L137
 1945 0004 0A4B     		ldr	r3, .L137+4
 1946 0006 0360     		str	r3, [r0]
 483:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 1947              		.loc 1 483 3 is_stmt 1 view .LVU476
 483:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 1948              		.loc 1 483 24 is_stmt 0 view .LVU477
 1949 0008 4FF4E133 		mov	r3, #115200
 1950 000c 4360     		str	r3, [r0, #4]
 484:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 1951              		.loc 1 484 3 is_stmt 1 view .LVU478
 484:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 1952              		.loc 1 484 26 is_stmt 0 view .LVU479
 1953 000e 0023     		movs	r3, #0
 1954 0010 8360     		str	r3, [r0, #8]
 485:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 1955              		.loc 1 485 3 is_stmt 1 view .LVU480
 485:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 1956              		.loc 1 485 24 is_stmt 0 view .LVU481
 1957 0012 C360     		str	r3, [r0, #12]
 486:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 1958              		.loc 1 486 3 is_stmt 1 view .LVU482
 486:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 1959              		.loc 1 486 22 is_stmt 0 view .LVU483
 1960 0014 0361     		str	r3, [r0, #16]
 487:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1961              		.loc 1 487 3 is_stmt 1 view .LVU484
 487:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1962              		.loc 1 487 20 is_stmt 0 view .LVU485
 1963 0016 0C22     		movs	r2, #12
 1964 0018 4261     		str	r2, [r0, #20]
 488:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 1965              		.loc 1 488 3 is_stmt 1 view .LVU486
 488:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 1966              		.loc 1 488 25 is_stmt 0 view .LVU487
 1967 001a 8361     		str	r3, [r0, #24]
 489:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 1968              		.loc 1 489 3 is_stmt 1 view .LVU488
ARM GAS  /tmp/ccyRSI2C.s 			page 108


 489:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 1969              		.loc 1 489 28 is_stmt 0 view .LVU489
 1970 001c C361     		str	r3, [r0, #28]
 490:Core/Src/main.c ****   {
 1971              		.loc 1 490 3 is_stmt 1 view .LVU490
 490:Core/Src/main.c ****   {
 1972              		.loc 1 490 7 is_stmt 0 view .LVU491
 1973 001e FFF7FEFF 		bl	HAL_UART_Init
 1974              	.LVL123:
 490:Core/Src/main.c ****   {
 1975              		.loc 1 490 6 discriminator 1 view .LVU492
 1976 0022 00B9     		cbnz	r0, .L136
 1977              	.L133:
 498:Core/Src/main.c **** 
 1978              		.loc 1 498 1 view .LVU493
 1979 0024 08BD     		pop	{r3, pc}
 1980              	.L136:
 492:Core/Src/main.c ****   }
 1981              		.loc 1 492 5 is_stmt 1 view .LVU494
 1982 0026 FFF7FEFF 		bl	Error_Handler
 1983              	.LVL124:
 498:Core/Src/main.c **** 
 1984              		.loc 1 498 1 is_stmt 0 view .LVU495
 1985 002a FBE7     		b	.L133
 1986              	.L138:
 1987              		.align	2
 1988              	.L137:
 1989 002c 00000000 		.word	huart2
 1990 0030 00440040 		.word	1073759232
 1991              		.cfi_endproc
 1992              	.LFE232:
 1994              		.section	.text.MX_ADC1_Init,"ax",%progbits
 1995              		.align	1
 1996              		.syntax unified
 1997              		.thumb
 1998              		.thumb_func
 2000              	MX_ADC1_Init:
 2001              	.LFB229:
 331:Core/Src/main.c **** 
 2002              		.loc 1 331 1 is_stmt 1 view -0
 2003              		.cfi_startproc
 2004              		@ args = 0, pretend = 0, frame = 16
 2005              		@ frame_needed = 0, uses_anonymous_args = 0
 2006 0000 00B5     		push	{lr}
 2007              		.cfi_def_cfa_offset 4
 2008              		.cfi_offset 14, -4
 2009 0002 85B0     		sub	sp, sp, #20
 2010              		.cfi_def_cfa_offset 24
 337:Core/Src/main.c **** 
 2011              		.loc 1 337 3 view .LVU497
 337:Core/Src/main.c **** 
 2012              		.loc 1 337 26 is_stmt 0 view .LVU498
 2013 0004 0023     		movs	r3, #0
 2014 0006 0093     		str	r3, [sp]
 2015 0008 0193     		str	r3, [sp, #4]
 2016 000a 0293     		str	r3, [sp, #8]
 2017 000c 0393     		str	r3, [sp, #12]
ARM GAS  /tmp/ccyRSI2C.s 			page 109


 345:Core/Src/main.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 2018              		.loc 1 345 3 is_stmt 1 view .LVU499
 345:Core/Src/main.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 2019              		.loc 1 345 18 is_stmt 0 view .LVU500
 2020 000e 1548     		ldr	r0, .L145
 2021 0010 154A     		ldr	r2, .L145+4
 2022 0012 0260     		str	r2, [r0]
 346:Core/Src/main.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 2023              		.loc 1 346 3 is_stmt 1 view .LVU501
 346:Core/Src/main.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 2024              		.loc 1 346 29 is_stmt 0 view .LVU502
 2025 0014 4FF48032 		mov	r2, #65536
 2026 0018 4260     		str	r2, [r0, #4]
 347:Core/Src/main.c ****   hadc1.Init.ScanConvMode = DISABLE;
 2027              		.loc 1 347 3 is_stmt 1 view .LVU503
 347:Core/Src/main.c ****   hadc1.Init.ScanConvMode = DISABLE;
 2028              		.loc 1 347 25 is_stmt 0 view .LVU504
 2029 001a 8360     		str	r3, [r0, #8]
 348:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = ENABLE;
 2030              		.loc 1 348 3 is_stmt 1 view .LVU505
 348:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = ENABLE;
 2031              		.loc 1 348 27 is_stmt 0 view .LVU506
 2032 001c 0361     		str	r3, [r0, #16]
 349:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 2033              		.loc 1 349 3 is_stmt 1 view .LVU507
 349:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 2034              		.loc 1 349 33 is_stmt 0 view .LVU508
 2035 001e 0122     		movs	r2, #1
 2036 0020 0276     		strb	r2, [r0, #24]
 350:Core/Src/main.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 2037              		.loc 1 350 3 is_stmt 1 view .LVU509
 350:Core/Src/main.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 2038              		.loc 1 350 36 is_stmt 0 view .LVU510
 2039 0022 80F82030 		strb	r3, [r0, #32]
 351:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 2040              		.loc 1 351 3 is_stmt 1 view .LVU511
 351:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 2041              		.loc 1 351 35 is_stmt 0 view .LVU512
 2042 0026 C362     		str	r3, [r0, #44]
 352:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 2043              		.loc 1 352 3 is_stmt 1 view .LVU513
 352:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 2044              		.loc 1 352 31 is_stmt 0 view .LVU514
 2045 0028 1049     		ldr	r1, .L145+8
 2046 002a 8162     		str	r1, [r0, #40]
 353:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 1;
 2047              		.loc 1 353 3 is_stmt 1 view .LVU515
 353:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 1;
 2048              		.loc 1 353 24 is_stmt 0 view .LVU516
 2049 002c C360     		str	r3, [r0, #12]
 354:Core/Src/main.c ****   hadc1.Init.DMAContinuousRequests = ENABLE;
 2050              		.loc 1 354 3 is_stmt 1 view .LVU517
 354:Core/Src/main.c ****   hadc1.Init.DMAContinuousRequests = ENABLE;
 2051              		.loc 1 354 30 is_stmt 0 view .LVU518
 2052 002e C261     		str	r2, [r0, #28]
 355:Core/Src/main.c ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 2053              		.loc 1 355 3 is_stmt 1 view .LVU519
ARM GAS  /tmp/ccyRSI2C.s 			page 110


 355:Core/Src/main.c ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 2054              		.loc 1 355 36 is_stmt 0 view .LVU520
 2055 0030 80F83020 		strb	r2, [r0, #48]
 356:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 2056              		.loc 1 356 3 is_stmt 1 view .LVU521
 356:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 2057              		.loc 1 356 27 is_stmt 0 view .LVU522
 2058 0034 4261     		str	r2, [r0, #20]
 357:Core/Src/main.c ****   {
 2059              		.loc 1 357 3 is_stmt 1 view .LVU523
 357:Core/Src/main.c ****   {
 2060              		.loc 1 357 7 is_stmt 0 view .LVU524
 2061 0036 FFF7FEFF 		bl	HAL_ADC_Init
 2062              	.LVL125:
 357:Core/Src/main.c ****   {
 2063              		.loc 1 357 6 discriminator 1 view .LVU525
 2064 003a 60B9     		cbnz	r0, .L143
 2065              	.L140:
 364:Core/Src/main.c ****   sConfig.Rank = 1;
 2066              		.loc 1 364 3 is_stmt 1 view .LVU526
 364:Core/Src/main.c ****   sConfig.Rank = 1;
 2067              		.loc 1 364 19 is_stmt 0 view .LVU527
 2068 003c 0023     		movs	r3, #0
 2069 003e 0093     		str	r3, [sp]
 365:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 2070              		.loc 1 365 3 is_stmt 1 view .LVU528
 365:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 2071              		.loc 1 365 16 is_stmt 0 view .LVU529
 2072 0040 0122     		movs	r2, #1
 2073 0042 0192     		str	r2, [sp, #4]
 366:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 2074              		.loc 1 366 3 is_stmt 1 view .LVU530
 366:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 2075              		.loc 1 366 24 is_stmt 0 view .LVU531
 2076 0044 0293     		str	r3, [sp, #8]
 367:Core/Src/main.c ****   {
 2077              		.loc 1 367 3 is_stmt 1 view .LVU532
 367:Core/Src/main.c ****   {
 2078              		.loc 1 367 7 is_stmt 0 view .LVU533
 2079 0046 6946     		mov	r1, sp
 2080 0048 0648     		ldr	r0, .L145
 2081 004a FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 2082              	.LVL126:
 367:Core/Src/main.c ****   {
 2083              		.loc 1 367 6 discriminator 1 view .LVU534
 2084 004e 28B9     		cbnz	r0, .L144
 2085              	.L139:
 375:Core/Src/main.c **** 
 2086              		.loc 1 375 1 view .LVU535
 2087 0050 05B0     		add	sp, sp, #20
 2088              		.cfi_remember_state
 2089              		.cfi_def_cfa_offset 4
 2090              		@ sp needed
 2091 0052 5DF804FB 		ldr	pc, [sp], #4
 2092              	.L143:
 2093              		.cfi_restore_state
 359:Core/Src/main.c ****   }
ARM GAS  /tmp/ccyRSI2C.s 			page 111


 2094              		.loc 1 359 5 is_stmt 1 view .LVU536
 2095 0056 FFF7FEFF 		bl	Error_Handler
 2096              	.LVL127:
 2097 005a EFE7     		b	.L140
 2098              	.L144:
 369:Core/Src/main.c ****   }
 2099              		.loc 1 369 5 view .LVU537
 2100 005c FFF7FEFF 		bl	Error_Handler
 2101              	.LVL128:
 375:Core/Src/main.c **** 
 2102              		.loc 1 375 1 is_stmt 0 view .LVU538
 2103 0060 F6E7     		b	.L139
 2104              	.L146:
 2105 0062 00BF     		.align	2
 2106              	.L145:
 2107 0064 00000000 		.word	hadc1
 2108 0068 00200140 		.word	1073815552
 2109 006c 0100000F 		.word	251658241
 2110              		.cfi_endproc
 2111              	.LFE229:
 2113              		.section	.text.MX_TIM3_Init,"ax",%progbits
 2114              		.align	1
 2115              		.syntax unified
 2116              		.thumb
 2117              		.thumb_func
 2119              	MX_TIM3_Init:
 2120              	.LFB230:
 383:Core/Src/main.c **** 
 2121              		.loc 1 383 1 is_stmt 1 view -0
 2122              		.cfi_startproc
 2123              		@ args = 0, pretend = 0, frame = 24
 2124              		@ frame_needed = 0, uses_anonymous_args = 0
 2125 0000 00B5     		push	{lr}
 2126              		.cfi_def_cfa_offset 4
 2127              		.cfi_offset 14, -4
 2128 0002 87B0     		sub	sp, sp, #28
 2129              		.cfi_def_cfa_offset 32
 389:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 2130              		.loc 1 389 3 view .LVU540
 389:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 2131              		.loc 1 389 26 is_stmt 0 view .LVU541
 2132 0004 0023     		movs	r3, #0
 2133 0006 0293     		str	r3, [sp, #8]
 2134 0008 0393     		str	r3, [sp, #12]
 2135 000a 0493     		str	r3, [sp, #16]
 2136 000c 0593     		str	r3, [sp, #20]
 390:Core/Src/main.c **** 
 2137              		.loc 1 390 3 is_stmt 1 view .LVU542
 390:Core/Src/main.c **** 
 2138              		.loc 1 390 27 is_stmt 0 view .LVU543
 2139 000e 0093     		str	r3, [sp]
 2140 0010 0193     		str	r3, [sp, #4]
 395:Core/Src/main.c ****   htim3.Init.Prescaler = 9999;
 2141              		.loc 1 395 3 is_stmt 1 view .LVU544
 395:Core/Src/main.c ****   htim3.Init.Prescaler = 9999;
 2142              		.loc 1 395 18 is_stmt 0 view .LVU545
 2143 0012 1548     		ldr	r0, .L155
ARM GAS  /tmp/ccyRSI2C.s 			page 112


 2144 0014 154A     		ldr	r2, .L155+4
 2145 0016 0260     		str	r2, [r0]
 396:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 2146              		.loc 1 396 3 is_stmt 1 view .LVU546
 396:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 2147              		.loc 1 396 24 is_stmt 0 view .LVU547
 2148 0018 42F20F72 		movw	r2, #9999
 2149 001c 4260     		str	r2, [r0, #4]
 397:Core/Src/main.c ****   htim3.Init.Period = 7199;
 2150              		.loc 1 397 3 is_stmt 1 view .LVU548
 397:Core/Src/main.c ****   htim3.Init.Period = 7199;
 2151              		.loc 1 397 26 is_stmt 0 view .LVU549
 2152 001e 8360     		str	r3, [r0, #8]
 398:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 2153              		.loc 1 398 3 is_stmt 1 view .LVU550
 398:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 2154              		.loc 1 398 21 is_stmt 0 view .LVU551
 2155 0020 41F61F42 		movw	r2, #7199
 2156 0024 C260     		str	r2, [r0, #12]
 399:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 2157              		.loc 1 399 3 is_stmt 1 view .LVU552
 399:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 2158              		.loc 1 399 28 is_stmt 0 view .LVU553
 2159 0026 0361     		str	r3, [r0, #16]
 400:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 2160              		.loc 1 400 3 is_stmt 1 view .LVU554
 400:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 2161              		.loc 1 400 32 is_stmt 0 view .LVU555
 2162 0028 8361     		str	r3, [r0, #24]
 401:Core/Src/main.c ****   {
 2163              		.loc 1 401 3 is_stmt 1 view .LVU556
 401:Core/Src/main.c ****   {
 2164              		.loc 1 401 7 is_stmt 0 view .LVU557
 2165 002a FFF7FEFF 		bl	HAL_TIM_Base_Init
 2166              	.LVL129:
 401:Core/Src/main.c ****   {
 2167              		.loc 1 401 6 discriminator 1 view .LVU558
 2168 002e 90B9     		cbnz	r0, .L152
 2169              	.L148:
 405:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 2170              		.loc 1 405 3 is_stmt 1 view .LVU559
 405:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 2171              		.loc 1 405 34 is_stmt 0 view .LVU560
 2172 0030 4FF48053 		mov	r3, #4096
 2173 0034 0293     		str	r3, [sp, #8]
 406:Core/Src/main.c ****   {
 2174              		.loc 1 406 3 is_stmt 1 view .LVU561
 406:Core/Src/main.c ****   {
 2175              		.loc 1 406 7 is_stmt 0 view .LVU562
 2176 0036 02A9     		add	r1, sp, #8
 2177 0038 0B48     		ldr	r0, .L155
 2178 003a FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 2179              	.LVL130:
 406:Core/Src/main.c ****   {
 2180              		.loc 1 406 6 discriminator 1 view .LVU563
 2181 003e 68B9     		cbnz	r0, .L153
 2182              	.L149:
ARM GAS  /tmp/ccyRSI2C.s 			page 113


 410:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 2183              		.loc 1 410 3 is_stmt 1 view .LVU564
 410:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 2184              		.loc 1 410 37 is_stmt 0 view .LVU565
 2185 0040 0023     		movs	r3, #0
 2186 0042 0093     		str	r3, [sp]
 411:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 2187              		.loc 1 411 3 is_stmt 1 view .LVU566
 411:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 2188              		.loc 1 411 33 is_stmt 0 view .LVU567
 2189 0044 0193     		str	r3, [sp, #4]
 412:Core/Src/main.c ****   {
 2190              		.loc 1 412 3 is_stmt 1 view .LVU568
 412:Core/Src/main.c ****   {
 2191              		.loc 1 412 7 is_stmt 0 view .LVU569
 2192 0046 6946     		mov	r1, sp
 2193 0048 0748     		ldr	r0, .L155
 2194 004a FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 2195              	.LVL131:
 412:Core/Src/main.c ****   {
 2196              		.loc 1 412 6 discriminator 1 view .LVU570
 2197 004e 40B9     		cbnz	r0, .L154
 2198              	.L147:
 420:Core/Src/main.c **** 
 2199              		.loc 1 420 1 view .LVU571
 2200 0050 07B0     		add	sp, sp, #28
 2201              		.cfi_remember_state
 2202              		.cfi_def_cfa_offset 4
 2203              		@ sp needed
 2204 0052 5DF804FB 		ldr	pc, [sp], #4
 2205              	.L152:
 2206              		.cfi_restore_state
 403:Core/Src/main.c ****   }
 2207              		.loc 1 403 5 is_stmt 1 view .LVU572
 2208 0056 FFF7FEFF 		bl	Error_Handler
 2209              	.LVL132:
 2210 005a E9E7     		b	.L148
 2211              	.L153:
 408:Core/Src/main.c ****   }
 2212              		.loc 1 408 5 view .LVU573
 2213 005c FFF7FEFF 		bl	Error_Handler
 2214              	.LVL133:
 2215 0060 EEE7     		b	.L149
 2216              	.L154:
 414:Core/Src/main.c ****   }
 2217              		.loc 1 414 5 view .LVU574
 2218 0062 FFF7FEFF 		bl	Error_Handler
 2219              	.LVL134:
 420:Core/Src/main.c **** 
 2220              		.loc 1 420 1 is_stmt 0 view .LVU575
 2221 0066 F3E7     		b	.L147
 2222              	.L156:
 2223              		.align	2
 2224              	.L155:
 2225 0068 00000000 		.word	htim3
 2226 006c 00040040 		.word	1073742848
 2227              		.cfi_endproc
ARM GAS  /tmp/ccyRSI2C.s 			page 114


 2228              	.LFE230:
 2230              		.section	.text.MX_TIM4_Init,"ax",%progbits
 2231              		.align	1
 2232              		.syntax unified
 2233              		.thumb
 2234              		.thumb_func
 2236              	MX_TIM4_Init:
 2237              	.LFB231:
 428:Core/Src/main.c **** 
 2238              		.loc 1 428 1 is_stmt 1 view -0
 2239              		.cfi_startproc
 2240              		@ args = 0, pretend = 0, frame = 24
 2241              		@ frame_needed = 0, uses_anonymous_args = 0
 2242 0000 00B5     		push	{lr}
 2243              		.cfi_def_cfa_offset 4
 2244              		.cfi_offset 14, -4
 2245 0002 87B0     		sub	sp, sp, #28
 2246              		.cfi_def_cfa_offset 32
 434:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 2247              		.loc 1 434 3 view .LVU577
 434:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 2248              		.loc 1 434 26 is_stmt 0 view .LVU578
 2249 0004 0023     		movs	r3, #0
 2250 0006 0293     		str	r3, [sp, #8]
 2251 0008 0393     		str	r3, [sp, #12]
 2252 000a 0493     		str	r3, [sp, #16]
 2253 000c 0593     		str	r3, [sp, #20]
 435:Core/Src/main.c **** 
 2254              		.loc 1 435 3 is_stmt 1 view .LVU579
 435:Core/Src/main.c **** 
 2255              		.loc 1 435 27 is_stmt 0 view .LVU580
 2256 000e 0093     		str	r3, [sp]
 2257 0010 0193     		str	r3, [sp, #4]
 440:Core/Src/main.c ****   htim4.Init.Prescaler = 9999;
 2258              		.loc 1 440 3 is_stmt 1 view .LVU581
 440:Core/Src/main.c ****   htim4.Init.Prescaler = 9999;
 2259              		.loc 1 440 18 is_stmt 0 view .LVU582
 2260 0012 1548     		ldr	r0, .L165
 2261 0014 154A     		ldr	r2, .L165+4
 2262 0016 0260     		str	r2, [r0]
 441:Core/Src/main.c ****   htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 2263              		.loc 1 441 3 is_stmt 1 view .LVU583
 441:Core/Src/main.c ****   htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 2264              		.loc 1 441 24 is_stmt 0 view .LVU584
 2265 0018 42F20F72 		movw	r2, #9999
 2266 001c 4260     		str	r2, [r0, #4]
 442:Core/Src/main.c ****   htim4.Init.Period = 1679;
 2267              		.loc 1 442 3 is_stmt 1 view .LVU585
 442:Core/Src/main.c ****   htim4.Init.Period = 1679;
 2268              		.loc 1 442 26 is_stmt 0 view .LVU586
 2269 001e 8360     		str	r3, [r0, #8]
 443:Core/Src/main.c ****   htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 2270              		.loc 1 443 3 is_stmt 1 view .LVU587
 443:Core/Src/main.c ****   htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 2271              		.loc 1 443 21 is_stmt 0 view .LVU588
 2272 0020 40F28F62 		movw	r2, #1679
 2273 0024 C260     		str	r2, [r0, #12]
ARM GAS  /tmp/ccyRSI2C.s 			page 115


 444:Core/Src/main.c ****   htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 2274              		.loc 1 444 3 is_stmt 1 view .LVU589
 444:Core/Src/main.c ****   htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 2275              		.loc 1 444 28 is_stmt 0 view .LVU590
 2276 0026 0361     		str	r3, [r0, #16]
 445:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim4) != HAL_OK)
 2277              		.loc 1 445 3 is_stmt 1 view .LVU591
 445:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim4) != HAL_OK)
 2278              		.loc 1 445 32 is_stmt 0 view .LVU592
 2279 0028 8361     		str	r3, [r0, #24]
 446:Core/Src/main.c ****   {
 2280              		.loc 1 446 3 is_stmt 1 view .LVU593
 446:Core/Src/main.c ****   {
 2281              		.loc 1 446 7 is_stmt 0 view .LVU594
 2282 002a FFF7FEFF 		bl	HAL_TIM_Base_Init
 2283              	.LVL135:
 446:Core/Src/main.c ****   {
 2284              		.loc 1 446 6 discriminator 1 view .LVU595
 2285 002e 90B9     		cbnz	r0, .L162
 2286              	.L158:
 450:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim4, &sClockSourceConfig) != HAL_OK)
 2287              		.loc 1 450 3 is_stmt 1 view .LVU596
 450:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim4, &sClockSourceConfig) != HAL_OK)
 2288              		.loc 1 450 34 is_stmt 0 view .LVU597
 2289 0030 4FF48053 		mov	r3, #4096
 2290 0034 0293     		str	r3, [sp, #8]
 451:Core/Src/main.c ****   {
 2291              		.loc 1 451 3 is_stmt 1 view .LVU598
 451:Core/Src/main.c ****   {
 2292              		.loc 1 451 7 is_stmt 0 view .LVU599
 2293 0036 02A9     		add	r1, sp, #8
 2294 0038 0B48     		ldr	r0, .L165
 2295 003a FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 2296              	.LVL136:
 451:Core/Src/main.c ****   {
 2297              		.loc 1 451 6 discriminator 1 view .LVU600
 2298 003e 68B9     		cbnz	r0, .L163
 2299              	.L159:
 455:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 2300              		.loc 1 455 3 is_stmt 1 view .LVU601
 455:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 2301              		.loc 1 455 37 is_stmt 0 view .LVU602
 2302 0040 0023     		movs	r3, #0
 2303 0042 0093     		str	r3, [sp]
 456:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 2304              		.loc 1 456 3 is_stmt 1 view .LVU603
 456:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 2305              		.loc 1 456 33 is_stmt 0 view .LVU604
 2306 0044 0193     		str	r3, [sp, #4]
 457:Core/Src/main.c ****   {
 2307              		.loc 1 457 3 is_stmt 1 view .LVU605
 457:Core/Src/main.c ****   {
 2308              		.loc 1 457 7 is_stmt 0 view .LVU606
 2309 0046 6946     		mov	r1, sp
 2310 0048 0748     		ldr	r0, .L165
 2311 004a FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 2312              	.LVL137:
ARM GAS  /tmp/ccyRSI2C.s 			page 116


 457:Core/Src/main.c ****   {
 2313              		.loc 1 457 6 discriminator 1 view .LVU607
 2314 004e 40B9     		cbnz	r0, .L164
 2315              	.L157:
 465:Core/Src/main.c **** 
 2316              		.loc 1 465 1 view .LVU608
 2317 0050 07B0     		add	sp, sp, #28
 2318              		.cfi_remember_state
 2319              		.cfi_def_cfa_offset 4
 2320              		@ sp needed
 2321 0052 5DF804FB 		ldr	pc, [sp], #4
 2322              	.L162:
 2323              		.cfi_restore_state
 448:Core/Src/main.c ****   }
 2324              		.loc 1 448 5 is_stmt 1 view .LVU609
 2325 0056 FFF7FEFF 		bl	Error_Handler
 2326              	.LVL138:
 2327 005a E9E7     		b	.L158
 2328              	.L163:
 453:Core/Src/main.c ****   }
 2329              		.loc 1 453 5 view .LVU610
 2330 005c FFF7FEFF 		bl	Error_Handler
 2331              	.LVL139:
 2332 0060 EEE7     		b	.L159
 2333              	.L164:
 459:Core/Src/main.c ****   }
 2334              		.loc 1 459 5 view .LVU611
 2335 0062 FFF7FEFF 		bl	Error_Handler
 2336              	.LVL140:
 465:Core/Src/main.c **** 
 2337              		.loc 1 465 1 is_stmt 0 view .LVU612
 2338 0066 F3E7     		b	.L157
 2339              	.L166:
 2340              		.align	2
 2341              	.L165:
 2342 0068 00000000 		.word	htim4
 2343 006c 00080040 		.word	1073743872
 2344              		.cfi_endproc
 2345              	.LFE231:
 2347              		.section	.text.do_init,"ax",%progbits
 2348              		.align	1
 2349              		.global	do_init
 2350              		.syntax unified
 2351              		.thumb
 2352              		.thumb_func
 2354              	do_init:
 2355              	.LVL141:
 2356              	.LFB235:
 602:Core/Src/main.c ****   next_state = STATE_WAIT_REQUEST;
 2357              		.loc 1 602 37 is_stmt 1 view -0
 2358              		.cfi_startproc
 2359              		@ args = 0, pretend = 0, frame = 0
 2360              		@ frame_needed = 0, uses_anonymous_args = 0
 602:Core/Src/main.c ****   next_state = STATE_WAIT_REQUEST;
 2361              		.loc 1 602 37 is_stmt 0 view .LVU614
 2362 0000 08B5     		push	{r3, lr}
 2363              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccyRSI2C.s 			page 117


 2364              		.cfi_offset 3, -8
 2365              		.cfi_offset 14, -4
 603:Core/Src/main.c ****   
 2366              		.loc 1 603 3 is_stmt 1 view .LVU615
 603:Core/Src/main.c ****   
 2367              		.loc 1 603 14 is_stmt 0 view .LVU616
 2368 0002 204B     		ldr	r3, .L173
 2369 0004 0122     		movs	r2, #1
 2370 0006 1A70     		strb	r2, [r3]
 607:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 2371              		.loc 1 607 3 is_stmt 1 view .LVU617
 607:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 2372              		.loc 1 607 9 is_stmt 0 view .LVU618
 2373 0008 0020     		movs	r0, #0
 2374              	.LVL142:
 607:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 2375              		.loc 1 607 9 view .LVU619
 2376 000a FFF7FEFF 		bl	time
 2377              	.LVL143:
 607:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 2378              		.loc 1 607 3 discriminator 1 view .LVU620
 2379 000e FFF7FEFF 		bl	srand
 2380              	.LVL144:
 609:Core/Src/main.c **** 
 2381              		.loc 1 609 3 is_stmt 1 view .LVU621
 609:Core/Src/main.c **** 
 2382              		.loc 1 609 15 is_stmt 0 view .LVU622
 2383 0012 FFF7FEFF 		bl	HAL_Init
 2384              	.LVL145:
 609:Core/Src/main.c **** 
 2385              		.loc 1 609 13 discriminator 1 view .LVU623
 2386 0016 1C4B     		ldr	r3, .L173+4
 2387 0018 1870     		strb	r0, [r3]
 611:Core/Src/main.c ****     next_state  = STATE_ERROR;
 2388              		.loc 1 611 3 is_stmt 1 view .LVU624
 611:Core/Src/main.c ****     next_state  = STATE_ERROR;
 2389              		.loc 1 611 5 is_stmt 0 view .LVU625
 2390 001a 20B1     		cbz	r0, .L168
 612:Core/Src/main.c ****     return next_state;
 2391              		.loc 1 612 5 is_stmt 1 view .LVU626
 612:Core/Src/main.c ****     return next_state;
 2392              		.loc 1 612 17 is_stmt 0 view .LVU627
 2393 001c 194B     		ldr	r3, .L173
 2394 001e 0222     		movs	r2, #2
 2395 0020 1A70     		strb	r2, [r3]
 613:Core/Src/main.c ****   }
 2396              		.loc 1 613 5 is_stmt 1 view .LVU628
 2397              	.L169:
 644:Core/Src/main.c **** 
 2398              		.loc 1 644 1 is_stmt 0 view .LVU629
 2399 0022 0220     		movs	r0, #2
 2400 0024 08BD     		pop	{r3, pc}
 2401              	.L168:
 617:Core/Src/main.c **** 
 2402              		.loc 1 617 3 is_stmt 1 view .LVU630
 2403 0026 FFF7FEFF 		bl	SystemClock_Config
 2404              	.LVL146:
ARM GAS  /tmp/ccyRSI2C.s 			page 118


 620:Core/Src/main.c ****   MX_DMA_Init();
 2405              		.loc 1 620 3 view .LVU631
 2406 002a FFF7FEFF 		bl	MX_GPIO_Init
 2407              	.LVL147:
 621:Core/Src/main.c ****   MX_USART2_UART_Init();
 2408              		.loc 1 621 3 view .LVU632
 2409 002e FFF7FEFF 		bl	MX_DMA_Init
 2410              	.LVL148:
 622:Core/Src/main.c ****   MX_ADC1_Init();
 2411              		.loc 1 622 3 view .LVU633
 2412 0032 FFF7FEFF 		bl	MX_USART2_UART_Init
 2413              	.LVL149:
 623:Core/Src/main.c ****   MX_TIM3_Init();
 2414              		.loc 1 623 3 view .LVU634
 2415 0036 FFF7FEFF 		bl	MX_ADC1_Init
 2416              	.LVL150:
 624:Core/Src/main.c ****   MX_TIM4_Init();
 2417              		.loc 1 624 3 view .LVU635
 2418 003a FFF7FEFF 		bl	MX_TIM3_Init
 2419              	.LVL151:
 625:Core/Src/main.c **** 
 2420              		.loc 1 625 3 view .LVU636
 2421 003e FFF7FEFF 		bl	MX_TIM4_Init
 2422              	.LVL152:
 628:Core/Src/main.c ****   if(halStatus != HAL_OK){
 2423              		.loc 1 628 3 view .LVU637
 628:Core/Src/main.c ****   if(halStatus != HAL_OK){
 2424              		.loc 1 628 15 is_stmt 0 view .LVU638
 2425 0042 4FF49672 		mov	r2, #300
 2426 0046 1149     		ldr	r1, .L173+8
 2427 0048 1148     		ldr	r0, .L173+12
 2428 004a FFF7FEFF 		bl	HAL_ADC_Start_DMA
 2429              	.LVL153:
 628:Core/Src/main.c ****   if(halStatus != HAL_OK){
 2430              		.loc 1 628 13 discriminator 1 view .LVU639
 2431 004e 0E4B     		ldr	r3, .L173+4
 2432 0050 1870     		strb	r0, [r3]
 629:Core/Src/main.c ****     next_state  = STATE_ERROR;
 2433              		.loc 1 629 3 is_stmt 1 view .LVU640
 629:Core/Src/main.c ****     next_state  = STATE_ERROR;
 2434              		.loc 1 629 5 is_stmt 0 view .LVU641
 2435 0052 18B1     		cbz	r0, .L170
 630:Core/Src/main.c ****     return next_state;
 2436              		.loc 1 630 5 is_stmt 1 view .LVU642
 630:Core/Src/main.c ****     return next_state;
 2437              		.loc 1 630 17 is_stmt 0 view .LVU643
 2438 0054 0B4B     		ldr	r3, .L173
 2439 0056 0222     		movs	r2, #2
 2440 0058 1A70     		strb	r2, [r3]
 631:Core/Src/main.c ****   }
 2441              		.loc 1 631 5 is_stmt 1 view .LVU644
 631:Core/Src/main.c ****   }
 2442              		.loc 1 631 12 is_stmt 0 view .LVU645
 2443 005a E2E7     		b	.L169
 2444              	.L170:
 634:Core/Src/main.c ****   if(halStatus != HAL_OK){
 2445              		.loc 1 634 3 is_stmt 1 view .LVU646
ARM GAS  /tmp/ccyRSI2C.s 			page 119


 634:Core/Src/main.c ****   if(halStatus != HAL_OK){
 2446              		.loc 1 634 15 is_stmt 0 view .LVU647
 2447 005c 3222     		movs	r2, #50
 2448 005e 0D49     		ldr	r1, .L173+16
 2449 0060 0D48     		ldr	r0, .L173+20
 2450 0062 FFF7FEFF 		bl	HAL_UARTEx_ReceiveToIdle_IT
 2451              	.LVL154:
 634:Core/Src/main.c ****   if(halStatus != HAL_OK){
 2452              		.loc 1 634 13 discriminator 1 view .LVU648
 2453 0066 084B     		ldr	r3, .L173+4
 2454 0068 1870     		strb	r0, [r3]
 635:Core/Src/main.c ****     next_state  = STATE_ERROR;
 2455              		.loc 1 635 3 is_stmt 1 view .LVU649
 635:Core/Src/main.c ****     next_state  = STATE_ERROR;
 2456              		.loc 1 635 5 is_stmt 0 view .LVU650
 2457 006a 18B1     		cbz	r0, .L171
 636:Core/Src/main.c ****     return next_state;
 2458              		.loc 1 636 5 is_stmt 1 view .LVU651
 636:Core/Src/main.c ****     return next_state;
 2459              		.loc 1 636 17 is_stmt 0 view .LVU652
 2460 006c 054B     		ldr	r3, .L173
 2461 006e 0222     		movs	r2, #2
 2462 0070 1A70     		strb	r2, [r3]
 637:Core/Src/main.c ****   }
 2463              		.loc 1 637 5 is_stmt 1 view .LVU653
 637:Core/Src/main.c ****   }
 2464              		.loc 1 637 12 is_stmt 0 view .LVU654
 2465 0072 D6E7     		b	.L169
 2466              	.L171:
 640:Core/Src/main.c ****   //next_state = STATE_WAIT_REQUEST;
 2467              		.loc 1 640 3 is_stmt 1 view .LVU655
 640:Core/Src/main.c ****   //next_state = STATE_WAIT_REQUEST;
 2468              		.loc 1 640 15 is_stmt 0 view .LVU656
 2469 0074 FFF7FEFF 		bl	HAL_GetTick
 2470              	.LVL155:
 640:Core/Src/main.c ****   //next_state = STATE_WAIT_REQUEST;
 2471              		.loc 1 640 13 discriminator 1 view .LVU657
 2472 0078 084B     		ldr	r3, .L173+24
 2473 007a 1860     		str	r0, [r3]
 642:Core/Src/main.c ****   return next_state;
 2474              		.loc 1 642 3 is_stmt 1 view .LVU658
 642:Core/Src/main.c ****   return next_state;
 2475              		.loc 1 642 14 is_stmt 0 view .LVU659
 2476 007c 014B     		ldr	r3, .L173
 2477 007e 0222     		movs	r2, #2
 2478 0080 1A70     		strb	r2, [r3]
 643:Core/Src/main.c **** }
 2479              		.loc 1 643 3 is_stmt 1 view .LVU660
 643:Core/Src/main.c **** }
 2480              		.loc 1 643 10 is_stmt 0 view .LVU661
 2481 0082 CEE7     		b	.L169
 2482              	.L174:
 2483              		.align	2
 2484              	.L173:
 2485 0084 00000000 		.word	next_state
 2486 0088 00000000 		.word	halStatus
 2487 008c 00000000 		.word	adcBuffer
ARM GAS  /tmp/ccyRSI2C.s 			page 120


 2488 0090 00000000 		.word	hadc1
 2489 0094 00000000 		.word	cli_command
 2490 0098 00000000 		.word	huart2
 2491 009c 00000000 		.word	lastTimer
 2492              		.cfi_endproc
 2493              	.LFE235:
 2495              		.global	state_table
 2496              		.section	.rodata.state_table,"a"
 2497              		.align	2
 2500              	state_table:
 2501 0000 00000000 		.word	do_init
 2502 0004 00000000 		.word	do_wait_request
 2503 0008 00000000 		.word	do_error
 2504 000c 00000000 		.word	do_listening
 2505 0010 00000000 		.word	do_warning
 2506 0014 00000000 		.word	do_pause
 2507              		.global	state_names
 2508              		.section	.rodata.str1.4,"aMS",%progbits,1
 2509              		.align	2
 2510              	.LC12:
 2511 0000 696E6974 		.ascii	"init\000"
 2511      00
 2512 0005 000000   		.align	2
 2513              	.LC13:
 2514 0008 77616974 		.ascii	"wait_request\000"
 2514      5F726571 
 2514      75657374 
 2514      00
 2515 0015 000000   		.align	2
 2516              	.LC14:
 2517 0018 6572726F 		.ascii	"error\000"
 2517      7200
 2518 001e 0000     		.align	2
 2519              	.LC15:
 2520 0020 6C697374 		.ascii	"listening\000"
 2520      656E696E 
 2520      6700
 2521 002a 0000     		.align	2
 2522              	.LC16:
 2523 002c 7761726E 		.ascii	"warning\000"
 2523      696E6700 
 2524              		.align	2
 2525              	.LC17:
 2526 0034 70617573 		.ascii	"pause\000"
 2526      6500
 2527              		.section	.data.state_names,"aw"
 2528              		.align	2
 2531              	state_names:
 2532 0000 00000000 		.word	.LC12
 2533 0004 08000000 		.word	.LC13
 2534 0008 18000000 		.word	.LC14
 2535 000c 20000000 		.word	.LC15
 2536 0010 2C000000 		.word	.LC16
 2537 0014 34000000 		.word	.LC17
 2538              		.global	is_running_error_timer
 2539              		.section	.bss.is_running_error_timer,"aw",%nobits
 2542              	is_running_error_timer:
ARM GAS  /tmp/ccyRSI2C.s 			page 121


 2543 0000 00       		.space	1
 2544              		.global	next_state
 2545              		.section	.data.next_state,"aw"
 2548              	next_state:
 2549 0000 01       		.byte	1
 2550              		.global	current_state
 2551              		.section	.bss.current_state,"aw",%nobits
 2554              	current_state:
 2555 0000 00       		.space	1
 2556              		.global	halStatus
 2557              		.section	.bss.halStatus,"aw",%nobits
 2560              	halStatus:
 2561 0000 00       		.space	1
 2562              		.global	msg_buffer
 2563              		.section	.bss.msg_buffer,"aw",%nobits
 2564              		.align	2
 2567              	msg_buffer:
 2568 0000 00000000 		.space	50
 2568      00000000 
 2568      00000000 
 2568      00000000 
 2568      00000000 
 2569              		.global	sendRequest
 2570              		.section	.bss.sendRequest,"aw",%nobits
 2573              	sendRequest:
 2574 0000 00       		.space	1
 2575              		.global	cli_command
 2576              		.section	.bss.cli_command,"aw",%nobits
 2577              		.align	2
 2580              	cli_command:
 2581 0000 00000000 		.space	50
 2581      00000000 
 2581      00000000 
 2581      00000000 
 2581      00000000 
 2582              		.global	currentFilterMode
 2583              		.section	.bss.currentFilterMode,"aw",%nobits
 2586              	currentFilterMode:
 2587 0000 00       		.space	1
 2588              		.global	lastButtonPress
 2589              		.section	.bss.lastButtonPress,"aw",%nobits
 2590              		.align	2
 2593              	lastButtonPress:
 2594 0000 00000000 		.space	4
 2595              		.global	lastTimer
 2596              		.section	.bss.lastTimer,"aw",%nobits
 2597              		.align	2
 2600              	lastTimer:
 2601 0000 00000000 		.space	4
 2602              		.global	sum
 2603              		.section	.bss.sum,"aw",%nobits
 2604              		.align	2
 2607              	sum:
 2608 0000 00000000 		.space	4
 2609              		.global	buffer_index
 2610              		.section	.bss.buffer_index,"aw",%nobits
 2611              		.align	1
ARM GAS  /tmp/ccyRSI2C.s 			page 122


 2614              	buffer_index:
 2615 0000 0000     		.space	2
 2616              		.global	adc_moving_average
 2617              		.section	.bss.adc_moving_average,"aw",%nobits
 2618              		.align	2
 2621              	adc_moving_average:
 2622 0000 00000000 		.space	300
 2622      00000000 
 2622      00000000 
 2622      00000000 
 2622      00000000 
 2623              		.global	adcBuffer
 2624              		.section	.bss.adcBuffer,"aw",%nobits
 2625              		.align	2
 2628              	adcBuffer:
 2629 0000 00000000 		.space	1200
 2629      00000000 
 2629      00000000 
 2629      00000000 
 2629      00000000 
 2630              		.global	last_index
 2631              		.section	.bss.last_index,"aw",%nobits
 2632              		.align	1
 2635              	last_index:
 2636 0000 0000     		.space	2
 2637              		.global	lastDigitalValue
 2638              		.section	.bss.lastDigitalValue,"aw",%nobits
 2639              		.align	1
 2642              	lastDigitalValue:
 2643 0000 0000     		.space	2
 2644              		.global	lastAnalogValue
 2645              		.section	.bss.lastAnalogValue,"aw",%nobits
 2646              		.align	1
 2649              	lastAnalogValue:
 2650 0000 0000     		.space	2
 2651              		.global	huart2
 2652              		.section	.bss.huart2,"aw",%nobits
 2653              		.align	2
 2656              	huart2:
 2657 0000 00000000 		.space	72
 2657      00000000 
 2657      00000000 
 2657      00000000 
 2657      00000000 
 2658              		.global	htim4
 2659              		.section	.bss.htim4,"aw",%nobits
 2660              		.align	2
 2663              	htim4:
 2664 0000 00000000 		.space	72
 2664      00000000 
 2664      00000000 
 2664      00000000 
 2664      00000000 
 2665              		.global	htim3
 2666              		.section	.bss.htim3,"aw",%nobits
 2667              		.align	2
 2670              	htim3:
ARM GAS  /tmp/ccyRSI2C.s 			page 123


 2671 0000 00000000 		.space	72
 2671      00000000 
 2671      00000000 
 2671      00000000 
 2671      00000000 
 2672              		.global	hdma_adc1
 2673              		.section	.bss.hdma_adc1,"aw",%nobits
 2674              		.align	2
 2677              	hdma_adc1:
 2678 0000 00000000 		.space	96
 2678      00000000 
 2678      00000000 
 2678      00000000 
 2678      00000000 
 2679              		.global	hadc1
 2680              		.section	.bss.hadc1,"aw",%nobits
 2681              		.align	2
 2684              	hadc1:
 2685 0000 00000000 		.space	72
 2685      00000000 
 2685      00000000 
 2685      00000000 
 2685      00000000 
 2686              		.text
 2687              	.Letext0:
 2688              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f411xe.h"
 2689              		.file 5 "/home/dorijan/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/arm-n
 2690              		.file 6 "/home/dorijan/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/arm-n
 2691              		.file 7 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 2692              		.file 8 "/home/dorijan/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/arm-n
 2693              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 2694              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 2695              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 2696              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 2697              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 2698              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_adc.h"
 2699              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 2700              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 2701              		.file 17 "Core/Src/scheme.h"
 2702              		.file 18 "/home/dorijan/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/arm-
 2703              		.file 19 "/home/dorijan/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/arm-
 2704              		.file 20 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim_ex.h"
 2705              		.file 21 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 2706              		.file 22 "/home/dorijan/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/arm-
 2707              		.file 23 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 2708              		.file 24 "/home/dorijan/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/arm-
 2709              		.file 25 "/home/dorijan/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/arm-
 2710              		.file 26 "/home/dorijan/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/arm-
 2711              		.file 27 "<built-in>"
ARM GAS  /tmp/ccyRSI2C.s 			page 124


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
     /tmp/ccyRSI2C.s:21     .text.__NVIC_SystemReset:00000000 $t
     /tmp/ccyRSI2C.s:26     .text.__NVIC_SystemReset:00000000 __NVIC_SystemReset
     /tmp/ccyRSI2C.s:89     .text.__NVIC_SystemReset:0000001c $d
     /tmp/ccyRSI2C.s:95     .rodata.do_wait_request.str1.4:00000000 $d
     /tmp/ccyRSI2C.s:99     .text.do_wait_request:00000000 $t
     /tmp/ccyRSI2C.s:105    .text.do_wait_request:00000000 do_wait_request
     /tmp/ccyRSI2C.s:214    .text.do_wait_request:0000005c $d
     /tmp/ccyRSI2C.s:2548   .data.next_state:00000000 next_state
     /tmp/ccyRSI2C.s:2573   .bss.sendRequest:00000000 sendRequest
     /tmp/ccyRSI2C.s:2560   .bss.halStatus:00000000 halStatus
     /tmp/ccyRSI2C.s:2567   .bss.msg_buffer:00000000 msg_buffer
     /tmp/ccyRSI2C.s:2656   .bss.huart2:00000000 huart2
     /tmp/ccyRSI2C.s:224    .rodata.do_error.str1.4:00000000 $d
     /tmp/ccyRSI2C.s:228    .text.do_error:00000000 $t
     /tmp/ccyRSI2C.s:234    .text.do_error:00000000 do_error
     /tmp/ccyRSI2C.s:301    .text.do_error:00000048 $d
     /tmp/ccyRSI2C.s:2542   .bss.is_running_error_timer:00000000 is_running_error_timer
     /tmp/ccyRSI2C.s:2663   .bss.htim4:00000000 htim4
     /tmp/ccyRSI2C.s:312    .rodata.do_warning.str1.4:00000000 $d
     /tmp/ccyRSI2C.s:316    .text.do_warning:00000000 $t
     /tmp/ccyRSI2C.s:322    .text.do_warning:00000000 do_warning
     /tmp/ccyRSI2C.s:391    .text.do_warning:00000048 $d
     /tmp/ccyRSI2C.s:401    .text.do_pause:00000000 $t
     /tmp/ccyRSI2C.s:407    .text.do_pause:00000000 do_pause
     /tmp/ccyRSI2C.s:516    .text.do_pause:0000005c $d
     /tmp/ccyRSI2C.s:526    .text.MX_GPIO_Init:00000000 $t
     /tmp/ccyRSI2C.s:531    .text.MX_GPIO_Init:00000000 MX_GPIO_Init
     /tmp/ccyRSI2C.s:705    .text.MX_GPIO_Init:000000d4 $d
     /tmp/ccyRSI2C.s:712    .text.MX_DMA_Init:00000000 $t
     /tmp/ccyRSI2C.s:717    .text.MX_DMA_Init:00000000 MX_DMA_Init
     /tmp/ccyRSI2C.s:763    .text.MX_DMA_Init:00000030 $d
     /tmp/ccyRSI2C.s:768    .rodata.do_listening.str1.4:00000000 $d
     /tmp/ccyRSI2C.s:782    .text.do_listening:00000000 $t
     /tmp/ccyRSI2C.s:788    .text.do_listening:00000000 do_listening
     /tmp/ccyRSI2C.s:1058   .text.do_listening:00000160 $d
     /tmp/ccyRSI2C.s:2677   .bss.hdma_adc1:00000000 hdma_adc1
     /tmp/ccyRSI2C.s:2635   .bss.last_index:00000000 last_index
     /tmp/ccyRSI2C.s:2628   .bss.adcBuffer:00000000 adcBuffer
     /tmp/ccyRSI2C.s:2649   .bss.lastAnalogValue:00000000 lastAnalogValue
     /tmp/ccyRSI2C.s:2586   .bss.currentFilterMode:00000000 currentFilterMode
     /tmp/ccyRSI2C.s:2642   .bss.lastDigitalValue:00000000 lastDigitalValue
     /tmp/ccyRSI2C.s:2600   .bss.lastTimer:00000000 lastTimer
     /tmp/ccyRSI2C.s:2614   .bss.buffer_index:00000000 buffer_index
     /tmp/ccyRSI2C.s:2621   .bss.adc_moving_average:00000000 adc_moving_average
     /tmp/ccyRSI2C.s:2607   .bss.sum:00000000 sum
     /tmp/ccyRSI2C.s:1083   .text.HAL_TIM_PeriodElapsedCallback:00000000 $t
     /tmp/ccyRSI2C.s:1089   .text.HAL_TIM_PeriodElapsedCallback:00000000 HAL_TIM_PeriodElapsedCallback
     /tmp/ccyRSI2C.s:1141   .text.HAL_TIM_PeriodElapsedCallback:00000028 $d
     /tmp/ccyRSI2C.s:1148   .text.HAL_GPIO_EXTI_Callback:00000000 $t
     /tmp/ccyRSI2C.s:1154   .text.HAL_GPIO_EXTI_Callback:00000000 HAL_GPIO_EXTI_Callback
     /tmp/ccyRSI2C.s:1224   .text.HAL_GPIO_EXTI_Callback:0000003e $d
     /tmp/ccyRSI2C.s:1342   .text.HAL_GPIO_EXTI_Callback:000000c8 $d
     /tmp/ccyRSI2C.s:2593   .bss.lastButtonPress:00000000 lastButtonPress
     /tmp/ccyRSI2C.s:2554   .bss.current_state:00000000 current_state
     /tmp/ccyRSI2C.s:2670   .bss.htim3:00000000 htim3
ARM GAS  /tmp/ccyRSI2C.s 			page 125


     /tmp/ccyRSI2C.s:2580   .bss.cli_command:00000000 cli_command
     /tmp/ccyRSI2C.s:1359   .rodata.handle_cli_command.str1.4:00000000 $d
     /tmp/ccyRSI2C.s:1369   .text.handle_cli_command:00000000 $t
     /tmp/ccyRSI2C.s:1375   .text.handle_cli_command:00000000 handle_cli_command
     /tmp/ccyRSI2C.s:1455   .text.handle_cli_command:00000054 $d
     /tmp/ccyRSI2C.s:1464   .rodata.HAL_UARTEx_RxEventCallback.str1.4:00000000 $d
     /tmp/ccyRSI2C.s:1471   .text.HAL_UARTEx_RxEventCallback:00000000 $t
     /tmp/ccyRSI2C.s:1477   .text.HAL_UARTEx_RxEventCallback:00000000 HAL_UARTEx_RxEventCallback
     /tmp/ccyRSI2C.s:1615   .text.HAL_UARTEx_RxEventCallback:000000b0 $d
     /tmp/ccyRSI2C.s:1628   .text.run_state:00000000 $t
     /tmp/ccyRSI2C.s:1634   .text.run_state:00000000 run_state
     /tmp/ccyRSI2C.s:1674   .text.run_state:0000001c $d
     /tmp/ccyRSI2C.s:2500   .rodata.state_table:00000000 state_table
     /tmp/ccyRSI2C.s:1680   .text.main:00000000 $t
     /tmp/ccyRSI2C.s:1686   .text.main:00000000 main
     /tmp/ccyRSI2C.s:1712   .text.main:00000010 $d
     /tmp/ccyRSI2C.s:1717   .text.Error_Handler:00000000 $t
     /tmp/ccyRSI2C.s:1723   .text.Error_Handler:00000000 Error_Handler
     /tmp/ccyRSI2C.s:1761   .text.Error_Handler:00000014 $d
     /tmp/ccyRSI2C.s:1767   .text.SystemClock_Config:00000000 $t
     /tmp/ccyRSI2C.s:1773   .text.SystemClock_Config:00000000 SystemClock_Config
     /tmp/ccyRSI2C.s:1921   .text.SystemClock_Config:0000009c $d
     /tmp/ccyRSI2C.s:1927   .text.MX_USART2_UART_Init:00000000 $t
     /tmp/ccyRSI2C.s:1932   .text.MX_USART2_UART_Init:00000000 MX_USART2_UART_Init
     /tmp/ccyRSI2C.s:1989   .text.MX_USART2_UART_Init:0000002c $d
     /tmp/ccyRSI2C.s:1995   .text.MX_ADC1_Init:00000000 $t
     /tmp/ccyRSI2C.s:2000   .text.MX_ADC1_Init:00000000 MX_ADC1_Init
     /tmp/ccyRSI2C.s:2107   .text.MX_ADC1_Init:00000064 $d
     /tmp/ccyRSI2C.s:2684   .bss.hadc1:00000000 hadc1
     /tmp/ccyRSI2C.s:2114   .text.MX_TIM3_Init:00000000 $t
     /tmp/ccyRSI2C.s:2119   .text.MX_TIM3_Init:00000000 MX_TIM3_Init
     /tmp/ccyRSI2C.s:2225   .text.MX_TIM3_Init:00000068 $d
     /tmp/ccyRSI2C.s:2231   .text.MX_TIM4_Init:00000000 $t
     /tmp/ccyRSI2C.s:2236   .text.MX_TIM4_Init:00000000 MX_TIM4_Init
     /tmp/ccyRSI2C.s:2342   .text.MX_TIM4_Init:00000068 $d
     /tmp/ccyRSI2C.s:2348   .text.do_init:00000000 $t
     /tmp/ccyRSI2C.s:2354   .text.do_init:00000000 do_init
     /tmp/ccyRSI2C.s:2485   .text.do_init:00000084 $d
     /tmp/ccyRSI2C.s:2497   .rodata.state_table:00000000 $d
     /tmp/ccyRSI2C.s:2531   .data.state_names:00000000 state_names
     /tmp/ccyRSI2C.s:2509   .rodata.str1.4:00000000 $d
     /tmp/ccyRSI2C.s:2528   .data.state_names:00000000 $d
     /tmp/ccyRSI2C.s:2543   .bss.is_running_error_timer:00000000 $d
     /tmp/ccyRSI2C.s:2555   .bss.current_state:00000000 $d
     /tmp/ccyRSI2C.s:2561   .bss.halStatus:00000000 $d
     /tmp/ccyRSI2C.s:2564   .bss.msg_buffer:00000000 $d
     /tmp/ccyRSI2C.s:2574   .bss.sendRequest:00000000 $d
     /tmp/ccyRSI2C.s:2577   .bss.cli_command:00000000 $d
     /tmp/ccyRSI2C.s:2587   .bss.currentFilterMode:00000000 $d
     /tmp/ccyRSI2C.s:2590   .bss.lastButtonPress:00000000 $d
     /tmp/ccyRSI2C.s:2597   .bss.lastTimer:00000000 $d
     /tmp/ccyRSI2C.s:2604   .bss.sum:00000000 $d
     /tmp/ccyRSI2C.s:2611   .bss.buffer_index:00000000 $d
     /tmp/ccyRSI2C.s:2618   .bss.adc_moving_average:00000000 $d
     /tmp/ccyRSI2C.s:2625   .bss.adcBuffer:00000000 $d
     /tmp/ccyRSI2C.s:2632   .bss.last_index:00000000 $d
     /tmp/ccyRSI2C.s:2639   .bss.lastDigitalValue:00000000 $d
ARM GAS  /tmp/ccyRSI2C.s 			page 126


     /tmp/ccyRSI2C.s:2646   .bss.lastAnalogValue:00000000 $d
     /tmp/ccyRSI2C.s:2653   .bss.huart2:00000000 $d
     /tmp/ccyRSI2C.s:2660   .bss.htim4:00000000 $d
     /tmp/ccyRSI2C.s:2667   .bss.htim3:00000000 $d
     /tmp/ccyRSI2C.s:2674   .bss.hdma_adc1:00000000 $d
     /tmp/ccyRSI2C.s:2681   .bss.hadc1:00000000 $d
     /tmp/ccyRSI2C.s:1229   .text.HAL_GPIO_EXTI_Callback:00000043 $d
     /tmp/ccyRSI2C.s:1229   .text.HAL_GPIO_EXTI_Callback:00000044 $t

UNDEFINED SYMBOLS
strlen
HAL_UART_Transmit
HAL_TIM_Base_Start_IT
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
__aeabi_f2d
sprintf
HAL_GetTick
HAL_UART_AbortReceive_IT
rand
HAL_GPIO_TogglePin
HAL_GPIO_ReadPin
HAL_TIM_Base_Stop_IT
HAL_UARTEx_ReceiveToIdle_IT
strcmp
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_UART_Init
HAL_ADC_Init
HAL_ADC_ConfigChannel
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIMEx_MasterConfigSynchronization
time
srand
HAL_Init
HAL_ADC_Start_DMA
